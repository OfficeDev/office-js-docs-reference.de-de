### YamlMime:UniversalReference
ms.openlocfilehash: ebedf433827b0f0357fc32b73db1511abb994f0d
ms.sourcegitcommit: a36161c2113d94680dc68150d024e68bdf0390fa
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 10/10/2018
ms.locfileid: "25457802"
items:
- uid: outlook.Office.CustomProperties
  summary: >-
    Das CustomProperties-Objekt stellt benutzerdefinierte Eigenschaften dar, die spezifisch für ein bestimmtes Element und spezifisch für ein Mail-Add-In für Outlook sind. So kann es z. B. für ein Mail-Add-In erforderlich sein, Daten zu speichern, die spezifisch für die aktuelle E-Mail-Nachricht sind, die das Add-In aktiviert hat. Wenn der Benutzer diese Nachricht später wieder öffnet und das Mail-Add-In erneut aktiviert, kann das Add-In die Daten abrufen, die als benutzerdefinierte Eigenschaften gespeichert wurden.


    Da Outlook für Mac benutzerdefinierte Eigenschaften cache nicht, wenn das Netzwerk des Benutzers ausfällt, können nicht e-Mail-add-ins ihre benutzerdefinierten Eigenschaften zugreifen.


    \[[API-Satz: Postfach 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Verfassen oder Lesen</td></tr></table>
  name: Office.CustomProperties
  fullName: outlook.Office.CustomProperties
  langs:
  - typeScript
  type: interface
  package: outlook
  children:
  - outlook.Office.CustomProperties.get
  - outlook.Office.CustomProperties.remove
  - outlook.Office.CustomProperties.saveAsync
  - outlook.Office.CustomProperties.set
- uid: outlook.Office.CustomProperties.get
  summary: Gibt den Wert der angegebenen benutzerdefinierten Eigenschaft zurück.
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Verfassen oder Lesen</td></tr></table>
  name: get(name)
  fullName: outlook.Office.CustomProperties.get
  langs:
  - typeScript
  type: method
  syntax:
    content: 'get(name: string): any;'
    return:
      type:
      - any
      description: >-
        Der Wert der angegebenen benutzerdefinierten Eigenschaft.


        \[API-Satz: Postfach 1.0\]
    parameters:
    - id: name
      description: Der Name der benutzerdefinierten Eigenschaft, die zurückgegeben werden soll.
      type:
      - string
- uid: outlook.Office.CustomProperties.remove
  summary: >-
    Entfernt die angegebene Eigenschaft aus der Auflistung benutzerdefinierter Eigenschaften.


    Damit die Eigenschaft dauerhaft entfernt wird, müssen Sie die saveAsync-Methode des CustomProperties-Objekts aufrufen.
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Verfassen oder Lesen</td></tr></table>
  name: remove(name)
  fullName: outlook.Office.CustomProperties.remove
  langs:
  - typeScript
  type: method
  syntax:
    content: 'remove(name: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: name
      description: >-
        Der Name der zu entfernenden Eigenschaft.


        \[API-Satz: Postfach 1.0\]
      type:
      - string
- uid: outlook.Office.CustomProperties.saveAsync
  summary: >-
    Speichert elementspezifische benutzerdefinierte Eigenschaften auf dem Server.


    Sie müssen die saveAsync-Methode aufrufen, um alle mit der set-Methode oder der remove-Methode des CustomProperties-Objekts vorgenommenen Änderungen beizubehalten. Die Speichernaktion ist asynchron.


    Es ist ratsam, Ihre Callback-Funktion für überprüfen und Behandeln von Fehlern aus SaveAsync haben. Insbesondere ein Lese-Add-In kann aktiviert werden, während der Benutzer in einem Leseformular verbunden ist. Daraufhin wird die Verbindung des Benutzers getrennt. Wenn das Add-in "saveasync", klicken Sie auf den Status getrennt aufruft, würde SaveAsync einen Fehler zurück. Ihre Rückrufmethode sollte diesen Fehler entsprechend behandeln.
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Verfassen oder Lesen</td></tr></table>

    ####Beispiele für


    ```javascript

    // The following JavaScript code sample shows how to asynchronously use

    // the loadCustomPropertiesAsync method to load custom properties that

    // are specific to the current item, and the saveAsync method to save

    // these properties back to the server. After loading the custom properties,

    // the code sample uses the get method to read the custom property myProp,

    // the set method to write the custom property otherProp, and then finally

    // calls the saveAsync method to save the custom properties.


    // The initialize function is required for all add-ins.

    Office.initialize = function () {
        // Checks for the DOM to load using the jQuery ready function.
        $(document).ready(function () {
            // After the DOM is loaded, add-in-specific code can run.
            var item = Office.context.mailbox.item;
            item.loadCustomPropertiesAsync(customPropsCallback);
        });
    }

    function customPropsCallback(asyncResult) {
        var customProps = asyncResult.value;
        var myProp = customProps.get("myProp");

        customProps.set("otherProp", "value");
        customProps.saveAsync(saveCallback);
    }


    function saveCallback(asyncResult) {
        if (asyncResult.status == Office.AsyncResultStatus.Failed){
            write(asyncResult.error.message);
        }
        else {
            // Async call to save custom properties completed.
            // Proceed to do the appropriate for your add-in.
        }
    }


    // Writes to a div with id='message' on the page.

    function write(message){
        document.getElementById('message').innerText += message;
    }

    ```
  name: saveAsync(callback, asyncContext)
  fullName: outlook.Office.CustomProperties.saveAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'saveAsync(callback?: (result: AsyncResult<void>) => void, asyncContext?: any): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: Optional. Wenn die Methode abgeschlossen ist, wird die Funktion übergebenen Callback-Parameter mit einem einzelnen Parameter vom Typ Office.AsyncResult aufgerufen.
      type:
      - '(result: AsyncResult<void>) => void'
    - id: asyncContext
      description: >-
        Optional. Jegliche Zustandsdaten, die an die Rückrufmethode übergeben werden.


        \[API-Satz: Postfach 1.0\]
      type:
      - any
- uid: outlook.Office.CustomProperties.set
  summary: >-
    Legt die angegebene Eigenschaft auf den angegebenen Wert fest.


    Mit der set-Methode wird die angegebene Eigenschaft auf den angegebenen Wert festgelegt. Sie müssen die saveAsync-Methode verwenden, um die Eigenschaft auf dem Server zu speichern.


    Die set-Methode erstellt eine neue Eigenschaft, wenn die angegebene Eigenschaft nicht bereits vorhanden ist. Andernfalls wird der vorhandene Wert durch den neuen Wert ersetzt. Der value-Parameter kann einen beliebigen Typ aufweisen, er wird jedoch immer als Zeichenfolge an den Server übergeben.


    \[[API-Satz: Postfach 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Verfassen oder Lesen</td></tr></table>
  name: set(name, value)
  fullName: outlook.Office.CustomProperties.set
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(name: string, value: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: name
      description: Der Name der festzulegenden Eigenschaft.
      type:
      - string
    - id: value
      description: Der Wert der festzulegenden Eigenschaft.
      type:
      - string
