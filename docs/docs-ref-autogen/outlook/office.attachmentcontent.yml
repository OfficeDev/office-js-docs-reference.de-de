### YamlMime:UniversalReference
ms.openlocfilehash: 42fe97363078120d9715b3091764fcd5626d2c6e
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/13/2019
ms.locfileid: "29980065"
items:
- uid: outlook.Office.AttachmentContent
  summary: >-
    Stellt den Inhalt einer Anlage zu einem Element Nachricht oder eines Termins.


    \[[API-Satz: Postfach Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Mindestberechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Verfassen oder Lesen</td></tr></table>
  isPreview: true
  name: Office.AttachmentContent
  fullName: Office.AttachmentContent
  langs:
  - typeScript
  type: interface
  package: outlook
  children:
  - outlook.Office.AttachmentContent.content
  - outlook.Office.AttachmentContent.format
- uid: outlook.Office.AttachmentContent.content
  summary: Der Inhalt einer Anlage als Zeichenfolge.
  isPreview: true
  name: content
  fullName: content
  langs:
  - typeScript
  type: property
  syntax:
    content: 'content: string;'
    return:
      type:
      - string
- uid: outlook.Office.AttachmentContent.format
  summary: >-
    Das Format der Zeichenfolge für eine Anlage Inhalt verwendet.


    Für Dateianlagen ist die Formatierung eine base64-codierte Zeichenfolge.


    Für Anlagen, die Nachrichten darstellen, ist die Formatierung eine Zeichenfolge zur Darstellung von formatierten EML-Datei aus.


    Für Anlagen, die Elemente im Kalender darstellen, ist die Formatierung eine Zeichenfolge zur Darstellung einer .icalendar-Datei aus.


    Für die Cloud-Anlagen ist die Formatierung eine URL-Zeichenfolge.
  isPreview: true
  name: format
  fullName: format
  langs:
  - typeScript
  type: property
  syntax:
    content: 'format: MailboxEnums.AttachmentContentFormat;'
    return:
      type:
      - MailboxEnums.AttachmentContentFormat
      description: "\n#### <a name=\"examples\"></a>Examples\n\n```javascript\nvar item = Office.context.mailbox.item;\nvar listOfAttachments = [];\nitem.getAttachmentsAsync(callback);\n\nfunction callback(result) {\n    if (result.value.length > 0) {\n        for (i = 0 ; i < result.value.length ; i++) {\n            var options = {asyncContext: {type: result.value[i].attachmentType}};\n            getAttachmentContentAsync(result.value[i].id, options, handleAttachmentsCallback);\n        }\n    }\n}\n\nfunction handleAttachmentsCallback(result) {\n    // parse string to be a url, an .eml file, a base64-encoded string, or an .icalendar file\n    if (result.format === Office.MailboxEnums.AttachmentContentFormat.Base64) {\n        // handle file attachment\n    } else if (result.format === Office.MailboxEnums.AttachmentContentFormat.Eml) {\n        // handle email item attachment\n    } else if (result.format === Office.MailboxEnums.AttachmentContentFormat.ICalendar) {\n        // handle .icalender attachment\n    } else if (result.format === Office.MailboxEnums.AttachmentContentFormat.Url) {\n        // handle cloud attachment\n    } else {\n        // handle attachment formats that are not supported\n    }\n}\n```"
