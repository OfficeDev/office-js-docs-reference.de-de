### YamlMime:TSType
name: Office.Sensitivity
uid: outlook!Office.Sensitivity:interface
package: outlook!
fullName: Office.Sensitivity
summary: >-
  Stellt Methoden zum Erhalten und Festlegen der Terminsensitivität einer Besprechung in einem Outlook-Add-In zur Verfügung.


  \[[API-Satz: Postfachvorschau](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
remarks: >-
  **[Mindestberechtigungsstufe](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`ReadItem`


  **[Anwendbarer Outlook-Modus](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: Verfassen
isPreview: true
isDeprecated: false
type: interface
methods:
- name: getAsync(options, callback)
  uid: outlook!Office.Sensitivity#getAsync:member(1)
  package: outlook!
  fullName: getAsync(options, callback)
  summary: >-
    Ruft den Wert der Terminsensitivität ab.


    \[[API-Satz: Postfachvorschau](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Mindestberechtigungsstufe](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`ReadItem`


    **[Anwendbarer Outlook-Modus](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: Verfassen
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<MailboxEnums.AppointmentSensitivityType>) => void): void;'
    parameters:
    - id: options
      description: 'Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält. `asyncContext`<!-- -->: Entwickler können jedes Objekt bereitstellen, auf das sie in der Rückrufmethode zugreifen möchten.'
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: Wenn die Methode abgeschlossen ist, wird die im Parameter übergebene Funktion mit einem einzelnen `callback` Parameter vom Typ aufgerufen. `Office.AsyncResult`<!-- -->.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref uid="outlook!Office.MailboxEnums.AppointmentSensitivityType:enum" />&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: getAsync(callback)
  uid: outlook!Office.Sensitivity#getAsync:member(2)
  package: outlook!
  fullName: getAsync(callback)
  summary: Ruft den Wert der Terminsensitivität ab.
  remarks: >-
    **[Mindestberechtigungsstufe](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`ReadItem`


    **[Anwendbarer Outlook-Modus](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: Verfassen


    #### <a name="examples"></a>Beispiele


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/99-preview-apis/calendar-properties-apis.yaml

    Office.context.mailbox.item.sensitivity.getAsync(function(asyncResult) {
      if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
        console.log("Sensitivity: " + asyncResult.value);
      } else {
        console.log("Failed to get sensitivity: " + JSON.stringify(asyncResult.error));
      }
    });

    ```
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getAsync(callback: (asyncResult: Office.AsyncResult<MailboxEnums.AppointmentSensitivityType>) => void): void;'
    parameters:
    - id: callback
      description: >-
        Wenn die Methode abgeschlossen ist, wird die im Parameter übergebene Funktion mit einem einzelnen `callback` Parameter vom Typ aufgerufen. `Office.AsyncResult`<!-- -->.


        \[Api-Satz: Postfachvorschau\]
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref uid="outlook!Office.MailboxEnums.AppointmentSensitivityType:enum" />&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: setAsync(sensitivity, options, callback)
  uid: outlook!Office.Sensitivity#setAsync:member(1)
  package: outlook!
  fullName: setAsync(sensitivity, options, callback)
  summary: >-
    Legt den Wert der Terminsensitivität fest.


    \[[API-Satz: Postfachvorschau](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Mindestberechtigungsstufe](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`ReadWriteItem`


    **[Anwendbarer Outlook-Modus](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: Verfassen


    #### <a name="examples"></a>Beispiele


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/99-preview-apis/calendar-properties-apis.yaml

    Office.context.mailbox.item.sensitivity.setAsync(
      Office.MailboxEnums.AppointmentSensitivityType.Confidential,
      function callback(asyncResult) {
        if (asyncResult.status === Office.AsyncResultStatus.Failed) {
          console.log("Failed to set appointment sensitivity: " + JSON.stringify(asyncResult.error));
        } else {
          console.log("Successfully set appointment sensitivity.");
        }
      }
    );

    ```
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'setAsync(sensitivity: MailboxEnums.AppointmentSensitivityType | string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: sensitivity
      description: Der Vertraulichkeitswert als Enumeration oder Zeichenfolge.
      type: <xref uid="outlook!Office.MailboxEnums.AppointmentSensitivityType:enum" /> | string
    - id: options
      description: 'Optional. Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält. `asyncContext`<!-- -->: Entwickler können jedes Objekt bereitstellen, auf das sie in der Rückrufmethode zugreifen möchten.'
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: Optional. Wenn die Methode abgeschlossen ist, wird die im Parameter übergebene Funktion `callback` mit einem einzelnen Parameter aufgerufen. `asyncResult`<!-- -->, bei dem es sich um ein `Office.AsyncResult` Objekt handelt.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 679e9dbd4ac6927b8d818744774df80adcb34fb2
  ms.sourcegitcommit: a8a86cfcaff5ad7dacc653d63502c76b1fedbebe
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 03/26/2021
  ms.locfileid: "51292611"
