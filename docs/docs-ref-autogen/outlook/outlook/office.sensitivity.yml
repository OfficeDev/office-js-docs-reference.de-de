### YamlMime:UniversalReference
items:
  - uid: 'outlook!Office.Sensitivity:interface'
    summary: |-
      Stellt Methoden zum Abrufen und Festlegen der Termin Sensitivität einer Besprechung in einem Outlook-Add-in bereit.

      \[[API-Gruppe: Post fach Vorschau](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Minimale Berechtigungsstufe](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:`ReadItem`

      ** [Zutreffender Outlook-Modus](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**: Verfassen
    isPreview: true
    name: Office.Sensitivity
    fullName: Office.Sensitivity
    langs:
      - typeScript
    type: interface
    package: outlook!
    children:
      - 'outlook!Office.Sensitivity#getAsync:member(1)'
      - 'outlook!Office.Sensitivity#getAsync:member(2)'
      - 'outlook!Office.Sensitivity#setAsync:member(1)'
      - 'outlook!Office.Sensitivity#setAsync:member(2)'
  - uid: 'outlook!Office.Sensitivity#getAsync:member(1)'
    summary: |-
      Ruft den Wert der Termin Sensitivität ab.

      \[[API-Gruppe: Post fach Vorschau](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Minimale Berechtigungsstufe](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:`ReadItem`

      ** [Zutreffender Outlook-Modus](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**: Verfassen
    isPreview: true
    name: 'getAsync(options, callback)'
    fullName: 'getAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<MailboxEnums.AppointmentSensitivityType>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: 'Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält. `asyncContext`<!-- -->: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Wenn die Methode abgeschlossen ist, wird die Funktion, `callback` die im-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ aufgerufen.`Office.AsyncResult`<!-- -->.'
          type:
            - 'outlook!Office.Sensitivity#getAsync~0:complex'
  - uid: 'outlook!Office.Sensitivity#getAsync:member(2)'
    summary: Ruft den Wert der Termin Sensitivität ab.
    remarks: |-
      ** [Minimale Berechtigungsstufe](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:`ReadItem`

      ** [Zutreffender Outlook-Modus](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**: Verfassen

      #### <a name="examples"></a>Beispiele

      ```javascript
      Office.context.mailbox.item.sensitivity.getAsync(function(asyncResult) {
        if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
          console.log("Sensitivity: " + asyncResult.value);
        } else {
          console.log("Failed to get sensitivity: " + JSON.stringify(asyncResult.error));
        }
      });
      ```
    isPreview: true
    name: getAsync(callback)
    fullName: getAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(callback: (asyncResult: Office.AsyncResult<MailboxEnums.AppointmentSensitivityType>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: |-
            Wenn die Methode abgeschlossen ist, wird die Funktion, `callback` die im-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ aufgerufen.`Office.AsyncResult`<!-- -->.

            \[API-Gruppe: Post fach Vorschau\]
          type:
            - 'outlook!Office.Sensitivity#getAsync~1:complex'
  - uid: 'outlook!Office.Sensitivity#setAsync:member(1)'
    summary: |-
      Legt den Wert der Termin Sensitivität fest.

      \[[API-Gruppe: Post fach Vorschau](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Minimale Berechtigungsstufe](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:`ReadWriteItem`

      ** [Zutreffender Outlook-Modus](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**: Verfassen
    isPreview: true
    name: 'setAsync(sensitivity, options, callback)'
    fullName: 'setAsync(sensitivity, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAsync(sensitivity: MailboxEnums.AppointmentSensitivityType | string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sensitivity
          description: Der Sensitivitäts Wert als Enum oder String.
          type:
            - 'outlook!Office.Sensitivity#setAsync~0:complex'
        - id: options
          description: 'Optional. Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält. `asyncContext`<!-- -->: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Optional. Wenn die Methode abgeschlossen ist, wird die Funktion, `callback` die im-Parameter übergeben wird, mit einem einzelnen Parameter aufgerufen.`asyncResult`<!-- -->, bei dem es `Office.AsyncResult` sich um ein Objekt handelt.'
          type:
            - 'outlook!Office.Sensitivity#setAsync~1:complex'
  - uid: 'outlook!Office.Sensitivity#setAsync:member(2)'
    summary: |-
      Legt den Wert der Termin Sensitivität fest.

      \[[API-Gruppe: Post fach Vorschau](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Minimale Berechtigungsstufe](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions)<!-- -->**:`ReadWriteItem`

      ** [Zutreffender Outlook-Modus](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points)<!-- -->**: Verfassen

      #### <a name="examples"></a>Beispiele

      ```javascript
      Office.context.mailbox.item.sensitivity.setAsync(
        Office.MailboxEnums.AppointmentSensitivityType.Confidential,
        function callback(asyncResult) {
          if (asyncResult.status === Office.AsyncResultStatus.Failed) {
            console.log("Failed to set appointment sensitivity: " + JSON.stringify(asyncResult.error));
          } else {
            console.log("Successfully set appointment sensitivity.");
          }
        }
      );
      ```
    isPreview: true
    name: 'setAsync(sensitivity, callback)'
    fullName: 'setAsync(sensitivity, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAsync(sensitivity: MailboxEnums.AppointmentSensitivityType | string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sensitivity
          description: Der Sensitivitäts Wert als Enum oder String.
          type:
            - 'outlook!Office.Sensitivity#setAsync~2:complex'
        - id: callback
          description: 'Optional. Wenn die Methode abgeschlossen ist, wird die Funktion, `callback` die im-Parameter übergeben wird, mit einem einzelnen Parameter aufgerufen.`asyncResult`<!-- -->, bei dem es `Office.AsyncResult` sich um ein Objekt handelt.'
          type:
            - 'outlook!Office.Sensitivity#setAsync~3:complex'
references:
  - uid: 'outlook!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'outlook!Office.Sensitivity#getAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<MailboxEnums.AppointmentSensitivityType>) => void'
    fullName: '(asyncResult: Office.AsyncResult<Office.MailboxEnums.AppointmentSensitivityType>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'outlook!Office.MailboxEnums.AppointmentSensitivityType:enum'
        name: MailboxEnums.AppointmentSensitivityType
        fullName: Office.MailboxEnums.AppointmentSensitivityType
      - name: '>) => void'
        fullName: '>) => void'
  - uid: 'outlook!Office.Sensitivity#getAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<MailboxEnums.AppointmentSensitivityType>) => void'
    fullName: '(asyncResult: Office.AsyncResult<Office.MailboxEnums.AppointmentSensitivityType>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'outlook!Office.MailboxEnums.AppointmentSensitivityType:enum'
        name: MailboxEnums.AppointmentSensitivityType
        fullName: Office.MailboxEnums.AppointmentSensitivityType
      - name: '>) => void'
        fullName: '>) => void'
  - uid: 'outlook!Office.Sensitivity#setAsync~0:complex'
    name: MailboxEnums.AppointmentSensitivityType | string
    fullName: Office.MailboxEnums.AppointmentSensitivityType | string
    spec.typeScript:
      - uid: 'outlook!Office.MailboxEnums.AppointmentSensitivityType:enum'
        name: MailboxEnums.AppointmentSensitivityType
        fullName: Office.MailboxEnums.AppointmentSensitivityType
      - name: ' | string'
        fullName: ' | string'
  - uid: 'outlook!Office.Sensitivity#setAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.Sensitivity#setAsync~2:complex'
    name: MailboxEnums.AppointmentSensitivityType | string
    fullName: Office.MailboxEnums.AppointmentSensitivityType | string
    spec.typeScript:
      - uid: 'outlook!Office.MailboxEnums.AppointmentSensitivityType:enum'
        name: MailboxEnums.AppointmentSensitivityType
        fullName: Office.MailboxEnums.AppointmentSensitivityType
      - name: ' | string'
        fullName: ' | string'
  - uid: 'outlook!Office.Sensitivity#setAsync~3:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void