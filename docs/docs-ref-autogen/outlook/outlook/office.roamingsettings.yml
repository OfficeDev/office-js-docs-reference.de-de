### YamlMime:TSType
name: Office.RoamingSettings
uid: outlook!Office.RoamingSettings:interface
package: outlook!
fullName: Office.RoamingSettings
summary: >-
  Die Einstellungen, die mit den Methoden des `RoamingSettings`-Objekts erstellt werden, werden pro Add-In und pro Benutzer gespeichert. Das heißt, Sie stehen nur dem Add-in zur Verfügung, das Sie erstellt haben, und nur aus dem Postfach des Benutzers, in dem Sie gespeichert sind.


  Während die Outlook-Add-in-API den Zugriff auf diese Einstellungen auf das Add-in beschränkt, das Sie erstellt hat, sollten diese Einstellungen nicht als sicherer Speicher betrachtet werden. Auf Sie kann von Exchange Webdienste oder Extended MAPI zugegriffen werden. Sie sollten nicht zum Speichern vertraulicher Informationen wie Benutzeranmeldeinformationen oder Sicherheitstoken verwendet werden.


  Der Name einer Einstellung ist eine Zeichenfolge, während der Wert vom Typ „string“, „number“, „boolean“, „null“, „object“ oder „array“ sein kann.


  Der Zugriff auf das `RoamingSettings`-Objekt erfolgt über die `roamingSettings`-Eigenschaft im `Office.context`-Namespace.


  **Wichtig**:


  - Das `RoamingSettings` Objekt wird nur dann vom beibehaltenen Speicher initialisiert, wenn das Add-in zum ersten Mal geladen wird. Für Aufgabenbereiche bedeutet dies, dass Sie nur initialisiert wird, wenn der Aufgabenbereich zuerst geöffnet wird. Wenn der Aufgabenbereich zu einer anderen Seite navigiert oder die aktuelle Seite erneut lädt, wird das in-Memory-Objekt auf seine anfänglichen Werte zurückgesetzt, selbst wenn das Add-in permanente Änderungen aufweist. Die permanenten Änderungen sind erst verfügbar, wenn der Aufgabenbereich (oder das Element im Fall von UI-less-Add-Ins) geschlossen und erneut geöffnet wird.


  - Wenn Sie über Outlook unter Windows oder Mac festgelegt und gespeichert werden, werden diese Einstellungen erst nach einer Browser Aktualisierung in Outlook im Internet wiedergegeben.
remarks: >-
  **[Minimale Berechtigungsstufe](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`Restricted`


  **[Anwendbarer Outlook-Modus](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: Verfassen oder lesen
isPreview: false
isDeprecated: false
type: interface
methods:
- name: get(name)
  uid: outlook!Office.RoamingSettings#get:member(1)
  package: outlook!
  fullName: get(name)
  summary: Ruft die angegebene Einstellung ab.
  remarks: >-
    **[Minimale Berechtigungsstufe](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`Restricted`


    **[Anwendbarer Outlook-Modus](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: Verfassen oder lesen


    #### <a name="examples"></a>Beispiele


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/outlook/10-roaming-settings/roaming-settings.yaml

    var settingName = $("#settingName").val();

    var settingValue = Office.context.roamingSettings.get(settingName);

    $("#settingValue").val(settingValue);

    console.log(`The value of setting "${settingName}" is "${settingValue}".`);

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'get(name: string): any;'
    parameters:
    - id: name
      description: Der Name der abzurufenden Einstellung. Bei der Angabe des Namens wird die Groß-/Kleinschreibung berücksichtigt.
      type: string
    return:
      type: any
      description: 'Typ: String \| Number \| Boolean \| Object \| Array'
- name: remove(name)
  uid: outlook!Office.RoamingSettings#remove:member(1)
  package: outlook!
  fullName: remove(name)
  summary: Entfernt die angegebene Einstellung
  remarks: >-
    **[Minimale Berechtigungsstufe](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`Restricted`


    **[Anwendbarer Outlook-Modus](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: Verfassen oder lesen
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'remove(name: string): void;'
    parameters:
    - id: name
      description: Der Name der zu entfernenden Einstellung. Bei der Angabe des Namens wird die Groß-/Kleinschreibung berücksichtigt.
      type: string
    return:
      type: void
      description: ''
- name: saveAsync(callback)
  uid: outlook!Office.RoamingSettings#saveAsync:member(1)
  package: outlook!
  fullName: saveAsync(callback)
  summary: >-
    Speichert die Einstellungen.


    Alle von einem Add-In bereits gespeicherten Einstellungen werden bei der Initialisierung geladen, daher können Sie während der Gültigkeitszeit der Sitzung einfach die Methoden set und get verwenden, um mit der speicherinternen Kopie des Einstellungseigenschaftenbehälters zu arbeiten. Wenn Sie die Einstellungen speichern möchten, damit sie bei der nächsten Verwendung des Add-Ins verfügbar sind, verwenden Sie die saveAsync-Methode.
  remarks: >-
    **[Minimale Berechtigungsstufe](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`Restricted`


    **[Anwendbarer Outlook-Modus](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: Verfassen oder lesen


    #### <a name="examples"></a>Beispiele


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/outlook/10-roaming-settings/roaming-settings.yaml

    // Save settings in the mailbox to make it available in future sessions.

    Office.context.roamingSettings.saveAsync(function(result) {
      if (result.status !== Office.AsyncResultStatus.Succeeded) {
        console.error(`Action failed with message ${result.error.message}`);
      } else {
        console.log(`Settings saved with status: ${result.status}`);
      }
    });

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'saveAsync(callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: callback
      description: Optional. Wenn die Methode abgeschlossen ist, wird die Funktion, die im- `callback` Parameter übergeben wird, mit einem einzelnen Parameter vom Typ aufgerufen. `Office.AsyncResult`<!-- -->.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: set(name, value)
  uid: outlook!Office.RoamingSettings#set:member(1)
  package: outlook!
  fullName: set(name, value)
  summary: >-
    Legt die angegebene Einstellung fest oder erstellt sie.


    Die `set` Methode erstellt eine neue Einstellung des angegebenen Namens, wenn Sie noch nicht vorhanden ist, oder legt eine vorhandene Einstellung des angegebenen Namens fest. Der Wert wird im Dokument als JSON-Seriendarstellung seines Datentyps gespeichert.


    Für die Einstellungen der einzelnen Add-ins steht ein Maximum von 32 KB beschränkt zur Verfügung.


    Alle Änderungen, die an den Einstellungen mithilfe der festgelegten Funktion vorgenommen werden, werden erst auf dem Server gespeichert, wenn die `saveAsync` Funktion aufgerufen wird.
  remarks: >-
    **[Minimale Berechtigungsstufe](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`Restricted`


    **[Anwendbarer Outlook-Modus](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->**: Verfassen oder lesen


    #### <a name="examples"></a>Beispiele


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/outlook/10-roaming-settings/roaming-settings.yaml

    var settingName = $("#settingName").val();

    var settingValue = $("#settingValue").val();

    Office.context.roamingSettings.set(settingName, settingValue);

    console.log(`Setting "${settingName}" set to value "${settingValue}".`);

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(name: string, value: any): void;'
    parameters:
    - id: name
      description: Der Name der festzulegenden oder zu erstellenden Einstellung. Groß-/Kleinschreibung des Namens wird beachtet.
      type: string
    - id: value
      description: Gibt den zu speichernden Wert an.
      type: any
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: f6136a4f9143de97fa15166ec887e0ab878564c0
  ms.sourcegitcommit: a6ecbc9abca2ab5c82af4c869e3e2d72c999a4c1
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 12/02/2020
  ms.locfileid: "49547089"
