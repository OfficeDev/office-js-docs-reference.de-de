### YamlMime:UniversalReference
items:
  - uid: 'outlook!Office.Categories:interface'
    summary: |-
      Stellt die Kategorien für ein Element dar.

      Benutzer können Nachrichten und Termine in Outlook gruppieren, indem sie sie anhand von Kategorien farblich kennzeichnen. Der Benutzerdefiniert [Kategorien in einer Masterliste](xref:outlook!Office.MasterCategories:interface) in seinem Postfach. Anschließend können beliebig viele Kategorien auf ein Element angewendet werden.

      **Wichtig**: in Outlook im Web können Sie die-API nicht verwenden, um Kategorien für eine Nachricht im Lesemodus zu verwalten.

      \[[API-Gruppe: Mailbox 1,8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      ** [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Verfassen oder lesen
    name: Office.Categories
    fullName: Office.Categories
    langs:
      - typeScript
    type: interface
    package: outlook!
    children:
      - 'outlook!Office.Categories#addAsync:member(1)'
      - 'outlook!Office.Categories#addAsync:member(2)'
      - 'outlook!Office.Categories#getAsync:member(1)'
      - 'outlook!Office.Categories#getAsync:member(2)'
      - 'outlook!Office.Categories#removeAsync:member(1)'
      - 'outlook!Office.Categories#removeAsync:member(2)'
  - uid: 'outlook!Office.Categories#addAsync:member(1)'
    summary: 'Fügt Kategorien zu einem Element hinzu. Jede Kategorie muss sich in der Masterliste Kategorien für das Postfach befinden, und daher muss ein eindeutiger Name vorhanden sein, aber mehrere Kategorien können dieselbe Farbe verwenden.'
    remarks: |-
      ** [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem

      ** [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Verfassen oder lesen

      **Fehler**:

      - InvalidCategory: Es wurden ungültige Kategorien angegeben.
    name: 'addAsync(categories, options, callback)'
    fullName: 'addAsync(categories, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addAsync(categories: string[], options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: categories
          description: 'Die Kategorien, die dem Element hinzugefügt werden sollen.'
          type:
            - 'string[]'
        - id: options
          description: 'Optional. Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält. AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: |-
            Optional. Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzigen Parameter vom Typ Office. AsyncResult aufgerufen.

            \[API-Gruppe: Mailbox 1,8\]
          type:
            - 'outlook!Office.Categories#addAsync~0:complex'
  - uid: 'outlook!Office.Categories#addAsync:member(2)'
    summary: 'Fügt Kategorien zu einem Element hinzu. Jede Kategorie muss sich in der Masterliste Kategorien für das Postfach befinden, und daher muss ein eindeutiger Name vorhanden sein, aber mehrere Kategorien können dieselbe Farbe verwenden.'
    remarks: |-
      ** [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem

      ** [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Verfassen oder lesen

      **Fehler**:

      - InvalidCategory: Es wurden ungültige Kategorien angegeben.

      #### <a name="examples"></a>Beispiele

      ```javascript
      // Note: In order for you to successfully add a category,
      // it must be in the mailbox categories master list.

      var categoriesToAdd = ["Urgent!"];

      Office.context.mailbox.item.categories.addAsync(categoriesToAdd, function (asyncResult) {
          if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
              console.log("Successfully added categories");
          } else {
              console.log("categories.addAsync call failed with error: " + asyncResult.error.message);
          }
      });
      ```
    name: 'addAsync(categories, callback)'
    fullName: 'addAsync(categories, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addAsync(categories: string[], callback: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: categories
          description: 'Die Kategorien, die dem Element hinzugefügt werden sollen.'
          type:
            - 'string[]'
        - id: callback
          description: |-
            Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzigen Parameter vom Typ Office. AsyncResult aufgerufen. Wenn Kategorien nicht hinzugefügt werden, enthält die AsyncResult. Error-Eigenschaft einen Fehlercode.

            \[API-Gruppe: Mailbox 1,8\]
          type:
            - 'outlook!Office.Categories#addAsync~1:complex'
  - uid: 'outlook!Office.Categories#getAsync:member(1)'
    summary: Ruft die Kategorien eines Elements ab.
    remarks: |-
      ** [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      ** [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Verfassen oder lesen
    name: 'getAsync(options, callback)'
    fullName: 'getAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<CategoryDetails[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: 'Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält. AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: |-
            Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzigen Parameter vom Typ Office. AsyncResult aufgerufen. Wenn Kategorien nicht hinzugefügt werden, enthält die AsyncResult. Error-Eigenschaft einen Fehlercode.

            \[API-Gruppe: Mailbox 1,8\]
          type:
            - 'outlook!Office.Categories#getAsync~0:complex'
  - uid: 'outlook!Office.Categories#getAsync:member(2)'
    summary: Ruft die Kategorien eines Elements ab.
    remarks: |-
      ** [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      ** [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Verfassen oder lesen

      #### <a name="examples"></a>Beispiele

      ```javascript
      Office.context.mailbox.item.categories.getAsync(function (asyncResult) {
          if (asyncResult.status === Office.AsyncResultStatus.Failed) {
              console.log("Action failed with error: " + asyncResult.error.message);
          } else {
              var categories = asyncResult.value;
              console.log("Categories:");
              categories.forEach(function (item) {
                  console.log("-- " + JSON.stringify(item));
              });
          }
      });
      ```
      ```javascript
      Office.context.mailbox.item.categories.getAsync(function(asyncResult) {
        if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
          var categories = asyncResult.value;
          if (categories) {
            console.log(categories);
          } else {
            console.log("There are no categories.");
          }
        } else {
          console.error(asyncResult.error);
        }
      });
      ```
    name: getAsync(callback)
    fullName: getAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(callback: (asyncResult: Office.AsyncResult<CategoryDetails[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: |-
            Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzigen Parameter vom Typ Office. AsyncResult aufgerufen.

            \[API-Gruppe: Mailbox 1,8\]
          type:
            - 'outlook!Office.Categories#getAsync~1:complex'
  - uid: 'outlook!Office.Categories#removeAsync:member(1)'
    summary: Entfernt Kategorien aus einem Element.
    remarks: |-
      ** [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem

      ** [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Verfassen oder lesen
    name: 'removeAsync(categories, options, callback)'
    fullName: 'removeAsync(categories, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeAsync(categories: string[], options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: categories
          description: 'Die Kategorien, die aus dem Element entfernt werden sollen.'
          type:
            - 'string[]'
        - id: options
          description: 'Optional. Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält. AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: |-
            Optional. Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzigen Parameter vom Typ Office. AsyncResult aufgerufen. Wenn das Entfernen von Kategorien fehlschlägt, wird die AsyncResult. Error-Eigenschaft einen Fehlercode enthalten.

            \[API-Gruppe: Mailbox 1,8\]
          type:
            - 'outlook!Office.Categories#removeAsync~0:complex'
  - uid: 'outlook!Office.Categories#removeAsync:member(2)'
    summary: Entfernt Kategorien aus einem Element.
    remarks: |-
      ** [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem

      ** [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Verfassen oder lesen

      #### <a name="examples"></a>Beispiele

      ```javascript
      var categoriesToRemove = ["Urgent!"];

      Office.context.mailbox.item.categories.removeAsync(categoriesToRemove, function (asyncResult) {
          if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
              console.log("Successfully removed categories");
          } else {
              console.log("categories.removeAsync call failed with error: " + asyncResult.error.message);
          }
      });
      ```
    name: 'removeAsync(categories, callback)'
    fullName: 'removeAsync(categories, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeAsync(categories: string[], callback: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: categories
          description: 'Die Kategorien, die aus dem Element entfernt werden sollen.'
          type:
            - 'string[]'
        - id: callback
          description: |-
            Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzigen Parameter vom Typ Office. AsyncResult aufgerufen. Wenn das Entfernen von Kategorien fehlschlägt, wird die AsyncResult. Error-Eigenschaft einen Fehlercode enthalten.

            \[API-Gruppe: Mailbox 1,8\]
          type:
            - 'outlook!Office.Categories#removeAsync~1:complex'
references:
  - uid: 'outlook!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'outlook!Office.Categories#addAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.Categories#addAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.Categories#getAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<CategoryDetails[]>) => void'
    fullName: '(asyncResult: Office.AsyncResult<Office.CategoryDetails[]>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'outlook!Office.CategoryDetails:interface'
        name: CategoryDetails
        fullName: Office.CategoryDetails
      - name: '[]>) => void'
        fullName: '[]>) => void'
  - uid: 'outlook!Office.Categories#getAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<CategoryDetails[]>) => void'
    fullName: '(asyncResult: Office.AsyncResult<Office.CategoryDetails[]>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'outlook!Office.CategoryDetails:interface'
        name: CategoryDetails
        fullName: Office.CategoryDetails
      - name: '[]>) => void'
        fullName: '[]>) => void'
  - uid: 'outlook!Office.Categories#removeAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.Categories#removeAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void