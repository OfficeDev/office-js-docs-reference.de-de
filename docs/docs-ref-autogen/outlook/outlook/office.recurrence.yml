### YamlMime:TSType
name: Office.Recurrence
uid: outlook!Office.Recurrence:interface
package: outlook!
fullName: Office.Recurrence
summary: >-
  Das Objekt stellt Methoden zum Erhalten und Festlegen des Serienmusters von Terminen, aber nur zum Erhalten des Serienmusters von `Recurrence` Besprechungsanfragen zur Verfügung. Es enthält ein Wörterbuch mit den folgenden Schlüsseln: `seriesTime`<!-- -->, `recurrenceType`<!-- -->, `recurrenceProperties`<!-- -->und `recurrenceTimeZone` (optional).


  \[[API-Satz: Postfach 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
remarks: >-
  **[Mindestberechtigungsstufe:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadItem`


  **[Zutreffender Outlook-Modus:](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** Verfassen oder Lesen


  **Staaten**


  <table> <tr> <th>Status</th> <th>Bearbeitbar?</th> <th>Anzeigebar?</th> </tr> <tr> <td>Terminorganisator – Verfassenreihe</td> <td>Ja (setAsync)</td> <td>Ja (getAsync)</td> </tr> <tr> <td>Terminorganisator – Instanz zum Verfassen</td> <td>Nein (setAsync gibt Fehler zurück)</td> <td>Ja (getAsync)</td> </tr> <tr> <td>Terminteilnehmer – Reihe lesen</td> <td>Nein (setAsync nicht verfügbar)</td> <td>Ja (item.recurrence)</td> </tr> <tr> <td>Terminteilnehmer – Instanz lesen</td> <td>Nein (setAsync nicht verfügbar)</td> <td>Ja (item.recurrence)</td> </tr> <tr> <td>Besprechungsanfrage – Reihe lesen</td> <td>Nein (setAsync nicht verfügbar)</td> <td>Ja (item.recurrence)</td> </tr> <tr> <td>Besprechungsanfrage – Instanz lesen</td> <td>Nein (setAsync nicht verfügbar)</td> <td>Ja (item.recurrence)</td> </tr> </table>
isPreview: false
isDeprecated: false
type: interface
properties:
- name: recurrenceProperties
  uid: outlook!Office.Recurrence#recurrenceProperties:member
  package: outlook!
  fullName: recurrenceProperties
  summary: >-
    Ruft die Eigenschaften der Terminserie ab oder legt sie fest.


    \[[API-Satz: Postfach 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Mindestberechtigungsstufe:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadItem`


    **[Zutreffender Outlook-Modus:](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** Verfassen oder Lesen
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'recurrenceProperties?: RecurrenceProperties;'
    return:
      type: <xref uid="outlook!Office.RecurrenceProperties:interface" />
- name: recurrenceTimeZone
  uid: outlook!Office.Recurrence#recurrenceTimeZone:member
  package: outlook!
  fullName: recurrenceTimeZone
  summary: >-
    Ruft die Eigenschaften der Terminserie ab oder legt sie fest.


    \[[API-Satz: Postfach 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Mindestberechtigungsstufe:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadItem`


    **[Zutreffender Outlook-Modus:](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** Verfassen oder Lesen
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'recurrenceTimeZone?: RecurrenceTimeZone;'
    return:
      type: <xref uid="outlook!Office.RecurrenceTimeZone:interface" />
- name: recurrenceType
  uid: outlook!Office.Recurrence#recurrenceType:member
  package: outlook!
  fullName: recurrenceType
  summary: >-
    Ruft den Typ der Terminserie ab oder legt diesen fest.


    \[[API-Satz: Postfach 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Mindestberechtigungsstufe:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadItem`


    **[Zutreffender Outlook-Modus:](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** Verfassen oder Lesen
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'recurrenceType: MailboxEnums.RecurrenceType | string;'
    return:
      type: <xref uid="outlook!Office.MailboxEnums.RecurrenceType:enum" /> | string
- name: seriesTime
  uid: outlook!Office.Recurrence#seriesTime:member
  package: outlook!
  fullName: seriesTime
  summary: >-
    Mit [dem SeriesTime -Objekt](xref:outlook!Office.SeriesTime:interface) können Sie das Start- und Enddatum der Terminserie sowie die üblichen Start- und Endzeiten von Instanzen verwalten. **Dieses Objekt wird nicht in UTC-Zeit angegeben.** Stattdessen wird sie in der Zeitzone festgelegt, die durch den Wert angegeben wird, oder in der Standardzeitzone des `recurrenceTimeZone` Elements.


    \[[API-Satz: Postfach 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Mindestberechtigungsstufe:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadItem`


    **[Zutreffender Outlook-Modus:](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** Verfassen oder Lesen
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'seriesTime: SeriesTime;'
    return:
      type: <xref uid="outlook!Office.SeriesTime:interface" />
methods:
- name: getAsync(options, callback)
  uid: outlook!Office.Recurrence#getAsync:member(1)
  package: outlook!
  fullName: getAsync(options, callback)
  summary: >-
    Gibt das aktuelle Serienobjekt einer Terminserie zurück.


    Diese Methode gibt das gesamte `Recurrence` Objekt für die Terminserie zurück.


    \[[API-Satz: Postfach 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Mindestberechtigungsstufe:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadItem`


    **[Zutreffender Outlook-Modus:](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** Verfassen oder Lesen


    #### <a name="examples"></a>Beispiele


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/50-recurrence/get-set-recurrence-appointment-organizer.yaml

    Office.context.mailbox.item.recurrence.getAsync(function(asyncResult) {
      if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
        var recurrence = asyncResult.value;
        if (recurrence === null) {
          console.log("This is a single appointment.");
        } else {
          console.log(`Recurrence pattern: ${JSON.stringify(recurrence)}`);
        }
      } else {
        console.error(asyncResult.error);
      }
    });

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getAsync(options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<Recurrence>) => void): void;'
    parameters:
    - id: options
      description: 'Optional. Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält. `asyncContext`<!-- -->: Entwickler können in der Rückrufmethode jedes Objekt bereitstellen, auf das sie zugreifen möchten.'
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: Optional. Wenn die Methode abgeschlossen ist, wird die im Parameter übergebene `callback` Funktion mit einem einzigen Parameter aufgerufen. `asyncResult`<!-- -->, bei dem es sich um ein Objekt `Office.AsyncResult` handelt. Die `value` Eigenschaft des Ergebnisses ist ein `Recurrence` Objekt.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref uid="outlook!Office.Recurrence:interface" />&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: setAsync(recurrencePattern, options, callback)
  uid: outlook!Office.Recurrence#setAsync:member(1)
  package: outlook!
  fullName: setAsync(recurrencePattern, options, callback)
  summary: >-
    Legt das Serienmuster einer Terminserie fest.


    **Hinweis:** `setAsync` Sollte nur für Datenreihenelemente und nicht für Instanzelemente verfügbar sein.


    \[[API-Satz: Postfach 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Mindestberechtigungsstufe:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadWriteItem`


    **[Zutreffender Outlook-Modus:](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** Verfassen


    **Fehler:**


    - `InvalidEndTime`<!-- -->: Die Endzeit des Termins liegt vor der Startzeit.


    #### <a name="examples"></a>Beispiele


    ```javascript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/outlook/50-recurrence/get-set-recurrence-appointment-organizer.yaml

    // Important: Can only set the recurrence pattern of an appointment series.


    var currentDate = new Date();

    let seriesTimeObject : Office.SeriesTime;

    // Set series start date to tomorrow.

    seriesTimeObject.setStartDate(
      currentDate.getFullYear(),
      currentDate.getMonth(),
      currentDate.getDay() + 1
    );

    // Set series end date to 1 month from now.

    seriesTimeObject.setEndDate(
      currentDate.getFullYear(),
      currentDate.getMonth() + 1,
      currentDate.getDay()
    );

    // Set start time to 1:30 PM.

    seriesTimeObject.setStartTime(13, 30);

    // Set duration to 30 minutes.

    seriesTimeObject.setDuration(30);


    let pattern : Office.Recurrence = {
      seriesTime: seriesTimeObject,
      recurrenceType: "weekly",
      recurrenceProperties: { interval: 1, days: ["tue", "thu"], firstDayOfWeek: "sun" },
      recurrenceTimeZone: { name: "Pacific Standard Time" }
    };


    Office.context.mailbox.item.recurrence.setAsync(pattern, (asyncResult) => {
      if (asyncResult.status !== Office.AsyncResultStatus.Succeeded) {
        console.error(`Failed to set recurrence. Error: ${asyncResult.error.message}`);
        return;
      }
      console.log(`Succeeded in setting recurrence pattern ${JSON.stringify(pattern)}`);
    });

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setAsync(recurrencePattern: Recurrence, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: recurrencePattern
      description: Ein Serienobjekt.
      type: <xref uid="outlook!Office.Recurrence:interface" />
    - id: options
      description: 'Optional. Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält. `asyncContext`<!-- -->: Entwickler können in der Rückrufmethode jedes Objekt bereitstellen, auf das sie zugreifen möchten.'
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: Optional. Wenn die Methode abgeschlossen ist, wird die im Parameter übergebene `callback` Funktion mit einem einzigen Parameter aufgerufen. `asyncResult`<!-- -->, bei dem es sich um ein Objekt `Office.AsyncResult` handelt.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 8b703a7cf4c1f6f8b3d6bb1338625c12a8f84573
  ms.sourcegitcommit: d14ccd5d21286fdad1d3451f3ac745c603d9400d
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 01/13/2021
  ms.locfileid: "49855914"
