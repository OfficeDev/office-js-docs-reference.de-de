### YamlMime:UniversalReference
ms.openlocfilehash: 003c3d4daf3a24c35bde443f1132146e8ea58f88
ms.sourcegitcommit: 788ab9c595c9143f8b8f4822a170e8b90d72ee1d
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 03/06/2019
ms.locfileid: "30413868"
items:
- uid: outlook.Office.Item
  summary: >-
    <span data-ttu-id="cf1e8-101">Der Element-Namespace wird verwendet, um auf die aktuell ausgewählte Nachricht, Besprechungsanfrage oder einen Termin zuzugreifen.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-101">The item namespace is used to access the currently selected message, meeting request, or appointment.</span></span> <span data-ttu-id="cf1e8-102">Sie können den Typ des Elements mithilfe der `itemType` -Eigenschaft bestimmen.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-102">You can determine the type of the item by using the `itemType` property.</span></span>


    <span data-ttu-id="cf1e8-103">\[[API-Satz: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cf1e8-103">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="cf1e8-104">Mindestberechtigungsstufe</span><span class="sxs-lookup"><span data-stu-id="cf1e8-104">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="cf1e8-105">Eingeschränkt</span><span class="sxs-lookup"><span data-stu-id="cf1e8-105">Restricted</span></span></td></tr> <tr><td>[<span data-ttu-id="cf1e8-106">Zutreffender Outlook-Modus</span><span class="sxs-lookup"><span data-stu-id="cf1e8-106">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="cf1e8-107">Verfassen oder Lesen</span><span class="sxs-lookup"><span data-stu-id="cf1e8-107">Compose or Read</span></span></td></tr> </table>
  name: Office.Item
  fullName: Office.Item
  langs:
  - typeScript
  type: interface
  package: outlook
  children:
  - outlook.Office.Item.addHandlerAsync
  - outlook.Office.Item.addHandlerAsync_1
  - outlook.Office.Item.getAttachmentContentAsync
  - outlook.Office.Item.getAttachmentContentAsync_1
  - outlook.Office.Item.getInitializationContextAsync
  - outlook.Office.Item.getInitializationContextAsync_1
  - outlook.Office.Item.getSharedPropertiesAsync
  - outlook.Office.Item.getSharedPropertiesAsync_1
  - outlook.Office.Item.loadCustomPropertiesAsync
  - outlook.Office.Item.removeHandlerAsync
  - outlook.Office.Item.removeHandlerAsync_1
  - outlook.Office.Item.body
  - outlook.Office.Item.itemType
  - outlook.Office.Item.notificationMessages
  - outlook.Office.Item.seriesId
- uid: outlook.Office.Item.addHandlerAsync
  summary: >-
    <span data-ttu-id="cf1e8-108">Fügt einen Ereignishandler für ein unterstütztes Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-108">Adds an event handler for a supported event.</span></span>


    <span data-ttu-id="cf1e8-109">Derzeit sind `Office.EventType.AppointmentTimeChanged` <!-- -->die unterstützten Ereignis `Office.EventType.RecipientsChanged` <!-- -->Typen, `Office.EventType.RecurrenceChanged` <!-- -->und.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-109">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`<!-- -->, `Office.EventType.RecipientsChanged`<!-- -->, and `Office.EventType.RecurrenceChanged`<!-- -->.</span></span> <span data-ttu-id="cf1e8-110">In der Vorschau `Office.EventType.AttachmentsChanged` und `Office.EventType.EnhancedLocationsChanged` werden ebenfalls unterstützt.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-110">In Preview, `Office.EventType.AttachmentsChanged` and `Office.EventType.EnhancedLocationsChanged` are also supported.</span></span>


    <span data-ttu-id="cf1e8-111">\[[API-Satz: Mailbox 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cf1e8-111">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="cf1e8-112">Mindestberechtigungsstufe</span><span class="sxs-lookup"><span data-stu-id="cf1e8-112">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="cf1e8-113">ReadItem</span><span class="sxs-lookup"><span data-stu-id="cf1e8-113">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="cf1e8-114">Zutreffender Outlook-Modus</span><span class="sxs-lookup"><span data-stu-id="cf1e8-114">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="cf1e8-115">Verfassen oder Lesen</span><span class="sxs-lookup"><span data-stu-id="cf1e8-115">Compose or Read</span></span></td></tr> </table>
  name: addHandlerAsync(eventType, handler, options, callback)
  fullName: addHandlerAsync(eventType, handler, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="cf1e8-116">Das Ereignis, das den Handler aufrufen soll</span><span class="sxs-lookup"><span data-stu-id="cf1e8-116">The event that should invoke the handler.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="cf1e8-117">Die Funktion, die das Ereignis behandeln soll.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-117">The function to handle the event.</span></span> <span data-ttu-id="cf1e8-118">Die Funktion muss einen einzigen Parameter akzeptieren (ein Objektliteral).</span><span class="sxs-lookup"><span data-stu-id="cf1e8-118">The function must accept a single parameter, which is an object literal.</span></span> <span data-ttu-id="cf1e8-119">Die Type-Eigenschaft des-Parameters entspricht dem eventType-Parameter, der an addHandlerAsync übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-119">The type property on the parameter will match the eventType parameter passed to addHandlerAsync.</span></span>
      type:
      - any
    - id: options
      description: '<span data-ttu-id="cf1e8-120">Optional.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-120">Optional.</span></span> <span data-ttu-id="cf1e8-121">Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-121">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="cf1e8-122">AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-122">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="cf1e8-123">Optional.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-123">Optional.</span></span> <span data-ttu-id="cf1e8-124">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter, asyncResult, aufgerufen, bei dem es sich um ein Office. AsyncResult-Objekt handelt.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-124">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: outlook.Office.Item.addHandlerAsync_1
  summary: >-
    <span data-ttu-id="cf1e8-125">Fügt einen Ereignishandler für ein unterstütztes Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-125">Adds an event handler for a supported event.</span></span>


    <span data-ttu-id="cf1e8-126">Derzeit sind `Office.EventType.AppointmentTimeChanged` <!-- -->die unterstützten Ereignis `Office.EventType.RecipientsChanged` <!-- -->Typen, `Office.EventType.RecurrenceChanged` <!-- -->und.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-126">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`<!-- -->, `Office.EventType.RecipientsChanged`<!-- -->, and `Office.EventType.RecurrenceChanged`<!-- -->.</span></span> <span data-ttu-id="cf1e8-127">In der Vorschau `Office.EventType.AttachmentsChanged` und `Office.EventType.EnhancedLocationsChanged` werden ebenfalls unterstützt.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-127">In Preview, `Office.EventType.AttachmentsChanged` and `Office.EventType.EnhancedLocationsChanged` are also supported.</span></span>


    <span data-ttu-id="cf1e8-128">\[[API-Satz: Mailbox 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cf1e8-128">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="cf1e8-129">Mindestberechtigungsstufe</span><span class="sxs-lookup"><span data-stu-id="cf1e8-129">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="cf1e8-130">ReadItem</span><span class="sxs-lookup"><span data-stu-id="cf1e8-130">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="cf1e8-131">Zutreffender Outlook-Modus</span><span class="sxs-lookup"><span data-stu-id="cf1e8-131">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="cf1e8-132">Verfassen oder Lesen</span><span class="sxs-lookup"><span data-stu-id="cf1e8-132">Compose or Read</span></span></td></tr> </table><span data-ttu-id="cf1e8-133">

    ####Beispiele</span><span class="sxs-lookup"><span data-stu-id="cf1e8-133">

    #### Examples</span></span>


    ```javascript

    function myHandlerFunction(eventarg) {
        if (eventarg.attachmentStatus === Office.MailboxEnums.AttachmentStatus.Added) {
            var attachment = eventarg.attachmentDetails;
            console.log("Event Fired and Attachment Added!");
            getAttachmentContentAsync(attachment.id, options, callback);
        }
    }


    Office.context.mailbox.item.addHandlerAsync(Office.EventType.AttachmentsChanged, myHandlerFunction, myCallback);

    ```
  name: addHandlerAsync(eventType, handler, callback)
  fullName: addHandlerAsync(eventType, handler, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="cf1e8-134">Das Ereignis, das den Handler aufrufen soll</span><span class="sxs-lookup"><span data-stu-id="cf1e8-134">The event that should invoke the handler.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="cf1e8-135">Die Funktion, die das Ereignis behandeln soll.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-135">The function to handle the event.</span></span> <span data-ttu-id="cf1e8-136">Die Funktion muss einen einzigen Parameter akzeptieren (ein Objektliteral).</span><span class="sxs-lookup"><span data-stu-id="cf1e8-136">The function must accept a single parameter, which is an object literal.</span></span> <span data-ttu-id="cf1e8-137">Die Type-Eigenschaft des-Parameters entspricht dem eventType-Parameter, der an addHandlerAsync übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-137">The type property on the parameter will match the eventType parameter passed to addHandlerAsync.</span></span>
      type:
      - any
    - id: callback
      description: <span data-ttu-id="cf1e8-138">Optional.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-138">Optional.</span></span> <span data-ttu-id="cf1e8-139">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter, asyncResult, aufgerufen, bei dem es sich um ein Office. AsyncResult-Objekt handelt.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-139">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: outlook.Office.Item.getAttachmentContentAsync
  summary: >-
    <span data-ttu-id="cf1e8-140">Ruft eine Anlage aus einer Nachricht oder einem Termin ab und gibt Sie als **AttachmentContent** -Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-140">Gets an attachment from a message or appointment and returns it as an **AttachmentContent** object.</span></span>


    <span data-ttu-id="cf1e8-141">Die `getAttachmentContentAsync` -Methode ruft die Anlage mit dem angegebenen Bezeichner aus dem Element ab.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-141">The `getAttachmentContentAsync` method gets the attachment with the specified identifier from the item.</span></span> <span data-ttu-id="cf1e8-142">Als bewährte Methode sollten Sie den Bezeichner verwenden, um eine Anlage in der gleichen Sitzung abzurufen, in der die attachmentIds mit dem `getAttachmentsAsync` or `item.attachments` -Aufruf abgerufen wurden.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-142">As a best practice, you should use the identifier to retrieve an attachment in the same session that the attachmentIds were retrieved with the `getAttachmentsAsync` or `item.attachments` call.</span></span> <span data-ttu-id="cf1e8-143">In Outlook Web App und OWA für Geräte ist der Anlagenbezeichner nur innerhalb der gleichen Sitzung gültig.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-143">In Outlook Web App and OWA for Devices, the attachment identifier is valid only within the same session.</span></span> <span data-ttu-id="cf1e8-144">Eine Sitzung ist beendet, wenn der Benutzer die APP schließt oder wenn der Benutzer mit dem Erstellen eines Inline Formulars beginnt, und anschließend das Formular zum Fortsetzen in einem separaten Fenster öffnet.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-144">A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.</span></span>


    <span data-ttu-id="cf1e8-145">\[[API-Satz: Post fach Vorschau](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cf1e8-145">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="cf1e8-146">Mindestberechtigungsstufe</span><span class="sxs-lookup"><span data-stu-id="cf1e8-146">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="cf1e8-147">ReadItem</span><span class="sxs-lookup"><span data-stu-id="cf1e8-147">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="cf1e8-148">Zutreffender Outlook-Modus</span><span class="sxs-lookup"><span data-stu-id="cf1e8-148">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="cf1e8-149">Verfassen oder Lesen</span><span class="sxs-lookup"><span data-stu-id="cf1e8-149">Compose or Read</span></span></td></tr> <tr><td><span data-ttu-id="cf1e8-150">Fehler</span><span class="sxs-lookup"><span data-stu-id="cf1e8-150">Errors</span></span></td><td><span data-ttu-id="cf1e8-151">InvalidAttachmentId – der Anlagen Bezeichner ist nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-151">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr> </table><span data-ttu-id="cf1e8-152">

    ####Beispiele</span><span class="sxs-lookup"><span data-stu-id="cf1e8-152">

    #### Examples</span></span>


    ```javascript

    var item = Office.context.mailbox.item;

    var listOfAttachments = [];

    item.getAttachmentsAsync(callback);


    function callback(result) {
        if (result.value.length > 0) {
            for (i = 0 ; i < result.value.length ; i++) {
                var options = {asyncContext: {type: result.value[i].attachmentType}};
                getAttachmentContentAsync(result.value[i].id, options, handleAttachmentsCallback);
            }
        }
    }


    function handleAttachmentsCallback(result) {
        // Parse string to be a url, an .eml file, a base64-encoded string, or an .icalendar file.
        if (result.format === Office.MailboxEnums.AttachmentContentFormat.Base64) {
            // Handle file attachment.
        } else if (result.format === Office.MailboxEnums.AttachmentContentFormat.Eml) {
            // Handle email item attachment.
        } else if (result.format === Office.MailboxEnums.AttachmentContentFormat.ICalendar) {
            // Handle .icalender attachment.
        } else if (result.format === Office.MailboxEnums.AttachmentContentFormat.Url) {
            // Handle cloud attachment.
        } else {
            // Handle attachment formats that are not supported.
        }
    }

    ```
  isPreview: true
  name: getAttachmentContentAsync(attachmentId, options, callback)
  fullName: getAttachmentContentAsync(attachmentId, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getAttachmentContentAsync(attachmentId: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<AttachmentContent>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: attachmentId
      description: <span data-ttu-id="cf1e8-153">Der Bezeichner der Anlage, die abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-153">The identifier of the attachment you want to get.</span></span>
      type:
      - string
    - id: options
      description: '<span data-ttu-id="cf1e8-154">Optional.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-154">Optional.</span></span> <span data-ttu-id="cf1e8-155">Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-155">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="cf1e8-156">AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-156">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="cf1e8-157">Optional.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-157">Optional.</span></span> <span data-ttu-id="cf1e8-158">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter, asyncResult, aufgerufen, bei dem es sich um ein Office. AsyncResult-Objekt handelt.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-158">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span> <span data-ttu-id="cf1e8-159">Wenn der Aufruf fehlschlägt, enthält die asyncResult. Error-Eigenschaft und Fehlercode mit dem Grund für den Fehler.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-159">If the call fails, the asyncResult.error property will contain and error code with the reason for the failure.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<AttachmentContent>) => void'
- uid: outlook.Office.Item.getAttachmentContentAsync_1
  summary: >-
    <span data-ttu-id="cf1e8-160">Ruft eine Anlage aus einer Nachricht oder einem Termin ab und gibt Sie als **AttachmentContent** -Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-160">Gets an attachment from a message or appointment and returns it as an **AttachmentContent** object.</span></span>


    <span data-ttu-id="cf1e8-161">Die `getAttachmentContentAsync` -Methode ruft die Anlage mit dem angegebenen Bezeichner aus dem Element ab.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-161">The `getAttachmentContentAsync` method gets the attachment with the specified identifier from the item.</span></span> <span data-ttu-id="cf1e8-162">Als bewährte Methode sollten Sie den Bezeichner verwenden, um eine Anlage in der gleichen Sitzung abzurufen, in der die attachmentIds mit dem `getAttachmentsAsync` or `item.attachments` -Aufruf abgerufen wurden.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-162">As a best practice, you should use the identifier to retrieve an attachment in the same session that the attachmentIds were retrieved with the `getAttachmentsAsync` or `item.attachments` call.</span></span> <span data-ttu-id="cf1e8-163">In Outlook Web App und OWA für Geräte ist der Anlagenbezeichner nur innerhalb der gleichen Sitzung gültig.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-163">In Outlook Web App and OWA for Devices, the attachment identifier is valid only within the same session.</span></span> <span data-ttu-id="cf1e8-164">Eine Sitzung ist beendet, wenn der Benutzer die APP schließt oder wenn der Benutzer mit dem Erstellen eines Inline Formulars beginnt, und anschließend das Formular zum Fortsetzen in einem separaten Fenster öffnet.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-164">A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.</span></span>


    <span data-ttu-id="cf1e8-165">\[[API-Satz: Post fach Vorschau](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cf1e8-165">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="cf1e8-166">Mindestberechtigungsstufe</span><span class="sxs-lookup"><span data-stu-id="cf1e8-166">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="cf1e8-167">ReadItem</span><span class="sxs-lookup"><span data-stu-id="cf1e8-167">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="cf1e8-168">Zutreffender Outlook-Modus</span><span class="sxs-lookup"><span data-stu-id="cf1e8-168">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="cf1e8-169">Verfassen oder Lesen</span><span class="sxs-lookup"><span data-stu-id="cf1e8-169">Compose or Read</span></span></td></tr> <tr><td><span data-ttu-id="cf1e8-170">Fehler</span><span class="sxs-lookup"><span data-stu-id="cf1e8-170">Errors</span></span></td><td><span data-ttu-id="cf1e8-171">InvalidAttachmentId – der Anlagen Bezeichner ist nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-171">InvalidAttachmentId - The attachment identifier does not exist.</span></span></td></tr> </table>
  isPreview: true
  name: getAttachmentContentAsync(attachmentId, callback)
  fullName: getAttachmentContentAsync(attachmentId, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getAttachmentContentAsync(attachmentId: string, callback?: (asyncResult: Office.AsyncResult<AttachmentContent>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: attachmentId
      description: <span data-ttu-id="cf1e8-172">Der Bezeichner der Anlage, die abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-172">The identifier of the attachment you want to get.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="cf1e8-173">Optional.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-173">Optional.</span></span> <span data-ttu-id="cf1e8-174">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter, asyncResult, aufgerufen, bei dem es sich um ein Office. AsyncResult-Objekt handelt.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-174">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span> <span data-ttu-id="cf1e8-175">Wenn der Aufruf fehlschlägt, enthält die asyncResult. Error-Eigenschaft und Fehlercode mit dem Grund für den Fehler.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-175">If the call fails, the asyncResult.error property will contain and error code with the reason for the failure.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<AttachmentContent>) => void'
- uid: outlook.Office.Item.getInitializationContextAsync
  summary: >-
    <span data-ttu-id="cf1e8-176">Ruft Initialisierungsdaten ab, die übergeben werden, wenn das Add-in [durch eine aktionable-Nachricht](https://docs.microsoft.com/outlook/actionable-messages/invoke-add-in-from-actionable-message)<!-- -->aktiviert wird.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-176">Gets initialization data passed when the add-in is [activated by an actionable message](https://docs.microsoft.com/outlook/actionable-messages/invoke-add-in-from-actionable-message)<!-- -->.</span></span>


    <span data-ttu-id="cf1e8-177">**Hinweis**: Diese Methode wird nur von Outlook 2016 für Windows (Klick-und-Los-Versionen größer als 16.0.8413.1000) und Outlook im Web für Office 365 unterstützt.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-177">**Note**: This method is only supported by Outlook 2016 for Windows (Click-to-Run versions greater than 16.0.8413.1000) and Outlook on the web for Office 365.</span></span>


    <span data-ttu-id="cf1e8-178">\[[API-Satz: Post fach Vorschau](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cf1e8-178">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="cf1e8-179">Mindestberechtigungsstufe</span><span class="sxs-lookup"><span data-stu-id="cf1e8-179">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="cf1e8-180">ReadItem</span><span class="sxs-lookup"><span data-stu-id="cf1e8-180">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="cf1e8-181">Zutreffender Outlook-Modus</span><span class="sxs-lookup"><span data-stu-id="cf1e8-181">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="cf1e8-182">Verfassen oder Lesen</span><span class="sxs-lookup"><span data-stu-id="cf1e8-182">Compose or Read</span></span></td></tr> </table>
  isPreview: true
  name: getInitializationContextAsync(options, callback)
  fullName: getInitializationContextAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getInitializationContextAsync(options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: '<span data-ttu-id="cf1e8-183">Optional.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-183">Optional.</span></span> <span data-ttu-id="cf1e8-184">Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-184">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="cf1e8-185">AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-185">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="cf1e8-186">Optional.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-186">Optional.</span></span> <span data-ttu-id="cf1e8-187">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter, asyncResult, aufgerufen, bei dem es sich um ein Office. AsyncResult-Objekt handelt.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-187">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span> <span data-ttu-id="cf1e8-188">Bei Erfolg werden die Initialisierungsdaten in der asyncResult. Value-Eigenschaft als Zeichenfolge bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-188">On success, the initialization data is provided in the asyncResult.value property as a string.</span></span> <span data-ttu-id="cf1e8-189">Wenn kein Initialisierungs Kontext vorhanden ist, enthält das asyncResult-Objekt ein Error-Objekt, dessen Code-Eigenschaft auf 9020 und die Name-Eigenschaft auf GenericResponseError festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-189">If there is no initialization context, the asyncResult object will contain an Error object with its code property set to 9020 and its name property set to GenericResponseError.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
- uid: outlook.Office.Item.getInitializationContextAsync_1
  summary: >-
    <span data-ttu-id="cf1e8-190">Ruft Initialisierungsdaten ab, die übergeben werden, wenn das Add-in [durch eine aktionable-Nachricht](https://docs.microsoft.com/outlook/actionable-messages/invoke-add-in-from-actionable-message)<!-- -->aktiviert wird.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-190">Gets initialization data passed when the add-in is [activated by an actionable message](https://docs.microsoft.com/outlook/actionable-messages/invoke-add-in-from-actionable-message)<!-- -->.</span></span>


    <span data-ttu-id="cf1e8-191">**Hinweis**: Diese Methode wird nur von Outlook 2016 für Windows (Klick-und-Los-Versionen größer als 16.0.8413.1000) und Outlook im Web für Office 365 unterstützt.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-191">**Note**: This method is only supported by Outlook 2016 for Windows (Click-to-Run versions greater than 16.0.8413.1000) and Outlook on the web for Office 365.</span></span>


    <span data-ttu-id="cf1e8-192">\[[API-Satz: Post fach Vorschau](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cf1e8-192">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="cf1e8-193">Mindestberechtigungsstufe</span><span class="sxs-lookup"><span data-stu-id="cf1e8-193">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="cf1e8-194">ReadItem</span><span class="sxs-lookup"><span data-stu-id="cf1e8-194">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="cf1e8-195">Zutreffender Outlook-Modus</span><span class="sxs-lookup"><span data-stu-id="cf1e8-195">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="cf1e8-196">Verfassen oder Lesen</span><span class="sxs-lookup"><span data-stu-id="cf1e8-196">Compose or Read</span></span></td></tr> </table><span data-ttu-id="cf1e8-197">

    ####Beispiele</span><span class="sxs-lookup"><span data-stu-id="cf1e8-197">

    #### Examples</span></span>


    ```javascript

    // Get the initialization context (if present).

    Office.context.mailbox.item.getInitializationContextAsync(
        function(asyncResult) {
            if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {
                if (asyncResult.value != null && asyncResult.value.length > 0) {
                    // The value is a string, parse to an object.
                    var context = JSON.parse(asyncResult.value);
                    // Do something with context.
                } else {
                    // Empty context, treat as no context.
                }
            } else {
                if (asyncResult.error.code == 9020) {
                    // GenericResponseError returned when there is no context.
                    // Treat as no context.
                } else {
                    // Handle the error.
                }
            }
        }
    );

    ```
  isPreview: true
  name: getInitializationContextAsync(callback)
  fullName: getInitializationContextAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getInitializationContextAsync(callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: <span data-ttu-id="cf1e8-198">Optional.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-198">Optional.</span></span> <span data-ttu-id="cf1e8-199">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter, asyncResult, aufgerufen, bei dem es sich um ein Office. AsyncResult-Objekt handelt.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-199">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span> <span data-ttu-id="cf1e8-200">Bei Erfolg werden die Initialisierungsdaten in der asyncResult. Value-Eigenschaft als Zeichenfolge bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-200">On success, the initialization data is provided in the asyncResult.value property as a string.</span></span> <span data-ttu-id="cf1e8-201">Wenn kein Initialisierungs Kontext vorhanden ist, enthält das asyncResult-Objekt ein Error-Objekt, dessen Code-Eigenschaft auf 9020 und die Name-Eigenschaft auf GenericResponseError festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-201">If there is no initialization context, the asyncResult object will contain an Error object with its code property set to 9020 and its name property set to GenericResponseError.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<string>) => void'
- uid: outlook.Office.Item.getSharedPropertiesAsync
  summary: >-
    <span data-ttu-id="cf1e8-202">Ruft die Eigenschaften eines Termins oder einer Nachricht in einem freigegebenen Ordner, Kalender oder Postfach ab.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-202">Gets the properties of an appointment or message in a shared folder, calendar, or mailbox.</span></span>


    <span data-ttu-id="cf1e8-203">\[[API-Satz: Post fach Vorschau](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cf1e8-203">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="cf1e8-204">Mindestberechtigungsstufe</span><span class="sxs-lookup"><span data-stu-id="cf1e8-204">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="cf1e8-205">ReadItem</span><span class="sxs-lookup"><span data-stu-id="cf1e8-205">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="cf1e8-206">Zutreffender Outlook-Modus</span><span class="sxs-lookup"><span data-stu-id="cf1e8-206">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="cf1e8-207">Verfassen oder Lesen</span><span class="sxs-lookup"><span data-stu-id="cf1e8-207">Compose or Read</span></span></td></tr> </table>
  isPreview: true
  name: getSharedPropertiesAsync(options, callback)
  fullName: getSharedPropertiesAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSharedPropertiesAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<SharedProperties>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: '<span data-ttu-id="cf1e8-208">Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-208">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="cf1e8-209">AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-209">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="cf1e8-210">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-210">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="cf1e8-211">Die `value` Eigenschaft des Ergebnisses ist die Eigenschaften des freigegebenen Elements.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-211">The `value` property of the result is the properties of the shared item.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<SharedProperties>) => void'
- uid: outlook.Office.Item.getSharedPropertiesAsync_1
  summary: >-
    <span data-ttu-id="cf1e8-212">Ruft die Eigenschaften eines Termins oder einer Nachricht in einem freigegebenen Ordner, Kalender oder Postfach ab.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-212">Gets the properties of an appointment or message in a shared folder, calendar, or mailbox.</span></span>


    <span data-ttu-id="cf1e8-213">\[[API-Satz: Post fach Vorschau](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cf1e8-213">\[ [API set: Mailbox Preview](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="cf1e8-214">Mindestberechtigungsstufe</span><span class="sxs-lookup"><span data-stu-id="cf1e8-214">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="cf1e8-215">ReadItem</span><span class="sxs-lookup"><span data-stu-id="cf1e8-215">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="cf1e8-216">Zutreffender Outlook-Modus</span><span class="sxs-lookup"><span data-stu-id="cf1e8-216">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="cf1e8-217">Verfassen oder Lesen</span><span class="sxs-lookup"><span data-stu-id="cf1e8-217">Compose or Read</span></span></td></tr> </table><span data-ttu-id="cf1e8-218">

    ####Beispiele</span><span class="sxs-lookup"><span data-stu-id="cf1e8-218">

    #### Examples</span></span>


    ```javascript

    Office.context.mailbox.item.getSharedPropertiesAsync(callback);


    function callback (asyncResult) {
        var context = asyncResult.context;
        var sharedProperties = asyncResult.value;
    }

    ```
  isPreview: true
  name: getSharedPropertiesAsync(callback)
  fullName: getSharedPropertiesAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSharedPropertiesAsync(callback: (asyncResult: Office.AsyncResult<SharedProperties>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: <span data-ttu-id="cf1e8-219">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-219">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="cf1e8-220">Die `value` Eigenschaft des Ergebnisses ist die Eigenschaften des freigegebenen Elements.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-220">The `value` property of the result is the properties of the shared item.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<SharedProperties>) => void'
- uid: outlook.Office.Item.loadCustomPropertiesAsync
  summary: >-
    <span data-ttu-id="cf1e8-221">Lädt asynchron benutzerdefinierte Eigenschaften für dieses Add-In für das ausgewählte Element.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-221">Asynchronously loads custom properties for this add-in on the selected item.</span></span>


    <span data-ttu-id="cf1e8-222">Benutzerdefinierte Eigenschaften werden als Schlüssel-/Wert-Paare pro App und pro Element gespeichert.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-222">Custom properties are stored as key/value pairs on a per-app, per-item basis.</span></span> <span data-ttu-id="cf1e8-223">Diese Methode gibt ein CustomProperties-Objekt im Rückruf zurück, das Methoden für den Zugriff auf die benutzerdefinierten Eigenschaften des aktuellen Elements und des aktuellen Add-ins bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-223">This method returns a CustomProperties object in the callback, which provides methods to access the custom properties specific to the current item and the current add-in.</span></span> <span data-ttu-id="cf1e8-224">Benutzerdefinierte Eigenschaften sind für das Element nicht verschlüsselt und sollten darum nicht als sicherer Speicher verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-224">Custom properties are not encrypted on the item, so this should not be used as secure storage.</span></span>


    <span data-ttu-id="cf1e8-225">Die benutzerdefinierten Eigenschaften werden als CustomProperties-Objekt in der asyncResult. Value-Eigenschaft bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-225">The custom properties are provided as a CustomProperties object in the asyncResult.value property.</span></span> <span data-ttu-id="cf1e8-226">Dieses Objekt kann verwendet werden, um benutzerdefinierte Eigenschaften aus dem Element abzurufen, festzulegen und zu entfernen und um Änderungen am benutzerdefinierten Eigenschaftssatz wieder auf dem Server zu speichern.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-226">This object can be used to get, set, and remove custom properties from the item and save changes to the custom property set back to the server.</span></span>


    <span data-ttu-id="cf1e8-227">\[[API-Satz: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cf1e8-227">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="cf1e8-228">Mindestberechtigungsstufe</span><span class="sxs-lookup"><span data-stu-id="cf1e8-228">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="cf1e8-229">ReadItem</span><span class="sxs-lookup"><span data-stu-id="cf1e8-229">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="cf1e8-230">Zutreffender Outlook-Modus</span><span class="sxs-lookup"><span data-stu-id="cf1e8-230">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="cf1e8-231">Verfassen oder Lesen</span><span class="sxs-lookup"><span data-stu-id="cf1e8-231">Compose or Read</span></span></td></tr> </table><span data-ttu-id="cf1e8-232">

    ####Beispiele</span><span class="sxs-lookup"><span data-stu-id="cf1e8-232">

    #### Examples</span></span>


    ```javascript

    // The following example shows how to use the loadCustomPropertiesAsync method

    // to asynchronously load custom properties that are specific to the current item.

    // The example also shows how to use the saveAsync method to save these properties

    // back to the server. After loading the custom properties, the example uses the

    // get method to read the custom property myProp, the set method to write the

    // custom property otherProp, and then finally calls the saveAsync method to save

    // the custom properties.

    Office.initialize = function () {
        // Checks for the DOM to load using the jQuery ready function.
        $(document).ready(function () {
            // After the DOM is loaded, add-in-specific code can run.
            var mailbox = Office.context.mailbox;
            mailbox.item.loadCustomPropertiesAsync(customPropsCallback);
        });
    };


    function customPropsCallback(asyncResult) {
        var customProps = asyncResult.value;
        var myProp = customProps.get("myProp");

        customProps.set("otherProp", "value");
        customProps.saveAsync(saveCallback);
    }


    function saveCallback(asyncResult) {

    }

    ```
  name: loadCustomPropertiesAsync(callback, userContext)
  fullName: loadCustomPropertiesAsync(callback, userContext)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'loadCustomPropertiesAsync(callback: (asyncResult: Office.AsyncResult<CustomProperties>) => void, userContext?: any): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: <span data-ttu-id="cf1e8-233">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-233">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<CustomProperties>) => void'
    - id: userContext
      description: <span data-ttu-id="cf1e8-234">Optional.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-234">Optional.</span></span> <span data-ttu-id="cf1e8-235">Entwickler können ein beliebiges Objekt bereitstellen, auf das sie in der Callbackfunktion zugreifen möchten.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-235">Developers can provide any object they wish to access in the callback function.</span></span> <span data-ttu-id="cf1e8-236">Auf dieses Objekt kann über die asyncResult. AsyncContext-Eigenschaft in der Rückruffunktion zugegriffen werden.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-236">This object can be accessed by the asyncResult.asyncContext property in the callback function.</span></span>
      type:
      - any
- uid: outlook.Office.Item.removeHandlerAsync
  summary: >-
    <span data-ttu-id="cf1e8-237">Entfernt die Ereignishandler für einen unterstützten Ereignistyp.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-237">Removes the event handlers for a supported event type.</span></span>


    <span data-ttu-id="cf1e8-238">Derzeit sind `Office.EventType.AppointmentTimeChanged` <!-- -->die unterstützten Ereignis `Office.EventType.RecipientsChanged` <!-- -->Typen, `Office.EventType.RecurrenceChanged` <!-- -->und.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-238">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`<!-- -->, `Office.EventType.RecipientsChanged`<!-- -->, and `Office.EventType.RecurrenceChanged`<!-- -->.</span></span> <span data-ttu-id="cf1e8-239">In der Vorschau `Office.EventType.AttachmentsChanged` und `Office.EventType.EnhancedLocationsChanged` werden ebenfalls unterstützt.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-239">In Preview, `Office.EventType.AttachmentsChanged` and `Office.EventType.EnhancedLocationsChanged` are also supported.</span></span>


    <span data-ttu-id="cf1e8-240">\[[API-Satz: Mailbox 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cf1e8-240">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="cf1e8-241">Mindestberechtigungsstufe</span><span class="sxs-lookup"><span data-stu-id="cf1e8-241">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="cf1e8-242">ReadItem</span><span class="sxs-lookup"><span data-stu-id="cf1e8-242">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="cf1e8-243">Zutreffender Outlook-Modus</span><span class="sxs-lookup"><span data-stu-id="cf1e8-243">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="cf1e8-244">Verfassen oder Lesen</span><span class="sxs-lookup"><span data-stu-id="cf1e8-244">Compose or Read</span></span></td></tr> </table>
  name: removeHandlerAsync(eventType, options, callback)
  fullName: removeHandlerAsync(eventType, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="cf1e8-245">Das Ereignis, das den Handler widerrufen soll.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-245">The event that should revoke the handler.</span></span>
      type:
      - Office.EventType
    - id: options
      description: '<span data-ttu-id="cf1e8-246">Optional.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-246">Optional.</span></span> <span data-ttu-id="cf1e8-247">Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-247">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="cf1e8-248">AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-248">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="cf1e8-249">Optional.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-249">Optional.</span></span> <span data-ttu-id="cf1e8-250">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter, asyncResult, aufgerufen, bei dem es sich um ein Office. AsyncResult-Objekt handelt.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-250">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: outlook.Office.Item.removeHandlerAsync_1
  summary: >-
    <span data-ttu-id="cf1e8-251">Entfernt die Ereignishandler für einen unterstützten Ereignistyp.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-251">Removes the event handlers for a supported event type.</span></span>


    <span data-ttu-id="cf1e8-252">Derzeit sind `Office.EventType.AppointmentTimeChanged` <!-- -->die unterstützten Ereignis `Office.EventType.RecipientsChanged` <!-- -->Typen, `Office.EventType.RecurrenceChanged` <!-- -->und.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-252">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`<!-- -->, `Office.EventType.RecipientsChanged`<!-- -->, and `Office.EventType.RecurrenceChanged`<!-- -->.</span></span> <span data-ttu-id="cf1e8-253">In der Vorschau `Office.EventType.AttachmentsChanged` und `Office.EventType.EnhancedLocationsChanged` werden ebenfalls unterstützt.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-253">In Preview, `Office.EventType.AttachmentsChanged` and `Office.EventType.EnhancedLocationsChanged` are also supported.</span></span>


    <span data-ttu-id="cf1e8-254">\[[API-Satz: Mailbox 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cf1e8-254">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: <table> <tr><td>[<span data-ttu-id="cf1e8-255">Mindestberechtigungsstufe</span><span class="sxs-lookup"><span data-stu-id="cf1e8-255">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="cf1e8-256">ReadItem</span><span class="sxs-lookup"><span data-stu-id="cf1e8-256">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="cf1e8-257">Zutreffender Outlook-Modus</span><span class="sxs-lookup"><span data-stu-id="cf1e8-257">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="cf1e8-258">Verfassen oder Lesen</span><span class="sxs-lookup"><span data-stu-id="cf1e8-258">Compose or Read</span></span></td></tr> </table>
  name: removeHandlerAsync(eventType, callback)
  fullName: removeHandlerAsync(eventType, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="cf1e8-259">Das Ereignis, das den Handler widerrufen soll.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-259">The event that should revoke the handler.</span></span>
      type:
      - Office.EventType
    - id: callback
      description: <span data-ttu-id="cf1e8-260">Optional.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-260">Optional.</span></span> <span data-ttu-id="cf1e8-261">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter, asyncResult, aufgerufen, bei dem es sich um ein Office. AsyncResult-Objekt handelt.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-261">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>
      type:
      - '(asyncResult: Office.AsyncResult<void>) => void'
- uid: outlook.Office.Item.body
  summary: >-
    <span data-ttu-id="cf1e8-262">Ruft ein Objekt ab, das Methoden zum Bearbeiten des Textkörpers eines Elements bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-262">Gets an object that provides methods for manipulating the body of an item.</span></span>


    <span data-ttu-id="cf1e8-263">\[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cf1e8-263">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="cf1e8-264">Mindestberechtigungsstufe</span><span class="sxs-lookup"><span data-stu-id="cf1e8-264">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="cf1e8-265">ReadItem</span><span class="sxs-lookup"><span data-stu-id="cf1e8-265">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="cf1e8-266">Zutreffender Outlook-Modus</span><span class="sxs-lookup"><span data-stu-id="cf1e8-266">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="cf1e8-267">Verfassen oder Lesen</span><span class="sxs-lookup"><span data-stu-id="cf1e8-267">Compose or Read</span></span></td></tr> </table><span data-ttu-id="cf1e8-268">

    ####Beispiele</span><span class="sxs-lookup"><span data-stu-id="cf1e8-268">

    #### Examples</span></span>


    ```javascript

    // This example gets the body of the message in plain text.

    Office.context.mailbox.item.body.getAsync(
        "text",
        { asyncContext: "This is passed to the callback" },
        function callback(result) {
            // Do something with the result.
        });

    // The following is an example of the result parameter passed to the callback function.

    {
        "value": "TEXT of whole body (including threads below)",
        "status": "succeeded",
        "asyncContext": "This is passed to the callback"
    }

    ```
  name: body
  fullName: body
  langs:
  - typeScript
  type: property
  syntax:
    content: 'body: Body;'
    return:
      type:
      - Body
- uid: outlook.Office.Item.itemType
  summary: >-
    <span data-ttu-id="cf1e8-269">Ruft den Typ des Elements ab, das eine Instanz darstellt.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-269">Gets the type of item that an instance represents.</span></span>


    <span data-ttu-id="cf1e8-270">Die itemType-Eigenschaft gibt einen der ItemType-Enumerationswerte zurück, der angibt, ob es sich bei der Item-Objektinstanz um eine Nachricht oder einen Termin handelt.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-270">The itemType property returns one of the ItemType enumeration values, indicating whether the item object instance is a message or an appointment.</span></span>


    <span data-ttu-id="cf1e8-271">\[[API-Satz: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cf1e8-271">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="cf1e8-272">Mindestberechtigungsstufe</span><span class="sxs-lookup"><span data-stu-id="cf1e8-272">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="cf1e8-273">ReadItem</span><span class="sxs-lookup"><span data-stu-id="cf1e8-273">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="cf1e8-274">Zutreffender Outlook-Modus</span><span class="sxs-lookup"><span data-stu-id="cf1e8-274">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="cf1e8-275">Verfassen oder Lesen</span><span class="sxs-lookup"><span data-stu-id="cf1e8-275">Compose or Read</span></span></td></tr> </table><span data-ttu-id="cf1e8-276">

    ####Beispiele</span><span class="sxs-lookup"><span data-stu-id="cf1e8-276">

    #### Examples</span></span>


    ```javascript

    if (Office.context.mailbox.item.itemType === Office.MailboxEnums.ItemType.Message) {
        // Do something.
    } else {
        // Do something else.
    }

    ```
  name: itemType
  fullName: itemType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'itemType: MailboxEnums.ItemType;'
    return:
      type:
      - MailboxEnums.ItemType
- uid: outlook.Office.Item.notificationMessages
  summary: >-
    <span data-ttu-id="cf1e8-277">Ruft die Benachrichtigungen für ein Element ab.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-277">Gets the notification messages for an item.</span></span>


    <span data-ttu-id="cf1e8-278">\[[API-Satz: Mailbox 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cf1e8-278">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: >-
    <table> <tr><td>[<span data-ttu-id="cf1e8-279">Mindestberechtigungsstufe</span><span class="sxs-lookup"><span data-stu-id="cf1e8-279">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id="cf1e8-280">ReadItem</span><span class="sxs-lookup"><span data-stu-id="cf1e8-280">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id="cf1e8-281">Zutreffender Outlook-Modus</span><span class="sxs-lookup"><span data-stu-id="cf1e8-281">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id="cf1e8-282">Verfassen oder Lesen</span><span class="sxs-lookup"><span data-stu-id="cf1e8-282">Compose or Read</span></span></td></tr> </table><span data-ttu-id="cf1e8-283">

    ####Beispiele</span><span class="sxs-lookup"><span data-stu-id="cf1e8-283">

    #### Examples</span></span>


    ```javascript

    // Get all notifications.

    Office.context.mailbox.item.notificationMessages.getAllAsync(
        function (asyncResult) {
            console.log(JSON.stringify(asyncResult));
        }
    );

    ```
  name: notificationMessages
  fullName: notificationMessages
  langs:
  - typeScript
  type: property
  syntax:
    content: 'notificationMessages: NotificationMessages;'
    return:
      type:
      - NotificationMessages
- uid: outlook.Office.Item.seriesId
  summary: >-
    <span data-ttu-id="cf1e8-284">Ruft die ID der Datenreihe ab, zu der eine Instanz gehört.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-284">Gets the id of the series that an instance belongs to.</span></span>


    <span data-ttu-id="cf1e8-285">In OWA und Outlook gibt die Datenreihe die ID der Exchange-webDienste (EWS) des übergeordneten Elements (Series) zurück, zu der dieses Element gehört.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-285">In OWA and Outlook, the seriesId returns the Exchange Web Services (EWS) ID of the parent (series) item that this item belongs to.</span></span> <span data-ttu-id="cf1e8-286">In iOS und Android gibt die Datenreihe jedoch die REST-ID des übergeordneten Elements zurück.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-286">However, in iOS and Android, the seriesId returns the REST ID of the parent item.</span></span>


    <span data-ttu-id="cf1e8-287">**Hinweis**: der von der Series-Eigenschaft zurückgegebene Bezeichner ist derselbe wie der Exchange-Webdienste-Elementbezeichner.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-287">**Note**: The identifier returned by the seriesId property is the same as the Exchange Web Services item identifier.</span></span> <span data-ttu-id="cf1e8-288">Die Series-ID-Eigenschaft ist nicht identisch mit den Outlook-IDs, die von der Outlook-REST-API verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-288">The seriesId property is not identical to the Outlook IDs used by the Outlook REST API.</span></span> <span data-ttu-id="cf1e8-289">Bevor Sie REST-API-Aufrufe mit diesem Wert ausführen, sollte dieser mithilfe von Office.context.mailbox.convertToRestId konvertiert werden.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-289">Before making REST API calls using this value, it should be converted using Office.context.mailbox.convertToRestId.</span></span> <span data-ttu-id="cf1e8-290">Weitere Informationen finden Sie unter [Verwenden der Outlook-Rest-APIs aus einem Outlook-Add-in](https://docs.microsoft.com/outlook/add-ins/use-rest-api)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-290">For more details, see [Use the Outlook REST APIs from an Outlook add-in](https://docs.microsoft.com/outlook/add-ins/use-rest-api)<!-- -->.</span></span>


    <span data-ttu-id="cf1e8-291">Die Series-Eigenschaft gibt NULL für Elemente zurück, die übergeordnete Elemente wie Einzeltermine, Datenreihenelemente oder Besprechungsanfragen nicht enthalten und für andere Elemente, die keine Besprechungsanfragen sind, undefiniert zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="cf1e8-291">The seriesId property returns null for items that do not have parent items such as single appointments, series items, or meeting requests and returns undefined for any other items that are not meeting requests.</span></span>


    <span data-ttu-id="cf1e8-292">\[[API-Satz: Mailbox 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cf1e8-292">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
  remarks: "<table> <tr><td>[<span data-ttu-id=\"cf1e8-293\">Mindestberechtigungsstufe</span><span class=\"sxs-lookup\"><span data-stu-id=\"cf1e8-293\">Minimum permission level</span></span>](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td><span data-ttu-id=\"cf1e8-294\">ReadItem</span><span class=\"sxs-lookup\"><span data-stu-id=\"cf1e8-294\">ReadItem</span></span></td></tr> <tr><td>[<span data-ttu-id=\"cf1e8-295\">Zutreffender Outlook-Modus</span><span class=\"sxs-lookup\"><span data-stu-id=\"cf1e8-295\">Applicable Outlook mode</span></span>](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td><span data-ttu-id=\"cf1e8-296\">Verfassen oder Lesen</span><span class=\"sxs-lookup\"><span data-stu-id=\"cf1e8-296\">Compose or Read</span></span></td></tr> </table><span data-ttu-id=\"cf1e8-297\">\n####Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"cf1e8-297\">\n#### Examples</span></span>\n\n```javascript\nvar seriesId = Office.context.mailbox.item.seriesId;\n\n// The seriesId property returns null for items that do\n// not have parent items (such as single appointments,\n// series items, or meeting requests) and returns\n// undefined for messages that are not meeting requests.\nvar isSeriesInstance = (seriesId != null);\nconsole.log(\"SeriesId is \" + seriesId \n    + \" and isSeriesInstance is \" + isSeriesInstance);\n```"
  name: seriesId
  fullName: seriesId
  langs:
  - typeScript
  type: property
  syntax:
    content: 'seriesId: string;'
    return:
      type:
      - string
