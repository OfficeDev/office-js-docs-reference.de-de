### YamlMime:UniversalReference
ms.openlocfilehash: 13d1e55bd515d5f2608edd29e40bc419b11f7271
ms.sourcegitcommit: a36161c2113d94680dc68150d024e68bdf0390fa
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 10/10/2018
ms.locfileid: "25458957"
items:
- uid: outlook.Office.AppointmentRead
  summary: >-
    Der Termin Attendee-Modus des [Office.context.mailbox.item](xref:outlook.Office.Item)<!-- -->.


    Wichtig: Dies ist ein interner Outlook-Objekt nicht direkt über vorhandene Schnittstellen verfügbar gemacht. Sie sollten diese als ein Modus der 'Office.context.mailbox.item' behandeln. Verweisen Sie auf den Seiten-Objektmodell finden Sie weitere Informationen.
  name: Office.AppointmentRead
  fullName: outlook.Office.AppointmentRead
  langs:
  - typeScript
  type: interface
  extends:
  - Appointment
  package: outlook
  children:
  - outlook.Office.AppointmentRead.addHandlerAsync
  - outlook.Office.AppointmentRead.attachments
  - outlook.Office.AppointmentRead.body
  - outlook.Office.AppointmentRead.dateTimeCreated
  - outlook.Office.AppointmentRead.dateTimeModifed
  - outlook.Office.AppointmentRead.displayReplyAllForm
  - outlook.Office.AppointmentRead.displayReplyForm
  - outlook.Office.AppointmentRead.end
  - outlook.Office.AppointmentRead.getEntities
  - outlook.Office.AppointmentRead.getEntitiesByType
  - outlook.Office.AppointmentRead.getFilteredEntitiesByName
  - outlook.Office.AppointmentRead.getInitializationContextAsync
  - outlook.Office.AppointmentRead.getRegExMatches
  - outlook.Office.AppointmentRead.getRegExMatchesByName
  - outlook.Office.AppointmentRead.getSelectedEntities
  - outlook.Office.AppointmentRead.getSelectedRegExMatches
  - outlook.Office.AppointmentRead.itemClass
  - outlook.Office.AppointmentRead.itemId
  - outlook.Office.AppointmentRead.itemType
  - outlook.Office.AppointmentRead.loadCustomPropertiesAsync
  - outlook.Office.AppointmentRead.location
  - outlook.Office.AppointmentRead.normalizedSubject
  - outlook.Office.AppointmentRead.notificationMessages
  - outlook.Office.AppointmentRead.optionalAttendees
  - outlook.Office.AppointmentRead.organizer
  - outlook.Office.AppointmentRead.recurrence
  - outlook.Office.AppointmentRead.removeHandlerAsync
  - outlook.Office.AppointmentRead.requiredAttendees
  - outlook.Office.AppointmentRead.seriesId
  - outlook.Office.AppointmentRead.start
  - outlook.Office.AppointmentRead.subject
- uid: outlook.Office.AppointmentRead.addHandlerAsync
  summary: >-
    Fügt einen Ereignishandler für ein unterstütztes Ereignis hinzu.


    Derzeit sind die unterstützten Ereignistypen `Office.EventType.AppointmentTimeChanged` <!-- -->, `Office.EventType.RecipientsChanged` <!-- -->, und `Office.EventType.RecurrenceChanged` <!-- -->.


    \[[API-Satz: Postfach 1.7](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Besprechungsteilnehmer</td></tr></table>


    Zusätzlich zu dieser Signatur hat die-Methode auch die folgende Signatur:


    `addHandlerAsync(eventType: Office.EventType, handler: any, callback?: (result: AsyncResult<void>) => void): void;`
  name: addHandlerAsync(eventType, handler, options, callback)
  fullName: outlook.Office.AppointmentRead.addHandlerAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, options?: any, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: Das Ereignis, das den Handler aufrufen soll
      type:
      - Office.EventType
    - id: handler
      description: Die Funktion für die Ereignisbehandlung. Die Funktion muss einen einzelnen Parameter akzeptieren, der ein Objektliteral ist. Die Type-Eigenschaft für den Parameter entspricht den EventType-Parameter an die AddHandlerAsync übergeben.
      type:
      - any
    - id: options
      description: 'Optional. Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält. AsyncContext: Entwickler können bereitstellen, ein Objekt, das sie in der Rückrufmethode zugreifen möchten.'
      type:
      - any
    - id: callback
      description: Optional. Wenn die Methode abgeschlossen ist, wird die in der Callback-Parameter übergebene Funktion mit einem einzelnen Parameter, AsyncResult, aufgerufen, der ein Office.AsyncResult-Objekt ist.
      type:
      - '(result: AsyncResult<void>) => void'
- uid: outlook.Office.AppointmentRead.attachments
  summary: >-
    Ruft ein Array mit Anlagen für das Element ab.


    \[[API-Satz: Postfach 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Besprechungsteilnehmer</td></tr></table>


    Hinweis: Bestimmte Dateitypen werden aufgrund von Sicherheitsproblemen von Outlook blockiert und daher nicht zurückgegeben werden. Weitere Informationen finden Sie unter [Blockierte Anlagen in Outlook](https://support.office.com/article/Blocked-attachments-in-Outlook-434752E1-02D3-4E90-9124-8B81E49A8519)<!-- -->.

    #### <a name="examples"></a>Beispiele


    ```javascript

    // The following code builds an HTML string with details of all attachments on the current item.

    var _Item = Office.context.mailbox.item;

    var outputString = "";


    if (_Item.attachments.length > 0) {
        for (i = 0 ; i < _Item.attachments.length ; i++) {
            var _att = _Item.attachments[i];
            outputString += "<BR>" + i + ". Name: ";
            outputString += _att.name;
            outputString += "<BR>ID: " + _att.id;
            outputString += "<BR>contentType: " + _att.contentType;
            outputString += "<BR>size: " + _att.size;
            outputString += "<BR>attachmentType: " + _att.attachmentType;
            outputString += "<BR>isInline: " + _att.isInline;
        }
    }


    // Do something with outputString

    ```
  name: attachments
  fullName: outlook.Office.AppointmentRead.attachments
  langs:
  - typeScript
  type: property
  syntax:
    content: 'attachments: Office.AttachmentDetails[];'
    return:
      type:
      - Office.AttachmentDetails[]
- uid: outlook.Office.AppointmentRead.body
  summary: >-
    Ruft ein Objekt ab, das Methoden zum Bearbeiten des Textkörpers eines Elements bereitstellt.


    \[[API-Satz: Postfach 1.1](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Besprechungsteilnehmer</td></tr></table>
  name: body
  fullName: outlook.Office.AppointmentRead.body
  langs:
  - typeScript
  type: property
  syntax:
    content: 'body: Office.Body;'
    return:
      type:
      - outlook.Office.Body
- uid: outlook.Office.AppointmentRead.dateTimeCreated
  summary: >-
    Ruft das Datum und die Uhrzeit der Erstellung eines Elements ab. Nur Lesemodus.


    \[[API-Satz: Postfach 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Besprechungsteilnehmer</td></tr></table>
  name: dateTimeCreated
  fullName: outlook.Office.AppointmentRead.dateTimeCreated
  langs:
  - typeScript
  type: property
  syntax:
    content: 'dateTimeCreated: Date;'
    return:
      type:
      - Date
- uid: outlook.Office.AppointmentRead.dateTimeModifed
  summary: >-
    Ruft das Datum und die Uhrzeit der letzten Änderung eines Elements ab. Nur Lesemodus.


    \[[API-Satz: Postfach 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Besprechungsteilnehmer</td></tr></table>


    Hinweis: Dieses Element wird in Outlook für iOS oder Outlook für Android nicht unterstützt.
  name: dateTimeModifed
  fullName: outlook.Office.AppointmentRead.dateTimeModifed
  langs:
  - typeScript
  type: property
  syntax:
    content: 'dateTimeModifed: Date;'
    return:
      type:
      - Date
- uid: outlook.Office.AppointmentRead.displayReplyAllForm
  summary: >-
    Zeigt ein Antwortformular an, das den Absender und alle Empfänger der ausgewählten Nachricht oder des Organisators und alle Teilnehmer des ausgewählten Termins enthält.


    In Outlook Web App wird das Antwortformular als Popupformular in der Dreispaltenansicht und als Popupformular in der Zwei- oder Einspaltenansicht angezeigt.


    Wenn einer der Zeichenfolgenparameter seinen Grenzwert überschreitet, löst displayReplyAllForm eine Ausnahme aus.


    Wenn Anlagen im formData.attachments-Parameter angegeben werden, versuchen Outlook und Outlook Web App, alle Anlagen herunterzuladen und sie an das Antwortformular anzuhängen. Wenn Anlagen nicht hinzugefügt werden können, wird in der Formularbenutzeroberfläche ein Fehler angezeigt. Wenn dies nicht möglich ist, wird keine Fehlermeldung ausgegeben.


    Hinweis: Diese Methode wird in Outlook für iOS oder Outlook für Android nicht unterstützt.


    \[[API-Satz: Postfach 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Besprechungsteilnehmer</td></tr></table>

    ####Beispiele für


    ```javascript

    // The following code passes a string to the `displayReplyAllForm` function.

    Office.context.mailbox.item.displayReplyAllForm('hello there');

    Office.context.mailbox.item.displayReplyAllForm('<b>hello there</b>');


    // Reply with an empty body.

    Office.context.mailbox.item.displayReplyAllForm({});


    // Reply with just a body.

    Office.context.mailbox.item.displayReplyAllForm(

    {

    'htmlBody' : 'hi'

    });


    // Reply with a body and a file attachment.

    Office.context.mailbox.item.displayReplyAllForm(

    {
        'htmlBody' : 'hi',
        'attachments' :
        [
            {
            'type' : Office.MailboxEnums.AttachmentType.File,
            'name' : 'squirrel.png',
            'url' : 'http://i.imgur.com/sRgTlGR.jpg'
            }
        ]
    });


    // Reply with a body and an item attachment.

    Office.context.mailbox.item.displayReplyAllForm(

    {
        'htmlBody' : 'hi',
        'attachments' :
        [
            {
            'type' : 'item',
            'name' : 'rand',
            'itemId' : Office.context.mailbox.item.itemId
            }
        ]
    });


    // Reply with a body, file attachment, item attachment, and a callback.

    Office.context.mailbox.item.displayReplyAllForm(

    {
        'htmlBody' : 'hi',
        'attachments' :
        [
            {
                'type' : Office.MailboxEnums.AttachmentType.File,
                'name' : 'squirrel.png',
                'url' : 'http://i.imgur.com/sRgTlGR.jpg'
            },
            {
                'type' : 'item',
                'name' : 'rand',
                'itemId' : Office.context.mailbox.item.itemId
            }
        ],
        'callback' : function(asyncResult)
        {
            console.log(asyncResult.value);
        }
    });

    ```
  name: displayReplyAllForm(formData)
  fullName: outlook.Office.AppointmentRead.displayReplyAllForm
  langs:
  - typeScript
  type: method
  syntax:
    content: 'displayReplyAllForm(formData: string | ReplyFormData): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: formData
      description: Eine Zeichenfolge, die Text- und HTML-Code enthält, die den Hauptteil des Antwortformulars darstellen. Die Zeichenfolge ist auf 32 KB oder ein [Office.ReplyFormData](xref:outlook.Office.ReplyFormData) -Objekt, enthält der Nachrichtentext oder die Anlage Daten und eine Callback-Funktion
      type:
      - string | ReplyFormData
- uid: outlook.Office.AppointmentRead.displayReplyForm
  summary: >-
    Zeigt ein Antwortformular an, das nur den Absender der ausgewählten Nachricht oder den Organisator des ausgewählten Termins enthält.


    In Outlook Web App wird das Antwortformular als Popupformular in der Dreispaltenansicht und als Popupformular in der Zwei- oder Einspaltenansicht angezeigt.


    Wenn einer der Zeichenfolgenparameter seinen Grenzwert überschreitet, löst displayReplyForm eine Ausnahme aus.


    Wenn Anlagen im formData.attachments-Parameter angegeben werden, versuchen Outlook und Outlook Web App, alle Anlagen herunterzuladen und sie an das Antwortformular anzuhängen. Wenn Anlagen nicht hinzugefügt werden können, wird in der Formularbenutzeroberfläche ein Fehler angezeigt. Wenn dies nicht möglich ist, wird keine Fehlermeldung ausgegeben.


    Hinweis: Diese Methode wird in Outlook für iOS oder Outlook für Android nicht unterstützt.


    \[[API-Satz: Postfach 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Besprechungsteilnehmer</td></tr></table>

    ####Beispiele für


    ```javascript

    // The following code passes a string to the `displayReplyForm` function.

    Office.context.mailbox.item.displayReplyForm('hello there');

    Office.context.mailbox.item.displayReplyForm('<b>hello there</b>');


    // Reply with an empty body.

    Office.context.mailbox.item.displayReplyForm({});


    // Reply with just a body.

    Office.context.mailbox.item.displayReplyForm(

    {
        'htmlBody' : 'hi'
    });


    // Reply with a body and a file attachment.

    Office.context.mailbox.item.displayReplyForm(

    {
        'htmlBody' : 'hi',
        'attachments' :
        [
            {
                'type' : Office.MailboxEnums.AttachmentType.File,
                'name' : 'squirrel.png',
                'url' : 'http://i.imgur.com/sRgTlGR.jpg'
            }
        ]
    });


    // Reply with a body and an item attachment.

    Office.context.mailbox.item.displayReplyForm(

    {
        'htmlBody' : 'hi',
        'attachments' :
        [
            {
                'type' : 'item',
                'name' : 'rand',
                'itemId' : Office.context.mailbox.item.itemId
            }
        ]
    });


    // Reply with a body, file attachment, item attachment, and a callback.

    Office.context.mailbox.item.displayReplyForm(

    {
        'htmlBody' : 'hi',
        'attachments' :
        [
            {
                'type' : Office.MailboxEnums.AttachmentType.File,
                'name' : 'squirrel.png',
                'url' : 'http://i.imgur.com/sRgTlGR.jpg'
            },
            {
                'type' : 'item',
                'name' : 'rand',
                'itemId' : Office.context.mailbox.item.itemId
            }
        ],
        'callback' : function(asyncResult)
        {
            console.log(asyncResult.value);
        }
    });

    ```
  name: displayReplyForm(formData)
  fullName: outlook.Office.AppointmentRead.displayReplyForm
  langs:
  - typeScript
  type: method
  syntax:
    content: 'displayReplyForm(formData: string | ReplyFormData): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: formData
      description: Eine Zeichenfolge, die Text- und HTML-Code enthält, die den Hauptteil des Antwortformulars darstellen. Die Zeichenfolge ist auf 32 KB beschränkt. ODER ein [Office.ReplyFormData](xref:outlook.Office.ReplyFormData) -Objekt, Nachrichtentext oder die Anlage Daten und eine Callback-Funktion enthält.
      type:
      - string | ReplyFormData
- uid: outlook.Office.AppointmentRead.end
  summary: >-
    Ruft das Datum und die Zeit, die für das Ende des Termins.


    Die End-Eigenschaft ist ein Date-Objekt als Wert (Coordinated Universal Time, UTC) Datum und Uhrzeit. ConvertToLocalClientTime-Methode können Sie um den Wert der End-Eigenschaft auf den Client lokale Datum und die Uhrzeit zu konvertieren.


    Wenn Sie die Time.setAsync-Methode verwenden, um die Endzeit im Verfassenmodus festzulegen, sollten Sie die convertToUtcClientTime-Methode verwenden, um die Ortszeit auf dem Client für den Server in UTC umzuwandeln.


    \[[API-Satz: Postfach 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Besprechungsteilnehmer</td></tr></table>
  name: end
  fullName: outlook.Office.AppointmentRead.end
  langs:
  - typeScript
  type: property
  syntax:
    content: 'end: Date;'
    return:
      type:
      - Date
- uid: outlook.Office.AppointmentRead.getEntities
  summary: >-
    Ruft das ausgewählte Element Textkörper gefundenen Entitäten ab.


    Hinweis: Diese Methode wird in Outlook für iOS oder Outlook für Android nicht unterstützt.


    \[[API-Satz: Postfach 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Besprechungsteilnehmer</td></tr></table>
  name: getEntities()
  fullName: outlook.Office.AppointmentRead.getEntities
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getEntities(): Entities;'
    return:
      type:
      - Entities
      description: ''
- uid: outlook.Office.AppointmentRead.getEntitiesByType
  summary: >-
    Ruft ein Array aller Entitäten des angegebenen Entitätstyps im Hauptteil des ausgewählten Elements gefunden.


    Hinweis: Diese Methode wird in Outlook für iOS oder Outlook für Android nicht unterstützt.


    \[[API-Satz: Postfach 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>Eingeschränkt</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Besprechungsteilnehmer</td></tr></table>


    Während Sie die minimale Berechtigungsstufe für diese Methode Restricted ist, erfordern einige Entitätstypen ReadItem für den Zugriff, wie in der folgenden Tabelle angegeben wird.


    <table> <tr> <th>Wert von entityType</th> <th>Typ der Objekte im zurückgegebenen Array</th> <th>Erforderliche Berechtigung Leve</th> </tr> <tr> <td>Adresse</td> <td>Zeichenfolge</td> <td>Eingeschränkt</td> </tr> <tr> <td>Kontakt</td> <td>Kontakt</td> <td>ReadItem</td> </tr> <tr> <td>EmailAddress</td> <td>Zeichenfolge</td> <td>ReadItem</td> </tr> <tr> <td>MeetingSuggestion</td> <td>MeetingSuggestion</td> <td>ReadItem</td> </tr> <tr> <td>PhoneNumber</td> <td>PhoneNumber</td> <td>Eingeschränkt</td> </tr> <tr> <td>TaskSuggestion</td> <td>TaskSuggestion</td> <td>ReadItem</td> </tr> <tr> <td>URL</td> <td>Zeichenfolge</td> <td>Eingeschränkt</td> </tr> </table>

    #### Beispiele


    ```javascript

    // The following example shows how to access an array of strings that represent postal addresses

    // in the current item's body.


    // The initialize function is required for all apps.

    Office.initialize = function () {
        // Checks for the DOM to load using the jQuery ready function.
        $(document).ready(function () {
            // After the DOM is loaded, app-specific code can run.
            var item = Office.context.mailbox.item;
            // Get an array of strings that represent postal addresses in the current item's body.
            var addresses = item.getEntitiesByType(Office.MailboxEnums.EntityType.Address);
            // Continue processing the array of addresses.
        });
    }

    ```
  name: getEntitiesByType(entityType)
  fullName: outlook.Office.AppointmentRead.getEntitiesByType
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getEntitiesByType(entityType: Office.MailboxEnums.EntityType): (string | Contact | MeetingSuggestion | PhoneNumber | TaskSuggestion)[];'
    return:
      type:
      - (string | Contact | MeetingSuggestion | PhoneNumber | TaskSuggestion)[]
      description: Ist der EntityType übergebene Wert nicht gültiger Member der Enumeration "EntityType", gibt die Methode null zurück. Wenn keine Entitäten des angegebenen Typs im Textkörper des Elements vorhanden sind, gibt die Methode ein leeres Array zurück. Anderenfalls hängt der Typ der Objekte in das zurückgegebene Array vom Typ der Entität, die im Parameter "EntityType" angefordert.
    parameters:
    - id: entityType
      description: Einer der Werte der EntityType-Enumeration.
      type:
      - outlook.Office.MailboxEnums.EntityType
- uid: outlook.Office.AppointmentRead.getFilteredEntitiesByName
  summary: >-
    Gibt bekannte Entitäten im ausgewählten Element zurück, die den in der XML-Manifestdatei definierten benannten Filter übergeben.


    Die getFilteredEntitiesByName-Methode gibt die Entitäten zurück, die dem im ItemHasKnownEntity-Regelelement der XML-Manifestdatei definierten regulären Ausdruck mit dem angegebenen FilterName-Elementwert entsprechen.


    Hinweis: Diese Methode wird in Outlook für iOS oder Outlook für Android nicht unterstützt.


    \[[API-Satz: Postfach 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Besprechungsteilnehmer</td></tr></table>
  name: getFilteredEntitiesByName(name)
  fullName: outlook.Office.AppointmentRead.getFilteredEntitiesByName
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getFilteredEntitiesByName(name: string): (string | Contact | MeetingSuggestion | PhoneNumber | TaskSuggestion)[];'
    return:
      type:
      - (string | Contact | MeetingSuggestion | PhoneNumber | TaskSuggestion)[]
      description: Befindet sich kein ItemHasKnownEntity-Element im Manifest mit einem FilterName-Elementwert, der dem name-Parameter entspricht, gibt die Methode null zurück. Wenn der name-Parameter einem ItemHasKnownEntity-Element im Manifest nicht entspricht, es aber keine entsprechenden Entitäten im aktuellen Element gibt, gibt die Methode ein leeres Array zurück.
    parameters:
    - id: name
      description: Der Name des ItemHasKnownEntity-Regelelements, das den entsprechenden Filter definiert.
      type:
      - string
- uid: outlook.Office.AppointmentRead.getInitializationContextAsync
  summary: >-
    Ruft Initialisierungsdaten übergeben, wenn das Add-in [durch eine bearbeitungsfähige Nachricht aktiviert](https://docs.microsoft.com/outlook/actionable-messages/invoke-add-in-from-actionable-message)ist<!-- -->.


    Hinweis: Diese Methode wird nur von Outlook 2016 für Windows (Klick-und-Los-Versionen größer als 16.0.8413.1000) und Outlook im Web für Office 365 unterstützt.


    \[[API-Satz: Postfach Preview](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Besprechungsteilnehmer</td></tr></table>


    Zusätzlich zu dieser Signatur hat die-Methode auch die folgende Signatur:


    `getInitializationContextAsync(callback?: (result: AsyncResult<string>) => void): void;`
  isPreview: true
  name: getInitializationContextAsync(options, callback)
  fullName: outlook.Office.AppointmentRead.getInitializationContextAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getInitializationContextAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: 'Optional. Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält. AsyncContext: Entwickler können bereitstellen, ein Objekt, das sie in der Rückrufmethode zugreifen möchten.'
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: Optional. Wenn die Methode abgeschlossen ist, wird die in der Callback-Parameter übergebene Funktion mit einem einzelnen Parameter, AsyncResult, aufgerufen, der ein Office.AsyncResult-Objekt ist. Bei Erfolg werden die Initialisierungsdaten als Zeichenfolge in der Eigenschaft "AsyncResult.Value" bereitgestellt. Ist kein Initialisierung Kontext, enthält das AsyncResult-Objekt ein Error-Objekt, mit dessen codeeigenschaft auf 9020 festgelegt und die Name-Eigenschaft auf GenericResponseError festgelegt.
      type:
      - '(result: AsyncResult<string>) => void'
- uid: outlook.Office.AppointmentRead.getRegExMatches
  summary: >-
    Gibt Zeichenfolgenwerte im ausgewählten Element zurück, die den in der XML-Manifestdatei definierten regulären Ausdrücken entsprechen.


    Die getRegExMatches-Methode gibt die Zeichenfolgen zurück, die dem in den einzelnen ItemHasRegularExpressionMatch-Regelelementen oder ItemHasKnownEntity-Regelelementen in der XML-Manifestdatei definierten regulären Ausdruck entsprechen. Bei einer ItemHasRegularExpressionMatch-Regel muss eine entsprechende Zeichenfolge in der Eigenschaft des Elements vorhanden sein, das von dieser Regel angegeben wird. Der einfache PropertyName-Typ definiert die unterstützten Eigenschaften.


    Wenn Sie eine ItemHasRegularExpressionMatch-Regel für die Textkörpereigenschaft eines Elements festlegen, sollte der reguläre Ausdruck den Textkörper weiter filtern und nicht versuchen, den gesamten Textkörper des Elements zurückzugeben. Wenn der gesamte Textkörper eines Elements mit einem regulären Ausdruck wie .* abgerufen wird, werden nicht immer die gewünschten Ergebnisse erzielt. Verwenden Sie stattdessen die Body.getAsync-Methode, um den gesamten Textkörper abzurufen.


    Hinweis: Diese Methode wird in Outlook für iOS oder Outlook für Android nicht unterstützt.


    \[[API-Satz: Postfach 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Besprechungsteilnehmer</td></tr></table>

    ####Beispiele für


    ```javascript

    // The following example shows how to access the array of

    // matches for the regular expression rule elements `fruits`

    // and `veggies`, which are specified in the manifest.

    var allMatches = Office.context.mailbox.item.getRegExMatches();

    var fruits = allMatches.fruits;

    var veges = allMatches.veggies;

    ```
  name: getRegExMatches()
  fullName: outlook.Office.AppointmentRead.getRegExMatches
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRegExMatches(): any;'
    return:
      type:
      - any
      description: Ein Objekt mit Arrays aus Zeichenfolgen, die den in der XML-Manifestdatei definierten regulären Ausdrücken entsprechen. Der Name der einzelnen Arrays ist gleich dem entsprechenden Wert des RegExName-Attributs der entsprechenden ItemHasRegularExpressionMatch-Regel oder des FilterName-Attributs der entsprechenden ItemHasKnownEntity-Regel.
- uid: outlook.Office.AppointmentRead.getRegExMatchesByName
  summary: >-
    Gibt Zeichenfolgenwerte im ausgewählten Element zurück, die dem in der XML-Manifestdatei definierten benannten regulären Ausdruck entsprechen.


    Die getRegExMatchesByName-Methode gibt die Zeichenfolgen zurück, die dem im ItemHasRegularExpressionMatch-Regelelement der XML-Manifestdatei definierten regulären Ausdruck mit dem angegebenen RegExName-Elementwert entsprechen.


    Wenn Sie eine ItemHasRegularExpressionMatch-Regel für die Textkörpereigenschaft eines Elements festlegen, sollte der reguläre Ausdruck den Textkörper weiter filtern und nicht versuchen, den gesamten Textkörper des Elements zurückzugeben. Wenn der gesamte Textkörper eines Elements mit einem regulären Ausdruck wie .* abgerufen wird, werden nicht immer die gewünschten Ergebnisse erzielt.


    Hinweis: Diese Methode wird in Outlook für iOS oder Outlook für Android nicht unterstützt.


    \[[API-Satz: Postfach 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Besprechungsteilnehmer</td></tr></table>

    ####Beispiele für


    ```javascript

    var fruits = Office.context.mailbox.item.getRegExMatchesByName("fruits");

    var veggies = Office.context.mailbox.item.getRegExMatchesByName("veggies");

    ```
  name: getRegExMatchesByName(name)
  fullName: outlook.Office.AppointmentRead.getRegExMatchesByName
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRegExMatchesByName(name: string): string[];'
    return:
      type:
      - string[]
      description: Ein Array mit den Zeichenfolgen, die dem in der XML-Manifestdatei definierten regulären Ausdruck entsprechen.
    parameters:
    - id: name
      description: Der Name des ItemHasRegularExpressionMatch-Regelelements, das den entsprechenden Filter definiert.
      type:
      - string
- uid: outlook.Office.AppointmentRead.getSelectedEntities
  summary: >-
    Ruft die Entitäten ab, die in einer hervorgehobenen Übereinstimmung gefunden werden, die ein Benutzer ausgewählt hat. Hervorgehobene Übereinstimmungen gelten für Kontext-Add-Ins.


    Hinweis: Diese Methode wird in Outlook für iOS oder Outlook für Android nicht unterstützt.


    \[[API-Satz: Postfach 1.6](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Besprechungsteilnehmer</td></tr></table>

    ####Beispiele für


    ```javascript

    // The following example accesses the addresses entities in the highlighted

    // match selected by the user.

    var contacts = Office.context.mailbox.item.getSelectedEntities().addresses;

    ```
  name: getSelectedEntities()
  fullName: outlook.Office.AppointmentRead.getSelectedEntities
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedEntities(): Entities;'
    return:
      type:
      - Entities
      description: ''
- uid: outlook.Office.AppointmentRead.getSelectedRegExMatches
  summary: >-
    Gibt Zeichenfolgenwerte in einer hervorgehobenen Übereinstimmung zurück, die den in der XML-Manifestdatei definierten regulären Ausdrücken entsprechen. Hervorgehobene Übereinstimmungen gelten für Kontext-Add-Ins.


    Die GetSelectedRegExMatches-Methode gibt die Zeichenfolgen, die die in jeder ItemHasRegularExpressionMatch oder ItemHasKnownEntity-Regelelement der XML-Manifestdatei definierten regulären Ausdruck übereinstimmen. Für eine ItemHasRegularExpressionMatch-Regel muss eine entsprechende Zeichenfolge in der Eigenschaft des Elements auftreten, die durch diese Regel angegeben ist. Der einfache Typ PropertyName definiert die unterstützten Eigenschaften.


    Wenn Sie eine ItemHasRegularExpressionMatch-Regel für die Textkörpereigenschaft eines Elements festlegen, sollte der reguläre Ausdruck den Textkörper weiter filtern und nicht versuchen, den gesamten Textkörper des Elements zurückzugeben. Wenn der gesamte Textkörper eines Elements mit einem regulären Ausdruck wie .* abgerufen wird, werden nicht immer die gewünschten Ergebnisse erzielt. Verwenden Sie stattdessen die Body.getAsync-Methode, um den gesamten Textkörper abzurufen.


    Hinweis: Diese Methode wird in Outlook für iOS oder Outlook für Android nicht unterstützt.


    \[[API-Satz: Postfach 1.6](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Besprechungsteilnehmer</td></tr></table>

    ####Beispiele für


    ```javascript

    // The following example shows how to access the array of matches for the

    // regular expression rule elements `fruits` and `veggies`, which are

    // specified in the manifest.

    var selectedMatches = Office.context.mailbox.item.getSelectedRegExMatches();

    var fruits = selectedMatches.fruits;

    var veggies = selectedMatches.veggies;

    ```
  name: getSelectedRegExMatches()
  fullName: outlook.Office.AppointmentRead.getSelectedRegExMatches
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedRegExMatches(): any;'
    return:
      type:
      - any
      description: Ein Objekt mit Arrays aus Zeichenfolgen, die den in der XML-Manifestdatei definierten regulären Ausdrücken entsprechen. Der Name der einzelnen Arrays ist gleich dem entsprechenden Wert des RegExName-Attributs der entsprechenden ItemHasRegularExpressionMatch-Regel oder des FilterName-Attributs der entsprechenden ItemHasKnownEntity-Regel.
- uid: outlook.Office.AppointmentRead.itemClass
  summary: >-
    Ruft die Exchange-Webdienste-Elementklasse des ausgewählten Elements ab.


    Sie können benutzerdefinierte Nachrichtenklassen zum Erweitern einer Standardnachrichtenklasse erstellen, z. B. eine benutzerdefinierte Terminnachrichtenklasse wie "IPM.Appointment.Contoso".


    \[[API-Satz: Postfach 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Besprechungsteilnehmer</td></tr></table>


    Die itemClass-Eigenschaft gibt die Nachrichtenklasse des ausgewählten Elements an. Folgende Standardnachrichtenklassen für das Nachrichten- oder Terminelement sind vorhanden:


    <table> <tr> <th>Typ</th> <th>Beschreibung</th> <th>Item-Klasse</th> </tr> <tr> <td>Terminelemente</td> <td>Hierbei handelt es sich um Kalenderelemente der Elementklasse „IPM.Appointment“ oder „IPM.Appointment.Occurence“.</td> <td>IPM. Termin, IPM. Appointment.Occurence</td> </tr> <tr> <td>Nachrichtenelemente</td> <td>Diese Elemente umfassen E-Mail-Nachrichten der Standardnachrichtenklasse "IPM.Note" sowie Besprechungsanfragen, -antworten und -absagen, die "IPM.Schedule.Meeting" als Basisnachrichtenklasse verwenden.</td> <td>IPM. Notiz, IPM. Schedule.Meeting.Request,IPM. Schedule.Meeting.Neg,IPM. Schedule.Meeting.Pos,IPM. Schedule.Meeting.Tent,IPM. Schedule.Meeting.Canceled</td> </tr> </table>
  name: itemClass
  fullName: outlook.Office.AppointmentRead.itemClass
  langs:
  - typeScript
  type: property
  syntax:
    content: 'itemClass: string;'
    return:
      type:
      - string
- uid: outlook.Office.AppointmentRead.itemId
  summary: >-
    Ruft den Exchange-Webdienste-Elementbezeichner für das aktuelle Element ab.


    Die Eigenschaft "ItemID" steht nicht in Entwurfsmodus verwendet. Wenn eine Element-ID erforderlich ist, kann die SaveAsync-Methode verwendet werden, Speichern des Elements im Speicher, der den Bezeichner des Elements im Parameter "AsyncResult.Value" in der Callback-Funktion zurückgegeben wird.


    Hinweis: Der von der ItemId-Eigenschaft zurückgegebene Bezeichner ist identisch mit der Exchange-Webdienste Elementbezeichner. Die Eigenschaft "ItemID" ist nicht identisch mit der Outlook-Eintrags-ID oder die ID von der Outlook-REST-API verwendet. REST-API-Aufrufe dieser Wert verwenden, sollten sie konvertiert werden, bevor Office.context.mailbox.convertToRestId verwenden. Weitere Informationen finden Sie unter [Verwenden der Outlook-REST-APIs aus einem Outlook-add-in](https://docs.microsoft.com/outlook/add-ins/use-rest-api#get-the-item-id)<!-- -->.


    \[[API-Satz: Postfach 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Besprechungsteilnehmer</td></tr></table>

    ####Beispiele für


    ```javascript

    // The following code checks for the presence of an item

    // identifier. If the `itemId` property returns `null` or

    // `undefined`, it saves the item to the store and gets the

    // item identifier from the asynchronous result.

    var itemId = Office.context.mailbox.item.itemId;

    if (itemId === null || itemId == undefined) {
        Office.context.mailbox.item.saveAsync(function(result){
            itemId = result.value;
        });
    }

    ```
  name: itemId
  fullName: outlook.Office.AppointmentRead.itemId
  langs:
  - typeScript
  type: property
  syntax:
    content: 'itemId: string;'
    return:
      type:
      - string
- uid: outlook.Office.AppointmentRead.itemType
  summary: >-
    Ruft den Typ des Elements ab, das eine Instanz darstellt.


    Die itemType-Eigenschaft gibt einen der Werte der ItemType-Enumeration zurück, der angibt, ob es sich bei der item-Objektinstanz um eine Nachricht oder einen Termin handelt.


    \[[API-Satz: Postfach 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Besprechungsteilnehmer</td></tr></table>
  name: itemType
  fullName: outlook.Office.AppointmentRead.itemType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'itemType: Office.MailboxEnums.ItemType;'
    return:
      type:
      - outlook.Office.MailboxEnums.ItemType
- uid: outlook.Office.AppointmentRead.loadCustomPropertiesAsync
  summary: >-
    Lädt asynchron benutzerdefinierte Eigenschaften für dieses Add-In für das ausgewählte Element.


    Benutzerdefinierte Eigenschaften werden als Schlüssel-/Wert-Paare pro App und pro Element gespeichert. Diese Methode gibt ein CustomProperties-Objekt im Callback zurück, das Methoden für den Zugriff auf die benutzerdefinierten Eigenschaften für das aktuelle Element und das aktuelle Add-In bietet. Benutzerdefinierte Eigenschaften sind für das Element nicht verschlüsselt und sollten darum nicht als sicherer Speicher verwendet werden.


    Die benutzerdefinierten Eigenschaften werden als CustomProperties-Objekt in der asyncResult.value-Eigenschaft bereitgestellt. Dieses Objekt kann verwendet werden, um benutzerdefinierte Eigenschaften aus dem Element abzurufen, festzulegen und zu entfernen und um Änderungen am benutzerdefinierten Eigenschaftssatz wieder auf dem Server zu speichern.


    \[[API-Satz: Postfach 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Besprechungsteilnehmer</td></tr></table>
  name: loadCustomPropertiesAsync(callback, userContext)
  fullName: outlook.Office.AppointmentRead.loadCustomPropertiesAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'loadCustomPropertiesAsync(callback: (result: AsyncResult<Office.CustomProperties>) => void, userContext?: any): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: Wenn die Methode abgeschlossen ist, wird die Funktion übergebenen Callback-Parameter mit einem einzelnen Parameter vom Typ Office.AsyncResult aufgerufen.
      type:
      - '(result: AsyncResult<Office.CustomProperties>) => void'
    - id: userContext
      description: Optional. Entwickler können ein beliebiges Objekt bereitstellen, den sie in der Rückruffunktion zugreifen möchten. Dieses Objekt kann von der asyncResult.asyncContext-Eigenschaft in der Callback-Funktion zugegriffen werden.
      type:
      - any
- uid: outlook.Office.AppointmentRead.location
  summary: >-
    Ruft den Ort eines Termins ab.


    Die location-Eigenschaft gibt eine Zeichenfolge zurück, die den Ort des Termins enthält.


    \[[API-Satz: Postfach 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Besprechungsteilnehmer</td></tr></table>

    ####Beispiele für


    ```javascript

    var userContext = { value : 1 };

    Office.context.mailbox.item.location.getAsync( { context: userContext}, callback);


    function callback(asyncResult) {
        var context = asyncResult.context;
        var location = asyncResult.value;
    }

    ```
  name: location
  fullName: outlook.Office.AppointmentRead.location
  langs:
  - typeScript
  type: property
  syntax:
    content: 'location: string;'
    return:
      type:
      - string
- uid: outlook.Office.AppointmentRead.normalizedSubject
  summary: >-
    Ruft den Betreff eines Elements mit allen Präfixen entfernt (einschließlich RE: und FWD:).


    Die normalizedSubject-Eigenschaft ruft den Betreff des Elements mit allen Standardpräfixen (z. B. RE: und FW:) ab, die von E-Mail-Programmen hinzugefügt werden. Wenn der Betreff des Elements mit vollständigen Präfixen abgerufen werden soll, verwenden Sie die subject-Eigenschaft.


    \[[API-Satz: Postfach 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Besprechungsteilnehmer</td></tr></table>
  name: normalizedSubject
  fullName: outlook.Office.AppointmentRead.normalizedSubject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'normalizedSubject: string;'
    return:
      type:
      - string
- uid: outlook.Office.AppointmentRead.notificationMessages
  summary: >-
    Ruft die Benachrichtigungen für ein Element ab.


    \[[API-Satz: 1.3 Postfachs](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Besprechungsteilnehmer</td></tr></table>
  name: notificationMessages
  fullName: outlook.Office.AppointmentRead.notificationMessages
  langs:
  - typeScript
  type: property
  syntax:
    content: 'notificationMessages: Office.NotificationMessages;'
    return:
      type:
      - outlook.Office.NotificationMessages
- uid: outlook.Office.AppointmentRead.optionalAttendees
  summary: >-
    Ermöglicht den Zugriff auf die optionalen Teilnehmer eines Ereignisses. Der Typ des Objekts und die Zugriffsebene, hängt von den Modus des aktuellen Elements ab.


    OptionalAttendees-Eigenschaft gibt ein Array, das ein [Office.EmailAddressDetails](xref:outlook.Office.EmailAddressDetails) -Objekt für jeden optionale Teilnehmer zur Besprechung enthält.


    \[[API-Satz: Postfach 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Besprechungsteilnehmer</td></tr></table>

    ####Beispiele für


    ```javascript

    Office.context.mailbox.item.optionalAttendees.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );

    Office.context.mailbox.item.optionalAttendees.addAsync( ['jason@contoso.com'] );

    Office.context.mailbox.item.optionalAttendees.getAsync(callback);


    function callback(asyncResult) {
        var arrayOfOptionalAttendeesRecipients = asyncResult.value;
    }

    ```
  name: optionalAttendees
  fullName: outlook.Office.AppointmentRead.optionalAttendees
  langs:
  - typeScript
  type: property
  syntax:
    content: 'optionalAttendees: EmailAddressDetails[];'
    return:
      type:
      - EmailAddressDetails[]
- uid: outlook.Office.AppointmentRead.organizer
  summary: >-
    Ruft für eine angegebene Besprechung die E-Mail-Adresse des Organisators der Besprechung ab.


    \[[API-Satz: Postfach 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Besprechungsteilnehmer</td></tr></table>

    ####Beispiele für


    ```javascript

    var organizerName = Office.context.mailbox.item.organizer.displayName;

    var organizerAddress = Office.context.mailbox.item.organizer.emailAddress;

    ```
  name: organizer
  fullName: outlook.Office.AppointmentRead.organizer
  langs:
  - typeScript
  type: property
  syntax:
    content: 'organizer: EmailAddressDetails;'
    return:
      type:
      - EmailAddressDetails
- uid: outlook.Office.AppointmentRead.recurrence
  summary: >-
    Ruft das Serienmuster eines Termins ab. Ruft das Serienmuster eine Besprechungsanfrage an.


    Die Serieneigenschaft gibt ein Serie-Objekt für Termin- oder Besprechungsanfragen zurück, wenn ein Element eine Datenreihe oder eine Instanz einer Serie ist. `null`wird für einzelne Termine und Besprechungsanfragen von einzelnen Terminen zurückgegeben.


    Hinweis: Besprechungsanfragen weisen eine ItemClass IPM. Schedule.Meeting.Request.


    Hinweis: Wenn das Serie Objekt null ist, bedeutet dies, dass das Objekt einen einzelnen Termin oder eine Besprechungsanfrage an einen einzelnen Termin und nicht um einen Teil einer Reihe.


    \[[API-Satz: Postfach 1.7](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Besprechungsteilnehmer</td></tr></table>
  name: recurrence
  fullName: outlook.Office.AppointmentRead.recurrence
  langs:
  - typeScript
  type: property
  syntax:
    content: 'recurrence: Recurrence;'
    return:
      type:
      - Recurrence
- uid: outlook.Office.AppointmentRead.removeHandlerAsync
  summary: >-
    Entfernt einen Ereignishandler für ein Ereignis unterstützt.


    Derzeit sind die unterstützten Ereignistypen `Office.EventType.AppointmentTimeChanged` <!-- -->, `Office.EventType.RecipientsChanged` <!-- -->, und `Office.EventType.RecurrenceChanged` <!-- -->.


    \[[API-Satz: Postfach 1.7](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Besprechungsteilnehmer</td></tr></table>


    Zusätzlich zu dieser Signatur hat die-Methode auch die folgende Signatur:


    `removeHandlerAsync(eventType:EventType, handler: any, callback?: (result: AsyncResult<void>) => void): void;`
  name: removeHandlerAsync(eventType, handler, options, callback)
  fullName: outlook.Office.AppointmentRead.removeHandlerAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType:EventType, handler: any, options?: any, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: Das Ereignis, das den Handler aufrufen soll
      type:
      - EventType
    - id: handler
      description: Die Funktion für die Ereignisbehandlung. Die Funktion muss einen einzelnen Parameter akzeptieren, der ein Objektliteral ist. Die Type-Eigenschaft für den Parameter entspricht den EventType-Parameter an die RemoveHandlerAsync übergeben.
      type:
      - any
    - id: options
      description: 'Optional. Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält. AsyncContext: Entwickler können bereitstellen, ein Objekt, das sie in der Rückrufmethode zugreifen möchten.'
      type:
      - any
    - id: callback
      description: Optional. Wenn die Methode abgeschlossen ist, wird die in der Callback-Parameter übergebene Funktion mit einem einzelnen Parameter, AsyncResult, aufgerufen, der ein Office.AsyncResult-Objekt ist.
      type:
      - '(result: AsyncResult<void>) => void'
- uid: outlook.Office.AppointmentRead.requiredAttendees
  summary: >-
    Ermöglicht den Zugriff auf die erforderlichen Teilnehmer eines Ereignisses. Der Typ des Objekts und die Zugriffsebene, hängt von den Modus des aktuellen Elements ab.


    RequiredAttendees-Eigenschaft gibt ein Array, das ein [Office.EmailAddressDetails](xref:outlook.Office.EmailAddressDetails) -Objekt für jeden erforderlichen Teilnehmer zur Besprechung enthält.


    \[[API-Satz: Postfach 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Besprechungsteilnehmer</td></tr></table>

    ####Beispiele für


    ```javascript

    Office.context.mailbox.item.requiredAttendees.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );

    Office.context.mailbox.item.requiredAttendees.addAsync( ['jason@contoso.com'] );

    Office.context.mailbox.item.requiredAttendees.getAsync(callback);


    function callback(asyncResult) {
        var arrayOfRequiredAttendeesRecipients = asyncResult.value;
    }

    ```
  name: requiredAttendees
  fullName: outlook.Office.AppointmentRead.requiredAttendees
  langs:
  - typeScript
  type: property
  syntax:
    content: 'requiredAttendees: EmailAddressDetails[];'
    return:
      type:
      - EmailAddressDetails[]
- uid: outlook.Office.AppointmentRead.seriesId
  summary: >-
    Ruft die Id der Datenreihe, zu der eine Instanz gehört.


    In OWA und Outlook gibt die SeriesId die Exchange-Webdienste (EWS)-ID des übergeordneten (Reihe)-Elements, das dieses Element gehört. Bei iOS und Android gibt die SeriesId jedoch die REST-ID des übergeordneten Elements.


    Hinweis: Der von der SeriesId-Eigenschaft zurückgegebene Bezeichner ist identisch mit der Exchange-Webdienste Elementbezeichner. Die SeriesId-Eigenschaft ist nicht identisch mit den Outlook-IDs von der Outlook-REST-API verwendet. REST-API-Aufrufe dieser Wert verwenden, sollten sie konvertiert werden, bevor Office.context.mailbox.convertToRestId verwenden. Weitere Informationen finden Sie unter [Verwenden der Outlook-REST-APIs aus einem Outlook-add-in](https://docs.microsoft.com/outlook/add-ins/use-rest-api)<!-- -->.


    Die SeriesId-Eigenschaft gibt null für Elemente, die nicht über das übergeordnete Elemente wie einzelne Termine, Serienelementen, verfügen oder Besprechungsanfragen und gibt für alle anderen Elemente, die keine Besprechungsanfragen sind nicht definiert.


    \[[API-Satz: Postfach 1.7](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Besprechungsteilnehmer</td></tr></table>
  name: seriesId
  fullName: outlook.Office.AppointmentRead.seriesId
  langs:
  - typeScript
  type: property
  syntax:
    content: 'seriesId: string;'
    return:
      type:
      - string
- uid: outlook.Office.AppointmentRead.start
  summary: >-
    Ruft das Datum und die Uhrzeit, der der Termin beginnen.


    Die Start-Eigenschaft ist ein Date-Objekt als Wert (Coordinated Universal Time, UTC) Datum und Uhrzeit. ConvertToLocalClientTime-Methode können Sie um den Wert auf den Client lokale Datum und die Uhrzeit zu konvertieren.


    \[[API-Satz: Postfach 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Besprechungsteilnehmer</td></tr></table>

    ####Beispiele für


    ```javascript

    // The following example sets the start time of an appointment in compose mode by

    // using the `setAsync` method of the `Time` object.

    var startTime = new Date("3/14/2015");

    var options = {
        // Pass information that can be used
        // in the callback
        asyncContext: {verb:"Set"}
    }

    Office.context.mailbox.item.start.setAsync(startTime, options, function(result) {
        if (result.error) {
            console.debug(result.error);
        } else {
            // Access the asyncContext that was passed to the setAsync function
            console.debug("Start Time " + result.asyncContext.verb);
        }
    });

    ```
  name: start
  fullName: outlook.Office.AppointmentRead.start
  langs:
  - typeScript
  type: property
  syntax:
    content: 'start: Date;'
    return:
      type:
      - Date
- uid: outlook.Office.AppointmentRead.subject
  summary: >-
    Ruft die Beschreibung, die in das Betrefffeld eines Elements angezeigt wird.


    Die subject-Eigenschaft ruft den gesamten Betreff des Elements ab oder legt ihn fest – so, wie er vom E-Mail-Server gesendet wird.


    Die subject-Eigenschaft gibt eine Zeichenfolge zurück. Verwenden Sie die ormalizedSubject-Eigenschaft, um den Betreff ohne führende Präfixe wie RE: und FW: abzurufen.


    \[[API-Satz: Postfach 1.0](/javascript/office/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table><tr><td>[Minimale Berechtigung](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr>


    <tr><td>[Zutreffend Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Besprechungsteilnehmer</td></tr></table>

    ####Beispiele für


    ```javascript

    // The following JavaScript code example shows how to access the

    // `subject` property of the current item in Outlook.


    // The initialize function is required for all apps.

    Office.initialize = function () {
        // Checks for the DOM to load using the jQuery ready function.
        $(document).ready(function () {
            // After the DOM is loaded, app-specific code can run.
            var item = Office.context.mailbox.item;
            var subject = item.subject;
            // Continue with processing the subject of the current item,
            // which can be a message or appointment.
        });
    }

    ```
  name: subject
  fullName: outlook.Office.AppointmentRead.subject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'subject: string;'
    return:
      type:
      - string
