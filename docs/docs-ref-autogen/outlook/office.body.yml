### YamlMime:UniversalReference
items:
  - uid: outlook.Office.Body
    summary: |-
      Das Body-Objekt stellt Methoden zum Hinzufügen und Aktualisieren des Inhalts der Nachricht oder des Termins bereit. Es wird in der body-Eigenschaft des ausgewählten Elements zurückgegeben.

      \[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      ** [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Verfassen oder lesen
    name: Office.Body
    fullName: Office.Body
    langs:
      - typeScript
    type: interface
    package: outlook
    children:
      - outlook.Office.Body.getAsync
      - outlook.Office.Body.getAsync_1
      - outlook.Office.Body.getTypeAsync
      - outlook.Office.Body.getTypeAsync_1
      - outlook.Office.Body.prependAsync
      - outlook.Office.Body.prependAsync_1
      - outlook.Office.Body.setAsync
      - outlook.Office.Body.setAsync_1
      - outlook.Office.Body.setSelectedDataAsync
      - outlook.Office.Body.setSelectedDataAsync_1
  - uid: outlook.Office.Body.getAsync
    summary: |-
      Gibt den aktuellen Text in einem bestimmten Format zurück.

      Diese Methode gibt den vollständigen Text in dem Format zurück, das durch coercionType spezifiziert wurde.

      Bei der Arbeit mit HTML-formatierten Textkörpern ist es wichtig zu beachten, dass die Methoden Body. getAsync und Body. setAsync nicht idempotent sind. Der von der getAsync-Methode zurückgegebene Wert ist nicht unbedingt identisch mit dem Wert, der zuvor in der setAsync-Methode übergeben wurde. Der Client kann den an setAsync übergebenen Wert ändern, damit er effizient mit seinem Rendering-Modul gerendert wird.

      \[[API-Satz: Mailbox 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      ** [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Verfassen oder lesen

      #### <a name="examples"></a>Beispiele

      ```javascript
      // This example gets the body of the item as plain text.
      Office.context.mailbox.item.body.getAsync(
          "text",
          { asyncContext: "This is passed to the callback" },
          function callback(result) {
              // Do something with the result.
          });

      // The following is an example of the result parameter passed to the callback function.
      {
          "value": "TEXT of whole body (including threads below)",
          "status": "succeeded",
          "asyncContext": "This is passed to the callback"
      }
      ```
    name: 'getAsync(coercionType, options, callback)'
    fullName: 'getAsync(coercionType, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(coercionType: Office.CoercionType, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: coercionType
          description: Das Format für den zurückgegebenen Text.
          type:
            - Office.CoercionType
        - id: options
          description: 'Optional. Ein Objektliteral, das eine oder mehrere der folgenden Eigenschaften enthält: AsyncContext: Entwickler können beliebige Objekte bereitstellen, auf die Sie in der Rückrufmethode zugreifen möchten.'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: 'Optional. Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen. Der Text wird im angeforderten Format in der asyncResult. Value-Eigenschaft bereitgestellt.'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: outlook.Office.Body.getAsync_1
    summary: |-
      Gibt den aktuellen Text in einem bestimmten Format zurück.

      Diese Methode gibt den vollständigen Text in dem Format zurück, das durch coercionType spezifiziert wurde.

      Bei der Arbeit mit HTML-formatierten Textkörpern ist es wichtig zu beachten, dass die Methoden Body. getAsync und Body. setAsync nicht idempotent sind. Der von der getAsync-Methode zurückgegebene Wert ist nicht unbedingt identisch mit dem Wert, der zuvor in der setAsync-Methode übergeben wurde. Der Client kann den an setAsync übergebenen Wert ändern, damit er effizient mit seinem Rendering-Modul gerendert wird.

      \[[API-Satz: Mailbox 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      ** [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Verfassen oder lesen
    name: 'getAsync(coercionType, callback)'
    fullName: 'getAsync(coercionType, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(coercionType: Office.CoercionType, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: coercionType
          description: Das Format für den zurückgegebenen Text.
          type:
            - Office.CoercionType
        - id: callback
          description: 'Optional. Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen. Der Text wird im angeforderten Format in der asyncResult. Value-Eigenschaft bereitgestellt.'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: outlook.Office.Body.getTypeAsync
    summary: |-
      Ruft einen Wert ab, der angibt, ob der Inhalt HTML- oder Textformat aufweist.

      \[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      ** [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Verfassen
    name: 'getTypeAsync(options, callback)'
    fullName: 'getTypeAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTypeAsync(options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<Office.CoercionType>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: 'Optional. Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält. AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: 'Optional. Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen. Der Inhaltstyp wird als einer der CoercionType-Werte in der asyncResult. Value-Eigenschaft zurückgegeben.'
          type:
            - '(asyncResult: Office.AsyncResult<Office.CoercionType>) => void'
  - uid: outlook.Office.Body.getTypeAsync_1
    summary: |-
      Ruft einen Wert ab, der angibt, ob der Inhalt HTML- oder Textformat aufweist.

      \[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem

      ** [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Verfassen

      #### <a name="examples"></a>Beispiele

      ```javascript
      Office.context.mailbox.item.body.getTypeAsync(function (asyncResult) {
          if (asyncResult.status === "failed") {
              console.log("Action failed with error: " + asyncResult.error.message);
          } else {
              console.log("Body type: " + asyncResult.value);
          }
      });
      ```
    name: getTypeAsync(callback)
    fullName: getTypeAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTypeAsync(callback?: (asyncResult: Office.AsyncResult<Office.CoercionType>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: 'Optional. Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen. Der Inhaltstyp wird als einer der CoercionType-Werte in der asyncResult. Value-Eigenschaft zurückgegeben.'
          type:
            - '(asyncResult: Office.AsyncResult<Office.CoercionType>) => void'
  - uid: outlook.Office.Body.prependAsync
    summary: |-
      Fügt den angegebenen Inhalt am Anfang des Elementkörpers hinzu.

      Die prependAsync-Methode fügt die angegebene Zeichenfolge am Beginn des Elementtexts ein. Nach dem Einfügen wird der Cursor an seine ursprüngliche Position zurückgegeben, relativ zum eingefügten Inhalt.

      Wenn Sie Links in HTML-Markup einschließen, können Sie die Online Link Vorschau deaktivieren, indem Sie das ID-Attribut für den Anchor festlegen (<!-- -->&lt;<!-- -->a<!-- -->&gt;<!-- -->) an "LPNoLP" (siehe Beispiel).

      \[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem

      ** [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Verfassen

      **Fehler**:

      - DataExceedsMaximumSize: der Data-Parameter ist länger als 1 Million Zeichen.

      #### <a name="examples"></a>Beispiele

      ```javascript
      // When including links in HTML markup, you can disable online link preview
      // by setting the id attribute on the anchor (<a>) to "LPNoLP".
      Office.context.mailbox.item.body.prependAsync(
          '<a id="LPNoLP" href="http://www.contoso.com">Click here!</a>',
          {coercionType: Office.CoercionType.Html},
          callback);
      ```
    name: 'prependAsync(data, options, callback)'
    fullName: 'prependAsync(data, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'prependAsync(data: string, options?: Office.AsyncContextOptions & CoercionTypeOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: 'Die Zeichenfolge, die am Anfang des Texts eingefügt werden soll. Die Zeichenfolge ist auf 1.000.000 Zeichen beschränkt.'
          type:
            - string
        - id: options
          description: 'Optional. Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält. AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten. coercionType: das gewünschte Format für den Textkörper. Die Zeichenfolge im Data-Parameter wird in dieses Format konvertiert.'
          type:
            - Office.AsyncContextOptions & CoercionTypeOptions
        - id: callback
          description: 'Optional. Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen. Alle aufgetretenen Fehler werden in der asyncResult. Error-Eigenschaft bereitgestellt.'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.Body.prependAsync_1
    summary: |-
      Fügt den angegebenen Inhalt am Anfang des Elementkörpers hinzu.

      Die prependAsync-Methode fügt die angegebene Zeichenfolge am Beginn des Elementtexts ein. Nach dem Einfügen wird der Cursor an seine ursprüngliche Position zurückgegeben, relativ zum eingefügten Inhalt.

      Wenn Sie Links in HTML-Markup einschließen, können Sie die Online Link Vorschau deaktivieren, indem Sie das ID-Attribut für den Anchor festlegen (<!-- -->&lt;<!-- -->a<!-- -->&gt;<!-- -->) an "LPNoLP" (siehe Beispiel).

      \[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem

      ** [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Verfassen

      **Fehler**:

      - DataExceedsMaximumSize: der Data-Parameter ist länger als 1 Million Zeichen.
    name: 'prependAsync(data, callback)'
    fullName: 'prependAsync(data, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'prependAsync(data: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: 'Die Zeichenfolge, die am Anfang des Texts eingefügt werden soll. Die Zeichenfolge ist auf 1.000.000 Zeichen beschränkt.'
          type:
            - string
        - id: callback
          description: 'Optional. Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen. Alle aufgetretenen Fehler werden in der asyncResult. Error-Eigenschaft bereitgestellt.'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.Body.setAsync
    summary: |-
      Ersetzt den gesamten Textkörper mit dem angegebenen Text.

      Bei der Arbeit mit HTML-formatierten Textkörpern ist es wichtig zu beachten, dass die Methoden Body. getAsync und Body. setAsync nicht idempotent sind. Der von der getAsync-Methode zurückgegebene Wert ist nicht unbedingt identisch mit dem Wert, der zuvor in der setAsync-Methode übergeben wurde. Der Client kann den an setAsync übergebenen Wert ändern, damit er effizient mit seinem Rendering-Modul gerendert wird.

      Wenn Sie Links in HTML-Markup einschließen, können Sie die Online Link Vorschau deaktivieren, indem Sie das ID-Attribut für den Anchor festlegen (<!-- -->&lt;<!-- -->a<!-- -->&gt;<!-- -->) an "LPNoLP" (siehe Beispiel).

      \[[API-Satz: Mailbox 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem

      ** [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Verfassen

      **Fehler**:

      - DataExceedsMaximumSize: der Data-Parameter ist länger als 1 Million Zeichen.

      - InvalidFormatError: der Options. coercionType-Parameter ist auf Office. CoercionType. html festgelegt, und der Nachrichtentext befindet sich im nur-Text-Format.

      #### <a name="examples"></a>Beispiele

      ```javascript
      // When including links in HTML markup, you can disable online link preview
      // by setting the id attribute on the anchor (<a>) to "LPNoLP".
      Office.context.mailbox.item.body.setAsync(
          '<a id="LPNoLP" href="http://www.contoso.com">Click here!</a>',
          {coercionType: Office.CoercionType.Html},
          callback);
      Office.context.mailbox.item.body.setAsync(
          "<b>(replaces all body, including threads you are replying to that may be on the bottom)</b>",
          { coercionType: "html", asyncContext: "This is passed to the callback" },
          function callback(result) {
              // Process the result.
      });

      // The following is an example of the result parameter passed to the callback function.
      {
          "value":null,
          "status": "succeeded",
          "asyncContext": "This is passed to the callback"
      }
      ```
    name: 'setAsync(data, options, callback)'
    fullName: 'setAsync(data, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAsync(data: string, options?: Office.AsyncContextOptions & CoercionTypeOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: 'Die Zeichenfolge, die den vorhandenen Text ersetzen soll. Die Zeichenfolge ist auf 1.000.000 Zeichen beschränkt.'
          type:
            - string
        - id: options
          description: 'Optional. Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält. AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten. coercionType: das gewünschte Format für den Textkörper. Die Zeichenfolge im Data-Parameter wird in dieses Format konvertiert.'
          type:
            - Office.AsyncContextOptions & CoercionTypeOptions
        - id: callback
          description: 'Optional. Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen. Alle aufgetretenen Fehler werden in der asyncResult. Error-Eigenschaft bereitgestellt.'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.Body.setAsync_1
    summary: |-
      Ersetzt den gesamten Textkörper mit dem angegebenen Text.

      Bei der Arbeit mit HTML-formatierten Textkörpern ist es wichtig zu beachten, dass die Methoden Body. getAsync und Body. setAsync nicht idempotent sind. Der von der getAsync-Methode zurückgegebene Wert ist nicht unbedingt identisch mit dem Wert, der zuvor in der setAsync-Methode übergeben wurde. Der Client kann den an setAsync übergebenen Wert ändern, damit er effizient mit seinem Rendering-Modul gerendert wird.

      Wenn Sie Links in HTML-Markup einschließen, können Sie die Online Link Vorschau deaktivieren, indem Sie das ID-Attribut für den Anchor festlegen (<!-- -->&lt;<!-- -->a<!-- -->&gt;<!-- -->) an "LPNoLP" (siehe Beispiel).

      \[[API-Satz: Mailbox 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem

      ** [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Verfassen

      **Fehler**:

      - DataExceedsMaximumSize: der Data-Parameter ist länger als 1 Million Zeichen.

      - InvalidFormatError: der Options. coercionType-Parameter ist auf Office. CoercionType. html festgelegt, und der Nachrichtentext befindet sich im nur-Text-Format.
    name: 'setAsync(data, callback)'
    fullName: 'setAsync(data, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAsync(data: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: 'Die Zeichenfolge, die den vorhandenen Text ersetzen soll. Die Zeichenfolge ist auf 1.000.000 Zeichen beschränkt.'
          type:
            - string
        - id: callback
          description: 'Optional. Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen. Alle aufgetretenen Fehler werden in der asyncResult. Error-Eigenschaft bereitgestellt.'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.Body.setSelectedDataAsync
    summary: |-
      Ersetzt die Auswahl im Textkörper mit dem angegebenen Text.

      Die setSelectedDataAsync-Methode fügt die angegebene Zeichenfolge an der Cursorposition im Textkörper des Elements ein, oder wenn im Editor Text ausgewählt ist, wird der markierte Text ersetzt. Wenn sich der Cursor nie im Textkörper des Elements befand oder wenn der Textkörper des Elements den Fokus auf der Benutzeroberfläche verlor, wird die Zeichenfolge am Anfang des Textkörpers eingefügt. Nach dem Einfügen wird der Cursor am Ende des eingefügten Inhalts platziert.

      Wenn Sie Links in HTML-Markup einschließen, können Sie die Online Link Vorschau deaktivieren, indem Sie das ID-Attribut für den Anchor festlegen (<!-- -->&lt;<!-- -->a<!-- -->&gt;<!-- -->) an "LPNoLP" (siehe Beispiel).

      \[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem

      ** [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Verfassen

      **Fehler**:

      - DataExceedsMaximumSize: der Data-Parameter ist länger als 1 Million Zeichen.

      - InvalidFormatError: der Options. coercionType-Parameter ist auf Office. CoercionType. html festgelegt, und der Nachrichtentext befindet sich im nur-Text-Format.

      #### <a name="examples"></a>Beispiele

      ```javascript
      // When including links in HTML markup, you can disable online link preview
      // by setting the id attribute on the anchor (<a>) to "LPNoLP".
      Office.context.mailbox.item.body.setSelectedDataAsync(
          '<a id="LPNoLP" href="http://www.contoso.com">Click here!</a>',
          {coercionType: Office.CoercionType.Html},
          callback);
      ```
    name: 'setSelectedDataAsync(data, options, callback)'
    fullName: 'setSelectedDataAsync(data, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setSelectedDataAsync(data: string, options?: Office.AsyncContextOptions & CoercionTypeOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: 'Die Zeichenfolge, die den vorhandenen Text ersetzen soll. Die Zeichenfolge ist auf 1.000.000 Zeichen beschränkt.'
          type:
            - string
        - id: options
          description: 'Optional. Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält. AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten. coercionType: das gewünschte Format für den Textkörper. Die Zeichenfolge im Data-Parameter wird in dieses Format konvertiert.'
          type:
            - Office.AsyncContextOptions & CoercionTypeOptions
        - id: callback
          description: 'Optional. Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen. Alle aufgetretenen Fehler werden in der asyncResult. Error-Eigenschaft bereitgestellt.'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: outlook.Office.Body.setSelectedDataAsync_1
    summary: |-
      Ersetzt die Auswahl im Textkörper mit dem angegebenen Text.

      Die setSelectedDataAsync-Methode fügt die angegebene Zeichenfolge an der Cursorposition im Textkörper des Elements ein, oder wenn im Editor Text ausgewählt ist, wird der markierte Text ersetzt. Wenn sich der Cursor nie im Textkörper des Elements befand oder wenn der Textkörper des Elements den Fokus auf der Benutzeroberfläche verlor, wird die Zeichenfolge am Anfang des Textkörpers eingefügt. Nach dem Einfügen wird der Cursor am Ende des eingefügten Inhalts platziert.

      Wenn Sie Links in HTML-Markup einschließen, können Sie die Online Link Vorschau deaktivieren, indem Sie das ID-Attribut für den Anchor festlegen (<!-- -->&lt;<!-- -->a<!-- -->&gt;<!-- -->) an "LPNoLP" (siehe Beispiel).

      \[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      ** [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem

      ** [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Verfassen

      **Fehler**:

      - DataExceedsMaximumSize: der Data-Parameter ist länger als 1 Million Zeichen.

      - InvalidFormatError: der Options. coercionType-Parameter ist auf Office. CoercionType. html festgelegt, und der Nachrichtentext befindet sich im nur-Text-Format.
    name: 'setSelectedDataAsync(data, callback)'
    fullName: 'setSelectedDataAsync(data, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setSelectedDataAsync(data: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: 'Die Zeichenfolge, die den vorhandenen Text ersetzen soll. Die Zeichenfolge ist auf 1.000.000 Zeichen beschränkt.'
          type:
            - string
        - id: callback
          description: 'Optional. Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen. Alle aufgetretenen Fehler werden in der asyncResult. Error-Eigenschaft bereitgestellt.'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'