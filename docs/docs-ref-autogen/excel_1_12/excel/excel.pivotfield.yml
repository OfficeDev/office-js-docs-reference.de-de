### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.PivotField:class'
    summary: |-
      Stellt das Excel-PivotField dar.

      \[[API-Gruppe: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.PivotField
    fullName: Excel.PivotField
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.PivotField#applyFilter:member(1)'
      - 'excel!Excel.PivotField#clearAllFilters:member(1)'
      - 'excel!Excel.PivotField#clearFilter:member(1)'
      - 'excel!Excel.PivotField#clearFilter:member(2)'
      - 'excel!Excel.PivotField#context:member'
      - 'excel!Excel.PivotField#getFilters:member(1)'
      - 'excel!Excel.PivotField#id:member'
      - 'excel!Excel.PivotField#isFiltered:member(1)'
      - 'excel!Excel.PivotField#isFiltered:member(2)'
      - 'excel!Excel.PivotField#items:member'
      - 'excel!Excel.PivotField#load:member(1)'
      - 'excel!Excel.PivotField#load:member(2)'
      - 'excel!Excel.PivotField#load:member(3)'
      - 'excel!Excel.PivotField#name:member'
      - 'excel!Excel.PivotField#set:member(1)'
      - 'excel!Excel.PivotField#set:member(2)'
      - 'excel!Excel.PivotField#showAllItems:member'
      - 'excel!Excel.PivotField#sortByLabels:member(1)'
      - 'excel!Excel.PivotField#sortByValues:member(1)'
      - 'excel!Excel.PivotField#sortByValues:member(2)'
      - 'excel!Excel.PivotField#subtotals:member'
      - 'excel!Excel.PivotField#toJSON:member(1)'
  - uid: 'excel!Excel.PivotField#applyFilter:member(1)'
    summary: |-
      Legt eine oder mehrere der aktuellen PivotFilters des Felds fest und wendet Sie auf das Feld an. Wenn die bereitgestellten Filter ungültig sind oder nicht angewendet werden können, wird eine Ausnahme ausgelöst.

      \[[API-Gruppe: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: applyFilter(filter)
    fullName: applyFilter(filter)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyFilter(filter: Excel.PivotFilters): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: filter
          description: Ein konfigurierter bestimmter PivotFilter oder eine PivotFilters-Schnittstelle mit mehreren konfigurierten filtern.
          type:
            - 'excel!Excel.PivotFilters:interface'
  - uid: 'excel!Excel.PivotField#clearAllFilters:member(1)'
    summary: |-
      Löscht alle Kriterien aus allen Filtern des Felds. Dadurch werden alle aktiven Filter für das Feld entfernt.

      \[[API-Gruppe: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: clearAllFilters()
    fullName: clearAllFilters()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearAllFilters(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Beispiele

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/85-preview-apis/pivottable-pivotfilters.yaml
          await Excel.run(async (context) => {
            // Clear all the PivotFilters.

            // Get the PivotTable.
            const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");
            pivotTable.hierarchies.load("name");
            await context.sync();

            // Clear the filters on each PivotField.
            pivotTable.hierarchies.items.forEach((hierarchy) => {
              hierarchy.fields.getItem(hierarchy.name).clearAllFilters();
            });
            await context.sync();
          });
          ```
  - uid: 'excel!Excel.PivotField#clearFilter:member(1)'
    summary: |-
      Löscht alle vorhandenen Kriterien aus dem Filter des Felds des angegebenen Typs (sofern eine derzeit angewendet wird).

      \[[API-Gruppe: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: clearFilter(filterType)
    fullName: clearFilter(filterType)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearFilter(filterType: Excel.PivotFilterType): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: filterType
          description: 'Der Typ des Filters für das Feld, dessen alle Kriterien gelöscht werden sollen.'
          type:
            - 'excel!Excel.PivotFilterType:enum'
  - uid: 'excel!Excel.PivotField#clearFilter:member(2)'
    summary: |-
      Löscht alle vorhandenen Kriterien aus dem Filter des Felds des angegebenen Typs (sofern eine derzeit angewendet wird).

      \[[API-Gruppe: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: clearFilter(filterTypeString)
    fullName: clearFilter(filterTypeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearFilter(filterTypeString: "Unknown" | "Value" | "Manual" | "Label" | "Date"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: filterTypeString
          description: 'Der Typ des Filters für das Feld, dessen alle Kriterien gelöscht werden sollen.'
          type:
            - '"Unknown" | "Value" | "Manual" | "Label" | "Date"'
  - uid: 'excel!Excel.PivotField#context:member'
    summary: 'Der Anforderungskontext, der mit dem Objekt verknüpft ist. Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.PivotField#getFilters:member(1)'
    summary: |-
      Ruft alle derzeit auf das Feld angewendeten Filter ab.

      \[[API-Gruppe: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getFilters()
    fullName: getFilters()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFilters(): OfficeExtension.ClientResult<Excel.PivotFilters>;'
      return:
        type:
          - 'excel!Excel.PivotField#getFilters~0:complex'
        description: Eine PivotFilters-Schnittstelle mit allen aktiven filtern.
  - uid: 'excel!Excel.PivotField#id:member'
    summary: |-
      Die ID von PivotField.

      \[[API-Gruppe: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.PivotField#isFiltered:member(1)'
    summary: |-
      Überprüft, ob für das Feld Filter angewendet wurden.

      \[[API-Gruppe: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: isFiltered(filterType)
    fullName: isFiltered(filterType)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'isFiltered(filterType?: Excel.PivotFilterType): OfficeExtension.ClientResult<boolean>;'
      return:
        type:
          - 'excel!Excel.PivotField#isFiltered~0:complex'
        description: 'True, wenn das Feld einen Filter vom Typ `filterType` angewendet hat. Wenn Filter Type nicht angegeben ist, wird true zurückgegeben, wenn das Feld über angewendete Filter verfügt.'
      parameters:
        - id: filterType
          description: 'Der zu überprüfende Filtertyp. Wenn kein Typ angegeben wird, prüft diese Methode, ob ein Filter angewendet wird.'
          type:
            - 'excel!Excel.PivotFilterType:enum'
  - uid: 'excel!Excel.PivotField#isFiltered:member(2)'
    summary: |-
      Überprüft, ob für das Feld Filter angewendet wurden.

      \[[API-Gruppe: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: isFiltered(filterTypeString)
    fullName: isFiltered(filterTypeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'isFiltered(filterTypeString?: "Unknown" | "Value" | "Manual" | "Label" | "Date"): OfficeExtension.ClientResult<boolean>;'
      return:
        type:
          - 'excel!Excel.PivotField#isFiltered~1:complex'
        description: 'True, wenn das Feld einen Filter vom Typ `filterType` angewendet hat. Wenn Filter Type nicht angegeben ist, wird true zurückgegeben, wenn das Feld über angewendete Filter verfügt.'
      parameters:
        - id: filterTypeString
          description: 'Der zu überprüfende Filtertyp. Wenn kein Typ angegeben wird, prüft diese Methode, ob ein Filter angewendet wird.'
          type:
            - '"Unknown" | "Value" | "Manual" | "Label" | "Date"'
  - uid: 'excel!Excel.PivotField#items:member'
    summary: |-
      Gibt die PivotFields-Objekte zurück, die dem PivotField-Objekt zugeordnet sind.

      \[[API-Gruppe: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.PivotItemCollection;'
      return:
        type:
          - 'excel!Excel.PivotItemCollection:class'
  - uid: 'excel!Excel.PivotField#load:member(1)'
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.PivotFieldLoadOptions): Excel.PivotField;'
      return:
        type:
          - 'excel!Excel.PivotField:class'
        description: ''
      parameters:
        - id: options
          description: Enthält Optionen für die Eigenschaften des zu ladenden Objekts.
          type:
            - 'excel!Excel.Interfaces.PivotFieldLoadOptions:interface'
  - uid: 'excel!Excel.PivotField#load:member(2)'
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotField;'
      return:
        type:
          - 'excel!Excel.PivotField:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 'Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.PivotField#load:member(3)'
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.PivotField;
      return:
        type:
          - 'excel!Excel.PivotField:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select` ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und `propertyNamesAndPaths.expand` ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.PivotField#name:member'
    summary: |-
      Der Name von PivotField.

      \[[API-Gruppe: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.PivotField#set:member(1)'
    summary: Legt mehrere Eigenschaften eines Objekts gleichzeitig fest. Sie können entweder ein einfaches Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs übergeben.
    remarks: |-
      Diese Methode hat die folgende zusätzliche Signatur:

      `set(properties: Excel.PivotField): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.PivotFieldUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: 'Ein JavaScript-Objekt mit Eigenschaften, die isomorphically für die Eigenschaften des Objekts strukturiert sind, für das die Methode aufgerufen wird.'
          type:
            - 'excel!Excel.Interfaces.PivotFieldUpdateData:interface'
        - id: options
          description: 'Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.'
          type:
            - 'office!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.PivotField#set:member(2)'
    summary: Legt mehrere Eigenschaften für das Objekt gleichzeitig basierend auf einem vorhandenen geladenen Objekt fest.
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.PivotField): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.PivotField:class'
  - uid: 'excel!Excel.PivotField#showAllItems:member'
    summary: |-
      Legt fest, ob alle Elemente des PivotField-Objekts angezeigt werden.

      \[[API-Gruppe: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: showAllItems
    fullName: showAllItems
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showAllItems: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PivotField#sortByLabels:member(1)'
    summary: |-
      Sortiert das PivotField-Objekt. Wenn ein DataPivotHierarchy-Objekt angegeben ist, wird die Sortierung basierend auf diesem Objekt angewendet. Andernfalls erfolgt die Sortierung auf Grundlage von PivotField.

      \[[API-Gruppe: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: sortByLabels(sortBy)
    fullName: sortByLabels(sortBy)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'sortByLabels(sortBy: SortBy): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sortBy
          description: 'Gibt an, ob die Sortierung in aufsteigender oder absteigender Reihenfolge erfolgt.'
          type:
            - 'excel!Excel.SortBy:enum'
  - uid: 'excel!Excel.PivotField#sortByValues:member(1)'
    summary: |-
      Sortiert das PivotField in einem bestimmten Bereich nach den angegebenen Werten. Der Bereich definiert, welche bestimmten Werte zum Sortieren verwendet werden, wenn mehrere Werte aus demselben DataPivotHierarchy vorhanden sind.

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'sortByValues(sortBy, valuesHierarchy, pivotItemScope)'
    fullName: 'sortByValues(sortBy, valuesHierarchy, pivotItemScope)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'sortByValues(sortBy: Excel.SortBy, valuesHierarchy: Excel.DataPivotHierarchy, pivotItemScope?: Array<PivotItem | string>): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sortBy
          description: 'Gibt an, ob die Sortierung in aufsteigender oder absteigender Reihenfolge erfolgt.'
          type:
            - 'excel!Excel.SortBy:enum'
        - id: valuesHierarchy
          description: 'Gibt die Wertehierarchie auf der Datenachse an, die für die Sortierung verwendet werden soll.'
          type:
            - 'excel!Excel.DataPivotHierarchy:class'
        - id: pivotItemScope
          description: 'Die Elemente, die für den Bereich der Sortierung verwendet werden sollen. Dabei handelt es sich um die Elemente, aus denen die Zeile oder Spalte besteht, nach der sortiert werden soll. Wenn anstelle eines PivotItem eine Zeichenfolge verwendet wird, stellt die Zeichenfolge die ID der PivotItem dar. Wenn keine anderen Elemente als die Datenhierarchie auf der Achse vorhanden sind, nach der sortiert werden soll, kann dies leer sein.'
          type:
            - 'excel!Excel.PivotField#sortByValues~0:complex'
  - uid: 'excel!Excel.PivotField#sortByValues:member(2)'
    summary: |-
      Sortiert das PivotField in einem bestimmten Bereich nach den angegebenen Werten. Der Bereich definiert, welche bestimmten Werte zum Sortieren verwendet werden, wenn mehrere Werte aus demselben DataPivotHierarchy vorhanden sind.

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'sortByValues(sortByString, valuesHierarchy, pivotItemScope)'
    fullName: 'sortByValues(sortByString, valuesHierarchy, pivotItemScope)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'sortByValues(sortByString: "Ascending" | "Descending", valuesHierarchy: Excel.DataPivotHierarchy, pivotItemScope?: Array<PivotItem | string>): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: sortByString
          description: 'Gibt an, ob die Sortierung in aufsteigender oder absteigender Reihenfolge erfolgt.'
          type:
            - '"Ascending" | "Descending"'
        - id: valuesHierarchy
          description: 'Gibt die Wertehierarchie auf der Datenachse an, die für die Sortierung verwendet werden soll.'
          type:
            - 'excel!Excel.DataPivotHierarchy:class'
        - id: pivotItemScope
          description: 'Die Elemente, die für den Bereich der Sortierung verwendet werden sollen. Dabei handelt es sich um die Elemente, aus denen die Zeile oder Spalte besteht, nach der sortiert werden soll. Wenn anstelle eines PivotItem eine Zeichenfolge verwendet wird, stellt die Zeichenfolge die ID der PivotItem dar. Wenn keine anderen Elemente als die Datenhierarchie auf der Achse vorhanden sind, nach der sortiert werden soll, kann dies leer sein.'
          type:
            - 'excel!Excel.PivotField#sortByValues~1:complex'
  - uid: 'excel!Excel.PivotField#subtotals:member'
    summary: |-
      Zwischensumme von PivotField

      \[[API-Gruppe: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: subtotals
    fullName: subtotals
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subtotals: Excel.Subtotals;'
      return:
        type:
          - 'excel!Excel.Subtotals:interface'
  - uid: 'excel!Excel.PivotField#toJSON:member(1)'
    summary: 'Überschreibt die JavaScript `toJSON()` -Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird. `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche Excel. PivotField-Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt (typisiert als `Excel.Interfaces.PivotFieldData`<!-- -->), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotFieldData;'
      return:
        type:
          - 'excel!Excel.Interfaces.PivotFieldData:interface'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.PivotFilters:interface'
    name: Excel.PivotFilters
  - uid: 'excel!Excel.PivotFilterType:enum'
    name: Excel.PivotFilterType
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.PivotField#getFilters~0:complex'
    name: OfficeExtension.ClientResult<Excel.PivotFilters>
    fullName: OfficeExtension.ClientResult<Excel.PivotFilters>
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <
        fullName: <
      - uid: 'excel!Excel.PivotFilters:interface'
        name: Excel.PivotFilters
        fullName: Excel.PivotFilters
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.PivotField#isFiltered~0:complex'
    name: OfficeExtension.ClientResult<boolean>
    fullName: OfficeExtension.ClientResult<boolean>
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <boolean>
        fullName: <boolean>
  - uid: 'excel!Excel.PivotField#isFiltered~1:complex'
    name: OfficeExtension.ClientResult<boolean>
    fullName: OfficeExtension.ClientResult<boolean>
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <boolean>
        fullName: <boolean>
  - uid: 'excel!Excel.PivotItemCollection:class'
    name: Excel.PivotItemCollection
  - uid: 'excel!Excel.PivotField:class'
    name: Excel.PivotField
  - uid: 'excel!Excel.Interfaces.PivotFieldLoadOptions:interface'
    name: Excel.Interfaces.PivotFieldLoadOptions
  - uid: 'excel!Excel.Interfaces.PivotFieldUpdateData:interface'
    name: Interfaces.PivotFieldUpdateData
  - uid: 'office!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.SortBy:enum'
    name: SortBy
  - uid: 'excel!Excel.DataPivotHierarchy:class'
    name: Excel.DataPivotHierarchy
  - uid: 'excel!Excel.PivotField#sortByValues~0:complex'
    name: Array<PivotItem | string>
    fullName: Array<Excel.PivotItem | string>
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <
        fullName: <
      - uid: 'excel!Excel.PivotItem:class'
        name: PivotItem
        fullName: Excel.PivotItem
      - name: ' | string>'
        fullName: ' | string>'
  - uid: 'excel!Excel.PivotField#sortByValues~1:complex'
    name: Array<PivotItem | string>
    fullName: Array<Excel.PivotItem | string>
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <
        fullName: <
      - uid: 'excel!Excel.PivotItem:class'
        name: PivotItem
        fullName: Excel.PivotItem
      - name: ' | string>'
        fullName: ' | string>'
  - uid: 'excel!Excel.Subtotals:interface'
    name: Excel.Subtotals
  - uid: 'excel!Excel.Interfaces.PivotFieldData:interface'
    name: Excel.Interfaces.PivotFieldData