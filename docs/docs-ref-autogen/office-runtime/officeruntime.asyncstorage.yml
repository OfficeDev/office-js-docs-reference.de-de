### YamlMime:UniversalReference
ms.openlocfilehash: 695ea27fa1b45e5ae262c7812cb1681a2107c635
ms.sourcegitcommit: 016e17422cf62dc9f1de1809666e9244e41cc1a9
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 11/09/2018
ms.locfileid: "26229753"
items:
- uid: office-runtime.OfficeRuntime.AsyncStorage
  summary: Asynchrone, globale und beständigen-Schlüssel / Wert-Speicher, die durch benutzerdefinierte Funktionen von Excel verwendet werden können.
  remarks: >-
    Jede Instanz-add-in verfügt über eine eigene Speicherpartition, die für einen Benutzer und ihr Gerät eindeutig.


    Die Standarddaten Gesamtspeicher pro-add-in ist 5 MB groß sind.


    Jede Methode, die unten aufgeführten gibt eine Zusage-Objekt zurück.
  isPreview: true
  name: OfficeRuntime.AsyncStorage
  fullName: OfficeRuntime.AsyncStorage
  langs:
  - typeScript
  type: interface
  package: office-runtime
  children:
  - office-runtime.OfficeRuntime.AsyncStorage.getAllKeys
  - office-runtime.OfficeRuntime.AsyncStorage.getItem
  - office-runtime.OfficeRuntime.AsyncStorage.multiGet
  - office-runtime.OfficeRuntime.AsyncStorage.multiRemove
  - office-runtime.OfficeRuntime.AsyncStorage.multiSet
  - office-runtime.OfficeRuntime.AsyncStorage.removeItem
  - office-runtime.OfficeRuntime.AsyncStorage.setItem
- uid: office-runtime.OfficeRuntime.AsyncStorage.getAllKeys
  summary: Gibt eine Zusage mit alle Schlüssel zurück.
  isPreview: true
  name: getAllKeys(callback)
  fullName: getAllKeys
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getAllKeys(callback?: (error?: Error, keys?: string[]) => void): Promise<string[]>;'
    return:
      type:
      - Promise<string[]>
      description: ''
    parameters:
    - id: callback
      description: ''
      type:
      - '(error?: Error, keys?: string[]) => void'
- uid: office-runtime.OfficeRuntime.AsyncStorage.getItem
  summary: Ruft ein Objekt auf Grundlage eines Schlüssels ab und ruft einen Rückruf nach Abschluss des. Gibt eine Zusage zurück.
  isPreview: true
  name: getItem(key, callback)
  fullName: getItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: string, callback?: (error?: Error, result?: string) => void): Promise<string>;'
    return:
      type:
      - Promise<string>
      description: ''
    parameters:
    - id: key
      description: ''
      type:
      - string
    - id: callback
      description: ''
      type:
      - '(error?: Error, result?: string) => void'
- uid: office-runtime.OfficeRuntime.AsyncStorage.multiGet
  summary: Ruft einen Batch von Schlüsseln, gemäß dem `keys` Array. Wenn Sie ein Schlüssel nicht vorhanden ist, gibt null zurück.
  isPreview: true
  name: multiGet(keys, callback)
  fullName: multiGet
  langs:
  - typeScript
  type: method
  syntax:
    content: 'multiGet(keys: string[], callback?: (errors?: Error[], result?: string[][]) => void): Promise<string[][]>;'
    return:
      type:
      - Promise<string[][]>
      description: ''
    parameters:
    - id: keys
      description: ''
      type:
      - string[]
    - id: callback
      description: ''
      type:
      - '(errors?: Error[], result?: string[][]) => void'
- uid: office-runtime.OfficeRuntime.AsyncStorage.multiRemove
  summary: Löscht einen Batch von Schlüsseln, gemäß dem `keys` Array.
  isPreview: true
  name: multiRemove(keys, callback)
  fullName: multiRemove
  langs:
  - typeScript
  type: method
  syntax:
    content: 'multiRemove(keys: string[], callback?: (errors?: Error[]) => void): Promise<void>;'
    return:
      type:
      - Promise<void>
      description: ''
    parameters:
    - id: keys
      description: ''
      type:
      - string[]
    - id: callback
      description: ''
      type:
      - '(errors?: Error[]) => void'
- uid: office-runtime.OfficeRuntime.AsyncStorage.multiSet
  summary: Mehrere Schlüssel-Wert-Paare in einem Batch gespeichert. Gibt eine Zusage zurück. Wenn Sie ein Schlüssel nicht vorhanden ist, gibt null zurück.
  isPreview: true
  name: multiSet(keyValuePairs, callback)
  fullName: multiSet
  langs:
  - typeScript
  type: method
  syntax:
    content: 'multiSet(keyValuePairs: string[][], callback?: (errors?: Error[]) => void): Promise<void>;'
    return:
      type:
      - Promise<void>
      description: ''
    parameters:
    - id: keyValuePairs
      description: ''
      type:
      - string[][]
    - id: callback
      description: ''
      type:
      - '(errors?: Error[]) => void'
- uid: office-runtime.OfficeRuntime.AsyncStorage.removeItem
  summary: Entfernt ein Element für den angegebenen Schlüssel und ruft einen Rückruf nach Abschluss des. Gibt eine Zusage zurück.
  isPreview: true
  name: removeItem(key, callback)
  fullName: removeItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeItem(key: string, callback?: (error?: Error) => void): Promise<void>;'
    return:
      type:
      - Promise<void>
      description: ''
    parameters:
    - id: key
      description: ''
      type:
      - string
    - id: callback
      description: ''
      type:
      - '(error?: Error) => void'
- uid: office-runtime.OfficeRuntime.AsyncStorage.setItem
  summary: Weist den Wert für den Schlüssel-Wert-Paar und ruft einen Rückruf nach Abschluss des. Gibt eine Zusage zurück.
  isPreview: true
  name: setItem(key, value, callback)
  fullName: setItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setItem(key: string, value: string, callback?: (error?: Error) => void): Promise<void>;'
    return:
      type:
      - Promise<void>
      description: ''
    parameters:
    - id: key
      description: ''
      type:
      - string
    - id: value
      description: ''
      type:
      - string
    - id: callback
      description: ''
      type:
      - '(error?: Error) => void'
