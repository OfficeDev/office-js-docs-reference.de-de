### YamlMime:UniversalReference
items:
  - uid: office-runtime.OfficeRuntime.AsyncStorage
    summary: '<span data-ttu-id="97cff-101">Asynchroner, globaler und dauerhafter Schlüssel-Wert-Speicher, der von benutzerdefinierten Excel-Funktionen verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="97cff-101">Asynchronous, global, and persistent key-value storage that can be used by Excel Custom Functions.</span></span>'
    remarks: |-
      <span data-ttu-id="97cff-102">Jede Add-in-Instanz verfügt über eine eigene Speicherpartition, die für einen Benutzer und dessen Gerät eindeutig ist.</span><span class="sxs-lookup"><span data-stu-id="97cff-102">Each add-in instance has its own storage partition, unique to a user and their device.</span></span>

      <span data-ttu-id="97cff-103">Der standardmäßige Speicherplatz, der pro Add-in zulässig ist, ist 5MB.</span><span class="sxs-lookup"><span data-stu-id="97cff-103">The default amount of total storage allowed per add-in is 5MB.</span></span>

      <span data-ttu-id="97cff-104">Jede unten aufgeführte Methode gibt ein Promise-Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="97cff-104">Each method listed below returns a Promise object.</span></span>
    isPreview: true
    name: OfficeRuntime.AsyncStorage
    fullName: OfficeRuntime.AsyncStorage
    langs:
      - typeScript
    type: interface
    package: office-runtime
    children:
      - office-runtime.OfficeRuntime.AsyncStorage.getAllKeys
      - office-runtime.OfficeRuntime.AsyncStorage.getItem
      - office-runtime.OfficeRuntime.AsyncStorage.multiGet
      - office-runtime.OfficeRuntime.AsyncStorage.multiRemove
      - office-runtime.OfficeRuntime.AsyncStorage.multiSet
      - office-runtime.OfficeRuntime.AsyncStorage.removeItem
      - office-runtime.OfficeRuntime.AsyncStorage.setItem
  - uid: office-runtime.OfficeRuntime.AsyncStorage.getAllKeys
    summary: <span data-ttu-id="97cff-105">Gibt eine zuSage mit allen Schlüsseln zurück.</span><span class="sxs-lookup"><span data-stu-id="97cff-105">Returns a Promise with all keys.</span></span>
    isPreview: true
    name: getAllKeys(callback)
    fullName: getAllKeys(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAllKeys(callback?: (error?: Error, keys?: string[]) => void): Promise<string[]>;'
      return:
        type:
          - 'Promise<string[]>'
        description: ''
      parameters:
        - id: callback
          description: ''
          type:
            - '(error?: Error, keys?: string[]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.getItem
    summary: <span data-ttu-id="97cff-106">Ruft ein Objekt basierend auf einem Schlüssel ab und ruft nach Abschluss einen Rückruf auf.</span><span class="sxs-lookup"><span data-stu-id="97cff-106">Retrieves an object based on a key and invokes a callback when finished.</span></span> <span data-ttu-id="97cff-107">Gibt eine zuSage zurück.</span><span class="sxs-lookup"><span data-stu-id="97cff-107">Returns a Promise.</span></span>
    isPreview: true
    name: 'getItem(key, callback)'
    fullName: 'getItem(key, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string, callback?: (error?: Error, result?: string) => void): Promise<string>;'
      return:
        type:
          - Promise<string>
        description: ''
      parameters:
        - id: key
          description: ''
          type:
            - string
        - id: callback
          description: ''
          type:
            - '(error?: Error, result?: string) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.multiGet
    summary: '<span data-ttu-id="97cff-108">Ruft einen Batch von Schlüsseln ab, die `keys` im Array angegeben sind.</span><span class="sxs-lookup"><span data-stu-id="97cff-108">Fetches a batch of keys, specified in the `keys` array.</span></span> <span data-ttu-id="97cff-109">Wenn ein Schlüssel nicht vorhanden ist, wird NULL zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="97cff-109">When a key doesn''t exist, returns null.</span></span>'
    isPreview: true
    name: 'multiGet(keys, callback)'
    fullName: 'multiGet(keys, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'multiGet(keys: string[], callback?: (errors?: Error[], result?: string[][]) => void): Promise<string[][]>;'
      return:
        type:
          - 'Promise<string[][]>'
        description: ''
      parameters:
        - id: keys
          description: ''
          type:
            - 'string[]'
        - id: callback
          description: ''
          type:
            - '(errors?: Error[], result?: string[][]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.multiRemove
    summary: '<span data-ttu-id="97cff-110">Löscht einen im `keys` Array angegebenen Batch von Schlüsseln.</span><span class="sxs-lookup"><span data-stu-id="97cff-110">Deletes a batch of keys, specified in the `keys` array.</span></span>'
    isPreview: true
    name: 'multiRemove(keys, callback)'
    fullName: 'multiRemove(keys, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'multiRemove(keys: string[], callback?: (errors?: Error[]) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: keys
          description: ''
          type:
            - 'string[]'
        - id: callback
          description: ''
          type:
            - '(errors?: Error[]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.multiSet
    summary: '<span data-ttu-id="97cff-111">Speichert mehrere Schlüssel-Wert-Paare in einem Batch.</span><span class="sxs-lookup"><span data-stu-id="97cff-111">Stores multiple key-value pairs in one batch.</span></span> <span data-ttu-id="97cff-112">Gibt eine zuSage zurück.</span><span class="sxs-lookup"><span data-stu-id="97cff-112">Returns a Promise.</span></span> <span data-ttu-id="97cff-113">Wenn ein Schlüssel nicht vorhanden ist, wird NULL zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="97cff-113">When a key doesn''t exist, returns null.</span></span>'
    isPreview: true
    name: 'multiSet(keyValuePairs, callback)'
    fullName: 'multiSet(keyValuePairs, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'multiSet(keyValuePairs: string[][], callback?: (errors?: Error[]) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: keyValuePairs
          description: ''
          type:
            - 'string[][]'
        - id: callback
          description: ''
          type:
            - '(errors?: Error[]) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.removeItem
    summary: <span data-ttu-id="97cff-114">Entfernt ein Element für den angegebenen Schlüssel und ruft nach Abschluss einen Rückruf auf.</span><span class="sxs-lookup"><span data-stu-id="97cff-114">Removes an item for specified key and invokes a callback when finished.</span></span> <span data-ttu-id="97cff-115">Gibt eine zuSage zurück.</span><span class="sxs-lookup"><span data-stu-id="97cff-115">Returns a Promise.</span></span>
    isPreview: true
    name: 'removeItem(key, callback)'
    fullName: 'removeItem(key, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeItem(key: string, callback?: (error?: Error) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: key
          description: ''
          type:
            - string
        - id: callback
          description: ''
          type:
            - '(error?: Error) => void'
  - uid: office-runtime.OfficeRuntime.AsyncStorage.setItem
    summary: <span data-ttu-id="97cff-116">Weist den Wert für ein Schlüssel-Wert-Paar zu und ruft nach Abschluss einen Rückruf auf.</span><span class="sxs-lookup"><span data-stu-id="97cff-116">Assigns the value for a key-value pair and invokes a callback when finished.</span></span> <span data-ttu-id="97cff-117">Gibt eine zuSage zurück.</span><span class="sxs-lookup"><span data-stu-id="97cff-117">Returns a Promise.</span></span>
    isPreview: true
    name: 'setItem(key, value, callback)'
    fullName: 'setItem(key, value, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setItem(key: string, value: string, callback?: (error?: Error) => void): Promise<void>;'
      return:
        type:
          - Promise<void>
        description: ''
      parameters:
        - id: key
          description: ''
          type:
            - string
        - id: value
          description: ''
          type:
            - string
        - id: callback
          description: ''
          type:
            - '(error?: Error) => void'