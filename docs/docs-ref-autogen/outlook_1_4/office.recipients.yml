### YamlMime:UniversalReference
ms.openlocfilehash: 7e8afb23649199f9b1e80605f116e14b78499175
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/20/2019
ms.locfileid: "30097305"
items:
- uid: Outlook_1_4.Office.Recipients
  summary: '\[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]'
  remarks: <table> <tr><td>[Mindestberechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Verfassen</td></tr> </table>
  name: Office.Recipients
  fullName: Office.Recipients
  langs:
  - typeScript
  type: interface
  package: Outlook_1_4
  children:
  - Outlook_1_4.Office.Recipients.addAsync
  - Outlook_1_4.Office.Recipients.addAsync_1
  - Outlook_1_4.Office.Recipients.addAsync_2
  - Outlook_1_4.Office.Recipients.getAsync
  - Outlook_1_4.Office.Recipients.getAsync_1
  - Outlook_1_4.Office.Recipients.setAsync
  - Outlook_1_4.Office.Recipients.setAsync_1
  - Outlook_1_4.Office.Recipients.setAsync_2
- uid: Outlook_1_4.Office.Recipients.addAsync
  summary: >-
    Fügt einen Liste der Empfänger den vorhandenen Empfängern für einen Termin oder eine Nachricht hinzu.


    Der recipients-Parameter kann ein Array folgender Elemente sein:


    - Zeichenfolgen mit SMTP-E-Mail-Adressen


    - EmailUser-Objekte


    - EmailAddressDetails-Objekte


    \[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Mindestberechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr> <tr><td>[Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Verfassen</td></tr> <tr><td>Fehler</td><td>NumberOfRecipientsExceeded-die Anzahl der Empfänger überschreitet 100-Einträge.</td></tr> </table>
  name: addAsync(recipients, options, callback)
  fullName: addAsync(recipients, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addAsync(recipients: (string | EmailUser | EmailAddressDetails)[], options?: Office.AsyncContextOptions, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: recipients
      description: Die Empfänger, die der Empfängerliste hinzugefügt werden sollen.
      type:
      - (string | EmailUser | EmailAddressDetails)[]
    - id: options
      description: 'Optional. Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält. AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: Optional. Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen. Wenn das Hinzufügen der Empfänger fehlschlägt, enthält die asyncResult. Error-Eigenschaft einen Fehlercode.
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_4.Office.Recipients.addAsync_1
  summary: >-
    Fügt einen Liste der Empfänger den vorhandenen Empfängern für einen Termin oder eine Nachricht hinzu.


    Der recipients-Parameter kann ein Array folgender Elemente sein:


    - Zeichenfolgen mit SMTP-E-Mail-Adressen


    - EmailUser-Objekte


    - EmailAddressDetails-Objekte


    \[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Mindestberechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr> <tr><td>[Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Verfassen</td></tr> <tr><td>Fehler</td><td>NumberOfRecipientsExceeded-die Anzahl der Empfänger überschreitet 100-Einträge.</td></tr> </table>
  name: addAsync(recipients)
  fullName: addAsync(recipients)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addAsync(recipients: (string | EmailUser | EmailAddressDetails)[]): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: recipients
      description: Die Empfänger, die der Empfängerliste hinzugefügt werden sollen.
      type:
      - (string | EmailUser | EmailAddressDetails)[]
- uid: Outlook_1_4.Office.Recipients.addAsync_2
  summary: >-
    Fügt einen Liste der Empfänger den vorhandenen Empfängern für einen Termin oder eine Nachricht hinzu.


    Der recipients-Parameter kann ein Array folgender Elemente sein:


    - Zeichenfolgen mit SMTP-E-Mail-Adressen


    - [Office. EmailUser-](xref:Outlook_1_4.Office.EmailUser) Objekte


    - [Office. EmailAddressDetails-](xref:Outlook_1_4.Office.EmailAddressDetails) Objekte


    \[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Mindestberechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr> <tr><td>[Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Verfassen</td></tr> <tr><td>Fehler</td><td>NumberOfRecipientsExceeded-die Anzahl der Empfänger überschreitet 100-Einträge.</td></tr> </table>

    ####Beispiele


    ```javascript

    // The following example creates an array of EmailUser objects

    // and adds them to the To recipients of the message.

    var newRecipients = [
        {
            "displayName": "Allie Bellew",
            "emailAddress": "allieb@contoso.com"
        },
        {
            "displayName": "Alex Darrow",
            "emailAddress": "alexd@contoso.com"
        }
    ];


    Office.context.mailbox.item.to.addAsync(newRecipients, function(result) {
        if (result.error) {
            console.log(result.error);
        } else {
            console.log("Recipients added");
        }
    });

    ```
  name: addAsync(recipients, callback)
  fullName: addAsync(recipients, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addAsync(recipients: (string | EmailUser | EmailAddressDetails)[], callback: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: recipients
      description: Die Empfänger, die der Empfängerliste hinzugefügt werden sollen.
      type:
      - (string | EmailUser | EmailAddressDetails)[]
    - id: callback
      description: Optional. Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen. Wenn das Hinzufügen der Empfänger fehlschlägt, enthält die asyncResult. Error-Eigenschaft einen Fehlercode.
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_4.Office.Recipients.getAsync
  summary: >-
    Ruft eine Empfängerliste für einen Termin oder eine Nachricht ab.


    Nach Abschluss des Aufrufs enthält die asyncResult. Value-Eigenschaft ein Array von [Office. EmailAddressDetails](xref:Outlook_1_4.Office.EmailAddressDetails) -Objekten.


    \[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Mindestberechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Verfassen</td></tr> </table>
  name: getAsync(options, callback)
  fullName: getAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getAsync(options: Office.AsyncContextOptions, callback: (result: Office.AsyncResult<EmailAddressDetails[]>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: 'Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält. AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen. Die `value` Eigenschaft des Ergebnisses ist ein Array von EmailAddressDetails-Objekten.
      type:
      - '(result: Office.AsyncResult<EmailAddressDetails[]>) => void'
- uid: Outlook_1_4.Office.Recipients.getAsync_1
  summary: >-
    Ruft eine Empfängerliste für einen Termin oder eine Nachricht ab.


    Nach Abschluss des Aufrufs enthält die asyncResult. Value-Eigenschaft ein Array von [Office. EmailAddressDetails](xref:Outlook_1_4.Office.EmailAddressDetails) -Objekten.


    \[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Mindestberechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Verfassen</td></tr> </table>

    ####Beispiele


    ```javascript

    // The following example gets the optional attendees of a meeting.

    Office.context.mailbox.item.optionalAttendees.getAsync(function(result) {
        if (result.error) {
            console.log(result.error);
        } else {
            var msg = "";
            result.value.forEach(function(recip, index) {
                msg = msg + recip.displayName + " (" + recip.emailAddress + ");";
            });
            console.log(msg);
        }
    });

    ```
  name: getAsync(callback)
  fullName: getAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getAsync(callback: (result: Office.AsyncResult<EmailAddressDetails[]>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen. Die `value` Eigenschaft des Ergebnisses ist ein Array von EmailAddressDetails-Objekten.
      type:
      - '(result: Office.AsyncResult<EmailAddressDetails[]>) => void'
- uid: Outlook_1_4.Office.Recipients.setAsync
  summary: >-
    Legt eine Empfängerliste für einen Termin oder eine Nachricht fest.


    Die setAsync-Methode überschreibt die aktuelle Empfängerliste.


    Der recipients-Parameter kann ein Array folgender Elemente sein:


    - Zeichenfolgen mit SMTP-E-Mail-Adressen


    - [Office. EmailUser-](xref:Outlook_1_4.Office.EmailUser) Objekte


    - [Office. EmailAddressDetails-](xref:Outlook_1_4.Office.EmailAddressDetails) Objekte


    \[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Mindestberechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr> <tr><td>[Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Verfassen</td></tr> <tr><td>Fehler</td><td>NumberOfRecipientsExceeded-die Anzahl der Empfänger überschreitet 100-Einträge.</td></tr> </table>
  name: setAsync(recipients, options, callback)
  fullName: setAsync(recipients, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setAsync(recipients: (string | EmailUser | EmailAddressDetails)[], options?: Office.AsyncContextOptions, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: recipients
      description: Die Empfänger, die der Empfängerliste hinzugefügt werden sollen.
      type:
      - (string | EmailUser | EmailAddressDetails)[]
    - id: options
      description: 'Optional. Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält. AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: Optional. Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen. Wenn die Einstellung der Empfänger fehlschlägt, enthält die asyncResult. Error-Eigenschaft einen Code, der einen Fehler angibt, der beim Hinzufügen der Daten aufgetreten ist.
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_4.Office.Recipients.setAsync_1
  summary: >-
    Legt eine Empfängerliste für einen Termin oder eine Nachricht fest.


    Die setAsync-Methode überschreibt die aktuelle Empfängerliste.


    Der recipients-Parameter kann ein Array folgender Elemente sein:


    - Zeichenfolgen mit SMTP-E-Mail-Adressen


    - [Office. EmailUser-](xref:Outlook_1_4.Office.EmailUser) Objekte


    - [Office. EmailAddressDetails-](xref:Outlook_1_4.Office.EmailAddressDetails) Objekte


    \[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Mindestberechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr> <tr><td>[Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Verfassen</td></tr> <tr><td>Fehler</td><td>NumberOfRecipientsExceeded-die Anzahl der Empfänger überschreitet 100-Einträge.</td></tr> </table>
  name: setAsync(recipients)
  fullName: setAsync(recipients)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setAsync(recipients: (string | EmailUser | EmailAddressDetails)[]): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: recipients
      description: Die Empfänger, die der Empfängerliste hinzugefügt werden sollen.
      type:
      - (string | EmailUser | EmailAddressDetails)[]
- uid: Outlook_1_4.Office.Recipients.setAsync_2
  summary: >-
    Legt eine Empfängerliste für einen Termin oder eine Nachricht fest.


    Die setAsync-Methode überschreibt die aktuelle Empfängerliste.


    Der recipients-Parameter kann ein Array folgender Elemente sein:


    - Zeichenfolgen mit SMTP-E-Mail-Adressen


    - [Office. EmailUser-](xref:Outlook_1_4.Office.EmailUser) Objekte


    - [Office. EmailAddressDetails-](xref:Outlook_1_4.Office.EmailAddressDetails) Objekte


    \[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Mindestberechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr> <tr><td>[Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Verfassen</td></tr> <tr><td>Fehler</td><td>NumberOfRecipientsExceeded-die Anzahl der Empfänger überschreitet 100-Einträge.</td></tr> </table>

    ####Beispiele


    ```javascript

    // The following example creates an array of EmailUser objects and

    // replaces the CC recipients of the message with the array.

    var newRecipients = [
        {
            "displayName": "Allie Bellew",
            "emailAddress": "allieb@contoso.com"
        },
        {
            "displayName": "Alex Darrow",
            "emailAddress": "alexd@contoso.com"
        }
    ];


    Office.context.mailbox.item.cc.setAsync(newRecipients, function(result) {
        if (result.error) {
            console.log(result.error);
        } else {
            console.log("Recipients overwritten");
        }
    });

    ```
  name: setAsync(recipients, callback)
  fullName: setAsync(recipients, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setAsync(recipients: (string | EmailUser | EmailAddressDetails)[], callback: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: recipients
      description: Die Empfänger, die der Empfängerliste hinzugefügt werden sollen.
      type:
      - (string | EmailUser | EmailAddressDetails)[]
    - id: callback
      description: Optional. Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen. Wenn die Einstellung der Empfänger fehlschlägt, enthält die asyncResult. Error-Eigenschaft einen Code, der einen Fehler angibt, der beim Hinzufügen der Daten aufgetreten ist.
      type:
      - '(result: Office.AsyncResult<void>) => void'
