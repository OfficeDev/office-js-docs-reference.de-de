### YamlMime:UniversalReference
ms.openlocfilehash: c051194dc3b6fd6c98642134e762b3bfa052b1d8
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/20/2019
ms.locfileid: "30096745"
items:
- uid: Outlook_1_4.Office.Time
  summary: >-
    Das Time-Objekt wird als Start- oder End-Eigenschaft eines Termins im Verfassenmodus zurückgegeben.


    \[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Mindestberechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Verfassen</td></tr> </table>
  name: Office.Time
  fullName: Office.Time
  langs:
  - typeScript
  type: interface
  package: Outlook_1_4
  children:
  - Outlook_1_4.Office.Time.getAsync
  - Outlook_1_4.Office.Time.getAsync_1
  - Outlook_1_4.Office.Time.setAsync
  - Outlook_1_4.Office.Time.setAsync_1
  - Outlook_1_4.Office.Time.setAsync_2
- uid: Outlook_1_4.Office.Time.getAsync
  summary: >-
    Ruft die Start- oder Endzeit eines Termins ab.


    Datum und Uhrzeit werden als „Date“-Objekt in der asyncResult.value-Eigenschaft bereitgestellt. Der Wert wird in UTC (Coordinated Universal Time) angegeben. Sie können die UTC-Zeit in die lokale Clientuhrzeit mithilfe der convertToLocalClientTime-Methode konvertieren.


    \[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Mindestberechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Verfassen</td></tr> </table>
  name: getAsync(options, callback)
  fullName: getAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getAsync(options: Office.AsyncContextOptions, callback: (result: Office.AsyncResult<Date>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: 'Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält. AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen. Die `value` Eigenschaft des Ergebnisses ist ein Date-Objekt.
      type:
      - '(result: Office.AsyncResult<Date>) => void'
- uid: Outlook_1_4.Office.Time.getAsync_1
  summary: >-
    Ruft die Start- oder Endzeit eines Termins ab.


    Datum und Uhrzeit werden als „Date“-Objekt in der asyncResult.value-Eigenschaft bereitgestellt. Der Wert wird in UTC (Coordinated Universal Time) angegeben. Sie können die UTC-Zeit in die lokale Clientuhrzeit mithilfe der convertToLocalClientTime-Methode konvertieren.


    \[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Mindestberechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Verfassen</td></tr> </table>

    ####Beispiele


    ```javascript

    Office.context.mailbox.item.start.getAsync(function (asyncResult) {
        if (asyncResult.status === "failed") {
            console.log("Action failed with error: " + asyncResult.error.message);
        }
        else {
            console.log("Start date and time: " + asyncResult.value);
        }
    });

    ```
  name: getAsync(callback)
  fullName: getAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getAsync(callback: (result: Office.AsyncResult<Date>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen. Die `value` Eigenschaft des Ergebnisses ist ein Date-Objekt.
      type:
      - '(result: Office.AsyncResult<Date>) => void'
- uid: Outlook_1_4.Office.Time.setAsync
  summary: >-
    Legt die Start- oder Endzeit eines Termins fest.


    Wenn die setAsync-Methode für die start-Eigenschaft aufgerufen wird, wird die end-Eigenschaft angepasst, um die Dauer des Termins, wie zuvor festgelegt, beizubehalten. Wenn die setAsync-Methode für die end-Eigenschaft aufgerufen wird, wird die Dauer des Termins bis zur neuen Endzeit verlängert.


    Die Uhrzeit muss UTC-Format aufweisen; Sie können mithilfe der convertToUtcClientTime-Methode die korrekte UTC-Uhrzeit abrufen.


    \[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    <table> <tr><td>[Mindestberechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr> <tr><td>[Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Verfassen</td></tr> <tr><td>Fehler</td><td>InvalidEndTime – die Endzeit des Termins liegt vor der Startzeit des Termins.</td></tr> </table>

    ####Beispiele


    ```javascript

    var startTime = new Date("3/14/2015");

    var options = {
        // Pass information that can be used in the callback.
        asyncContext: {verb: "Set"}
    };

    Office.context.mailbox.item.start.setAsync(startTime, options, function(result) {
        if (result.error) {
            console.debug(result.error);
        } else {
            // Access the asyncContext that was passed to the setAsync function.
            console.debug("Start Time " + result.asyncContext.verb);
        }
    });

    ```
  name: setAsync(dateTime, options, callback)
  fullName: setAsync(dateTime, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setAsync(dateTime: Date, options?: Office.AsyncContextOptions, callback?: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: dateTime
      description: Ein Date-Time-Objekt in koordinierter weltZeit (UTC).
      type:
      - Date
    - id: options
      description: 'Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält. AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.'
      type:
      - Office.AsyncContextOptions
    - id: callback
      description: Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen. Wenn das Festlegen von Datum und Uhrzeit fehlschlägt, enthält die asyncResult. Error-Eigenschaft einen Fehlercode.
      type:
      - '(result: Office.AsyncResult<void>) => void'
- uid: Outlook_1_4.Office.Time.setAsync_1
  summary: >-
    Legt die Start- oder Endzeit eines Termins fest.


    Wenn die setAsync-Methode für die start-Eigenschaft aufgerufen wird, wird die end-Eigenschaft angepasst, um die Dauer des Termins, wie zuvor festgelegt, beizubehalten. Wenn die setAsync-Methode für die end-Eigenschaft aufgerufen wird, wird die Dauer des Termins bis zur neuen Endzeit verlängert.


    Die Uhrzeit muss UTC-Format aufweisen; Sie können mithilfe der convertToUtcClientTime-Methode die korrekte UTC-Uhrzeit abrufen.


    \[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Mindestberechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr> <tr><td>[Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Verfassen</td></tr> <tr><td>Fehler</td><td>InvalidEndTime – die Endzeit des Termins liegt vor der Startzeit des Termins.</td></tr> </table>
  name: setAsync(dateTime)
  fullName: setAsync(dateTime)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setAsync(dateTime: Date): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: dateTime
      description: Ein Date-Time-Objekt in koordinierter weltZeit (UTC).
      type:
      - Date
- uid: Outlook_1_4.Office.Time.setAsync_2
  summary: >-
    Legt die Start- oder Endzeit eines Termins fest.


    Wenn die setAsync-Methode für die start-Eigenschaft aufgerufen wird, wird die end-Eigenschaft angepasst, um die Dauer des Termins, wie zuvor festgelegt, beizubehalten. Wenn die setAsync-Methode für die end-Eigenschaft aufgerufen wird, wird die Dauer des Termins bis zur neuen Endzeit verlängert.


    Die Uhrzeit muss UTC-Format aufweisen; Sie können mithilfe der convertToUtcClientTime-Methode die korrekte UTC-Uhrzeit abrufen.


    \[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: <table> <tr><td>[Mindestberechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr> <tr><td>[Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Verfassen</td></tr> <tr><td>Fehler</td><td>InvalidEndTime – die Endzeit des Termins liegt vor der Startzeit des Termins.</td></tr> </table>
  name: setAsync(dateTime, callback)
  fullName: setAsync(dateTime, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setAsync(dateTime: Date, callback: (result: Office.AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: dateTime
      description: Ein Date-Time-Objekt in koordinierter weltZeit (UTC).
      type:
      - Date
    - id: callback
      description: Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen. Wenn das Festlegen von Datum und Uhrzeit fehlschlägt, enthält die asyncResult. Error-Eigenschaft einen Fehlercode.
      type:
      - '(result: Office.AsyncResult<void>) => void'
