### YamlMime:TSType
name: Excel.Comment
uid: excel!Excel.Comment:class
package: excel!
fullName: Excel.Comment
summary: >-
  Stellt einen Kommentar in der Arbeitsmappe dar.


  \[[API-Satz: ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: authorEmail
  uid: excel!Excel.Comment#authorEmail:member
  package: excel!
  fullName: authorEmail
  summary: >-
    Ruft die E-Mail des Autors des Kommentars ab.


    \[[API-Satz: ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly authorEmail: string;'
    return:
      type: string
- name: authorName
  uid: excel!Excel.Comment#authorName:member
  package: excel!
  fullName: authorName
  summary: >-
    Ruft den Namen des Autors des Kommentars ab.


    \[[API-Satz: ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly authorName: string;'
    return:
      type: string
- name: content
  uid: excel!Excel.Comment#content:member
  package: excel!
  fullName: content
  summary: >-
    Der Inhalt des Kommentars. Bei der Zeichenfolge handelt es sich um einfachen Text.


    \[[API-Satz: ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'content: string;'
    return:
      type: string
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/12-comment/comment-basics.yaml\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Comments\");\n    const comment = sheet.comments.getItemAt(0);\n    comment.content = \"PLEASE add headers here.\";\n    await context.sync();\n});\n```"
- name: contentType
  uid: excel!Excel.Comment#contentType:member
  package: excel!
  fullName: contentType
  summary: >-
    Ruft den Inhaltstyp des Kommentars ab.


    \[[API-Satz: ExcelApi 1.12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly contentType: Excel.ContentType | "Plain" | "Mention";'
    return:
      type: <xref uid="excel!Excel.ContentType:enum" /> | "Plain" | "Mention"
- name: context
  uid: excel!Excel.Comment#context:member
  package: excel!
  fullName: context
  summary: Der dem Objekt zugeordnete Anforderungskontext. Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: creationDate
  uid: excel!Excel.Comment#creationDate:member
  package: excel!
  fullName: creationDate
  summary: >-
    Ruft den Erstellungszeitpunkt des Kommentars ab. Gibt Null zurück, wenn der Kommentar aus einer Notiz konvertiert wurde, da der Kommentar kein Erstellungsdatum hat.


    \[[API-Satz: ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly creationDate: Date;'
    return:
      type: Date
- name: id
  uid: excel!Excel.Comment#id:member
  package: excel!
  fullName: id
  summary: >-
    Gibt den Kommentarbezeichner an.


    \[[API-Satz: ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly id: string;'
    return:
      type: string
- name: mentions
  uid: excel!Excel.Comment#mentions:member
  package: excel!
  fullName: mentions
  summary: >-
    Ruft die Entitäten (z. B. Personen) ab, die in Kommentaren erwähnt werden.


    \[[API-Satz: ExcelApi 1.11](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly mentions: Excel.CommentMention[];'
    return:
      type: <xref uid="excel!Excel.CommentMention:interface" />[]
- name: replies
  uid: excel!Excel.Comment#replies:member
  package: excel!
  fullName: replies
  summary: >-
    Stellt eine Sammlung der Antwortobjekte dar, die dem Kommentar zugeordnet sind.


    \[[API-Satz: ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly replies: Excel.CommentReplyCollection;'
    return:
      type: <xref uid="excel!Excel.CommentReplyCollection:class" />
- name: resolved
  uid: excel!Excel.Comment#resolved:member
  package: excel!
  fullName: resolved
  summary: >-
    Der Status des Kommentarthreads. Der Wert "true" bedeutet, dass der Kommentarthread aufgelöst wird.


    \[[API-Satz: ExcelApi 1.11](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'resolved: boolean;'
    return:
      type: boolean
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/12-comment/comment-resolution.yaml\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Comments\");\n    sheet.comments.getItemAt(0).resolved = true;\n    await context.sync();\n});\n```"
- name: richContent
  uid: excel!Excel.Comment#richContent:member
  package: excel!
  fullName: richContent
  summary: >-
    Ruft den inhaltreichen Kommentar ab (z. B. Erwähnungen in Kommentaren). Diese Zeichenfolge sollte endbenutzern nicht angezeigt werden. Ihr Add-in sollte dies nur verwenden, um umfangreiche Kommentarinhalte zu analysieren.


    \[[API-Satz: ExcelApi 1.11](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly richContent: string;'
    return:
      type: string
methods:
- name: delete()
  uid: excel!Excel.Comment#delete:member(1)
  package: excel!
  fullName: delete()
  summary: >-
    Löscht den Kommentar und alle verbundenen Antworten.


    \[[API-Satz: ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/12-comment/comment-basics.yaml\nawait Excel.run(async (context) => {\n    context.workbook.comments.getItemByCell(\"Comments!A2\").delete();\n    await context.sync();\n});\n```"
- name: getLocation()
  uid: excel!Excel.Comment#getLocation:member(1)
  package: excel!
  fullName: getLocation()
  summary: >-
    Ruft die Zelle ab, in der sich dieser Kommentar befindet.


    \[[API-Satz: ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getLocation(): Excel.Range;'
    return:
      type: <xref uid="excel!Excel.Range:class" />
      description: ''
- name: load(options)
  uid: excel!Excel.Comment#load:member(1)
  package: excel!
  fullName: load(options)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.CommentLoadOptions): Excel.Comment;'
    parameters:
    - id: options
      description: Stellt Optionen für die Eigenschaften des zu ladenden Objekts zur Verfügung.
      type: <xref uid="excel!Excel.Interfaces.CommentLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.Comment:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.Comment#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Comment;'
    parameters:
    - id: propertyNames
      description: Eine durch Trennzeichen getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.Comment:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/12-comment/comment-basics.yaml\nawait Excel.run(async (context) => {\n    const comment = context.workbook.comments.getItemByCell(\"Comments!A2\");\n    comment.load([\"authorEmail\", \"authorName\", \"creationDate\"]);\n    await context.sync();\n\n    console.log(`${comment.creationDate.toDateString()}: ${comment.authorName} (${comment.authorEmail})`);\n    await context.sync();\n});\n```"
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.Comment#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Excel.Comment;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` ist eine durch Trennzeichen getrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und eine durch Trennzeichen getrennte Zeichenfolge, die die zu ladenden `propertyNamesAndPaths.expand` Navigationseigenschaften angibt.'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="excel!Excel.Comment:class" />
      description: ''
- name: set(properties, options)
  uid: excel!Excel.Comment#set:member(1)
  package: excel!
  fullName: set(properties, options)
  summary: Legt mehrere Eigenschaften eines Objekts gleichzeitig fest. Sie können entweder ein einfaches Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs übergeben.
  remarks: >-
    Diese Methode verfügt über die folgende zusätzliche Signatur:


    `set(properties: Excel.Comment): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.CommentUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: Ein JavaScript-Objekt mit Eigenschaften, die isomorph zu den Eigenschaften des Objekts strukturiert sind, für das die Methode aufgerufen wird.
      type: <xref uid="excel!Excel.Interfaces.CommentUpdateData:interface" />
    - id: options
      description: Bietet eine Option zum Unterdrücken von Fehlern, wenn das Eigenschaftenobjekt versucht, schreibgeschützte Eigenschaften zu setzen.
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: excel!Excel.Comment#set:member(2)
  package: excel!
  fullName: set(properties)
  summary: Legt mehrere Eigenschaften für das Objekt gleichzeitig fest, basierend auf einem vorhandenen geladenen Objekt.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Excel.Comment): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="excel!Excel.Comment:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: excel!Excel.Comment#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: Überschreibt die JavaScript-Methode, um eine nützlichere Ausgabe zu ermöglichen, wenn `toJSON()` ein API-Objekt an `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->ruft wiederum die Methode `toJSON` des Objekts auf, das an das Objekt übergeben wird.) Während das ursprüngliche Excel.Comment-Objekt ein API-Objekt ist, gibt die Methode ein einfaches `toJSON``Excel.Interfaces.CommentData`<!-- -->), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.CommentData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.CommentData:interface" />
      description: ''
- name: updateMentions(contentWithMentions)
  uid: excel!Excel.Comment#updateMentions:member(1)
  package: excel!
  fullName: updateMentions(contentWithMentions)
  summary: >-
    Aktualisiert den Kommentarinhalt mit einer speziell formatierten Zeichenfolge und einer Liste von Erwähnungen.


    \[[API-Satz: ExcelApi 1.11](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'updateMentions(contentWithMentions: Excel.CommentRichContent): void;'
    parameters:
    - id: contentWithMentions
      description: Der Inhalt des Kommentars. Diese enthält eine speziell formatierte Zeichenfolge und eine Liste von Erwähnungen, die in der Zeichenfolge analysiert werden, wenn sie von Excel angezeigt wird.
      type: <xref uid="excel!Excel.CommentRichContent:interface" />
    return:
      type: void
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: cbc4a770273c848b72ade27bc9d881abe09ec48f
  ms.sourcegitcommit: d14ccd5d21286fdad1d3451f3ac745c603d9400d
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 01/13/2021
  ms.locfileid: "49858256"
