### YamlMime:TSType
name: Excel.RangeAreas
uid: excel!Excel.RangeAreas:class
package: excel!
fullName: Excel.RangeAreas
summary: >-
  RangeAreas stellt eine Auflistung von einem oder mehreren rechteckigen Bereichen im selben Arbeitsblatt dar. Wenn Sie erfahren möchten, wie Sie nicht überflüssige Bereiche verwenden, lesen Sie "Arbeiten mit mehreren Bereichen [gleichzeitig in Excel-Add-Ins".](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-multiple-ranges)<!-- -->.


  \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: address
  uid: excel!Excel.RangeAreas#address:member
  package: excel!
  fullName: address
  summary: >-
    Gibt den RangeAreas-Verweis im A1-Format zurück. Der Adresswert enthält den Arbeitsblattnamen für jeden rechteckigen Zellenblock (z. B. "Sheet1! A1:B4, Sheet1! D1:D4").


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly address: string;'
    return:
      type: string
- name: addressLocal
  uid: excel!Excel.RangeAreas#addressLocal:member
  package: excel!
  fullName: addressLocal
  summary: >-
    Gibt den RangeAreas-Verweis im Benutzergebietsprofil zurück.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly addressLocal: string;'
    return:
      type: string
- name: areaCount
  uid: excel!Excel.RangeAreas#areaCount:member
  package: excel!
  fullName: areaCount
  summary: >-
    Gibt die Anzahl der rechteckigen Bereiche zurück, die dieses RangeAreas-Objekt bilden.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly areaCount: number;'
    return:
      type: number
- name: areas
  uid: excel!Excel.RangeAreas#areas:member
  package: excel!
  fullName: areas
  summary: >-
    Gibt eine Sammlung der rechteckigen Bereiche zurück, die dieses RangeAreas-Objekt bilden.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly areas: Excel.RangeCollection;'
    return:
      type: <xref uid="excel!Excel.RangeCollection:class" />
- name: cellCount
  uid: excel!Excel.RangeAreas#cellCount:member
  package: excel!
  fullName: cellCount
  summary: >-
    Gibt die Anzahl der Zellen in RangeAreas-Objekt zurück und addiert dabei die Zellanzahl aller rechteckigen Einzelbereiche. Gibt -1 zurück, wenn die Zellanzahl 2^31-1 (2,147,483,647) überschreitet.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly cellCount: number;'
    return:
      type: number
- name: conditionalFormats
  uid: excel!Excel.RangeAreas#conditionalFormats:member
  package: excel!
  fullName: conditionalFormats
  summary: >-
    Gibt eine Sammlung von ConditionalFormats zurück, die sich mit Zellen in diesem RangeAreas-Objekt überschneiden.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly conditionalFormats: Excel.ConditionalFormatCollection;'
    return:
      type: <xref uid="excel!Excel.ConditionalFormatCollection:class" />
- name: context
  uid: excel!Excel.RangeAreas#context:member
  package: excel!
  fullName: context
  summary: Der dem Objekt zugeordnete Anforderungskontext. Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: dataValidation
  uid: excel!Excel.RangeAreas#dataValidation:member
  package: excel!
  fullName: dataValidation
  summary: >-
    Gibt ein dataValidation-Objekt für alle Bereiche im RangeAreas zurück.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly dataValidation: Excel.DataValidation;'
    return:
      type: <xref uid="excel!Excel.DataValidation:class" />
- name: format
  uid: excel!Excel.RangeAreas#format:member
  package: excel!
  fullName: format
  summary: >-
    Gibt ein RangeFormat -Objekt zurück, das die Schriftart, Füllung, Rahmen, Ausrichtung und andere Eigenschaften für alle Bereiche im RangeAreas -Objekt kapselt.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly format: Excel.RangeFormat;'
    return:
      type: <xref uid="excel!Excel.RangeFormat:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/42-range/range-areas.yaml\nawait Excel.run(async (context) => {\n\n    const sheet = context.workbook.worksheets.getActiveWorksheet();\n    const usedRange = sheet.getUsedRange();\n\n    // Find the ranges with formulas.\n    const formulaRanges = usedRange.getSpecialCells(\"Formulas\");\n    formulaRanges.format.fill.color = \"lightgreen\";\n\n    await context.sync();\n});\n```"
- name: isEntireColumn
  uid: excel!Excel.RangeAreas#isEntireColumn:member
  package: excel!
  fullName: isEntireColumn
  summary: >-
    Gibt an, ob alle Bereiche in diesem #A0 ganze Spalten darstellen (z. B. "A:C, F:Z").


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly isEntireColumn: boolean;'
    return:
      type: boolean
- name: isEntireRow
  uid: excel!Excel.RangeAreas#isEntireRow:member
  package: excel!
  fullName: isEntireRow
  summary: >-
    Gibt an, ob alle Bereiche in diesem RangeAreas -Objekt ganze Zeilen darstellen (z. B. "1:3, 5:7").


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly isEntireRow: boolean;'
    return:
      type: boolean
- name: style
  uid: excel!Excel.RangeAreas#style:member
  package: excel!
  fullName: style
  summary: >-
    Stellt die Formatvorlage für alle Bereiche in diesem RangeAreas-Objekt dar. Wenn die Formatvorlagen der Zellen inkonsistent sind, wird NULL zurückgegeben. Bei benutzerdefinierten Formatvorlagen wird der Formatvorlagenname zurückgegeben. Bei integrierten Formatvorlagen wird eine Zeichenfolge zurückgegeben, die einen Wert in der BuiltInStyle-Enumeration darstellt.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'style: string;'
    return:
      type: string
- name: worksheet
  uid: excel!Excel.RangeAreas#worksheet:member
  package: excel!
  fullName: worksheet
  summary: >-
    Gibt das Arbeitsblatt für das aktuelle RangeAreas zurück.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly worksheet: Excel.Worksheet;'
    return:
      type: <xref uid="excel!Excel.Worksheet:class" />
methods:
- name: calculate()
  uid: excel!Excel.RangeAreas#calculate:member(1)
  package: excel!
  fullName: calculate()
  summary: >-
    Berechnet alle Zellen in RangeAreas.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'calculate(): void;'
    return:
      type: void
      description: ''
- name: clear(applyTo)
  uid: excel!Excel.RangeAreas#clear:member(1)
  package: excel!
  fullName: clear(applyTo)
  summary: >-
    Löscht Werte, Format, Füllung, Rahmen usw. in jedem der Bereiche, die dieses RangeAreas-Objekt bilden.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'clear(applyTo?: Excel.ClearApplyTo): void;'
    parameters:
    - id: applyTo
      description: Optional. Bestimmt den Typ der Löschaktion. Weitere Informationen finden Sie unter Excel.ClearApplyTo. Der Standardwert ist "All".
      type: <xref uid="excel!Excel.ClearApplyTo:enum" />
    return:
      type: void
      description: ''
- name: clear(applyToString)
  uid: excel!Excel.RangeAreas#clear:member(2)
  package: excel!
  fullName: clear(applyToString)
  summary: >-
    Löscht Werte, Format, Füllung, Rahmen usw. in jedem der Bereiche, die dieses RangeAreas-Objekt bilden.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'clear(applyToString?: "All" | "Formats" | "Contents" | "Hyperlinks" | "RemoveHyperlinks"): void;'
    parameters:
    - id: applyToString
      description: Optional. Bestimmt den Typ der Löschaktion. Weitere Informationen finden Sie unter Excel.ClearApplyTo. Der Standardwert ist "All".
      type: "\"All\" | \"Formats\" | \"Contents\" | \"Hyperlinks\" | \"RemoveHyperlinks\""
    return:
      type: void
      description: ''
- name: convertDataTypeToText()
  uid: excel!Excel.RangeAreas#convertDataTypeToText:member(1)
  package: excel!
  fullName: convertDataTypeToText()
  summary: >-
    Konvertiert alle Zellen in RangeAreas mit Datentypen in Text.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'convertDataTypeToText(): void;'
    return:
      type: void
      description: ''
- name: convertToLinkedDataType(serviceID, languageCulture)
  uid: excel!Excel.RangeAreas#convertToLinkedDataType:member(1)
  package: excel!
  fullName: convertToLinkedDataType(serviceID, languageCulture)
  summary: >-
    Konvertiert alle Zellen in RangeAreas in den verknüpften Datentyp.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'convertToLinkedDataType(serviceID: number, languageCulture: string): void;'
    parameters:
    - id: serviceID
      description: Die Dienst-ID, die zum Abfragen der Daten verwendet wird.
      type: number
    - id: languageCulture
      description: Sprachkultur, nach der der Dienst abgefragt werden soll.
      type: string
    return:
      type: void
      description: ''
- name: copyFrom(sourceRange, copyType, skipBlanks, transpose)
  uid: excel!Excel.RangeAreas#copyFrom:member(1)
  package: excel!
  fullName: copyFrom(sourceRange, copyType, skipBlanks, transpose)
  summary: >-
    Kopiert Daten oder Formatierung von Zellen aus dem Quellbereich oder RangeAreas in das aktuelle RangeAreas-Objekt. Das Ziel rangeAreas kann eine andere Größe haben als der Quellbereich oder RangeAreas. Das Ziel wird automatisch erweitert, wenn es kleiner als die Quelle ist.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'copyFrom(sourceRange: Range | RangeAreas | string, copyType?: Excel.RangeCopyType, skipBlanks?: boolean, transpose?: boolean): void;'
    parameters:
    - id: sourceRange
      description: Der Quellbereich oder RangeAreas, aus dem kopiert werden soll. Wenn das RangeAreas-Quell-RangeAreas mehrere Bereiche hat, muss das Formular erstellt werden können, indem vollständige Zeilen oder Spalten aus einem rechteckigen Bereich entfernt werden.
      type: <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeAreas:class" /> | string
    - id: copyType
      description: Der Typ der zu kopierende Zellendaten oder Formatierung. Der Standardwert ist "All".
      type: <xref uid="excel!Excel.RangeCopyType:enum" />
    - id: skipBlanks
      description: True, wenn leere Zellen im Quellbereich oder rangeAreas übersprungen werden. Der Standardwert ist „false“.
      type: boolean
    - id: transpose
      description: True, wenn die Zellen im RangeAreas-Ziel transponiert werden. Der Standardwert ist „false“.
      type: boolean
    return:
      type: void
      description: ''
- name: copyFrom(sourceRange, copyTypeString, skipBlanks, transpose)
  uid: excel!Excel.RangeAreas#copyFrom:member(2)
  package: excel!
  fullName: copyFrom(sourceRange, copyTypeString, skipBlanks, transpose)
  summary: >-
    Kopiert Daten oder Formatierung von Zellen aus dem Quellbereich oder RangeAreas in das aktuelle RangeAreas-Objekt. Das Ziel rangeAreas kann eine andere Größe haben als der Quellbereich oder RangeAreas. Das Ziel wird automatisch erweitert, wenn es kleiner als die Quelle ist.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'copyFrom(sourceRange: Range | RangeAreas | string, copyTypeString?: "All" | "Formulas" | "Values" | "Formats", skipBlanks?: boolean, transpose?: boolean): void;'
    parameters:
    - id: sourceRange
      description: Der Quellbereich oder RangeAreas, aus dem kopiert werden soll. Wenn das RangeAreas-Quell-RangeAreas mehrere Bereiche hat, muss das Formular erstellt werden können, indem vollständige Zeilen oder Spalten aus einem rechteckigen Bereich entfernt werden.
      type: <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeAreas:class" /> | string
    - id: copyTypeString
      description: Der Typ der zu kopierende Zellendaten oder Formatierung. Der Standardwert ist "All".
      type: "\"All\" | \"Formulas\" | \"Values\" | \"Formats\""
    - id: skipBlanks
      description: True, wenn leere Zellen im Quellbereich oder rangeAreas übersprungen werden. Der Standardwert ist „false“.
      type: boolean
    - id: transpose
      description: True, wenn die Zellen im RangeAreas-Ziel transponiert werden. Der Standardwert ist „false“.
      type: boolean
    return:
      type: void
      description: ''
- name: getEntireColumn()
  uid: excel!Excel.RangeAreas#getEntireColumn:member(1)
  package: excel!
  fullName: getEntireColumn()
  summary: >-
    Gibt ein RangeAreas-Objekt zurück, das die gesamten Spalten von RangeAreas darstellt (wenn beispielsweise das aktuelle RangeAreas die Zellen "B4:E11, H2" darstellt, wird ein RangeAreas-Objekt zurückgegeben, das die Spalten "B:E, H:H" darstellt).


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getEntireColumn(): Excel.RangeAreas;'
    return:
      type: <xref uid="excel!Excel.RangeAreas:class" />
      description: ''
- name: getEntireRow()
  uid: excel!Excel.RangeAreas#getEntireRow:member(1)
  package: excel!
  fullName: getEntireRow()
  summary: >-
    Gibt ein RangeAreas-Objekt zurück, das die gesamten Zeilen von RangeAreas darstellt (wenn beispielsweise das aktuelle RangeAreas die Zellen "B4:E11" darstellt, wird ein RangeAreas-Objekt zurückgegeben, das die Zeilen "4:11" darstellt).


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getEntireRow(): Excel.RangeAreas;'
    return:
      type: <xref uid="excel!Excel.RangeAreas:class" />
      description: ''
- name: getIntersection(anotherRange)
  uid: excel!Excel.RangeAreas#getIntersection:member(1)
  package: excel!
  fullName: getIntersection(anotherRange)
  summary: >-
    Gibt das RangeAreas-Objekt zurück, das die Schnittmenge der angegebenen Bereiche oder RangeAreas darstellt. Wenn keine Schnittmenge gefunden wird, wird ein ItemNotFound-Fehler ausgelöst.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getIntersection(anotherRange: Range | RangeAreas | string): Excel.RangeAreas;'
    parameters:
    - id: anotherRange
      description: Der Bereich, das RangeAreas-Objekt oder die Bereichsadresse, mit dem die Schnittmenge bestimmt wird.
      type: <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeAreas:class" /> | string
    return:
      type: <xref uid="excel!Excel.RangeAreas:class" />
      description: ''
- name: getIntersectionOrNullObject(anotherRange)
  uid: excel!Excel.RangeAreas#getIntersectionOrNullObject:member(1)
  package: excel!
  fullName: getIntersectionOrNullObject(anotherRange)
  summary: >-
    Gibt das RangeAreas-Objekt zurück, das die Schnittmenge der angegebenen Bereiche oder RangeAreas darstellt. Wenn keine Schnittmenge gefunden wird, wird ein NULL-Objekt zurückgegeben.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getIntersectionOrNullObject(anotherRange: Range | RangeAreas | string): Excel.RangeAreas;'
    parameters:
    - id: anotherRange
      description: Der Bereich, RangeAreas oder die Adresse, die zum Bestimmen der Schnittmenge verwendet wird.
      type: <xref uid="excel!Excel.Range:class" /> | <xref uid="excel!Excel.RangeAreas:class" /> | string
    return:
      type: <xref uid="excel!Excel.RangeAreas:class" />
      description: ''
- name: getOffsetRangeAreas(rowOffset, columnOffset)
  uid: excel!Excel.RangeAreas#getOffsetRangeAreas:member(1)
  package: excel!
  fullName: getOffsetRangeAreas(rowOffset, columnOffset)
  summary: >-
    Gibt ein RangeAreas-Objekt zurück, das um den angegebenen Zeilen- und Spaltenoffset verschoben ist. Die Dimension des zurückgegebenen RangeAreas stimmt mit dem ursprünglichen Objekt überein. Wenn das sich ergebende RangeAreas außerhalb der Grenzen des Arbeitsblattrasters zu liegen kommt, wird ein Fehler ausgelöst.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getOffsetRangeAreas(rowOffset: number, columnOffset: number): Excel.RangeAreas;'
    parameters:
    - id: rowOffset
      description: Die Anzahl der Zeilen (positiv, negativ oder 0), um die rangeAreas versetzt werden soll. Bei positiven Werten erfolgt der Versatz nach unten, bei negativen Werten nach oben.
      type: number
    - id: columnOffset
      description: Die Anzahl der Spalten (positiv, negativ oder 0), um die rangeAreas versetzt werden soll. Bei positiven Werten erfolgt der Versatz nach rechts, bei negativen Werten nach links.
      type: number
    return:
      type: <xref uid="excel!Excel.RangeAreas:class" />
      description: ''
- name: getSpecialCells(cellType, cellValueType)
  uid: excel!Excel.RangeAreas#getSpecialCells:member(1)
  package: excel!
  fullName: getSpecialCells(cellType, cellValueType)
  summary: >-
    Gibt ein RangeAreas-Objekt zurück, das alle Zellen darstellt, die dem angegebenen Typ und Wert entsprechen. Löst einen Fehler aus, wenn keine besonderen Zellen gefunden werden, die den Kriterien entsprechen.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSpecialCells(cellType: Excel.SpecialCellType, cellValueType?: Excel.SpecialCellValueType): Excel.RangeAreas;'
    parameters:
    - id: cellType
      description: Der Typ der zellen, die enthalten sein soll.
      type: <xref uid="excel!Excel.SpecialCellType:enum" />
    - id: cellValueType
      description: Wenn cellType entweder Konstanten oder Formeln ist, wird dieses Argument verwendet, um zu bestimmen, welche Arten von Zellen in das Ergebnis enthalten sein sollten. Diese Werte können kombiniert werden, um mehr als einen Typ zurückzukehren. Standardmäßig werden alle Konstanten oder Formeln unabhängig vom Typ ausgewählt.
      type: <xref uid="excel!Excel.SpecialCellValueType:enum" />
    return:
      type: <xref uid="excel!Excel.RangeAreas:class" />
      description: ''
- name: getSpecialCells(cellTypeString, cellValueType)
  uid: excel!Excel.RangeAreas#getSpecialCells:member(2)
  package: excel!
  fullName: getSpecialCells(cellTypeString, cellValueType)
  summary: >-
    Gibt ein RangeAreas-Objekt zurück, das alle Zellen darstellt, die dem angegebenen Typ und Wert entsprechen. Löst einen Fehler aus, wenn keine besonderen Zellen gefunden werden, die den Kriterien entsprechen.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSpecialCells(cellTypeString: "ConditionalFormats" | "DataValidations" | "Blanks" | "Constants" | "Formulas" | "SameConditionalFormat" | "SameDataValidation" | "Visible", cellValueType?: "All" | "Errors" | "ErrorsLogical" | "ErrorsNumbers" | "ErrorsText" | "ErrorsLogicalNumber" | "ErrorsLogicalText" | "ErrorsNumberText" | "Logical" | "LogicalNumbers" | "LogicalText" | "LogicalNumbersText" | "Numbers" | "NumbersText" | "Text"): Excel.RangeAreas;'
    parameters:
    - id: cellTypeString
      description: Der Typ der zellen, die enthalten sein soll.
      type: "\"ConditionalFormats\" | \"DataValidations\" | \"Blanks\" | \"Constants\" | \"Formulas\" | \"SameConditionalFormat\" | \"SameDataValidation\" | \"Visible\""
    - id: cellValueType
      description: Wenn cellType entweder Konstanten oder Formeln ist, wird dieses Argument verwendet, um zu bestimmen, welche Arten von Zellen in das Ergebnis enthalten sein sollten. Diese Werte können kombiniert werden, um mehr als einen Typ zurückzukehren. Standardmäßig werden alle Konstanten oder Formeln unabhängig vom Typ ausgewählt.
      type: "\"All\" | \"Errors\" | \"ErrorsLogical\" | \"ErrorsNumbers\" | \"ErrorsText\" | \"ErrorsLogicalNumber\" | \"ErrorsLogicalText\" | \"ErrorsNumberText\" | \"Logical\" | \"LogicalNumbers\" | \"LogicalText\" | \"LogicalNumbersText\" | \"Numbers\" | \"NumbersText\" | \"Text\""
    return:
      type: <xref uid="excel!Excel.RangeAreas:class" />
      description: ''
- name: getSpecialCellsOrNullObject(cellType, cellValueType)
  uid: excel!Excel.RangeAreas#getSpecialCellsOrNullObject:member(1)
  package: excel!
  fullName: getSpecialCellsOrNullObject(cellType, cellValueType)
  summary: >-
    Gibt ein RangeAreas-Objekt zurück, das alle Zellen darstellt, die dem angegebenen Typ und Wert entsprechen. Gibt ein NULL-Objekt zurück, wenn keine besonderen Zellen gefunden werden, die den Kriterien entsprechen.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSpecialCellsOrNullObject(cellType: Excel.SpecialCellType, cellValueType?: Excel.SpecialCellValueType): Excel.RangeAreas;'
    parameters:
    - id: cellType
      description: Der Typ der zellen, die enthalten sein soll.
      type: <xref uid="excel!Excel.SpecialCellType:enum" />
    - id: cellValueType
      description: Wenn cellType entweder Konstanten oder Formeln ist, wird dieses Argument verwendet, um zu bestimmen, welche Arten von Zellen in das Ergebnis enthalten sein sollten. Diese Werte können kombiniert werden, um mehr als einen Typ zurückzukehren. Standardmäßig werden alle Konstanten oder Formeln unabhängig vom Typ ausgewählt.
      type: <xref uid="excel!Excel.SpecialCellValueType:enum" />
    return:
      type: <xref uid="excel!Excel.RangeAreas:class" />
      description: ''
- name: getSpecialCellsOrNullObject(cellTypeString, cellValueType)
  uid: excel!Excel.RangeAreas#getSpecialCellsOrNullObject:member(2)
  package: excel!
  fullName: getSpecialCellsOrNullObject(cellTypeString, cellValueType)
  summary: >-
    Gibt ein RangeAreas-Objekt zurück, das alle Zellen darstellt, die dem angegebenen Typ und Wert entsprechen. Gibt ein NULL-Objekt zurück, wenn keine besonderen Zellen gefunden werden, die den Kriterien entsprechen.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSpecialCellsOrNullObject(cellTypeString: "ConditionalFormats" | "DataValidations" | "Blanks" | "Constants" | "Formulas" | "SameConditionalFormat" | "SameDataValidation" | "Visible", cellValueType?: "All" | "Errors" | "ErrorsLogical" | "ErrorsNumbers" | "ErrorsText" | "ErrorsLogicalNumber" | "ErrorsLogicalText" | "ErrorsNumberText" | "Logical" | "LogicalNumbers" | "LogicalText" | "LogicalNumbersText" | "Numbers" | "NumbersText" | "Text"): Excel.RangeAreas;'
    parameters:
    - id: cellTypeString
      description: Der Typ der zellen, die enthalten sein soll.
      type: "\"ConditionalFormats\" | \"DataValidations\" | \"Blanks\" | \"Constants\" | \"Formulas\" | \"SameConditionalFormat\" | \"SameDataValidation\" | \"Visible\""
    - id: cellValueType
      description: Wenn cellType entweder Konstanten oder Formeln ist, wird dieses Argument verwendet, um zu bestimmen, welche Arten von Zellen in das Ergebnis enthalten sein sollten. Diese Werte können kombiniert werden, um mehr als einen Typ zurückzukehren. Standardmäßig werden alle Konstanten oder Formeln unabhängig vom Typ ausgewählt.
      type: "\"All\" | \"Errors\" | \"ErrorsLogical\" | \"ErrorsNumbers\" | \"ErrorsText\" | \"ErrorsLogicalNumber\" | \"ErrorsLogicalText\" | \"ErrorsNumberText\" | \"Logical\" | \"LogicalNumbers\" | \"LogicalText\" | \"LogicalNumbersText\" | \"Numbers\" | \"NumbersText\" | \"Text\""
    return:
      type: <xref uid="excel!Excel.RangeAreas:class" />
      description: ''
- name: getTables(fullyContained)
  uid: excel!Excel.RangeAreas#getTables:member(1)
  package: excel!
  fullName: getTables(fullyContained)
  summary: >-
    Gibt eine bereichsbezogene Sammlung von Tabellen zurück, die sich mit einem beliebigen Bereich in diesem RangeAreas-Objekt überschneiden.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getTables(fullyContained?: boolean): Excel.TableScopedCollection;'
    parameters:
    - id: fullyContained
      description: Bei "true" werden nur Tabellen zurückgegeben, die vollständig innerhalb der Bereichsgrenzen enthalten sind. Der Standardwert ist „false“.
      type: boolean
    return:
      type: <xref uid="excel!Excel.TableScopedCollection:class" />
      description: ''
- name: getUsedRangeAreas(valuesOnly)
  uid: excel!Excel.RangeAreas#getUsedRangeAreas:member(1)
  package: excel!
  fullName: getUsedRangeAreas(valuesOnly)
  summary: >-
    Gibt das verwendete RangeAreas zurück, das alle verwendeten Bereiche einzelner rechteckiger Bereiche im RangeAreas-Objekt umfasst. Wenn keine verwendeten Zellen in RangeAreas enthalten sind, wird der ItemNotFound-Fehler ausgelöst.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getUsedRangeAreas(valuesOnly?: boolean): Excel.RangeAreas;'
    parameters:
    - id: valuesOnly
      description: Gibt an, ob nur Zellen mit Werten als verwendete Zellen verwendet werden. Der Standardwert ist „false“.
      type: boolean
    return:
      type: <xref uid="excel!Excel.RangeAreas:class" />
      description: ''
- name: getUsedRangeAreasOrNullObject(valuesOnly)
  uid: excel!Excel.RangeAreas#getUsedRangeAreasOrNullObject:member(1)
  package: excel!
  fullName: getUsedRangeAreasOrNullObject(valuesOnly)
  summary: >-
    Gibt das verwendete RangeAreas zurück, das alle verwendeten Bereiche einzelner rechteckiger Bereiche im RangeAreas-Objekt umfasst. Wenn in RangeAreas keine verwendeten Zellen enthalten sind, wird ein Nullobjekt zurückgegeben.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getUsedRangeAreasOrNullObject(valuesOnly?: boolean): Excel.RangeAreas;'
    parameters:
    - id: valuesOnly
      description: Gibt an, ob nur Zellen mit Werten als verwendete Zellen verwendet werden.
      type: boolean
    return:
      type: <xref uid="excel!Excel.RangeAreas:class" />
      description: ''
- name: load(options)
  uid: excel!Excel.RangeAreas#load:member(1)
  package: excel!
  fullName: load(options)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.RangeAreasLoadOptions): Excel.RangeAreas;'
    parameters:
    - id: options
      description: Stellt Optionen für die Eigenschaften des zu ladenden Objekts zur Verfügung.
      type: <xref uid="excel!Excel.Interfaces.RangeAreasLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.RangeAreas:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.RangeAreas#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.RangeAreas;'
    parameters:
    - id: propertyNames
      description: Eine durch Trennzeichen getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.RangeAreas:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.RangeAreas#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Excel.RangeAreas;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` ist eine durch Trennzeichen getrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und eine durch Trennzeichen getrennte Zeichenfolge, die die zu ladenden `propertyNamesAndPaths.expand` Navigationseigenschaften angibt.'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="excel!Excel.RangeAreas:class" />
      description: ''
- name: set(properties, options)
  uid: excel!Excel.RangeAreas#set:member(1)
  package: excel!
  fullName: set(properties, options)
  summary: Legt mehrere Eigenschaften eines Objekts gleichzeitig fest. Sie können entweder ein einfaches Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs übergeben.
  remarks: >-
    Diese Methode verfügt über die folgende zusätzliche Signatur:


    `set(properties: Excel.RangeAreas): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.RangeAreasUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: Ein JavaScript-Objekt mit Eigenschaften, die isomorph zu den Eigenschaften des Objekts strukturiert sind, für das die Methode aufgerufen wird.
      type: <xref uid="excel!Excel.Interfaces.RangeAreasUpdateData:interface" />
    - id: options
      description: Bietet eine Option zum Unterdrücken von Fehlern, wenn das Eigenschaftenobjekt versucht, schreibgeschützte Eigenschaften zu setzen.
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: excel!Excel.RangeAreas#set:member(2)
  package: excel!
  fullName: set(properties)
  summary: Legt mehrere Eigenschaften für das Objekt gleichzeitig fest, basierend auf einem vorhandenen geladenen Objekt.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Excel.RangeAreas): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="excel!Excel.RangeAreas:class" />
    return:
      type: void
      description: ''
- name: setDirty()
  uid: excel!Excel.RangeAreas#setDirty:member(1)
  package: excel!
  fullName: setDirty()
  summary: >-
    Legt für das RangeAreas Neuberechnung bei der nächsten auszuführenden Neuberechnung fest.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setDirty(): void;'
    return:
      type: void
      description: ''
- name: toJSON()
  uid: excel!Excel.RangeAreas#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: Überschreibt die JavaScript-Methode, um eine nützlichere Ausgabe zu ermöglichen, wenn `toJSON()` ein API-Objekt an `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->ruft wiederum die Methode `toJSON` des Objekts auf, das an das Objekt übergeben wird.) Während das ursprüngliche Excel.RangeAreas-Objekt ein API-Objekt ist, gibt die Methode ein einfaches `toJSON``Excel.Interfaces.RangeAreasData`<!-- -->), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.RangeAreasData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.RangeAreasData:interface" />
      description: ''
- name: track()
  uid: excel!Excel.RangeAreas#track:member(1)
  package: excel!
  fullName: track()
  summary: Nachverfolgung des Objekts zwecks automatischer Anpassung auf der Grundlage der umgebenden Änderungen im Dokument. Dieser Aufruf ist eine Kurzhand für `context.trackedObjects.add(thisObject)`<!-- -->. Wenn Sie dieses Objekt aufrufübergreifend und außerhalb der sequenziellen Ausführung eines Batches ".run" verwenden und beim Festlegen einer Eigenschaft oder aufrufen einer Methode für das Objekt den Fehler "InvalidObjectPath" erhalten, musste das Objekt der nachverfolgten Objektsammlung hinzugefügt werden, als das Objekt zum ersten Mal erstellt `.sync` wurde.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'track(): Excel.RangeAreas;'
    return:
      type: <xref uid="excel!Excel.RangeAreas:class" />
      description: ''
- name: untrack()
  uid: excel!Excel.RangeAreas#untrack:member(1)
  package: excel!
  fullName: untrack()
  summary: Gibt den diesem Objekt zugewiesenen Arbeitsspeicher frei, wenn das Objekt zuvor nachverfolgt wurde. Dieser Aufruf ist kurz für `context.trackedObjects.remove(thisObject)`<!-- -->. Viele nachverfolgte Objekte verlangsamen die Ausführung der Hostanwendung, also achten Sie darauf, alle hinzugefügten Objekte nach abgeschlossener Verwendung freizugeben. Sie müssen den Aufruf aufrufen, `context.sync()` bevor die Speicherfreigabe wirksam wird.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'untrack(): Excel.RangeAreas;'
    return:
      type: <xref uid="excel!Excel.RangeAreas:class" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 2f0a114f19f3ff6621bbb19a92901a42ee81f722
  ms.sourcegitcommit: d14ccd5d21286fdad1d3451f3ac745c603d9400d
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 01/13/2021
  ms.locfileid: "49861189"
