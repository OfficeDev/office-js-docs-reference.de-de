### YamlMime:TSType
name: Excel.CultureInfo
uid: excel!Excel.CultureInfo:class
package: excel!
fullName: Excel.CultureInfo
summary: >-
  Stellt Informationen basierend auf den aktuellen Systemkultureinstellungen zur Verfügung. Dazu gehören die Kulturnamen, Zahlenformatierungen und andere kulturabhängige Einstellungen.


  \[[API-Satz: ExcelApi 1.11](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: excel!Excel.CultureInfo#context:member
  package: excel!
  fullName: context
  summary: Der dem Objekt zugeordnete Anforderungskontext. Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: datetimeFormat
  uid: excel!Excel.CultureInfo#datetimeFormat:member
  package: excel!
  fullName: datetimeFormat
  summary: >-
    Definiert das kulturell geeignete Format der Anzeige von Datum und Uhrzeit. Dies basiert auf den aktuellen Systemkultureinstellungen.


    \[[API-Satz: ExcelApi 1.12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly datetimeFormat: Excel.DatetimeFormatInfo;'
    return:
      type: <xref uid="excel!Excel.DatetimeFormatInfo:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/50-workbook/culture-info-date-time.yaml\nawait Excel.run(async (context) => {\n  context.application.cultureInfo.datetimeFormat.load([\n    \"longDatePattern\",\n    \"shortDatePattern\",\n    \"dateSeparator\",\n    \"longTimePattern\",\n    \"timeSeparator\"\n  ]);\n  await context.sync();\n\n  // Use the cultural settings API to retrieve the user's system date and time settings.\n  const systemLongDatePattern = context.application.cultureInfo.datetimeFormat.longDatePattern;\n  const systemShortDatePattern = context.application.cultureInfo.datetimeFormat.shortDatePattern;\n  const systemDateSeparator = context.application.cultureInfo.datetimeFormat.dateSeparator;\n  const systemLongTimePattern = context.application.cultureInfo.datetimeFormat.longTimePattern;\n  const systemTimeSeparator = context.application.cultureInfo.datetimeFormat.timeSeparator;\n\n  // Write the date and time settings in your table. \n  const sheet = context.workbook.worksheets.getActiveWorksheet();\n  const dateTimeData = sheet.getRange(\"A2:B6\");\n  dateTimeData.values = [\n    [\"Long date\", systemLongDatePattern], \n    [\"Short date\", systemShortDatePattern], \n    [\"Date separator\", systemDateSeparator], \n    [\"Long time format\", systemLongTimePattern],\n    [\"Time separator\", systemTimeSeparator]\n  ];\n\n  sheet.tables\n    .getItemAt(0)\n    .getRange()\n    .format.autofitColumns();\n\n  await context.sync();\n});\n```"
- name: name
  uid: excel!Excel.CultureInfo#name:member
  package: excel!
  fullName: name
  summary: >-
    Ruft den Kulturnamen im Format "languagecode2-country/regioncode2" ab (z. B. "zh-cn" oder "en-us"). Dies basiert auf den aktuellen Systemeinstellungen.


    \[[API-Satz: ExcelApi 1.11](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly name: string;'
    return:
      type: string
- name: numberFormat
  uid: excel!Excel.CultureInfo#numberFormat:member
  package: excel!
  fullName: numberFormat
  summary: >-
    Definiert das kulturell geeignete Format der Anzeige von Zahlen. Dies basiert auf den aktuellen Systemkultureinstellungen.


    \[[API-Satz: ExcelApi 1.11](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly numberFormat: Excel.NumberFormatInfo;'
    return:
      type: <xref uid="excel!Excel.NumberFormatInfo:class" />
methods:
- name: load(options)
  uid: excel!Excel.CultureInfo#load:member(1)
  package: excel!
  fullName: load(options)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.CultureInfoLoadOptions): Excel.CultureInfo;'
    parameters:
    - id: options
      description: Stellt Optionen für die Eigenschaften des zu ladenden Objekts zur Verfügung.
      type: <xref uid="excel!Excel.Interfaces.CultureInfoLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.CultureInfo:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.CultureInfo#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.CultureInfo;'
    parameters:
    - id: propertyNames
      description: Eine durch Trennzeichen getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.CultureInfo:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.CultureInfo#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Excel.CultureInfo;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` ist eine durch Trennzeichen getrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und eine durch Trennzeichen getrennte Zeichenfolge, die die zu ladenden `propertyNamesAndPaths.expand` Navigationseigenschaften angibt.'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="excel!Excel.CultureInfo:class" />
      description: ''
- name: toJSON()
  uid: excel!Excel.CultureInfo#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: Überschreibt die JavaScript-Methode, um eine nützlichere Ausgabe zu ermöglichen, wenn `toJSON()` ein API-Objekt an `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->ruft wiederum die Methode `toJSON` des Objekts auf, das an das Objekt übergeben wird.) Während das ursprüngliche Excel.CultureInfo-Objekt ein API-Objekt ist, gibt die Methode ein einfaches `toJSON``Excel.Interfaces.CultureInfoData`<!-- -->), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.CultureInfoData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.CultureInfoData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: f9208c354ec99cc43321b8e73eda877a60a951d8
  ms.sourcegitcommit: d14ccd5d21286fdad1d3451f3ac745c603d9400d
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 01/13/2021
  ms.locfileid: "49854105"
