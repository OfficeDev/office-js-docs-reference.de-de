### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.PageLayout:class'
    summary: |-
      Stellt Layout-und Druckeinstellungen dar, die keine druckerspezifische Implementierung abhängig sind. Diese Einstellungen umfassen Ränder, Ausrichtung, Seitennummerierung, Titelzeilen und Druckbereich.

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.PageLayout
    fullName: Excel.PageLayout
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.PageLayout#blackAndWhite:member'
      - 'excel!Excel.PageLayout#bottomMargin:member'
      - 'excel!Excel.PageLayout#centerHorizontally:member'
      - 'excel!Excel.PageLayout#centerVertically:member'
      - 'excel!Excel.PageLayout#context:member'
      - 'excel!Excel.PageLayout#draftMode:member'
      - 'excel!Excel.PageLayout#firstPageNumber:member'
      - 'excel!Excel.PageLayout#footerMargin:member'
      - 'excel!Excel.PageLayout#getPrintArea:member(1)'
      - 'excel!Excel.PageLayout#getPrintAreaOrNullObject:member(1)'
      - 'excel!Excel.PageLayout#getPrintTitleColumns:member(1)'
      - 'excel!Excel.PageLayout#getPrintTitleColumnsOrNullObject:member(1)'
      - 'excel!Excel.PageLayout#getPrintTitleRows:member(1)'
      - 'excel!Excel.PageLayout#getPrintTitleRowsOrNullObject:member(1)'
      - 'excel!Excel.PageLayout#headerMargin:member'
      - 'excel!Excel.PageLayout#headersFooters:member'
      - 'excel!Excel.PageLayout#leftMargin:member'
      - 'excel!Excel.PageLayout#load:member(1)'
      - 'excel!Excel.PageLayout#load:member(2)'
      - 'excel!Excel.PageLayout#load:member(3)'
      - 'excel!Excel.PageLayout#orientation:member'
      - 'excel!Excel.PageLayout#paperSize:member'
      - 'excel!Excel.PageLayout#printComments:member'
      - 'excel!Excel.PageLayout#printErrors:member'
      - 'excel!Excel.PageLayout#printGridlines:member'
      - 'excel!Excel.PageLayout#printHeadings:member'
      - 'excel!Excel.PageLayout#printOrder:member'
      - 'excel!Excel.PageLayout#rightMargin:member'
      - 'excel!Excel.PageLayout#set:member(1)'
      - 'excel!Excel.PageLayout#set:member(2)'
      - 'excel!Excel.PageLayout#setPrintArea:member(1)'
      - 'excel!Excel.PageLayout#setPrintMargins:member(1)'
      - 'excel!Excel.PageLayout#setPrintMargins:member(2)'
      - 'excel!Excel.PageLayout#setPrintTitleColumns:member(1)'
      - 'excel!Excel.PageLayout#setPrintTitleRows:member(1)'
      - 'excel!Excel.PageLayout#toJSON:member(1)'
      - 'excel!Excel.PageLayout#topMargin:member'
      - 'excel!Excel.PageLayout#zoom:member'
  - uid: 'excel!Excel.PageLayout#blackAndWhite:member'
    summary: |-
      Die Option "Schwarzweißdruck" des Arbeitsblatts.

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: blackAndWhite
    fullName: blackAndWhite
    langs:
      - typeScript
    type: property
    syntax:
      content: 'blackAndWhite: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PageLayout#bottomMargin:member'
    summary: |-
      Der untere Seitenrand des Arbeitsblatts, der für das Drucken in Punkten verwendet werden soll.

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: bottomMargin
    fullName: bottomMargin
    langs:
      - typeScript
    type: property
    syntax:
      content: 'bottomMargin: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.PageLayout#centerHorizontally:member'
    summary: |-
      Das Arbeitsblatt Center horizontal kennzeichnet. Diese Kennzeichnung bestimmt, ob das Arbeitsblatt beim Druck horizontal zentriert wird.

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: centerHorizontally
    fullName: centerHorizontally
    langs:
      - typeScript
    type: property
    syntax:
      content: 'centerHorizontally: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a>Beispiele

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/54-worksheet/worksheet-page-layout.yaml
          await Excel.run(async (context) => {
              const farmSheet = context.workbook.worksheets.getItem("Print");
              farmSheet.pageLayout.centerHorizontally = true;
              farmSheet.pageLayout.centerVertically = true;
              await context.sync();
          });
          ```
  - uid: 'excel!Excel.PageLayout#centerVertically:member'
    summary: |-
      Das Arbeitsblatt Center Vertical Flag. Diese Kennzeichnung bestimmt, ob das Arbeitsblatt beim Druck vertikal zentriert wird.

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: centerVertically
    fullName: centerVertically
    langs:
      - typeScript
    type: property
    syntax:
      content: 'centerVertically: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a>Beispiele

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/54-worksheet/worksheet-page-layout.yaml
          await Excel.run(async (context) => {
              const farmSheet = context.workbook.worksheets.getItem("Print");
              farmSheet.pageLayout.centerHorizontally = true;
              farmSheet.pageLayout.centerVertically = true;
              await context.sync();
          });
          ```
  - uid: 'excel!Excel.PageLayout#context:member'
    summary: 'Der Anforderungskontext, der mit dem Objekt verknüpft ist. Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.PageLayout#draftMode:member'
    summary: |-
      Die Option Entwurfsmodus des Arbeitsblatts. Bei True wird das Blatt ohne Grafiken gedruckt.

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: draftMode
    fullName: draftMode
    langs:
      - typeScript
    type: property
    syntax:
      content: 'draftMode: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PageLayout#firstPageNumber:member'
    summary: |-
      Die erste Seitenzahl des Arbeitsblatts, die gedruckt werden soll. Der Wert NULL stellt die automatische Seitennummerierung dar.

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: firstPageNumber
    fullName: firstPageNumber
    langs:
      - typeScript
    type: property
    syntax:
      content: 'firstPageNumber: number | "";'
      return:
        type:
          - number | ""
  - uid: 'excel!Excel.PageLayout#footerMargin:member'
    summary: |-
      Der Fußzeilenrand des Arbeitsblatts (in Punkten), der beim Drucken verwendet werden soll.

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: footerMargin
    fullName: footerMargin
    langs:
      - typeScript
    type: property
    syntax:
      content: 'footerMargin: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.PageLayout#getPrintArea:member(1)'
    summary: |-
      Ruft das RangeAreas-Objekt ab, das aus einem oder mehreren rechteckigen Bereichen besteht und den Druckbereich für das Arbeitsblatt darstellt. Wenn kein Druckbereich vorhanden ist, wird ein ItemNotFound-Fehler ausgelöst.

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getPrintArea()
    fullName: getPrintArea()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPrintArea(): Excel.RangeAreas;'
      return:
        type:
          - 'excel!Excel.RangeAreas:class'
        description: ''
  - uid: 'excel!Excel.PageLayout#getPrintAreaOrNullObject:member(1)'
    summary: |-
      Ruft das RangeAreas-Objekt ab, das aus einem oder mehreren rechteckigen Bereichen besteht und den Druckbereich für das Arbeitsblatt darstellt. Wenn kein Druckbereich vorhanden ist, wird ein NULL-Objekt zurückgegeben.

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getPrintAreaOrNullObject()
    fullName: getPrintAreaOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPrintAreaOrNullObject(): Excel.RangeAreas;'
      return:
        type:
          - 'excel!Excel.RangeAreas:class'
        description: ''
  - uid: 'excel!Excel.PageLayout#getPrintTitleColumns:member(1)'
    summary: |-
      Ruft das Bereichsobjekt ab, das die Titelspalten darstellt.

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getPrintTitleColumns()
    fullName: getPrintTitleColumns()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPrintTitleColumns(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
  - uid: 'excel!Excel.PageLayout#getPrintTitleColumnsOrNullObject:member(1)'
    summary: |-
      Ruft das Bereichsobjekt ab, das die Titelspalten darstellt. Wenn es nicht festgelegt ist, wird ein NULL-Objekt zurückgegeben.

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getPrintTitleColumnsOrNullObject()
    fullName: getPrintTitleColumnsOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPrintTitleColumnsOrNullObject(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
  - uid: 'excel!Excel.PageLayout#getPrintTitleRows:member(1)'
    summary: |-
      Ruft das Bereichsobjekt ab, das die Titelzeilen darstellt.

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getPrintTitleRows()
    fullName: getPrintTitleRows()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPrintTitleRows(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
  - uid: 'excel!Excel.PageLayout#getPrintTitleRowsOrNullObject:member(1)'
    summary: |-
      Ruft das Bereichsobjekt ab, das die Titelzeilen darstellt. Wenn es nicht festgelegt ist, wird ein NULL-Objekt zurückgegeben.

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getPrintTitleRowsOrNullObject()
    fullName: getPrintTitleRowsOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPrintTitleRowsOrNullObject(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
  - uid: 'excel!Excel.PageLayout#headerMargin:member'
    summary: |-
      Der Kopfzeilenrand des Arbeitsblatts (in Punkten), der beim Drucken verwendet werden soll.

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: headerMargin
    fullName: headerMargin
    langs:
      - typeScript
    type: property
    syntax:
      content: 'headerMargin: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.PageLayout#headersFooters:member'
    summary: |-
      Kopf- und Fußzeilenkonfiguration für das Arbeitsblatt.

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: headersFooters
    fullName: headersFooters
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly headersFooters: Excel.HeaderFooterGroup;'
      return:
        type:
          - 'excel!Excel.HeaderFooterGroup:class'
  - uid: 'excel!Excel.PageLayout#leftMargin:member'
    summary: |-
      Der linke Rand des Arbeitsblatts in Punkt, der beim Drucken verwendet werden soll.

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: leftMargin
    fullName: leftMargin
    langs:
      - typeScript
    type: property
    syntax:
      content: 'leftMargin: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.PageLayout#load:member(1)'
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.PageLayoutLoadOptions): Excel.PageLayout;'
      return:
        type:
          - 'excel!Excel.PageLayout:class'
        description: ''
      parameters:
        - id: options
          description: Enthält Optionen für die Eigenschaften des zu ladenden Objekts.
          type:
            - 'excel!Excel.Interfaces.PageLayoutLoadOptions:interface'
  - uid: 'excel!Excel.PageLayout#load:member(2)'
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PageLayout;'
      return:
        type:
          - 'excel!Excel.PageLayout:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 'Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.PageLayout#load:member(3)'
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.PageLayout;
      return:
        type:
          - 'excel!Excel.PageLayout:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und `propertyNamesAndPaths.expand` ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.PageLayout#orientation:member'
    summary: |-
      Die Ausrichtung des Arbeitsblatts der Seite.

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: orientation
    fullName: orientation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'orientation: Excel.PageOrientation | "Portrait" | "Landscape";'
      return:
        type:
          - 'excel!Excel.PageLayout#orientation~0:complex'
        description: |-


          #### <a name="examples"></a>Beispiele

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/54-worksheet/worksheet-page-layout.yaml
          await Excel.run(async (context) => {
              const farmSheet = context.workbook.worksheets.getItem("Print");
              farmSheet.pageLayout.orientation = Excel.PageOrientation.landscape;
              await context.sync();
          });
          ```
  - uid: 'excel!Excel.PageLayout#paperSize:member'
    summary: |-
      Das Papierformat des Arbeitsblatts der Seite.

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: paperSize
    fullName: paperSize
    langs:
      - typeScript
    type: property
    syntax:
      content: 'paperSize: Excel.PaperType | "Letter" | "LetterSmall" | "Tabloid" | "Ledger" | "Legal" | "Statement" | "Executive" | "A3" | "A4" | "A4Small" | "A5" | "B4" | "B5" | "Folio" | "Quatro" | "Paper10x14" | "Paper11x17" | "Note" | "Envelope9" | "Envelope10" | "Envelope11" | "Envelope12" | "Envelope14" | "Csheet" | "Dsheet" | "Esheet" | "EnvelopeDL" | "EnvelopeC5" | "EnvelopeC3" | "EnvelopeC4" | "EnvelopeC6" | "EnvelopeC65" | "EnvelopeB4" | "EnvelopeB5" | "EnvelopeB6" | "EnvelopeItaly" | "EnvelopeMonarch" | "EnvelopePersonal" | "FanfoldUS" | "FanfoldStdGerman" | "FanfoldLegalGerman";'
      return:
        type:
          - 'excel!Excel.PageLayout#paperSize~0:complex'
  - uid: 'excel!Excel.PageLayout#printComments:member'
    summary: |-
      Gibt an, ob die Kommentare des Arbeitsblatts beim Drucken angezeigt werden sollen.

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: printComments
    fullName: printComments
    langs:
      - typeScript
    type: property
    syntax:
      content: 'printComments: Excel.PrintComments | "NoComments" | "EndSheet" | "InPlace";'
      return:
        type:
          - 'excel!Excel.PageLayout#printComments~0:complex'
  - uid: 'excel!Excel.PageLayout#printErrors:member'
    summary: |-
      Die Option Druckfehler des Arbeitsblatts.

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: printErrors
    fullName: printErrors
    langs:
      - typeScript
    type: property
    syntax:
      content: 'printErrors: Excel.PrintErrorType | "AsDisplayed" | "Blank" | "Dash" | "NotAvailable";'
      return:
        type:
          - 'excel!Excel.PageLayout#printErrors~0:complex'
  - uid: 'excel!Excel.PageLayout#printGridlines:member'
    summary: |-
      Gibt an, ob die Gitternetzlinien des Arbeitsblatts gedruckt werden.

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: printGridlines
    fullName: printGridlines
    langs:
      - typeScript
    type: property
    syntax:
      content: 'printGridlines: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PageLayout#printHeadings:member'
    summary: |-
      Gibt an, ob die Überschriften des Arbeitsblatts gedruckt werden.

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: printHeadings
    fullName: printHeadings
    langs:
      - typeScript
    type: property
    syntax:
      content: 'printHeadings: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PageLayout#printOrder:member'
    summary: |-
      Die Option für die Seiten Druckreihenfolge des Arbeitsblatts. Dies gibt die Reihenfolge für die Verarbeitung der gedruckten Seitenzahl an.

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: printOrder
    fullName: printOrder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'printOrder: Excel.PrintOrder | "DownThenOver" | "OverThenDown";'
      return:
        type:
          - 'excel!Excel.PageLayout#printOrder~0:complex'
  - uid: 'excel!Excel.PageLayout#rightMargin:member'
    summary: |-
      Der Rechte Rand des Arbeitsblatts (in Punkten), der beim Drucken verwendet werden soll.

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: rightMargin
    fullName: rightMargin
    langs:
      - typeScript
    type: property
    syntax:
      content: 'rightMargin: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.PageLayout#set:member(1)'
    summary: Legt mehrere Eigenschaften eines Objekts gleichzeitig fest. Sie können entweder ein einfaches Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs übergeben.
    remarks: |-
      Diese Methode hat die folgende zusätzliche Signatur:

      `set(properties: Excel.PageLayout): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.PageLayoutUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: 'Ein JavaScript-Objekt mit Eigenschaften, die isomorphically für die Eigenschaften des Objekts strukturiert sind, für das die Methode aufgerufen wird.'
          type:
            - 'excel!Excel.Interfaces.PageLayoutUpdateData:interface'
        - id: options
          description: 'Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.'
          type:
            - 'office!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.PageLayout#set:member(2)'
    summary: Legt mehrere Eigenschaften für das Objekt gleichzeitig basierend auf einem vorhandenen geladenen Objekt fest.
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.PageLayout): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.PageLayout:class'
  - uid: 'excel!Excel.PageLayout#setPrintArea:member(1)'
    summary: |-
      Legt den Druckbereich des Arbeitsblatts fest.

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: setPrintArea(printArea)
    fullName: setPrintArea(printArea)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setPrintArea(printArea: Range | RangeAreas | string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Beispiele

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/54-worksheet/worksheet-page-layout.yaml
          await Excel.run(async (context) => {
              const farmSheet = context.workbook.worksheets.getItem("Print");
              farmSheet.pageLayout.setPrintArea("A1:D41");
              await context.sync();
          });
          ```
      parameters:
        - id: printArea
          description: Der Bereich oder RangeAreas des zu druckenden Inhalts.
          type:
            - 'excel!Excel.PageLayout#setPrintArea~0:complex'
  - uid: 'excel!Excel.PageLayout#setPrintMargins:member(1)'
    summary: |-
      Legt die Seitenränder des Arbeitsblatts mit Einheiten fest.

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'setPrintMargins(unit, marginOptions)'
    fullName: 'setPrintMargins(unit, marginOptions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setPrintMargins(unit: Excel.PrintMarginUnit, marginOptions: Excel.PageLayoutMarginOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: unit
          description: Maßeinheit für die bereitgestellten Ränder.
          type:
            - 'excel!Excel.PrintMarginUnit:enum'
        - id: marginOptions
          description: 'Die festzulegenden Rand Werte, die nicht bereitgestellten Ränder bleiben unverändert.'
          type:
            - 'excel!Excel.PageLayoutMarginOptions:interface'
  - uid: 'excel!Excel.PageLayout#setPrintMargins:member(2)'
    summary: |-
      Legt die Seitenränder des Arbeitsblatts mit Einheiten fest.

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'setPrintMargins(unitString, marginOptions)'
    fullName: 'setPrintMargins(unitString, marginOptions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setPrintMargins(unitString: "Points" | "Inches" | "Centimeters", marginOptions: Excel.PageLayoutMarginOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: unitString
          description: Maßeinheit für die bereitgestellten Ränder.
          type:
            - '"Points" | "Inches" | "Centimeters"'
        - id: marginOptions
          description: 'Die festzulegenden Rand Werte, die nicht bereitgestellten Ränder bleiben unverändert.'
          type:
            - 'excel!Excel.PageLayoutMarginOptions:interface'
  - uid: 'excel!Excel.PageLayout#setPrintTitleColumns:member(1)'
    summary: |-
      Legt die Spalten fest, die die links auf jeder Seite des Arbeitsblatts im Druck zu wiederholenden Zellen enthalten.

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: setPrintTitleColumns(printTitleColumns)
    fullName: setPrintTitleColumns(printTitleColumns)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setPrintTitleColumns(printTitleColumns: Range | string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: printTitleColumns
          description: 'Die Spalten, die Links von jeder Seite wiederholt werden sollen, muss die gesamte Spalte überspannen, um gültig zu sein.'
          type:
            - 'excel!Excel.PageLayout#setPrintTitleColumns~0:complex'
  - uid: 'excel!Excel.PageLayout#setPrintTitleRows:member(1)'
    summary: |-
      Legt die Zeilen fest, die die oben auf jeder Seite des Arbeitsblatts im Druck zu wiederholenden Zellen enthalten.

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: setPrintTitleRows(printTitleRows)
    fullName: setPrintTitleRows(printTitleRows)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setPrintTitleRows(printTitleRows: Range | string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Beispiele

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/54-worksheet/worksheet-page-layout.yaml
          await Excel.run(async (context) => {
              const farmSheet = context.workbook.worksheets.getItem("Print");
              farmSheet.pageLayout.setPrintTitleRows("$1:$1");
              await context.sync();
          });
          ```
      parameters:
        - id: printTitleRows
          description: 'Die Zeilen, die am oberen Rand jeder Seite wiederholt werden sollen, muss die gesamte Zeile überspannen, um gültig zu sein.'
          type:
            - 'excel!Excel.PageLayout#setPrintTitleRows~0:complex'
  - uid: 'excel!Excel.PageLayout#toJSON:member(1)'
    summary: 'Überschreibt die JavaScript `toJSON()` -Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird.`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche Excel. pageLayout-Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`Excel.Interfaces.PageLayoutData`<!-- -->), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PageLayoutData;'
      return:
        type:
          - 'excel!Excel.Interfaces.PageLayoutData:interface'
        description: ''
  - uid: 'excel!Excel.PageLayout#topMargin:member'
    summary: |-
      Der obere Rand des Arbeitsblatts (in Punkten), der beim Drucken verwendet werden soll.

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: topMargin
    fullName: topMargin
    langs:
      - typeScript
    type: property
    syntax:
      content: 'topMargin: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.PageLayout#zoom:member'
    summary: |-
      Die Druck Zoomoptionen des Arbeitsblatts. Das `PageLayoutZoomOptions` Objekt muss als JSON-Objekt festgelegt werden (verwenden Sie `x.zoom = {...}` anstelle von`x.zoom.scale = ...`<!-- -->).

      \[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: zoom
    fullName: zoom
    langs:
      - typeScript
    type: property
    syntax:
      content: 'zoom: Excel.PageLayoutZoomOptions;'
      return:
        type:
          - 'excel!Excel.PageLayoutZoomOptions:interface'
        description: |-


          #### <a name="examples"></a>Beispiele

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/54-worksheet/worksheet-page-layout.yaml
          await Excel.run(async (context) => {
              const farmSheet = context.workbook.worksheets.getItem("Print");
              farmSheet.pageLayout.zoom = { scale: 200 };
              await context.sync();
          });
          ```
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.RangeAreas:class'
    name: Excel.RangeAreas
  - uid: 'excel!Excel.Range:class'
    name: Excel.Range
  - uid: 'excel!Excel.HeaderFooterGroup:class'
    name: Excel.HeaderFooterGroup
  - uid: 'excel!Excel.PageLayout:class'
    name: Excel.PageLayout
  - uid: 'excel!Excel.Interfaces.PageLayoutLoadOptions:interface'
    name: Excel.Interfaces.PageLayoutLoadOptions
  - uid: 'excel!Excel.PageLayout#orientation~0:complex'
    name: Excel.PageOrientation | "Portrait" | "Landscape"
    fullName: Excel.PageOrientation | "Portrait" | "Landscape"
    spec.typeScript:
      - uid: 'excel!Excel.PageOrientation:enum'
        name: Excel.PageOrientation
        fullName: Excel.PageOrientation
      - name: ' | "Portrait" | "Landscape"'
        fullName: ' | "Portrait" | "Landscape"'
  - uid: 'excel!Excel.PageLayout#paperSize~0:complex'
    name: Excel.PaperType | "Letter" | "LetterSmall" | "Tabloid" | "Ledger" | "Legal" | "Statement" | "Executive" | "A3" | "A4" | "A4Small" | "A5" | "B4" | "B5" | "Folio" | "Quatro" | "Paper10x14" | "Paper11x17" | "Note" | "Envelope9" | "Envelope10" | "Envelope11" | "Envelope12" | "Envelope14" | "Csheet" | "Dsheet" | "Esheet" | "EnvelopeDL" | "EnvelopeC5" | "EnvelopeC3" | "EnvelopeC4" | "EnvelopeC6" | "EnvelopeC65" | "EnvelopeB4" | "EnvelopeB5" | "EnvelopeB6" | "EnvelopeItaly" | "EnvelopeMonarch" | "EnvelopePersonal" | "FanfoldUS" | "FanfoldStdGerman" | "FanfoldLegalGerman"
    fullName: Excel.PaperType | "Letter" | "LetterSmall" | "Tabloid" | "Ledger" | "Legal" | "Statement" | "Executive" | "A3" | "A4" | "A4Small" | "A5" | "B4" | "B5" | "Folio" | "Quatro" | "Paper10x14" | "Paper11x17" | "Note" | "Envelope9" | "Envelope10" | "Envelope11" | "Envelope12" | "Envelope14" | "Csheet" | "Dsheet" | "Esheet" | "EnvelopeDL" | "EnvelopeC5" | "EnvelopeC3" | "EnvelopeC4" | "EnvelopeC6" | "EnvelopeC65" | "EnvelopeB4" | "EnvelopeB5" | "EnvelopeB6" | "EnvelopeItaly" | "EnvelopeMonarch" | "EnvelopePersonal" | "FanfoldUS" | "FanfoldStdGerman" | "FanfoldLegalGerman"
    spec.typeScript:
      - uid: 'excel!Excel.PaperType:enum'
        name: Excel.PaperType
        fullName: Excel.PaperType
      - name: ' | "Letter" | "LetterSmall" | "Tabloid" | "Ledger" | "Legal" | "Statement" | "Executive" | "A3" | "A4" | "A4Small" | "A5" | "B4" | "B5" | "Folio" | "Quatro" | "Paper10x14" | "Paper11x17" | "Note" | "Envelope9" | "Envelope10" | "Envelope11" | "Envelope12" | "Envelope14" | "Csheet" | "Dsheet" | "Esheet" | "EnvelopeDL" | "EnvelopeC5" | "EnvelopeC3" | "EnvelopeC4" | "EnvelopeC6" | "EnvelopeC65" | "EnvelopeB4" | "EnvelopeB5" | "EnvelopeB6" | "EnvelopeItaly" | "EnvelopeMonarch" | "EnvelopePersonal" | "FanfoldUS" | "FanfoldStdGerman" | "FanfoldLegalGerman"'
        fullName: ' | "Letter" | "LetterSmall" | "Tabloid" | "Ledger" | "Legal" | "Statement" | "Executive" | "A3" | "A4" | "A4Small" | "A5" | "B4" | "B5" | "Folio" | "Quatro" | "Paper10x14" | "Paper11x17" | "Note" | "Envelope9" | "Envelope10" | "Envelope11" | "Envelope12" | "Envelope14" | "Csheet" | "Dsheet" | "Esheet" | "EnvelopeDL" | "EnvelopeC5" | "EnvelopeC3" | "EnvelopeC4" | "EnvelopeC6" | "EnvelopeC65" | "EnvelopeB4" | "EnvelopeB5" | "EnvelopeB6" | "EnvelopeItaly" | "EnvelopeMonarch" | "EnvelopePersonal" | "FanfoldUS" | "FanfoldStdGerman" | "FanfoldLegalGerman"'
  - uid: 'excel!Excel.PageLayout#printComments~0:complex'
    name: Excel.PrintComments | "NoComments" | "EndSheet" | "InPlace"
    fullName: Excel.PrintComments | "NoComments" | "EndSheet" | "InPlace"
    spec.typeScript:
      - uid: 'excel!Excel.PrintComments:enum'
        name: Excel.PrintComments
        fullName: Excel.PrintComments
      - name: ' | "NoComments" | "EndSheet" | "InPlace"'
        fullName: ' | "NoComments" | "EndSheet" | "InPlace"'
  - uid: 'excel!Excel.PageLayout#printErrors~0:complex'
    name: Excel.PrintErrorType | "AsDisplayed" | "Blank" | "Dash" | "NotAvailable"
    fullName: Excel.PrintErrorType | "AsDisplayed" | "Blank" | "Dash" | "NotAvailable"
    spec.typeScript:
      - uid: 'excel!Excel.PrintErrorType:enum'
        name: Excel.PrintErrorType
        fullName: Excel.PrintErrorType
      - name: ' | "AsDisplayed" | "Blank" | "Dash" | "NotAvailable"'
        fullName: ' | "AsDisplayed" | "Blank" | "Dash" | "NotAvailable"'
  - uid: 'excel!Excel.PageLayout#printOrder~0:complex'
    name: Excel.PrintOrder | "DownThenOver" | "OverThenDown"
    fullName: Excel.PrintOrder | "DownThenOver" | "OverThenDown"
    spec.typeScript:
      - uid: 'excel!Excel.PrintOrder:enum'
        name: Excel.PrintOrder
        fullName: Excel.PrintOrder
      - name: ' | "DownThenOver" | "OverThenDown"'
        fullName: ' | "DownThenOver" | "OverThenDown"'
  - uid: 'excel!Excel.Interfaces.PageLayoutUpdateData:interface'
    name: Interfaces.PageLayoutUpdateData
  - uid: 'office!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.PageLayout#setPrintArea~0:complex'
    name: Range | RangeAreas | string
    fullName: Excel.Range | Excel.RangeAreas | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | '
        fullName: ' | '
      - uid: 'excel!Excel.RangeAreas:class'
        name: RangeAreas
        fullName: Excel.RangeAreas
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.PrintMarginUnit:enum'
    name: Excel.PrintMarginUnit
  - uid: 'excel!Excel.PageLayoutMarginOptions:interface'
    name: Excel.PageLayoutMarginOptions
  - uid: 'excel!Excel.PageLayout#setPrintTitleColumns~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.PageLayout#setPrintTitleRows~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.Interfaces.PageLayoutData:interface'
    name: Excel.Interfaces.PageLayoutData
  - uid: 'excel!Excel.PageLayoutZoomOptions:interface'
    name: Excel.PageLayoutZoomOptions