### YamlMime:TSType
name: Excel.RangeSort
uid: excel!Excel.RangeSort:class
package: excel!
fullName: Excel.RangeSort
summary: >-
  Verwaltet Sortiervorgänge für `Range` Objekte.


  \[[API-Satz: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: excel!Excel.RangeSort#context:member
  package: excel!
  fullName: context
  summary: Der Dem Objekt zugeordnete Anforderungskontext. Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
methods:
- name: apply(fields, matchCase, hasHeaders, orientation, method)
  uid: excel!Excel.RangeSort#apply:member(1)
  package: excel!
  fullName: apply(fields, matchCase, hasHeaders, orientation, method)
  summary: >-
    Führt einen Sortiervorgang aus.


    \[[API-Satz: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'apply(fields: Excel.SortField[], matchCase?: boolean, hasHeaders?: boolean, orientation?: Excel.SortOrientation, method?: Excel.SortMethod): void;'
    parameters:
    - id: fields
      description: Die Liste der Bedingungen, nach denen sortiert werden soll.
      type: <xref uid="excel!Excel.SortField:interface" />[]
    - id: matchCase
      description: Optional. Gibt an, ob sich die Groß-/Kleinschreibung auf die Zeichenfolgensortierung auswirkt.
      type: boolean
    - id: hasHeaders
      description: Optional. Gibt an, ob der Bereich eine Kopfzeile aufweist.
      type: boolean
    - id: orientation
      description: Optional. Gibt an, ob der Vorgang Zeilen oder Spalten sortiert.
      type: <xref uid="excel!Excel.SortOrientation:enum" />
    - id: method
      description: Optional. Die Sortiermethode für chinesische Zeichen.
      type: <xref uid="excel!Excel.SortMethod:enum" />
    return:
      type: void
      description: ''
- name: apply(fields, matchCase, hasHeaders, orientationString, method)
  uid: excel!Excel.RangeSort#apply:member(2)
  package: excel!
  fullName: apply(fields, matchCase, hasHeaders, orientationString, method)
  summary: >-
    Führt einen Sortiervorgang aus.


    \[[API-Satz: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'apply(fields: Excel.SortField[], matchCase?: boolean, hasHeaders?: boolean, orientationString?: "Rows" | "Columns", method?: "PinYin" | "StrokeCount"): void;'
    parameters:
    - id: fields
      description: Die Liste der Bedingungen, nach denen sortiert werden soll.
      type: <xref uid="excel!Excel.SortField:interface" />[]
    - id: matchCase
      description: Optional. Gibt an, ob sich die Groß-/Kleinschreibung auf die Zeichenfolgensortierung auswirkt.
      type: boolean
    - id: hasHeaders
      description: Optional. Gibt an, ob der Bereich eine Kopfzeile aufweist.
      type: boolean
    - id: orientationString
      description: Optional. Gibt an, ob der Vorgang Zeilen oder Spalten sortiert.
      type: "\"Rows\" | \"Columns\""
    - id: method
      description: Optional. Die Sortiermethode für chinesische Zeichen.
      type: "\"PinYin\" | \"StrokeCount\""
    return:
      type: void
      description: ''
- name: toJSON()
  uid: excel!Excel.RangeSort#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: 'Überschreibt die JavaScript-Methode, um eine nützlichere Ausgabe zu `toJSON()` bieten, wenn ein API-Objekt an übergeben wird `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->ruft wiederum die Methode `toJSON` des Objekts auf, das an das Objekt übergeben wird.) Während das ursprüngliche Excel.RangeSort-Objekt ein API-Objekt ist, gibt die Methode ein `toJSON` einfaches JavaScript-Objekt zurück (Typ: `Excel.Interfaces.RangeSortData`<!-- -->), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      toJSON(): {
                  [key: string]: string;
              };
    return:
      type: >-
        {
                    [key: string]: string;
                }
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 1ab5924ae744b5dd1bdc23e2255c57bfb8d06519
  ms.sourcegitcommit: ce09743deb2fc2a879cd63f96c8ff11ec84a42b2
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 04/02/2021
  ms.locfileid: "51517867"
