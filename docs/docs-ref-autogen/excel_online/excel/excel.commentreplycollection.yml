### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.CommentReplyCollection:class'
    summary: |-
      Stellt eine Auflistung von comment Reply-Objekten dar, die Teil des Kommentars sind.

      \[[API-Gruppe: ExcelApi 1,10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.CommentReplyCollection
    fullName: Excel.CommentReplyCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.CommentReplyCollection#add:member(1)'
      - 'excel!Excel.CommentReplyCollection#add:member(2)'
      - 'excel!Excel.CommentReplyCollection#context:member'
      - 'excel!Excel.CommentReplyCollection#getCount:member(1)'
      - 'excel!Excel.CommentReplyCollection#getItem:member(1)'
      - 'excel!Excel.CommentReplyCollection#getItemAt:member(1)'
      - 'excel!Excel.CommentReplyCollection#items:member'
      - 'excel!Excel.CommentReplyCollection#load:member(1)'
      - 'excel!Excel.CommentReplyCollection#load:member(2)'
      - 'excel!Excel.CommentReplyCollection#load:member(3)'
      - 'excel!Excel.CommentReplyCollection#toJSON:member(1)'
  - uid: 'excel!Excel.CommentReplyCollection#add:member(1)'
    summary: |-
      Erstellt eine Kommentarantwort für einen Kommentar.

      \[[API-Gruppe: ExcelApi 1,10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'add(content, contentType)'
    fullName: 'add(content, contentType)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(content: CommentRichContent | string, contentType?: Excel.ContentType): Excel.CommentReply;'
      return:
        type:
          - 'excel!Excel.CommentReply:class'
        description: |-


          #### <a name="examples"></a>Beispiele

          ```typescript
          // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/12-comment/comment-replies.yaml
          await Excel.run(async (context) => {
              // Adds a reply to the first comment in this worksheet.
              const sheet = context.workbook.worksheets.getItem("Comments");
              const comment = sheet.comments.getItemAt(0);
              comment.replies.add("Add content to this worksheet.");
              await context.sync();
          });
          ```
      parameters:
        - id: content
          description: 'Der Inhalt des Kommentars. Hierbei kann es sich um eine Zeichenfolge oder eine Schnittstelle CommentRichContent (beispielsweise für Kommentare mit Erwähnungen) handeln. \[API-Gruppe: ExcelApi 1,10 für Zeichenfolge, ExcelApiOnline 1,1 für CommentRichContent-Objekt\]'
          type:
            - 'excel!Excel.CommentReplyCollection#add~0:complex'
        - id: contentType
          description: 'Optional. Der Typ des Inhalts, der im Kommentar enthalten ist. Der Standardwert ist Enum.`ContentType.Plain`<!-- -->. \[API-Gruppe: ExcelApi 1,10 for Enum ContentType. Plain, ExcelApiOnline 1,1 for Enum ContentType. mention\]'
          type:
            - 'excel!Excel.ContentType:enum'
  - uid: 'excel!Excel.CommentReplyCollection#add:member(2)'
    summary: |-
      Erstellt eine Kommentarantwort für einen Kommentar.

      \[[API-Gruppe: ExcelApi 1,10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'add(content, contentTypeString)'
    fullName: 'add(content, contentTypeString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(content: CommentRichContent | string, contentTypeString?: "Plain" | "Mention"): Excel.CommentReply;'
      return:
        type:
          - 'excel!Excel.CommentReply:class'
        description: ''
      parameters:
        - id: content
          description: 'Der Inhalt des Kommentars. Hierbei kann es sich um eine Zeichenfolge oder eine Schnittstelle CommentRichContent (beispielsweise für Kommentare mit Erwähnungen) handeln. \[API-Gruppe: ExcelApi 1,10 für Zeichenfolge, ExcelApiOnline 1,1 für CommentRichContent-Objekt\]'
          type:
            - 'excel!Excel.CommentReplyCollection#add~1:complex'
        - id: contentTypeString
          description: 'Optional. Der Typ des Inhalts, der im Kommentar enthalten ist. Der Standardwert ist Enum.`ContentType.Plain`<!-- -->. \[API-Gruppe: ExcelApi 1,10 for Enum ContentType. Plain, ExcelApiOnline 1,1 for Enum ContentType. mention\]'
          type:
            - '"Plain" | "Mention"'
  - uid: 'excel!Excel.CommentReplyCollection#context:member'
    summary: 'Der Anforderungskontext, der mit dem Objekt verknüpft ist. Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.CommentReplyCollection#getCount:member(1)'
    summary: |-
      Ruft die Anzahl der Kommentarantworten in der Sammlung ab.

      \[[API-Gruppe: ExcelApi 1,10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.CommentReplyCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.CommentReplyCollection#getItem:member(1)'
    summary: |-
      Gibt eine Kommentarantwort zurück, die durch ihre ID angegeben ist. Schreibgeschützt.

      \[[API-Gruppe: ExcelApi 1,10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItem(commentReplyId)
    fullName: getItem(commentReplyId)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(commentReplyId: string): Excel.CommentReply;'
      return:
        type:
          - 'excel!Excel.CommentReply:class'
        description: ''
      parameters:
        - id: commentReplyId
          description: Der Bezeichner für die Kommentar Antwort.
          type:
            - string
  - uid: 'excel!Excel.CommentReplyCollection#getItemAt:member(1)'
    summary: |-
      Ruft eine Kommentarantwort basierend auf ihrer Position in der Sammlung ab.

      \[[API-Gruppe: ExcelApi 1,10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.CommentReply;'
      return:
        type:
          - 'excel!Excel.CommentReply:class'
        description: ''
      parameters:
        - id: index
          description: Der Indexwert der abzurufenden Kommentar Antwort. Die Auflistung verwendet nullbasierte Indizierung.
          type:
            - number
  - uid: 'excel!Excel.CommentReplyCollection#items:member'
    summary: Ruft die geladenen untergeordneten Elemente in dieser Sammlung ab.
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.CommentReply[];'
      return:
        type:
          - 'excel!Excel.CommentReplyCollection#items~0:complex'
  - uid: 'excel!Excel.CommentReplyCollection#load:member(1)'
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.CommentReplyCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.CommentReplyCollection;'
      return:
        type:
          - 'excel!Excel.CommentReplyCollection:class'
        description: ''
      parameters:
        - id: options
          description: Enthält Optionen für die Eigenschaften des zu ladenden Objekts.
          type:
            - 'excel!Excel.CommentReplyCollection#load~0:complex'
  - uid: 'excel!Excel.CommentReplyCollection#load:member(2)'
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.CommentReplyCollection;'
      return:
        type:
          - 'excel!Excel.CommentReplyCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 'Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.CommentReplyCollection#load:member(3)'
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.CommentReplyCollection;'
      return:
        type:
          - 'excel!Excel.CommentReplyCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften `propertyNamesAndPaths.expand` angibt, und ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.'
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.CommentReplyCollection#toJSON:member(1)'
    summary: 'Überschreibt die `toJSON()` JavaScript-Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird.`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche `Excel.CommentReplyCollection` Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`Excel.Interfaces.CommentReplyCollectionData`<!-- -->), die ein "Items"-Array mit flachen Kopien aller geladenen Eigenschaften aus den Elementen der Auflistung enthält.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.CommentReplyCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.CommentReplyCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.CommentReply:class'
    name: Excel.CommentReply
  - uid: 'excel!Excel.CommentReplyCollection#add~0:complex'
    name: CommentRichContent | string
    fullName: Excel.CommentRichContent | string
    spec.typeScript:
      - uid: 'excel!Excel.CommentRichContent:interface'
        name: CommentRichContent
        fullName: Excel.CommentRichContent
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.ContentType:enum'
    name: Excel.ContentType
  - uid: 'excel!Excel.CommentReplyCollection#add~1:complex'
    name: CommentRichContent | string
    fullName: Excel.CommentRichContent | string
    spec.typeScript:
      - uid: 'excel!Excel.CommentRichContent:interface'
        name: CommentRichContent
        fullName: Excel.CommentRichContent
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.CommentReplyCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.CommentReplyCollection#items~0:complex'
    name: 'Excel.CommentReply[]'
    fullName: 'Excel.CommentReply[]'
    spec.typeScript:
      - uid: 'excel!Excel.CommentReply:class'
        name: Excel.CommentReply
        fullName: Excel.CommentReply
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.CommentReplyCollection:class'
    name: Excel.CommentReplyCollection
  - uid: 'excel!Excel.CommentReplyCollection#load~0:complex'
    name: Excel.Interfaces.CommentReplyCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.CommentReplyCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.CommentReplyCollectionLoadOptions:interface'
        name: Excel.Interfaces.CommentReplyCollectionLoadOptions
        fullName: Excel.Interfaces.CommentReplyCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.CommentReplyCollectionData:interface'
    name: Excel.Interfaces.CommentReplyCollectionData