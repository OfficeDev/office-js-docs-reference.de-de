### YamlMime:TSType
name: Word.ContentControl
uid: word!Word.ContentControl:class
package: word!
fullName: Word.ContentControl
summary: >-
  Stellt ein Inhaltssteuerelement dar. Inhaltssteuerelemente sind gebunden und potenziell beschrifteten Bereiche in einem Dokument, das als Container für bestimmte Arten von Inhalten dienen. Einzelne Inhaltssteuerelemente können Inhalte wie Bilder, Tabellen oder Absätze mit formatiertem Text enthalten. Derzeit werden nur Rich-Text-Inhaltssteuerelemente unterstützt.


  \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: appearance
  uid: word!Word.ContentControl#appearance:member
  package: word!
  fullName: appearance
  summary: >-
    Ruft die Darstellung des Inhaltssteuerelements ab oder fest sie fest. Der Wert kann "BoundingBox", "Tags" oder "ausgeblendet" lauten.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'appearance: Word.ContentControlAppearance | "BoundingBox" | "Tags" | "Hidden";'
    return:
      type: <xref uid="word!Word.ContentControlAppearance:enum" /> | "BoundingBox" | "Tags" | "Hidden"
- name: cannotDelete
  uid: word!Word.ContentControl#cannotDelete:member
  package: word!
  fullName: cannotDelete
  summary: >-
    Ruft einen Wert ab oder legt ihn fest, der angibt, ob der Benutzer das Inhaltssteuerelement löschen kann. Sich gegenseitig ausschließend mit removeWhenEdited.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'cannotDelete: boolean;'
    return:
      type: boolean
- name: cannotEdit
  uid: word!Word.ContentControl#cannotEdit:member
  package: word!
  fullName: cannotEdit
  summary: >-
    Ruft einen Wert ab oder legt ihn fest, der angibt, ob der Benutzer das Inhaltssteuerelement bearbeiten kann.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'cannotEdit: boolean;'
    return:
      type: boolean
- name: color
  uid: word!Word.ContentControl#color:member
  package: word!
  fullName: color
  summary: >-
    Ruft die Farbe des Inhaltssteuerelements ab oder legt sie fest. Die Farbe wird im \# Format "RRGGBB" oder unter Verwendung des Farbnamens angegeben.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'color: string;'
    return:
      type: string
- name: contentControls
  uid: word!Word.ContentControl#contentControls:member
  package: word!
  fullName: contentControls
  summary: >-
    Ruft die Auflistung von Inhaltssteuerelement-Objekten im Inhaltssteuerelement ab. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly contentControls: Word.ContentControlCollection;'
    return:
      type: <xref uid="word!Word.ContentControlCollection:class" />
- name: context
  uid: word!Word.ContentControl#context:member
  package: word!
  fullName: context
  summary: Der Anforderungskontext, der mit dem Objekt verknüpft ist. Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="word!Word.RequestContext:class" />
- name: font
  uid: word!Word.ContentControl#font:member
  package: word!
  fullName: font
  summary: >-
    Ruft das Textformat des Inhaltssteuerelements ab. Verwenden Sie diese zum Abrufen und Festlegen der Schriftart, Größe, Farbe und andere Eigenschaften. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly font: Word.Font;'
    return:
      type: <xref uid="word!Word.Font:class" />
- name: id
  uid: word!Word.ContentControl#id:member
  package: word!
  fullName: id
  summary: >-
    Ruft eine Ganzzahl ab, die den Inhaltssteuerelement-Bezeichner darstellt. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly id: number;'
    return:
      type: number
- name: inlinePictures
  uid: word!Word.ContentControl#inlinePictures:member
  package: word!
  fullName: inlinePictures
  summary: >-
    Ruft die Auflistung von inlinePicture-Objekten im Inhaltssteuerelement ab. Die Sammlung enthält keinen schwebenden Bilder. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly inlinePictures: Word.InlinePictureCollection;'
    return:
      type: <xref uid="word!Word.InlinePictureCollection:class" />
- name: paragraphs
  uid: word!Word.ContentControl#paragraphs:member
  package: word!
  fullName: paragraphs
  summary: >-
    Ruft die Auflistung von Abschnittsobjekten im Inhaltssteuerelement ab. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly paragraphs: Word.ParagraphCollection;'
    return:
      type: <xref uid="word!Word.ParagraphCollection:class" />
- name: parentContentControl
  uid: word!Word.ContentControl#parentContentControl:member
  package: word!
  fullName: parentContentControl
  summary: >-
    Ruft das Inhaltssteuerelement ab, das das Inhaltssteuerelement enthält. Löst einen Fehler aus, wenn kein übergeordnetes Inhaltssteuerelement vorhanden ist. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentContentControl: Word.ContentControl;'
    return:
      type: <xref uid="word!Word.ContentControl:class" />
- name: placeholderText
  uid: word!Word.ContentControl#placeholderText:member
  package: word!
  fullName: placeholderText
  summary: >-
    Ruft den Platzhaltertext des Inhaltssteuerelements ab oder legt ihn fest. Abgeblendeter Text wird angezeigt, wenn das Inhaltssteuerelement leer ist.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'placeholderText: string;'
    return:
      type: string
- name: removeWhenEdited
  uid: word!Word.ContentControl#removeWhenEdited:member
  package: word!
  fullName: removeWhenEdited
  summary: >-
    Ruft einen Wert ab oder legt ihn fest, der angibt, ob der Benutzer das Inhaltssteuerelement nach der Bearbeitung entfernt wird. Sich gegenseitig ausschließend mit CannotDelete.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'removeWhenEdited: boolean;'
    return:
      type: boolean
- name: style
  uid: word!Word.ContentControl#style:member
  package: word!
  fullName: style
  summary: >-
    Dient zum Abrufen oder Festlegen des Formatvorlagen namens für das Inhaltssteuerelement. Verwenden Sie diese Eigenschaft für benutzerdefinierte Formatvorlagen und lokalisierte Formatvorlagennamen. Informationen zur Verwendung der integrierten Formatvorlagen, die zwischen Gebietsschemas portabel sind, finden Sie unter der Eigenschaft "styleBuiltIn".


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'style: string;'
    return:
      type: string
- name: tag
  uid: word!Word.ContentControl#tag:member
  package: word!
  fullName: tag
  summary: >-
    Ruft ein Tag ab oder legt es fest, um ein Inhaltssteuerelement zu identifizieren.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'tag: string;'
    return:
      type: string
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/10-content-controls/insert-and-change-content-controls.yaml\n// Traverses each paragraph of the document and wraps a content control on each with either a even or odd tags.\nawait Word.run(async (context) => {\n  let paragraphs = context.document.body.paragraphs;\n  paragraphs.load(\"$none\"); // Don't need any properties; just wrap each paragraph with a content control.\n\n  await context.sync();\n\n  for (let i = 0; i < paragraphs.items.length; i++) {\n    let contentControl = paragraphs.items[i].insertContentControl();\n    // For even, tag \"even\".\n    if (i % 2 === 0) {\n      contentControl.tag = \"even\";\n    } else {\n      contentControl.tag = \"odd\";\n    }\n  }\n  console.log(\"Content controls inserted: \" + paragraphs.items.length);\n\n  await context.sync();\n});\n```"
- name: text
  uid: word!Word.ContentControl#text:member
  package: word!
  fullName: text
  summary: >-
    Ruft den Text des Inhaltssteuerelements ab. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly text: string;'
    return:
      type: string
- name: title
  uid: word!Word.ContentControl#title:member
  package: word!
  fullName: title
  summary: >-
    Ruft den Titel eines Inhaltssteuerelements ab oder legt ihn fest.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'title: string;'
    return:
      type: string
- name: type
  uid: word!Word.ContentControl#type:member
  package: word!
  fullName: type
  summary: >-
    Ruft den Typen des Inhaltssteuerelements ab. Derzeit werden nur Rich-Text-Inhaltssteuerelemente unterstützt. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly type: Word.ContentControlType | "Unknown" | "RichTextInline" | "RichTextParagraphs" | "RichTextTableCell" | "RichTextTableRow" | "RichTextTable" | "PlainTextInline" | "PlainTextParagraph" | "Picture" | "BuildingBlockGallery" | "CheckBox" | "ComboBox" | "DropDownList" | "DatePicker" | "RepeatingSection" | "RichText" | "PlainText";'
    return:
      type: <xref uid="word!Word.ContentControlType:enum" /> | "Unknown" | "RichTextInline" | "RichTextParagraphs" | "RichTextTableCell" | "RichTextTableRow" | "RichTextTable" | "PlainTextInline" | "PlainTextParagraph" | "Picture" | "BuildingBlockGallery" | "CheckBox" | "ComboBox" | "DropDownList" | "DatePicker" | "RepeatingSection" | "RichText" | "PlainText"
methods:
- name: clear()
  uid: word!Word.ContentControl#clear:member(1)
  package: word!
  fullName: clear()
  summary: >-
    Löscht den Inhalt des Inhaltssteuerelements. Der Benutzer kann den Rückgängig-Vorgang auf den gelöschten Inhalt durchführen.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'clear(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the content controls collection.\n    contentControls.load('text');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        \n        if (contentControls.items.length === 0) {\n            console.log(\"There isn't a content control in this document.\");\n        } else {\n            \n            // Queue a command to clear the contents of the first content control.\n            contentControls.items[0].clear();\n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync().then(function () {\n                console.log('Content control cleared of contents.');\n            });      \n        }\n            \n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: delete(keepContent)
  uid: word!Word.ContentControl#delete:member(1)
  package: word!
  fullName: delete(keepContent)
  summary: >-
    Löscht das Inhaltssteuerelement und dessen Inhalt. Wenn KeepContent auf true festgelegt wurde, wird der Inhalt nicht gelöscht.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(keepContent: boolean): void;'
    parameters:
    - id: keepContent
      description: Erforderlich. Gibt an, ob der Inhalt mit dem Inhaltssteuerelement gelöscht werden soll. Wenn KeepContent auf true festgelegt wurde, wird der Inhalt nicht gelöscht.
      type: boolean
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the content controls collection.\n    contentControls.load('text');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        \n        if (contentControls.items.length === 0) {\n            console.log(\"There isn't a content control in this document.\");\n        } else {\n            \n            // Queue a command to delete the first content control. The\n            // contents will remain in the document.\n            contentControls.items[0].delete(true);\n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync().then(function () {\n                console.log('Content control cleared of contents.');\n            });      \n        }\n            \n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getHtml()
  uid: word!Word.ContentControl#getHtml:member(1)
  package: word!
  fullName: getHtml()
  summary: >-
    Ruft eine HTML-Darstellung des Inhaltssteuerelement-Objekts ab. Wenn die Formatierung in einer Webseite oder einem HTML-Viewer gerendert wird, entspricht Sie der Formatierung des Dokuments, ist jedoch nicht genau. Diese Methode gibt nicht exakt denselben HTML-Code für dasselbe Dokument auf unterschiedlichen Plattformen (Windows, Mac, Word für das Internet usw.) zurück. Wenn Sie exakte Genauigkeit oder Konsistenz plattformübergreifend benötigen, verwenden `ContentControl.getOoxml()` und konvertieren Sie den zurückgegebenen XML-Code in HTML.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getHtml(): OfficeExtension.ClientResult<string>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string&gt;
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection that contains a specific tag.\n    var contentControlsWithTag = context.document.contentControls.getByTag('Customer-Address');\n    \n    // Queue a command to load the tag property for all of content controls. \n    context.load(contentControlsWithTag, 'tag');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControlsWithTag.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to get the HTML contents of the first content control.\n            var html = contentControlsWithTag.items[0].getHtml();\n        \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync()\n                .then(function () {\n                    console.log('Content control HTML: ' + html.value);\n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getOoxml()
  uid: word!Word.ContentControl#getOoxml:member(1)
  package: word!
  fullName: getOoxml()
  summary: >-
    Ruft die Office Open XML (OOXML)-Darstellung des Inhaltssteuerelement-Objekts ab.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string&gt;
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the id property for all of the content controls. \n    context.load(contentControls, 'id');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControls.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to get the OOXML contents of the first content control.\n            var ooxml = contentControls.items[0].getOoxml();\n        \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync()\n                .then(function () {\n                    console.log('Content control OOXML: ' + ooxml.value);\n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertBreak(breakType, insertLocation)
  uid: word!Word.ContentControl#insertBreak:member(1)
  package: word!
  fullName: insertBreak(breakType, insertLocation)
  summary: >-
    Fügt an der angegebenen Position im Hauptdokument einen Umbruch ein. Diese Methode kann nicht zusammen mit den Inhaltssteuerelementen "RichTextTable", "RichTextTableRow" und "RichTextTableCell" verwendet werden.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
    parameters:
    - id: breakType
      description: Erforderlich.  Typ der Unterbrechung.
      type: <xref uid="word!Word.BreakType:enum" />
    - id: insertLocation
      description: Erforderlich.  Der Wert kann "Start", "End", "Before" oder "After" lauten.
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: void
      description: ''
- name: insertBreak(breakTypeString, insertLocation)
  uid: word!Word.ContentControl#insertBreak:member(2)
  package: word!
  fullName: insertBreak(breakTypeString, insertLocation)
  summary: >-
    Fügt an der angegebenen Position im Hauptdokument einen Umbruch ein. Diese Methode kann nicht zusammen mit den Inhaltssteuerelementen "RichTextTable", "RichTextTableRow" und "RichTextTableCell" verwendet werden.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
    parameters:
    - id: breakTypeString
      description: Erforderlich.  Typ der Unterbrechung.
      type: "\"Page\" | \"Next\" | \"SectionNext\" | \"SectionContinuous\" | \"SectionEven\" | \"SectionOdd\" | \"Line\""
    - id: insertLocation
      description: Erforderlich.  Der Wert kann "Start", "End", "Before" oder "After" lauten.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the id property for all of content controls. \n    context.load(contentControls, 'id');\n    \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion. We now will have \n    // access to the content control collection.\n    return context.sync().then(function () {\n        if (contentControls.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to insert a page break after the first content control. \n            contentControls.items[0].insertBreak('page', \"After\");\n            \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion. \n            return context.sync()\n                .then(function () {\n                    console.log('Inserted a page break after the first content control.');    \n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertFileFromBase64(base64File, insertLocation)
  uid: word!Word.ContentControl#insertFileFromBase64:member(1)
  package: word!
  fullName: insertFileFromBase64(base64File, insertLocation)
  summary: >-
    Fügt ein Dokument in das Inhaltssteuerelement an der angegebenen Position ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
    parameters:
    - id: base64File
      description: Erforderlich.  Der Base64-codierte Inhalt einer DOCX-Datei.
      type: string
    - id: insertLocation
      description: Erforderlich. Der Wert kann „Replace“, „Start“ oder „End“ lauten. "Replace" kann nicht zusammen mit den Inhaltssteuerelementen "RichTextTable" und "RichTextTableRow" verwendet werden.
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: insertFileFromBase64(base64File, insertLocationString)
  uid: word!Word.ContentControl#insertFileFromBase64:member(2)
  package: word!
  fullName: insertFileFromBase64(base64File, insertLocationString)
  summary: >-
    Fügt ein Dokument in das Inhaltssteuerelement an der angegebenen Position ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    parameters:
    - id: base64File
      description: Erforderlich.  Der Base64-codierte Inhalt einer DOCX-Datei.
      type: string
    - id: insertLocationString
      description: Erforderlich. Der Wert kann „Replace“, „Start“ oder „End“ lauten. "Replace" kann nicht zusammen mit den Inhaltssteuerelementen "RichTextTable" und "RichTextTableRow" verwendet werden.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: insertHtml(html, insertLocation)
  uid: word!Word.ContentControl#insertHtml:member(1)
  package: word!
  fullName: insertHtml(html, insertLocation)
  summary: >-
    Fügt an der angegebenen Position HTML ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
    parameters:
    - id: html
      description: Erforderlich. Der in das Inhaltssteuerelement einzufügende HTML-Code.
      type: string
    - id: insertLocation
      description: Erforderlich. Der Wert kann „Replace“, „Start“ oder „End“ lauten. "Replace" kann nicht zusammen mit den Inhaltssteuerelementen "RichTextTable" und "RichTextTableRow" verwendet werden.
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: insertHtml(html, insertLocationString)
  uid: word!Word.ContentControl#insertHtml:member(2)
  package: word!
  fullName: insertHtml(html, insertLocationString)
  summary: >-
    Fügt an der angegebenen Position HTML ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    parameters:
    - id: html
      description: Erforderlich. Der in das Inhaltssteuerelement einzufügende HTML-Code.
      type: string
    - id: insertLocationString
      description: Erforderlich. Der Wert kann „Replace“, „Start“ oder „End“ lauten. "Replace" kann nicht zusammen mit den Inhaltssteuerelementen "RichTextTable" und "RichTextTableRow" verwendet werden.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Range:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the id property for all of the content controls. \n    context.load(contentControls, 'id');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControls.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to put HTML into the contents of the first content control.\n            contentControls.items[0].insertHtml(\n                '<strong>HTML content inserted into the content control.</strong>',\n                'Start');\n        \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync()\n                .then(function () {\n                    console.log('Inserted HTML in the first content control.');\n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertInlinePictureFromBase64(base64EncodedImage, insertLocation)
  uid: word!Word.ContentControl#insertInlinePictureFromBase64:member(1)
  package: word!
  fullName: insertInlinePictureFromBase64(base64EncodedImage, insertLocation)
  summary: >-
    Fügt an der angegebenen Position ein eingebundenes Bild in das Inhaltssteuerelement ein.


    \[[API-Gruppe: WordApi 1,2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
    parameters:
    - id: base64EncodedImage
      description: Erforderlich. Das base64-codierte Bild, das in das Inhaltssteuerelement eingefügt werden soll.
      type: string
    - id: insertLocation
      description: Erforderlich. Der Wert kann „Replace“, „Start“ oder „End“ lauten. "Replace" kann nicht zusammen mit den Inhaltssteuerelementen "RichTextTable" und "RichTextTableRow" verwendet werden.
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.InlinePicture:class" />
      description: ''
- name: insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)
  uid: word!Word.ContentControl#insertInlinePictureFromBase64:member(2)
  package: word!
  fullName: insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)
  summary: >-
    Fügt an der angegebenen Position ein eingebundenes Bild in das Inhaltssteuerelement ein.


    \[[API-Gruppe: WordApi 1,2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.InlinePicture;'
    parameters:
    - id: base64EncodedImage
      description: Erforderlich. Das base64-codierte Bild, das in das Inhaltssteuerelement eingefügt werden soll.
      type: string
    - id: insertLocationString
      description: Erforderlich. Der Wert kann „Replace“, „Start“ oder „End“ lauten. "Replace" kann nicht zusammen mit den Inhaltssteuerelementen "RichTextTable" und "RichTextTableRow" verwendet werden.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.InlinePicture:class" />
      description: ''
- name: insertOoxml(ooxml, insertLocation)
  uid: word!Word.ContentControl#insertOoxml:member(1)
  package: word!
  fullName: insertOoxml(ooxml, insertLocation)
  summary: >-
    Fügt OOXML an der angegebenen Position in das Inhaltssteuerelement ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
    parameters:
    - id: ooxml
      description: Erforderlich.  Das OOXML, das in das Inhaltssteuerelement eingefügt werden soll.
      type: string
    - id: insertLocation
      description: Erforderlich. Der Wert kann „Replace“, „Start“ oder „End“ lauten. "Replace" kann nicht zusammen mit den Inhaltssteuerelementen "RichTextTable" und "RichTextTableRow" verwendet werden.
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: insertOoxml(ooxml, insertLocationString)
  uid: word!Word.ContentControl#insertOoxml:member(2)
  package: word!
  fullName: insertOoxml(ooxml, insertLocationString)
  summary: >-
    Fügt OOXML an der angegebenen Position in das Inhaltssteuerelement ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    parameters:
    - id: ooxml
      description: Erforderlich.  Das OOXML, das in das Inhaltssteuerelement eingefügt werden soll.
      type: string
    - id: insertLocationString
      description: Erforderlich. Der Wert kann „Replace“, „Start“ oder „End“ lauten. "Replace" kann nicht zusammen mit den Inhaltssteuerelementen "RichTextTable" und "RichTextTableRow" verwendet werden.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Range:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the id property for all of the content controls. \n    context.load(contentControls, 'id');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControls.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to put OOXML into the contents of the first content control.\n            contentControls.items[0].insertOoxml(\"<pkg:package xmlns:pkg='http://schemas.microsoft.com/office/2006/xmlPackage'><pkg:part pkg:name='/_rels/.rels' pkg:contentType='application/vnd.openxmlformats-package.relationships+xml' pkg:padding='512'><pkg:xmlData><Relationships xmlns='http://schemas.openxmlformats.org/package/2006/relationships'><Relationship Id='rId1' Type='http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument' Target='word/document.xml'/></Relationships></pkg:xmlData></pkg:part><pkg:part pkg:name='/word/document.xml' pkg:contentType='application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml'><pkg:xmlData><w:document xmlns:w='http://schemas.openxmlformats.org/wordprocessingml/2006/main' ><w:body><w:p><w:pPr><w:spacing w:before='360' w:after='0' w:line='480' w:lineRule='auto'/><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr></w:pPr><w:r><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr><w:t>This text has formatting directly applied to achieve its font size, color, line spacing, and paragraph spacing.</w:t></w:r></w:p></w:body></w:document></pkg:xmlData></pkg:part></pkg:package>\", \"End\");\n        \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync()\n                .then(function () {\n                    console.log('Inserted OOXML in the first content control.');\n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n\n// Read \"Create better add-ins for Word with Office Open XML\" for guidance on working with OOXML.\n// https://docs.microsoft.com/office/dev/add-ins/word/create-better-add-ins-for-word-with-office-open-xml\n```"
- name: insertParagraph(paragraphText, insertLocation)
  uid: word!Word.ContentControl#insertParagraph:member(1)
  package: word!
  fullName: insertParagraph(paragraphText, insertLocation)
  summary: >-
    Fügt an der angegebenen Position einen Absatz ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
    parameters:
    - id: paragraphText
      description: Erforderlich. Der einzufügende Absatztext.
      type: string
    - id: insertLocation
      description: Erforderlich.  Der Wert kann "Start", "End", "Before" oder "After" lauten. "Before" und "After" können nicht mit Inhaltssteuerelementen "RichTextTable", "RichTextTableRow" und "RichTextTableCell" verwendet werden.
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Paragraph:class" />
      description: ''
- name: insertParagraph(paragraphText, insertLocationString)
  uid: word!Word.ContentControl#insertParagraph:member(2)
  package: word!
  fullName: insertParagraph(paragraphText, insertLocationString)
  summary: >-
    Fügt an der angegebenen Position einen Absatz ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
    parameters:
    - id: paragraphText
      description: Erforderlich. Der einzufügende Absatztext.
      type: string
    - id: insertLocationString
      description: Erforderlich.  Der Wert kann "Start", "End", "Before" oder "After" lauten. "Before" und "After" können nicht mit Inhaltssteuerelementen "RichTextTable", "RichTextTableRow" und "RichTextTableCell" verwendet werden.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Paragraph:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the id property for all of the content controls. \n    context.load(contentControls, 'id');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControls.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to insert a paragraph after the first content control. \n            contentControls.items[0].insertParagraph('Text of the inserted paragraph.', 'After');\n        \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync()\n                .then(function () {\n                    console.log('Inserted a paragraph after the first content control.');\n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertText(text, insertLocation)
  uid: word!Word.ContentControl#insertText:member(1)
  package: word!
  fullName: insertText(text, insertLocation)
  summary: >-
    Fügt an der angegebenen Position Text in das Inhaltssteuerelement ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
    parameters:
    - id: text
      description: Erforderlich. Der in das Inhaltssteuerelement einzufügende Text.
      type: string
    - id: insertLocation
      description: Erforderlich. Der Wert kann „Replace“, „Start“ oder „End“ lauten. "Replace" kann nicht zusammen mit den Inhaltssteuerelementen "RichTextTable" und "RichTextTableRow" verwendet werden.
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: insertText(text, insertLocationString)
  uid: word!Word.ContentControl#insertText:member(2)
  package: word!
  fullName: insertText(text, insertLocationString)
  summary: >-
    Fügt an der angegebenen Position Text in das Inhaltssteuerelement ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    parameters:
    - id: text
      description: Erforderlich. Der in das Inhaltssteuerelement einzufügende Text.
      type: string
    - id: insertLocationString
      description: Erforderlich. Der Wert kann „Replace“, „Start“ oder „End“ lauten. "Replace" kann nicht zusammen mit den Inhaltssteuerelementen "RichTextTable" und "RichTextTableRow" verwendet werden.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Range:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the id property for all of the content controls. \n    context.load(contentControls, 'id');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControls.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to replace text in the first content control. \n            contentControls.items[0].insertText('Replaced text in the first content control.', 'Replace');\n        \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync()\n                .then(function () {\n                    console.log('Replaced text in the first content control.');\n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n\n// The Silly stories add-in sample shows how to use the insertText method.\n// https://aka.ms/sillystorywordaddin\n```"
- name: load(options)
  uid: word!Word.ContentControl#load:member(1)
  package: word!
  fullName: load(options)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Word.Interfaces.ContentControlLoadOptions): Word.ContentControl;'
    parameters:
    - id: options
      description: Enthält Optionen für die Eigenschaften des zu ladenden Objekts.
      type: <xref uid="word!Word.Interfaces.ContentControlLoadOptions:interface" />
    return:
      type: <xref uid="word!Word.ContentControl:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Load all of the content control properties\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the id property for all of the content controls. \n    context.load(contentControls, 'id');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControls.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to load the properties on the first content control. \n            contentControls.items[0].load(  'appearance,' +\n                                            'cannotDelete,' +\n                                            'cannotEdit,' +\n                                            'id,' +\n                                            'placeHolderText,' +\n                                            'removeWhenEdited,' +\n                                            'title,' +\n                                            'text,' +\n                                            'type,' +\n                                            'style,' +\n                                            'tag,' +\n                                            'font/size,' +\n                                            'font/name,' +\n                                            'font/color');             \n        \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync()\n                .then(function () {\n                    console.log('Property values of the first content control:' + \n                        '   ----- appearance: ' + contentControls.items[0].appearance + \n                        '   ----- cannotDelete: ' + contentControls.items[0].cannotDelete +\n                        '   ----- cannotEdit: ' + contentControls.items[0].cannotEdit +\n                        '   ----- color: ' + contentControls.items[0].color +\n                        '   ----- id: ' + contentControls.items[0].id +\n                        '   ----- placeHolderText: ' + contentControls.items[0].placeholderText +\n                        '   ----- removeWhenEdited: ' + contentControls.items[0].removeWhenEdited +\n                        '   ----- title: ' + contentControls.items[0].title +\n                        '   ----- text: ' + contentControls.items[0].text +\n                        '   ----- type: ' + contentControls.items[0].type +\n                        '   ----- style: ' + contentControls.items[0].style +\n                        '   ----- tag: ' + contentControls.items[0].tag +\n                        '   ----- font size: ' + contentControls.items[0].font.size +\n                        '   ----- font name: ' + contentControls.items[0].font.name +\n                        '   ----- font color: ' + contentControls.items[0].font.color);\n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(propertyNames)
  uid: word!Word.ContentControl#load:member(2)
  package: word!
  fullName: load(propertyNames)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Word.ContentControl;'
    parameters:
    - id: propertyNames
      description: Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.
      type: string | string[]
    return:
      type: <xref uid="word!Word.ContentControl:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: word!Word.ContentControl#load:member(3)
  package: word!
  fullName: load(propertyNamesAndPaths)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Word.ContentControl;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und `propertyNamesAndPaths.expand` ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="word!Word.ContentControl:class" />
      description: ''
- name: search(searchText, searchOptions)
  uid: word!Word.ContentControl#search:member(1)
  package: word!
  fullName: search(searchText, searchOptions)
  summary: >-
    Führt eine Suche mit den angegebenen SearchOptions für den Bereich des Inhaltssteuerelement-Objekts aus. Die Suchergebnisse sind eine Sammlung von Bereichsobjekten.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      search(searchText: string, searchOptions?: Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }): Word.RangeCollection;
    parameters:
    - id: searchText
      description: Erforderlich. Der Suchtext.
      type: string
    - id: searchOptions
      description: Optional. Optionen für die Suche.
      type: >-
        <xref uid="word!Word.SearchOptions:class" /> | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }
    return:
      type: <xref uid="word!Word.RangeCollection:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Create a proxy object for the content controls collection.\n    var contentControls = context.document.contentControls;\n    \n    // Queue a command to load the id property for all of the content controls. \n    context.load(contentControls, 'id');\n     \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        if (contentControls.items.length === 0) {\n            console.log('No content control found.');\n        }\n        else {\n            // Queue a command to select the first content control.\n            contentControls.items[0].select();\n        \n            // Synchronize the document state by executing the queued commands, \n            // and return a promise to indicate task completion.\n            return context.sync()\n                .then(function () {\n                    console.log('Selected the first content control.');\n            });\n        }\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: select(selectionMode)
  uid: word!Word.ContentControl#select:member(1)
  package: word!
  fullName: select(selectionMode)
  summary: >-
    Wählt das Inhaltssteuerelement aus. Dies bewirkt, dass Word einen Bildlauf zur Auswahl durchführt.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'select(selectionMode?: Word.SelectionMode): void;'
    parameters:
    - id: selectionMode
      description: Optional. Der Auswahlmodus kann „Select“, „Start“ oder „End“ sein. „Select“ ist die Standardeinstellung.
      type: <xref uid="word!Word.SelectionMode:enum" />
    return:
      type: void
      description: ''
- name: select(selectionModeString)
  uid: word!Word.ContentControl#select:member(2)
  package: word!
  fullName: select(selectionModeString)
  summary: >-
    Wählt das Inhaltssteuerelement aus. Dies bewirkt, dass Word einen Bildlauf zur Auswahl durchführt.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
    parameters:
    - id: selectionModeString
      description: Optional. Der Auswahlmodus kann „Select“, „Start“ oder „End“ sein. „Select“ ist die Standardeinstellung.
      type: "\"Select\" | \"Start\" | \"End\""
    return:
      type: void
      description: ''
- name: set(properties, options)
  uid: word!Word.ContentControl#set:member(1)
  package: word!
  fullName: set(properties, options)
  summary: Legt mehrere Eigenschaften eines Objekts gleichzeitig fest. Sie können entweder ein einfaches Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs übergeben.
  remarks: >-
    Diese Methode hat die folgende zusätzliche Signatur:


    `set(properties: Word.ContentControl): void`


    #### <a name="examples"></a>Beispiele


    ```typescript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/10-content-controls/insert-and-change-content-controls.yaml

    // Adds title and colors to odd and even content controls and changes their appearance.

    await Word.run(async (context) => {
      // Gets the complete sentence (as range) associated with the insertion point.
      let evenContentControls = context.document.contentControls.getByTag("even");
      let oddContentControls = context.document.contentControls.getByTag("odd");
      evenContentControls.load("length");
      oddContentControls.load("length");

      await context.sync();

      for (let i = 0; i < evenContentControls.items.length; i++) {
        // Change a few properties and append a paragraph
        evenContentControls.items[i].set({
          color: "red",
          title: "Odd ContentControl #" + (i + 1),
          appearance: "Tags"
        });
        evenContentControls.items[i].insertParagraph("This is an odd content control", "End");
      }

      for (let j = 0; j < oddContentControls.items.length; j++) {
        // Change a few properties and append a paragraph
        oddContentControls.items[j].set({
          color: "green",
          title: "Even ContentControl #" + (j + 1),
          appearance: "Tags"
        });
        oddContentControls.items[j].insertHtml("This is an <b>even</b> content control", "End");
      }

      await context.sync();
    });

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.ContentControlUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: Ein JavaScript-Objekt mit Eigenschaften, die isomorphically für die Eigenschaften des Objekts strukturiert sind, für das die Methode aufgerufen wird.
      type: <xref uid="word!Word.Interfaces.ContentControlUpdateData:interface" />
    - id: options
      description: Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: word!Word.ContentControl#set:member(2)
  package: word!
  fullName: set(properties)
  summary: Legt mehrere Eigenschaften für das Objekt gleichzeitig basierend auf einem vorhandenen geladenen Objekt fest.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Word.ContentControl): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="word!Word.ContentControl:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: word!Word.ContentControl#toJSON:member(1)
  package: word!
  fullName: toJSON()
  summary: Überschreibt die JavaScript `toJSON()` -Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird. `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche Word. ContentControl-Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt (typisiert als `Word.Interfaces.ContentControlData`<!-- -->), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Word.Interfaces.ContentControlData;'
    return:
      type: <xref uid="word!Word.Interfaces.ContentControlData:interface" />
      description: ''
- name: track()
  uid: word!Word.ContentControl#track:member(1)
  package: word!
  fullName: track()
  summary: Nachverfolgung des Objekts zwecks automatischer Anpassung auf der Grundlage der umgebenden Änderungen im Dokument. Dieser Aufruf ist eine Kurzform für `context.trackedObjects.add(thisObject)`<!-- -->. Wenn Sie dieses Objekt für `.sync` Aufrufe und außerhalb der sequenziellen Ausführung eines ". Run"-Batches verwenden und beim Festlegen einer Eigenschaft oder beim Aufrufen einer Methode für das Objekt einen "InvalidObjectPath"-Fehler erhalten, mussten Sie das Objekt der nachverfolgten Objektauflistung hinzugefügt haben, als das Objekt zum ersten Mal erstellt wurde.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'track(): Word.ContentControl;'
    return:
      type: <xref uid="word!Word.ContentControl:class" />
      description: ''
- name: untrack()
  uid: word!Word.ContentControl#untrack:member(1)
  package: word!
  fullName: untrack()
  summary: Gibt den diesem Objekt zugewiesenen Arbeitsspeicher frei, wenn das Objekt zuvor nachverfolgt wurde. Bei diesem Aufruf handelt es sich um eine Kurzform `context.trackedObjects.remove(thisObject)`<!-- -->. Viele nachverfolgte Objekte verlangsamen die Ausführung der Hostanwendung, also achten Sie darauf, alle hinzugefügten Objekte nach abgeschlossener Verwendung freizugeben. Sie müssen anrufen, `context.sync()` bevor die Speicherfreigabe wirksam wird.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'untrack(): Word.ContentControl;'
    return:
      type: <xref uid="word!Word.ContentControl:class" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: b4c314015bc55849f7fc1a10933ffca576fd5dee
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49263113"
