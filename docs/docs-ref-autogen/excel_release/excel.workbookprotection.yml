### YamlMime:UniversalReference
ms.openlocfilehash: 541fcb12e43c834e851af290685be9e015cb6e23
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/20/2019
ms.locfileid: "30106140"
items:
- uid: excel_release.Excel.WorkbookProtection
  summary: >-
    <span data-ttu-id="c6576-101">Stellt den Schutz eines Workbook-Objekts dar.</span><span class="sxs-lookup"><span data-stu-id="c6576-101">Represents the protection of a workbook object.</span></span>


    <span data-ttu-id="c6576-102">\[[API-Satz: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c6576-102">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.WorkbookProtection
  fullName: Excel.WorkbookProtection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.WorkbookProtection.context
  - excel_release.Excel.WorkbookProtection.load
  - excel_release.Excel.WorkbookProtection.load_1
  - excel_release.Excel.WorkbookProtection.load_2
  - excel_release.Excel.WorkbookProtection.protect
  - excel_release.Excel.WorkbookProtection.protected
  - excel_release.Excel.WorkbookProtection.toJSON
  - excel_release.Excel.WorkbookProtection.unprotect
- uid: excel_release.Excel.WorkbookProtection.context
  summary: <span data-ttu-id="c6576-103">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="c6576-103">The request context associated with the object.</span></span> <span data-ttu-id="c6576-104">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="c6576-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.WorkbookProtection.load
  summary: <span data-ttu-id="c6576-105">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="c6576-105">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c6576-106">Sie müssen "context. Sync ()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="c6576-106">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="c6576-107">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="c6576-107">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="c6576-108">`load(option?: string | string[]): Excel.WorkbookProtection`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="c6576-108">`load(option?: string | string[]): Excel.WorkbookProtection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="c6576-109">`load(option?: { select?: string; expand?: string; }): Excel.WorkbookProtection`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="c6576-109">`load(option?: { select?: string; expand?: string; }): Excel.WorkbookProtection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="c6576-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorkbookProtection`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="c6576-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorkbookProtection` - Only available on collection types.</span></span> <span data-ttu-id="c6576-111">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="c6576-111">It is similar to the preceding signature.</span></span> <span data-ttu-id="c6576-112">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="c6576-112">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="c6576-113">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="c6576-113">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="c6576-114">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="c6576-114">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.WorkbookProtectionLoadOptions): Excel.WorkbookProtection;'
    return:
      type:
      - excel.Excel.WorkbookProtection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.WorkbookProtectionLoadOptions
- uid: excel_release.Excel.WorkbookProtection.load_1
  summary: <span data-ttu-id="c6576-115">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="c6576-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c6576-116">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="c6576-116">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.WorkbookProtection;'
    return:
      type:
      - excel.Excel.WorkbookProtection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="c6576-117">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="c6576-117">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.WorkbookProtection.load_2
  summary: <span data-ttu-id="c6576-118">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="c6576-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c6576-119">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="c6576-119">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.WorkbookProtection;'
    return:
      type:
      - excel.Excel.WorkbookProtection
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="c6576-120">Wobei propertyNamesAndPaths. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="c6576-120">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.WorkbookProtection.protect
  summary: >-
    <span data-ttu-id="c6576-121">Schützt ein Arbeitsblatt.</span><span class="sxs-lookup"><span data-stu-id="c6576-121">Protects a workbook.</span></span> <span data-ttu-id="c6576-122">Schlägt fehl, wenn die Arbeitsmappe geschützt ist.</span><span class="sxs-lookup"><span data-stu-id="c6576-122">Fails if the workbook has been protected.</span></span>


    <span data-ttu-id="c6576-123">\[[API-Satz: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c6576-123">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: protect(password)
  fullName: protect(password)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'protect(password?: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"c6576-124\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"c6576-124\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let workbook = context.workbook;\n    workbook.load(\"protection/protected\");\n\n    await context.sync();\n\n    if (!workbook.protection.protected) {\n        workbook.protection.protect();\n    }\n});\n```\n```typescript\nlet password = await passwordHandler();\npasswordHelper(password);\nawait Excel.run(async (context) => {\n    let workbook = context.workbook;\n    workbook.load(\"protection/protected\");\n\n    await context.sync();\n\n    if (!workbook.protection.protected) {\n        workbook.protection.protect(password);\n    }\n});\n```"
    parameters:
    - id: password
      description: <span data-ttu-id="c6576-125">Kennwort für die Arbeitsmappe.</span><span class="sxs-lookup"><span data-stu-id="c6576-125">workbook protection password.</span></span>
      type:
      - string
- uid: excel_release.Excel.WorkbookProtection.protected
  summary: >-
    <span data-ttu-id="c6576-126">Zeigt an, ob die Arbeitsmappe geschützt ist.</span><span class="sxs-lookup"><span data-stu-id="c6576-126">Indicates if the workbook is protected.</span></span> <span data-ttu-id="c6576-127">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="c6576-127">Read-Only.</span></span>


    <span data-ttu-id="c6576-128">\[[API-Satz: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c6576-128">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: protected
  fullName: protected
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly protected: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.WorkbookProtection.toJSON
  summary: <span data-ttu-id="c6576-129">ÜberSchreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API `JSON.stringify()` <!-- -->-Objekt an übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="c6576-129">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="c6576-130">(`JSON.stringify`<!-- -->ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche Excel. WorkbookProtection-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt `Excel.Interfaces.WorkbookProtectionData` <!-- -->(typisiert als) zurück, das flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="c6576-130">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.WorkbookProtection object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorkbookProtectionData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.WorkbookProtectionData;'
    return:
      type:
      - excel.Excel.Interfaces.WorkbookProtectionData
      description: ''
- uid: excel_release.Excel.WorkbookProtection.unprotect
  summary: >-
    <span data-ttu-id="c6576-131">Schützt eine Arbeitsmappe.</span><span class="sxs-lookup"><span data-stu-id="c6576-131">Unprotects a workbook.</span></span>


    <span data-ttu-id="c6576-132">\[[API-Satz: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c6576-132">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: unprotect(password)
  fullName: unprotect(password)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'unprotect(password?: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"c6576-133\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"c6576-133\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let workbook = context.workbook;\n    workbook.protection.unprotect();\n});\n```\n```typescript\nlet password = await passwordHandler();\npasswordHelper(password);\nawait Excel.run(async (context) => {\n    let workbook = context.workbook;\n    workbook.protection.unprotect(password);\n});\n```"
    parameters:
    - id: password
      description: <span data-ttu-id="c6576-134">Kennwort für die Arbeitsmappe.</span><span class="sxs-lookup"><span data-stu-id="c6576-134">workbook protection password.</span></span>
      type:
      - string
