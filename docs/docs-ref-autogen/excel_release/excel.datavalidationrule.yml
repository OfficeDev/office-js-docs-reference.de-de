### YamlMime:UniversalReference
ms.openlocfilehash: 3a4e8834a4b86710d05797ede1682e31dada2c14
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/20/2019
ms.locfileid: "30113385"
items:
- uid: excel_release.Excel.DataValidationRule
  summary: >-
    <span data-ttu-id="e8178-101">Die Daten Überprüfungsregel enthält verschiedene Arten der Datenüberprüfung.</span><span class="sxs-lookup"><span data-stu-id="e8178-101">Data validation rule contains different types of data validation.</span></span> <span data-ttu-id="e8178-102">Sie können jeweils nur eine der beiden nach dem Excel. dataValidationtype verwenden.</span><span class="sxs-lookup"><span data-stu-id="e8178-102">You can only use one of them at a time according the Excel.DataValidationType.</span></span>


    <span data-ttu-id="e8178-103">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e8178-103">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.DataValidationRule
  fullName: Excel.DataValidationRule
  langs:
  - typeScript
  type: interface
  package: excel_release
  children:
  - excel_release.Excel.DataValidationRule.custom
  - excel_release.Excel.DataValidationRule.date
  - excel_release.Excel.DataValidationRule.decimal
  - excel_release.Excel.DataValidationRule.list
  - excel_release.Excel.DataValidationRule.textLength
  - excel_release.Excel.DataValidationRule.time
  - excel_release.Excel.DataValidationRule.wholeNumber
- uid: excel_release.Excel.DataValidationRule.custom
  summary: >-
    <span data-ttu-id="e8178-104">Kriterien für eine benutzerdefinierte Datenüberprüfung.</span><span class="sxs-lookup"><span data-stu-id="e8178-104">Custom data validation criteria.</span></span>


    <span data-ttu-id="e8178-105">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e8178-105">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: custom
  fullName: custom
  langs:
  - typeScript
  type: property
  syntax:
    content: 'custom?: Excel.CustomDataValidation;'
    return:
      type:
      - excel.Excel.CustomDataValidation
- uid: excel_release.Excel.DataValidationRule.date
  summary: >-
    <span data-ttu-id="e8178-106">Kriterien für die Datenüberprüfung.</span><span class="sxs-lookup"><span data-stu-id="e8178-106">Date data validation criteria.</span></span>


    <span data-ttu-id="e8178-107">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e8178-107">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: date
  fullName: date
  langs:
  - typeScript
  type: property
  syntax:
    content: 'date?: Excel.DateTimeDataValidation;'
    return:
      type:
      - excel.Excel.DateTimeDataValidation
- uid: excel_release.Excel.DataValidationRule.decimal
  summary: >-
    <span data-ttu-id="e8178-108">Kriterien für die dezimale Datenüberprüfung.</span><span class="sxs-lookup"><span data-stu-id="e8178-108">Decimal data validation criteria.</span></span>


    <span data-ttu-id="e8178-109">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e8178-109">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: decimal
  fullName: decimal
  langs:
  - typeScript
  type: property
  syntax:
    content: 'decimal?: Excel.BasicDataValidation;'
    return:
      type:
      - excel.Excel.BasicDataValidation
- uid: excel_release.Excel.DataValidationRule.list
  summary: >-
    <span data-ttu-id="e8178-110">Führt die Kriterien für die Datenüberprüfung auf.</span><span class="sxs-lookup"><span data-stu-id="e8178-110">List data validation criteria.</span></span>


    <span data-ttu-id="e8178-111">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e8178-111">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: list
  fullName: list
  langs:
  - typeScript
  type: property
  syntax:
    content: 'list?: Excel.ListDataValidation;'
    return:
      type:
      - excel.Excel.ListDataValidation
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"e8178-112\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"e8178-112\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Decision\");\n    const nameRange = \n        sheet.tables.getItem(\"NameOptionsTable\").columns.getItem(\"Baby Name\").getDataBodyRange();\n\n    // When you are developing, it is a good practice to\n    // clear the dataValidation object with each run of your code.\n    nameRange.dataValidation.clear();\n\n    const nameSourceRange = context.workbook.worksheets.getItem(\"Names\").getRange(\"A1:A3\");\n\n    let approvedListRule = {\n        list: {\n            inCellDropDown: true,\n            source: '=Names!$A$1:$A$3'\n        }\n    };\n    nameRange.dataValidation.rule = approvedListRule;\n\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.DataValidationRule.textLength
  summary: >-
    <span data-ttu-id="e8178-113">Kriterien für die TextLength-Datenüberprüfung</span><span class="sxs-lookup"><span data-stu-id="e8178-113">TextLength data validation criteria.</span></span>


    <span data-ttu-id="e8178-114">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e8178-114">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: textLength
  fullName: textLength
  langs:
  - typeScript
  type: property
  syntax:
    content: 'textLength?: Excel.BasicDataValidation;'
    return:
      type:
      - excel.Excel.BasicDataValidation
- uid: excel_release.Excel.DataValidationRule.time
  summary: >-
    <span data-ttu-id="e8178-115">Kriterien für die Zeitdatenüberprüfung.</span><span class="sxs-lookup"><span data-stu-id="e8178-115">Time data validation criteria.</span></span>


    <span data-ttu-id="e8178-116">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e8178-116">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: time
  fullName: time
  langs:
  - typeScript
  type: property
  syntax:
    content: 'time?: Excel.DateTimeDataValidation;'
    return:
      type:
      - excel.Excel.DateTimeDataValidation
- uid: excel_release.Excel.DataValidationRule.wholeNumber
  summary: >-
    <span data-ttu-id="e8178-117">Kriterien für die WholeNumber-Datenüberprüfung</span><span class="sxs-lookup"><span data-stu-id="e8178-117">WholeNumber data validation criteria.</span></span>


    <span data-ttu-id="e8178-118">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e8178-118">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: wholeNumber
  fullName: wholeNumber
  langs:
  - typeScript
  type: property
  syntax:
    content: 'wholeNumber?: Excel.BasicDataValidation;'
    return:
      type:
      - excel.Excel.BasicDataValidation
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"e8178-119\">Examples</span><span class=\"sxs-lookup\"><span data-stu-id=\"e8178-119\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Decision\");\n    const rankingRange = sheet.tables.getItem(\"NameOptionsTable\").columns.getItem(\"Ranking\").getDataBodyRange();\n\n    // When you are developing, it is a good practice to\n    // clear the dataValidation object with each run of your code.\n    rankingRange.dataValidation.clear();\n\n    let greaterThanZeroRule = {\n        wholeNumber: {\n            formula1: 0,\n            operator: Excel.DataValidationOperator.greaterThan\n        }\n    };\n    rankingRange.dataValidation.rule = greaterThanZeroRule;\n\n    rankingRange.dataValidation.prompt = {\n        message: \"Please enter a positive number.\",\n        showPrompt: true,\n        title: \"Positive numbers only.\"\n    };\n\n    rankingRange.dataValidation.errorAlert = {\n        message: \"Sorry, only positive numbers are allowed\",\n        showAlert: true,\n        style: \"Stop\",\n        title: \"Negative Number Entered\"\n    };\n\n    await context.sync();\n});\n```"
