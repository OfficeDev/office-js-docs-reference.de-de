### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.DataValidationRule
    summary: |-
      <span data-ttu-id="e9db7-101">Die Daten Überprüfungsregel enthält verschiedene Arten der Datenüberprüfung.</span><span class="sxs-lookup"><span data-stu-id="e9db7-101">Data validation rule contains different types of data validation.</span></span> <span data-ttu-id="e9db7-102">Sie können jeweils nur eine der beiden nach dem Excel. dataValidationtype verwenden.</span><span class="sxs-lookup"><span data-stu-id="e9db7-102">You can only use one of them at a time according the Excel.DataValidationType.</span></span>

      <span data-ttu-id="e9db7-103">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e9db7-103">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.DataValidationRule
    fullName: Excel.DataValidationRule
    langs:
      - typeScript
    type: interface
    package: excel_release
    children:
      - excel_release.Excel.DataValidationRule.custom
      - excel_release.Excel.DataValidationRule.date
      - excel_release.Excel.DataValidationRule.decimal
      - excel_release.Excel.DataValidationRule.list
      - excel_release.Excel.DataValidationRule.textLength
      - excel_release.Excel.DataValidationRule.time
      - excel_release.Excel.DataValidationRule.wholeNumber
  - uid: excel_release.Excel.DataValidationRule.custom
    summary: |-
      <span data-ttu-id="e9db7-104">Kriterien für eine benutzerdefinierte Datenüberprüfung.</span><span class="sxs-lookup"><span data-stu-id="e9db7-104">Custom data validation criteria.</span></span>

      <span data-ttu-id="e9db7-105">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e9db7-105">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: custom
    fullName: custom
    langs:
      - typeScript
    type: property
    syntax:
      content: 'custom?: Excel.CustomDataValidation;'
      return:
        type:
          - excel.Excel.CustomDataValidation
  - uid: excel_release.Excel.DataValidationRule.date
    summary: |-
      <span data-ttu-id="e9db7-106">Kriterien für die Datenüberprüfung.</span><span class="sxs-lookup"><span data-stu-id="e9db7-106">Date data validation criteria.</span></span>

      <span data-ttu-id="e9db7-107">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e9db7-107">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: date
    fullName: date
    langs:
      - typeScript
    type: property
    syntax:
      content: 'date?: Excel.DateTimeDataValidation;'
      return:
        type:
          - excel.Excel.DateTimeDataValidation
  - uid: excel_release.Excel.DataValidationRule.decimal
    summary: |-
      <span data-ttu-id="e9db7-108">Kriterien für die dezimale Datenüberprüfung.</span><span class="sxs-lookup"><span data-stu-id="e9db7-108">Decimal data validation criteria.</span></span>

      <span data-ttu-id="e9db7-109">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e9db7-109">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: decimal
    fullName: decimal
    langs:
      - typeScript
    type: property
    syntax:
      content: 'decimal?: Excel.BasicDataValidation;'
      return:
        type:
          - excel.Excel.BasicDataValidation
  - uid: excel_release.Excel.DataValidationRule.list
    summary: |-
      <span data-ttu-id="e9db7-110">Führt die Kriterien für die Datenüberprüfung auf.</span><span class="sxs-lookup"><span data-stu-id="e9db7-110">List data validation criteria.</span></span>

      <span data-ttu-id="e9db7-111">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e9db7-111">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: list
    fullName: list
    langs:
      - typeScript
    type: property
    syntax:
      content: 'list?: Excel.ListDataValidation;'
      return:
        type:
          - excel.Excel.ListDataValidation
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e9db7-112">Beispiele</span><span class="sxs-lookup"><span data-stu-id="e9db7-112">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Decision");
              const nameRange = 
                  sheet.tables.getItem("NameOptionsTable").columns.getItem("Baby Name").getDataBodyRange();

              // When you are developing, it is a good practice to
              // clear the dataValidation object with each run of your code.
              nameRange.dataValidation.clear();

              const nameSourceRange = context.workbook.worksheets.getItem("Names").getRange("A1:A3");

              let approvedListRule = {
                  list: {
                      inCellDropDown: true,
                      source: '=Names!$A$1:$A$3'
                  }
              };
              nameRange.dataValidation.rule = approvedListRule;

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.DataValidationRule.textLength
    summary: |-
      <span data-ttu-id="e9db7-113">Kriterien für die TextLength-Datenüberprüfung</span><span class="sxs-lookup"><span data-stu-id="e9db7-113">TextLength data validation criteria.</span></span>

      <span data-ttu-id="e9db7-114">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e9db7-114">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: textLength
    fullName: textLength
    langs:
      - typeScript
    type: property
    syntax:
      content: 'textLength?: Excel.BasicDataValidation;'
      return:
        type:
          - excel.Excel.BasicDataValidation
  - uid: excel_release.Excel.DataValidationRule.time
    summary: |-
      <span data-ttu-id="e9db7-115">Kriterien für die Zeitdatenüberprüfung.</span><span class="sxs-lookup"><span data-stu-id="e9db7-115">Time data validation criteria.</span></span>

      <span data-ttu-id="e9db7-116">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e9db7-116">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: time
    fullName: time
    langs:
      - typeScript
    type: property
    syntax:
      content: 'time?: Excel.DateTimeDataValidation;'
      return:
        type:
          - excel.Excel.DateTimeDataValidation
  - uid: excel_release.Excel.DataValidationRule.wholeNumber
    summary: |-
      <span data-ttu-id="e9db7-117">Kriterien für die WholeNumber-Datenüberprüfung</span><span class="sxs-lookup"><span data-stu-id="e9db7-117">WholeNumber data validation criteria.</span></span>

      <span data-ttu-id="e9db7-118">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e9db7-118">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: wholeNumber
    fullName: wholeNumber
    langs:
      - typeScript
    type: property
    syntax:
      content: 'wholeNumber?: Excel.BasicDataValidation;'
      return:
        type:
          - excel.Excel.BasicDataValidation
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e9db7-119">Beispiele</span><span class="sxs-lookup"><span data-stu-id="e9db7-119">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Decision");
              const rankingRange = sheet.tables.getItem("NameOptionsTable").columns.getItem("Ranking").getDataBodyRange();

              // When you are developing, it is a good practice to
              // clear the dataValidation object with each run of your code.
              rankingRange.dataValidation.clear();

              let greaterThanZeroRule = {
                  wholeNumber: {
                      formula1: 0,
                      operator: Excel.DataValidationOperator.greaterThan
                  }
              };
              rankingRange.dataValidation.rule = greaterThanZeroRule;

              rankingRange.dataValidation.prompt = {
                  message: "Please enter a positive number.",
                  showPrompt: true,
                  title: "Positive numbers only."
              };

              rankingRange.dataValidation.errorAlert = {
                  message: "Sorry, only positive numbers are allowed",
                  showAlert: true,
                  style: "Stop",
                  title: "Negative Number Entered"
              };

              await context.sync();
          });
          ```