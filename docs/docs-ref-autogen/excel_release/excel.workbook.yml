### YamlMime:UniversalReference
ms.openlocfilehash: 4400485bc74cc2f3d42f3a0d92d7e2aa408f813f
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/20/2019
ms.locfileid: "30117032"
items:
- uid: excel_release.Excel.Workbook
  summary: >-
    <span data-ttu-id="1bab9-101">Die Arbeitsmappe ist das Objekt auf oberster Ebene , das dazugehörige Arbeitsmappenobjekte wie z. B. Arbeitsblätter, Tabellen, Bereiche usw. enthält.</span><span class="sxs-lookup"><span data-stu-id="1bab9-101">Workbook is the top level object which contains related workbook objects such as worksheets, tables, ranges, etc.</span></span>


    <span data-ttu-id="1bab9-102">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1bab9-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.Workbook
  fullName: Excel.Workbook
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.Workbook.application
  - excel_release.Excel.Workbook.bindings
  - excel_release.Excel.Workbook.context
  - excel_release.Excel.Workbook.customXmlParts
  - excel_release.Excel.Workbook.dataConnections
  - excel_release.Excel.Workbook.functions
  - excel_release.Excel.Workbook.getActiveCell
  - excel_release.Excel.Workbook.getSelectedRange
  - excel_release.Excel.Workbook.load
  - excel_release.Excel.Workbook.load_1
  - excel_release.Excel.Workbook.load_2
  - excel_release.Excel.Workbook.name
  - excel_release.Excel.Workbook.names
  - excel_release.Excel.Workbook.onSelectionChanged
  - excel_release.Excel.Workbook.pivotTables
  - excel_release.Excel.Workbook.properties
  - excel_release.Excel.Workbook.protection
  - excel_release.Excel.Workbook.readOnly
  - excel_release.Excel.Workbook.set
  - excel_release.Excel.Workbook.set_1
  - excel_release.Excel.Workbook.settings
  - excel_release.Excel.Workbook.styles
  - excel_release.Excel.Workbook.tables
  - excel_release.Excel.Workbook.toJSON
  - excel_release.Excel.Workbook.worksheets
- uid: excel_release.Excel.Workbook.application
  summary: >-
    <span data-ttu-id="1bab9-103">Stellt die Excel-Anwendungsinstanz dar, die diese Arbeitsmappe enthält.</span><span class="sxs-lookup"><span data-stu-id="1bab9-103">Represents the Excel application instance that contains this workbook.</span></span> <span data-ttu-id="1bab9-104">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1bab9-104">Read-only.</span></span>


    <span data-ttu-id="1bab9-105">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1bab9-105">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: application
  fullName: application
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly application: Excel.Application;'
    return:
      type:
      - excel.Excel.Application
- uid: excel_release.Excel.Workbook.bindings
  summary: >-
    <span data-ttu-id="1bab9-p102">Stellt eine Auflistung aller Bindungen dar, die Teil der Arbeitsmappe sind. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1bab9-p102">Represents a collection of bindings that are part of the workbook. Read-only.</span></span>


    <span data-ttu-id="1bab9-108">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1bab9-108">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: bindings
  fullName: bindings
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly bindings: Excel.BindingCollection;'
    return:
      type:
      - excel.Excel.BindingCollection
- uid: excel_release.Excel.Workbook.context
  summary: <span data-ttu-id="1bab9-109">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="1bab9-109">The request context associated with the object.</span></span> <span data-ttu-id="1bab9-110">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="1bab9-110">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.Workbook.customXmlParts
  summary: >-
    <span data-ttu-id="1bab9-p104">Stellt die Sammlung von benutzerdefinierten XML-Komponenten dar, die in dieser Arbeitsmappe enthalten sind. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1bab9-p104">Represents the collection of custom XML parts contained by this workbook. Read-only.</span></span>


    <span data-ttu-id="1bab9-113">\[[API-Satz: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1bab9-113">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: customXmlParts
  fullName: customXmlParts
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly customXmlParts: Excel.CustomXmlPartCollection;'
    return:
      type:
      - excel.Excel.CustomXmlPartCollection
- uid: excel_release.Excel.Workbook.dataConnections
  summary: >-
    <span data-ttu-id="1bab9-114">Stellt alle Datenverbindungen in der Arbeitsmappe dar.</span><span class="sxs-lookup"><span data-stu-id="1bab9-114">Represents all data connections in the workbook.</span></span> <span data-ttu-id="1bab9-115">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1bab9-115">Read-only.</span></span>


    <span data-ttu-id="1bab9-116">\[[API-Satz: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1bab9-116">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: dataConnections
  fullName: dataConnections
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly dataConnections: Excel.DataConnectionCollection;'
    return:
      type:
      - excel.Excel.DataConnectionCollection
- uid: excel_release.Excel.Workbook.functions
  summary: >-
    <span data-ttu-id="1bab9-117">Stellt eine Auflistung von Arbeitsblattfunktionen dar, die für die Berechnung verwendet werden können.</span><span class="sxs-lookup"><span data-stu-id="1bab9-117">Represents a collection of worksheet functions that can be used for computation.</span></span> <span data-ttu-id="1bab9-118">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1bab9-118">Read-only.</span></span>


    <span data-ttu-id="1bab9-119">\[[API-Satz: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1bab9-119">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: functions
  fullName: functions
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly functions: Excel.Functions;'
    return:
      type:
      - excel.Excel.Functions
- uid: excel_release.Excel.Workbook.getActiveCell
  summary: >-
    <span data-ttu-id="1bab9-120">Ruft die derzeit aktive Zelle aus der Arbeitsmappe ab.</span><span class="sxs-lookup"><span data-stu-id="1bab9-120">Gets the currently active cell from the workbook.</span></span>


    <span data-ttu-id="1bab9-121">\[[API-Satz: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1bab9-121">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getActiveCell()
  fullName: getActiveCell()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveCell(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1bab9-122\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"1bab9-122\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n\n    let myWorkbook = context.workbook;\n    let activeCell = myWorkbook.getActiveCell();\n    activeCell.load(\"address\");\n\n    await context.sync();\n    \n    console.log(\"The active cell is \" + activeCell.address);\n});\n```"
- uid: excel_release.Excel.Workbook.getSelectedRange
  summary: >-
    <span data-ttu-id="1bab9-123">Ruft den aktuell ausgewählten einzelnen Bereichen aus der Arbeitsmappe ab.</span><span class="sxs-lookup"><span data-stu-id="1bab9-123">Gets the currently selected single range from the workbook.</span></span> <span data-ttu-id="1bab9-124">Wenn mehrere Bereiche ausgewählt sind, löst diese Methode einen Fehler aus.</span><span class="sxs-lookup"><span data-stu-id="1bab9-124">If there are multiple ranges selected, this method will throw an error.</span></span>


    <span data-ttu-id="1bab9-125">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1bab9-125">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getSelectedRange()
  fullName: getSelectedRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1bab9-126\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"1bab9-126\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var selectedRange = ctx.workbook.getSelectedRange();\n    selectedRange.load('address');\n    return ctx.sync().then(function() {\n            console.log(selectedRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel_release.Excel.Workbook.load
  summary: <span data-ttu-id="1bab9-127">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="1bab9-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1bab9-128">Sie müssen "context. Sync ()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="1bab9-128">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="1bab9-129">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="1bab9-129">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="1bab9-130">`load(option?: string | string[]): Excel.Workbook`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="1bab9-130">`load(option?: string | string[]): Excel.Workbook` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="1bab9-131">`load(option?: { select?: string; expand?: string; }): Excel.Workbook`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="1bab9-131">`load(option?: { select?: string; expand?: string; }): Excel.Workbook` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="1bab9-132">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Workbook`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="1bab9-132">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Workbook` - Only available on collection types.</span></span> <span data-ttu-id="1bab9-133">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="1bab9-133">It is similar to the preceding signature.</span></span> <span data-ttu-id="1bab9-134">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="1bab9-134">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="1bab9-135">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="1bab9-135">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="1bab9-136">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="1bab9-136">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.WorkbookLoadOptions): Excel.Workbook;'
    return:
      type:
      - excel.Excel.Workbook
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.WorkbookLoadOptions
- uid: excel_release.Excel.Workbook.load_1
  summary: <span data-ttu-id="1bab9-137">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="1bab9-137">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1bab9-138">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="1bab9-138">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Workbook;'
    return:
      type:
      - excel.Excel.Workbook
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="1bab9-139">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="1bab9-139">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.Workbook.load_2
  summary: <span data-ttu-id="1bab9-140">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="1bab9-140">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1bab9-141">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="1bab9-141">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Workbook;'
    return:
      type:
      - excel.Excel.Workbook
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="1bab9-142">Wobei propertyNamesAndPaths. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="1bab9-142">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.Workbook.name
  summary: >-
    <span data-ttu-id="1bab9-143">Ruft den Namen der Arbeitsmappe ab.</span><span class="sxs-lookup"><span data-stu-id="1bab9-143">Gets the workbook name.</span></span> <span data-ttu-id="1bab9-144">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1bab9-144">Read-only.</span></span>


    <span data-ttu-id="1bab9-145">\[[API-Satz: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1bab9-145">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly name: string;'
    return:
      type:
      - string
- uid: excel_release.Excel.Workbook.names
  summary: >-
    <span data-ttu-id="1bab9-p113">Stellt eine Auflistung der benannten Elemente des Arbeitsmappenbereichs dar (benannte Bereiche und Konstanten). Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1bab9-p113">Represents a collection of workbook scoped named items (named ranges and constants). Read-only.</span></span>


    <span data-ttu-id="1bab9-148">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1bab9-148">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: names
  fullName: names
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly names: Excel.NamedItemCollection;'
    return:
      type:
      - excel.Excel.NamedItemCollection
- uid: excel_release.Excel.Workbook.onSelectionChanged
  summary: >-
    <span data-ttu-id="1bab9-149">Tritt ein, wenn die Auswahl im Dokument geändert wird.</span><span class="sxs-lookup"><span data-stu-id="1bab9-149">Occurs when the selection in the document is changed.</span></span>


    <span data-ttu-id="1bab9-150">\[[API-Satz: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1bab9-150">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onSelectionChanged
  fullName: onSelectionChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>
- uid: excel_release.Excel.Workbook.pivotTables
  summary: >-
    <span data-ttu-id="1bab9-p114">Stellt eine Auflistung der mit der Arbeitsmappe verknüpften PivotTables dar. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1bab9-p114">Represents a collection of PivotTables associated with the workbook. Read-only.</span></span>


    <span data-ttu-id="1bab9-153">\[[API-Satz: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1bab9-153">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: pivotTables
  fullName: pivotTables
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly pivotTables: Excel.PivotTableCollection;'
    return:
      type:
      - excel.Excel.PivotTableCollection
- uid: excel_release.Excel.Workbook.properties
  summary: >-
    <span data-ttu-id="1bab9-154">Ruft die Arbeitsmappeneigenschaften ab.</span><span class="sxs-lookup"><span data-stu-id="1bab9-154">Gets the workbook properties.</span></span> <span data-ttu-id="1bab9-155">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1bab9-155">Read-only.</span></span>


    <span data-ttu-id="1bab9-156">\[[API-Satz: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1bab9-156">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: properties
  fullName: properties
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly properties: Excel.DocumentProperties;'
    return:
      type:
      - excel.Excel.DocumentProperties
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1bab9-157\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"1bab9-157\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let titleValue = \"Excel document properties API\";\n    let subjectValue = \"Set and get document properties\";\n    let keywordsValue = \"Set and get operations\";\n    let commentsValue = \"This is an Excel document properties API code sample\";\n    let categoryValue = \"Office Add-ins\";\n    let managerValue = \"John\";\n    let companyValue = \"Microsoft\";\n\n    let docProperties = context.workbook.properties;\n\n    // Set the writeable document properties.\n    docProperties.title = titleValue;\n    docProperties.subject = subjectValue;\n    docProperties.keywords = keywordsValue;\n    docProperties.comments = commentsValue;\n    docProperties.category = categoryValue;\n    docProperties.manager = managerValue;\n    docProperties.company = companyValue;\n\n    await context.sync();\n\n    console.log(\"Set the following document properties: title, subject, keywords, comments, category, manager, company.\");\n});\n```"
- uid: excel_release.Excel.Workbook.protection
  summary: >-
    <span data-ttu-id="1bab9-158">Gibt das Arbeitsmappenschutz-Objekt für eine Arbeitsmappe zurück.</span><span class="sxs-lookup"><span data-stu-id="1bab9-158">Returns workbook protection object for a workbook.</span></span> <span data-ttu-id="1bab9-159">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1bab9-159">Read-only.</span></span>


    <span data-ttu-id="1bab9-160">\[[API-Satz: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1bab9-160">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: protection
  fullName: protection
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly protection: Excel.WorkbookProtection;'
    return:
      type:
      - excel.Excel.WorkbookProtection
- uid: excel_release.Excel.Workbook.readOnly
  summary: >-
    <span data-ttu-id="1bab9-161">True, wenn die Arbeitsmappe im schreibgeschützten Modus geöffnet ist.</span><span class="sxs-lookup"><span data-stu-id="1bab9-161">True if the workbook is open in Read-only mode.</span></span> <span data-ttu-id="1bab9-162">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1bab9-162">Read-only.</span></span>


    <span data-ttu-id="1bab9-163">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1bab9-163">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: readOnly
  fullName: readOnly
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly readOnly: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.Workbook.set
  summary: <span data-ttu-id="1bab9-164">Legt mehrere Eigenschaften eines Objekts gleichzeitig fest.</span><span class="sxs-lookup"><span data-stu-id="1bab9-164">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="1bab9-165">Sie können entweder ein plain-Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs weitergeben.</span><span class="sxs-lookup"><span data-stu-id="1bab9-165">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="1bab9-166">Diese Methode hat die folgende zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="1bab9-166">This method has the following additional signature:</span></span>


    `set(properties: Excel.Workbook): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.WorkbookUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="1bab9-167">Ein JavaScript-Objekt mit Eigenschaften, die isomorphically strukturiert sind, um die Eigenschaften des Objekts, für das die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="1bab9-167">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.WorkbookUpdateData
    - id: options
      description: <span data-ttu-id="1bab9-168">Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.</span><span class="sxs-lookup"><span data-stu-id="1bab9-168">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel_release.Excel.Workbook.set_1
  summary: <span data-ttu-id="1bab9-169">Legt mehrere Eigenschaften für das Objekt auf der Grundlage eines vorhandenen geladenen Objekts zur gleichen Zeit fest.</span><span class="sxs-lookup"><span data-stu-id="1bab9-169">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.Workbook): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.Workbook
- uid: excel_release.Excel.Workbook.settings
  summary: >-
    <span data-ttu-id="1bab9-p119">Stellt eine Auflistung der mit der Arbeitsmappe verknüpften Einstellungen dar. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1bab9-p119">Represents a collection of Settings associated with the workbook. Read-only.</span></span>


    <span data-ttu-id="1bab9-172">\[[API-Satz: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1bab9-172">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: settings
  fullName: settings
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly settings: Excel.SettingCollection;'
    return:
      type:
      - excel.Excel.SettingCollection
- uid: excel_release.Excel.Workbook.styles
  summary: >-
    <span data-ttu-id="1bab9-173">Stellt eine Auflistung der mit der Arbeitsmappe verknüpften Formatvorlagen dar.</span><span class="sxs-lookup"><span data-stu-id="1bab9-173">Represents a collection of styles associated with the workbook.</span></span> <span data-ttu-id="1bab9-174">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1bab9-174">Read-only.</span></span>


    <span data-ttu-id="1bab9-175">\[[API-Satz: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1bab9-175">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: styles
  fullName: styles
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly styles: Excel.StyleCollection;'
    return:
      type:
      - excel.Excel.StyleCollection
- uid: excel_release.Excel.Workbook.tables
  summary: >-
    <span data-ttu-id="1bab9-p121">Stellt eine Auflistung der mit der Arbeitsmappe verknüpften Tabellen dar. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1bab9-p121">Represents a collection of tables associated with the workbook. Read-only.</span></span>


    <span data-ttu-id="1bab9-178">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1bab9-178">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: tables
  fullName: tables
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly tables: Excel.TableCollection;'
    return:
      type:
      - excel.Excel.TableCollection
- uid: excel_release.Excel.Workbook.toJSON
  summary: <span data-ttu-id="1bab9-179">ÜberSchreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API `JSON.stringify()` <!-- -->-Objekt an übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="1bab9-179">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="1bab9-180">(`JSON.stringify`<!-- -->ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche Excel. Workbook-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt `Excel.Interfaces.WorkbookData` <!-- -->(typisiert als) zurück, das flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="1bab9-180">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Workbook object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorkbookData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.WorkbookData;'
    return:
      type:
      - excel.Excel.Interfaces.WorkbookData
      description: ''
- uid: excel_release.Excel.Workbook.worksheets
  summary: >-
    <span data-ttu-id="1bab9-p123">Stellt eine Auflistung der mit der Arbeitsmappe verknüpften Arbeitsblätter dar. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1bab9-p123">Represents a collection of worksheets associated with the workbook. Read-only.</span></span>


    <span data-ttu-id="1bab9-183">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1bab9-183">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheets
  fullName: worksheets
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheets: Excel.WorksheetCollection;'
    return:
      type:
      - excel.Excel.WorksheetCollection
