### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.PivotTableCollection
    summary: |-
      Stellt eine Auflistung aller PivotTables dar, die Teil der Arbeitsmappe oder des Arbeitsblatts sind.

      \[[API-Satz: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.PivotTableCollection
    fullName: Excel.PivotTableCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.PivotTableCollection.add
      - excel_release.Excel.PivotTableCollection.context
      - excel_release.Excel.PivotTableCollection.getCount
      - excel_release.Excel.PivotTableCollection.getItem
      - excel_release.Excel.PivotTableCollection.getItemOrNullObject
      - excel_release.Excel.PivotTableCollection.items
      - excel_release.Excel.PivotTableCollection.load
      - excel_release.Excel.PivotTableCollection.load_1
      - excel_release.Excel.PivotTableCollection.load_2
      - excel_release.Excel.PivotTableCollection.refreshAll
      - excel_release.Excel.PivotTableCollection.toJSON
  - uid: excel_release.Excel.PivotTableCollection.add
    summary: |-
      Fügt ein PivotTable-Objekt basierend auf den Quelldaten hinzu und fügt es in die obere linke Zelle des Zielbereichs ein.

      \[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'add(name, source, destination)'
    fullName: 'add(name, source, destination)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name: string, source: Range | string | Table, destination: Range | string): Excel.PivotTable;'
      return:
        type:
          - excel.Excel.PivotTable
        description: |-
          Gibt die neu eingefügte PivotTable zurück.

          #### <a name="examples"></a>Beispiele

          ```typescript
          await Excel.run(async (context) => {
              const rangeToAnalyze = context.workbook.worksheets.getItem("Data").getRange("A1:E21");
              const rangeToPlacePivot = context.workbook.worksheets.getItem("Pivot").getRange("A2");
              context.workbook.worksheets.getItem("Pivot").pivotTables.add("Farm Sales", rangeToAnalyze, rangeToPlacePivot);

              await context.sync();
          });
          ```
      parameters:
        - id: name
          description: Der Name der neuen PivotTable.
          type:
            - string
        - id: source
          description: 'Die Quelldaten für die neue PivotTable, dies kann entweder ein Range (oder eine Zeichenfolgen Adresse einschließlich des Arbeitsblattnamens) oder eine Tabelle sein.'
          type:
            - Range | string | Table
        - id: destination
          description: 'Die Zelle in der oberen linken Ecke des Zielbereichs des PivotTable-Berichts (der Bereich auf dem Arbeitsblatt, in dem der resultierende Bericht platziert wird).'
          type:
            - Range | string
  - uid: excel_release.Excel.PivotTableCollection.context
    summary: Der dem Objekt zugeordnete Anforderungskontext. Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.PivotTableCollection.getCount
    summary: |-
      Ruft die Anzahl von PivotTables in der Auflistung ab.

      \[[API-Satz: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel_release.Excel.PivotTableCollection.getItem
    summary: |-
      Ruft eine PivotTable anhand des Namens ab.

      \[[API-Satz: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.PivotTable;'
      return:
        type:
          - excel.Excel.PivotTable
        description: ''
      parameters:
        - id: name
          description: Name der abzurufenden PivotTable.
          type:
            - string
  - uid: excel_release.Excel.PivotTableCollection.getItemOrNullObject
    summary: |-
      Ruft eine PivotTable anhand des Namens ab. Wenn die PivotTable nicht vorhanden ist, wird ein NULL-Objekt zurückgegeben.

      \[[API-Satz: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItemOrNullObject(name)
    fullName: getItemOrNullObject(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(name: string): Excel.PivotTable;'
      return:
        type:
          - excel.Excel.PivotTable
        description: ''
      parameters:
        - id: name
          description: Name der abzurufenden PivotTable.
          type:
            - string
  - uid: excel_release.Excel.PivotTableCollection.items
    summary: Ruft die geladenen untergeordneten Elemente in dieser Sammlung ab.
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.PivotTable[];'
      return:
        type:
          - 'Excel.PivotTable[]'
  - uid: excel_release.Excel.PivotTableCollection.load
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.
    remarks: |-
      Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:

      `load(option?: string | string[]): Excel.PivotTableCollection`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.

      `load(option?: { select?: string; expand?: string; }): Excel.PivotTableCollection`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTableCollection`-Nur verfügbar für Sammlungstypen. Sie ähnelt der vorherigen Signatur. Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können. Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind. Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.PivotTableCollection;'
      return:
        type:
          - excel.Excel.PivotTableCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel_release.Excel.PivotTableCollection.load_1
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotTableCollection;'
      return:
        type:
          - excel.Excel.PivotTableCollection
        description: ''
      parameters:
        - id: propertyNames
          description: 'Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.'
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.PivotTableCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.PivotTableCollection;'
      return:
        type:
          - excel.Excel.PivotTableCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: excel_release.Excel.PivotTableCollection.refreshAll
    summary: |-
      Aktualisiert alle PivotTables in der Sammlung.

      \[[API-Satz: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: refreshAll()
    fullName: refreshAll()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'refreshAll(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel_release.Excel.PivotTableCollection.toJSON
    summary: 'ÜberSchreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API-Objekt an`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->Ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche `Excel.PivotTableCollection` Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`Excel.Interfaces.PivotTableCollectionData`<!-- -->), die ein Array "Items" mit flachen Kopien aller geladenen Eigenschaften aus den Elementen der Auflistung enthält.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotTableCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.PivotTableCollectionData
        description: ''