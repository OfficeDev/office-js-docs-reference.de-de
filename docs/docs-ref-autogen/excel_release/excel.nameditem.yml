### YamlMime:UniversalReference
ms.openlocfilehash: a00d58522afc78436b279e69f33320ab56d816fd
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/20/2019
ms.locfileid: "30115142"
items:
- uid: excel_release.Excel.NamedItem
  summary: >-
    <span data-ttu-id="82c5b-101">Stellt einen definierten Namen für einen Zellbereich oder einen Wert dar.</span><span class="sxs-lookup"><span data-stu-id="82c5b-101">Represents a defined name for a range of cells or value.</span></span> <span data-ttu-id="82c5b-102">Namen können primitive benannte Objekte sein (wie im folgenden Typ dargestellt), Range-Objekt oder ein Verweis auf einen Range.</span><span class="sxs-lookup"><span data-stu-id="82c5b-102">Names can be primitive named objects (as seen in the type below), range object, or a reference to a range.</span></span> <span data-ttu-id="82c5b-103">Dieses Objekt kann verwendet werden, um das mit Namen verknüpfte Range-Objekt abzurufen.</span><span class="sxs-lookup"><span data-stu-id="82c5b-103">This object can be used to obtain range object associated with names.</span></span>


    <span data-ttu-id="82c5b-104">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82c5b-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.NamedItem
  fullName: Excel.NamedItem
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.NamedItem.arrayValues
  - excel_release.Excel.NamedItem.comment
  - excel_release.Excel.NamedItem.context
  - excel_release.Excel.NamedItem.delete
  - excel_release.Excel.NamedItem.formula
  - excel_release.Excel.NamedItem.getRange
  - excel_release.Excel.NamedItem.getRangeOrNullObject
  - excel_release.Excel.NamedItem.load
  - excel_release.Excel.NamedItem.load_1
  - excel_release.Excel.NamedItem.load_2
  - excel_release.Excel.NamedItem.name
  - excel_release.Excel.NamedItem.scope
  - excel_release.Excel.NamedItem.set
  - excel_release.Excel.NamedItem.set_1
  - excel_release.Excel.NamedItem.toJSON
  - excel_release.Excel.NamedItem.type
  - excel_release.Excel.NamedItem.value
  - excel_release.Excel.NamedItem.visible
  - excel_release.Excel.NamedItem.worksheet
  - excel_release.Excel.NamedItem.worksheetOrNullObject
- uid: excel_release.Excel.NamedItem.arrayValues
  summary: >-
    <span data-ttu-id="82c5b-105">Gibt ein Objekt mit Werten und Typen des benannten Elements zurück.</span><span class="sxs-lookup"><span data-stu-id="82c5b-105">Returns an object containing values and types of the named item.</span></span> <span data-ttu-id="82c5b-106">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="82c5b-106">Read-only.</span></span>


    <span data-ttu-id="82c5b-107">\[[API-Satz: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82c5b-107">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: arrayValues
  fullName: arrayValues
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly arrayValues: Excel.NamedItemArrayValues;'
    return:
      type:
      - excel.Excel.NamedItemArrayValues
- uid: excel_release.Excel.NamedItem.comment
  summary: >-
    <span data-ttu-id="82c5b-108">Stellt den Kommentar dar, der mit diesem Namen verknüpft ist</span><span class="sxs-lookup"><span data-stu-id="82c5b-108">Represents the comment associated with this name.</span></span>


    <span data-ttu-id="82c5b-109">\[[API-Satz: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82c5b-109">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: comment
  fullName: comment
  langs:
  - typeScript
  type: property
  syntax:
    content: 'comment: string;'
    return:
      type:
      - string
- uid: excel_release.Excel.NamedItem.context
  summary: <span data-ttu-id="82c5b-110">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="82c5b-110">The request context associated with the object.</span></span> <span data-ttu-id="82c5b-111">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="82c5b-111">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.NamedItem.delete
  summary: >-
    <span data-ttu-id="82c5b-112">Löscht den angegebenen Namen.</span><span class="sxs-lookup"><span data-stu-id="82c5b-112">Deletes the given name.</span></span>


    <span data-ttu-id="82c5b-113">\[[API-Satz: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82c5b-113">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"82c5b-114\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"82c5b-114\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const totalName = sheet.names.getItemOrNullObject(\"TotalAmount\");\n    totalName.load();\n    await context.sync();\n\n    if (totalName.value) {\n        totalName.delete();\n\n        // Replace the named item (TotalAmount) with the actual formula for TotalAmount to avoid displaying #NAME in the cell.\n        sheet.getRange(\"D11\").values = [[\"=SUM(ExpensesTable[AMOUNT])\"]];\n    } else {\n        console.log(\"No named item created for the formula.\");\n    }\n\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.NamedItem.formula
  summary: >-
    <span data-ttu-id="82c5b-115">Ruft die Formel des benannten Elements ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="82c5b-115">Gets or sets the formula of the named item.</span></span> <span data-ttu-id="82c5b-116">Formel beginnt immer mit einem "=".</span><span class="sxs-lookup"><span data-stu-id="82c5b-116">Formula always starts with a '=' sign.</span></span>


    <span data-ttu-id="82c5b-117">\[[API-Satz: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82c5b-117">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: formula
  fullName: formula
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formula: any;'
    return:
      type:
      - any
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"82c5b-118\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"82c5b-118\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Get the named item\n    const myNamedItem = sheet.names.getItemOrNullObject(\"MyRange\");\n    myNamedItem.load(\"name, formula\");\n    await context.sync();\n\n    if (myNamedItem.isNullObject) {\n        console.log(`There is no named item. Create it with \"Add named item for a range\" first.`);\n    } else {                    \n        // Update named item to point to the second range\n        myNamedItem.formula = \"=Sample!$B$10:$D$14\";\n        sheet.getRange(\"B10:D14\").select();\n        await context.sync();\n\n        console.log(`Just updated the named item \"${myNamedItem.name}\" -- it's now located here: ${myNamedItem.formula}`);\n    }\n});\n```"
- uid: excel_release.Excel.NamedItem.getRange
  summary: >-
    <span data-ttu-id="82c5b-p105">Ruft das Bereichsobjekt ab, das mit dem Namen verknüpft ist. Gibt einen Fehler zurück, wenn der Typ des benannten Elements kein Bereich ist.</span><span class="sxs-lookup"><span data-stu-id="82c5b-p105">Returns the range object that is associated with the name. Throws an error if the named item's type is not a range.</span></span>


    <span data-ttu-id="82c5b-121">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82c5b-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRange()
  fullName: getRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"82c5b-122\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"82c5b-122\">Examples</span></span>\n\n```javascript\n// Returns the Range object that is associated with the name. \n// null if the name is not of the type Range.\n// Note: This API currently supports only the Workbook scoped items.\nExcel.run(function (ctx) { \n    var names = ctx.workbook.names;\n    var range = names.getItem('MyRange').getRange();\n    range.load('address');\n    return ctx.sync().then(function() {\n        console.log(range.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel_release.Excel.NamedItem.getRangeOrNullObject
  summary: >-
    <span data-ttu-id="82c5b-p106">Ruft das Bereichsobjekt ab, das mit dem Namen verknüpft ist. Gibt ein NULL-Objekt zurück, wenn der Typ des benannten Elements kein Bereich ist.</span><span class="sxs-lookup"><span data-stu-id="82c5b-p106">Returns the range object that is associated with the name. Returns a null object if the named item's type is not a range.</span></span>


    <span data-ttu-id="82c5b-125">\[[API-Satz: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82c5b-125">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRangeOrNullObject()
  fullName: getRangeOrNullObject()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRangeOrNullObject(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel_release.Excel.NamedItem.load
  summary: <span data-ttu-id="82c5b-126">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="82c5b-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="82c5b-127">Sie müssen "context. Sync ()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="82c5b-127">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="82c5b-128">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="82c5b-128">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="82c5b-129">`load(option?: string | string[]): Excel.NamedItem`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="82c5b-129">`load(option?: string | string[]): Excel.NamedItem` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="82c5b-130">`load(option?: { select?: string; expand?: string; }): Excel.NamedItem`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="82c5b-130">`load(option?: { select?: string; expand?: string; }): Excel.NamedItem` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="82c5b-131">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItem`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="82c5b-131">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItem` - Only available on collection types.</span></span> <span data-ttu-id="82c5b-132">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="82c5b-132">It is similar to the preceding signature.</span></span> <span data-ttu-id="82c5b-133">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="82c5b-133">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="82c5b-134">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="82c5b-134">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="82c5b-135">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="82c5b-135">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.NamedItemLoadOptions): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.NamedItemLoadOptions
- uid: excel_release.Excel.NamedItem.load_1
  summary: <span data-ttu-id="82c5b-136">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="82c5b-136">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="82c5b-137">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="82c5b-137">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"82c5b-138\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"82c5b-138\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var names = ctx.workbook.names;\n    var namedItem = names.getItem('MyRange');\n    namedItem.load('type');\n    return ctx.sync().then(function() {\n            console.log(namedItem.type);\n    });\n}).catch(function(error) {\n        console.log(\"Error: \" + error);\n        if (error instanceof OfficeExtension.Error) {\n            console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n        }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="82c5b-139">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="82c5b-139">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.NamedItem.load_2
  summary: <span data-ttu-id="82c5b-140">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="82c5b-140">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="82c5b-141">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="82c5b-141">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="82c5b-142">Wobei propertyNamesAndPaths. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="82c5b-142">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.NamedItem.name
  summary: >-
    <span data-ttu-id="82c5b-p111">Der Name des Objekts. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="82c5b-p111">The name of the object. Read-only.</span></span>


    <span data-ttu-id="82c5b-145">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82c5b-145">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly name: string;'
    return:
      type:
      - string
- uid: excel_release.Excel.NamedItem.scope
  summary: >-
    <span data-ttu-id="82c5b-146">Gibt an, ob der Name auf die Arbeitsmappe oder ein bestimmtes Arbeitsblatt beschränkt ist.</span><span class="sxs-lookup"><span data-stu-id="82c5b-146">Indicates whether the name is scoped to the workbook or to a specific worksheet.</span></span> <span data-ttu-id="82c5b-147">Mögliche Werte sind Arbeitsblatt, Arbeitsmappe.</span><span class="sxs-lookup"><span data-stu-id="82c5b-147">Possible values are: Worksheet, Workbook.</span></span> <span data-ttu-id="82c5b-148">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="82c5b-148">Read-only.</span></span>


    <span data-ttu-id="82c5b-149">\[[API-Satz: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82c5b-149">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: scope
  fullName: scope
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly scope: Excel.NamedItemScope | "Worksheet" | "Workbook";'
    return:
      type:
      - Excel.NamedItemScope | "Worksheet" | "Workbook"
- uid: excel_release.Excel.NamedItem.set
  summary: <span data-ttu-id="82c5b-150">Legt mehrere Eigenschaften eines Objekts gleichzeitig fest.</span><span class="sxs-lookup"><span data-stu-id="82c5b-150">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="82c5b-151">Sie können entweder ein plain-Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs weitergeben.</span><span class="sxs-lookup"><span data-stu-id="82c5b-151">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="82c5b-152">Diese Methode hat die folgende zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="82c5b-152">This method has the following additional signature:</span></span>


    `set(properties: Excel.NamedItem): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.NamedItemUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="82c5b-153">Ein JavaScript-Objekt mit Eigenschaften, die isomorphically strukturiert sind, um die Eigenschaften des Objekts, für das die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="82c5b-153">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.NamedItemUpdateData
    - id: options
      description: <span data-ttu-id="82c5b-154">Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.</span><span class="sxs-lookup"><span data-stu-id="82c5b-154">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel_release.Excel.NamedItem.set_1
  summary: <span data-ttu-id="82c5b-155">Legt mehrere Eigenschaften für das Objekt auf der Grundlage eines vorhandenen geladenen Objekts zur gleichen Zeit fest.</span><span class="sxs-lookup"><span data-stu-id="82c5b-155">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.NamedItem): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.NamedItem
- uid: excel_release.Excel.NamedItem.toJSON
  summary: <span data-ttu-id="82c5b-156">ÜberSchreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API `JSON.stringify()` <!-- -->-Objekt an übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="82c5b-156">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="82c5b-157">(`JSON.stringify`<!-- -->ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche Excel. NamedItem-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt `Excel.Interfaces.NamedItemData` <!-- -->(typisiert als) zurück, das flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="82c5b-157">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.NamedItem object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.NamedItemData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.NamedItemData;'
    return:
      type:
      - excel.Excel.Interfaces.NamedItemData
      description: ''
- uid: excel_release.Excel.NamedItem.type
  summary: >-
    <span data-ttu-id="82c5b-158">Gibt den Typ des Werts an, der von der Formel des Namens zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="82c5b-158">Indicates the type of the value returned by the name's formula.</span></span> <span data-ttu-id="82c5b-159">Weitere Informationen finden Sie unter Excel. NamedItemType.</span><span class="sxs-lookup"><span data-stu-id="82c5b-159">See Excel.NamedItemType for details.</span></span> <span data-ttu-id="82c5b-160">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="82c5b-160">Read-only.</span></span>


    <span data-ttu-id="82c5b-161">\[[API-Satz: ExcelApi 1,1 für String, Integer, Double, Boolean, Range, Error; 1,7 für Array](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82c5b-161">\[ [API set: ExcelApi 1.1 for String,Integer,Double,Boolean,Range,Error; 1.7 for Array](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array";'
    return:
      type:
      - Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array"
- uid: excel_release.Excel.NamedItem.value
  summary: >-
    <span data-ttu-id="82c5b-p116">Stellt den Wert dar, der von der Formel des Namens berechnet wurde. Für einen benannten Bereich wird die Bereichsadresse zurückgegeben. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="82c5b-p116">Represents the value computed by the name's formula. For a named range, will return the range address. Read-only.</span></span>


    <span data-ttu-id="82c5b-165">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82c5b-165">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: value
  fullName: value
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly value: any;'
    return:
      type:
      - any
- uid: excel_release.Excel.NamedItem.visible
  summary: >-
    <span data-ttu-id="82c5b-166">Gibt an, ob das Objekt sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="82c5b-166">Specifies whether the object is visible or not.</span></span>


    <span data-ttu-id="82c5b-167">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82c5b-167">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: visible
  fullName: visible
  langs:
  - typeScript
  type: property
  syntax:
    content: 'visible: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.NamedItem.worksheet
  summary: >-
    <span data-ttu-id="82c5b-168">Gibt das Arbeitsblatt zurück, auf das das benannte Element beschränkt ist.</span><span class="sxs-lookup"><span data-stu-id="82c5b-168">Returns the worksheet on which the named item is scoped to.</span></span> <span data-ttu-id="82c5b-169">Löst einen Fehler aus, wenn das Element stattdessen auf die Arbeitsmappe beschränkt ist.</span><span class="sxs-lookup"><span data-stu-id="82c5b-169">Throws an error if the item is scoped to the workbook instead.</span></span>


    <span data-ttu-id="82c5b-170">\[[API-Satz: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82c5b-170">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheet
  fullName: worksheet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheet: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
- uid: excel_release.Excel.NamedItem.worksheetOrNullObject
  summary: >-
    <span data-ttu-id="82c5b-171">Gibt das Arbeitsblatt zurück, auf das das benannte Element beschränkt ist.</span><span class="sxs-lookup"><span data-stu-id="82c5b-171">Returns the worksheet on which the named item is scoped to.</span></span> <span data-ttu-id="82c5b-172">Gibt ein NULL-Objekt zurück, wenn das Element stattdessen auf die Arbeitsmappe beschränkt ist.</span><span class="sxs-lookup"><span data-stu-id="82c5b-172">Returns a null object if the item is scoped to the workbook instead.</span></span>


    <span data-ttu-id="82c5b-173">\[[API-Satz: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="82c5b-173">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheetOrNullObject
  fullName: worksheetOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheetOrNullObject: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
