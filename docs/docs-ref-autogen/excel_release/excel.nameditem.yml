### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.NamedItem
    summary: |-
      <span data-ttu-id="07886-101">Stellt einen definierten Namen für einen Zellbereich oder einen Wert dar.</span><span class="sxs-lookup"><span data-stu-id="07886-101">Represents a defined name for a range of cells or value.</span></span> <span data-ttu-id="07886-102">Namen können primitive benannte Objekte sein (wie im folgenden Typ dargestellt), Range-Objekt oder ein Verweis auf einen Range.</span><span class="sxs-lookup"><span data-stu-id="07886-102">Names can be primitive named objects (as seen in the type below), range object, or a reference to a range.</span></span> <span data-ttu-id="07886-103">Dieses Objekt kann zum Abrufen des mit Namen verknüpften Bereichsobjekts verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="07886-103">This object can be used to obtain range object associated with names.</span></span>

      <span data-ttu-id="07886-104">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="07886-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.NamedItem
    fullName: Excel.NamedItem
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.NamedItem.arrayValues
      - excel_release.Excel.NamedItem.comment
      - excel_release.Excel.NamedItem.context
      - excel_release.Excel.NamedItem.delete
      - excel_release.Excel.NamedItem.formula
      - excel_release.Excel.NamedItem.getRange
      - excel_release.Excel.NamedItem.getRangeOrNullObject
      - excel_release.Excel.NamedItem.load
      - excel_release.Excel.NamedItem.load_1
      - excel_release.Excel.NamedItem.load_2
      - excel_release.Excel.NamedItem.name
      - excel_release.Excel.NamedItem.scope
      - excel_release.Excel.NamedItem.set
      - excel_release.Excel.NamedItem.set_1
      - excel_release.Excel.NamedItem.toJSON
      - excel_release.Excel.NamedItem.type
      - excel_release.Excel.NamedItem.value
      - excel_release.Excel.NamedItem.visible
      - excel_release.Excel.NamedItem.worksheet
      - excel_release.Excel.NamedItem.worksheetOrNullObject
  - uid: excel_release.Excel.NamedItem.arrayValues
    summary: |-
      <span data-ttu-id="07886-105">Gibt ein Objekt mit Werten und Typen des benannten Elements zurück.</span><span class="sxs-lookup"><span data-stu-id="07886-105">Returns an object containing values and types of the named item.</span></span> <span data-ttu-id="07886-106">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="07886-106">Read-only.</span></span>

      <span data-ttu-id="07886-107">\[[API-Satz: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="07886-107">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: arrayValues
    fullName: arrayValues
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly arrayValues: Excel.NamedItemArrayValues;'
      return:
        type:
          - excel.Excel.NamedItemArrayValues
  - uid: excel_release.Excel.NamedItem.comment
    summary: |-
      <span data-ttu-id="07886-108">Stellt den Kommentar dar, der mit diesem Namen verknüpft ist</span><span class="sxs-lookup"><span data-stu-id="07886-108">Represents the comment associated with this name.</span></span>

      <span data-ttu-id="07886-109">\[[API-Satz: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="07886-109">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: comment
    fullName: comment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'comment: string;'
      return:
        type:
          - string
  - uid: excel_release.Excel.NamedItem.context
    summary: <span data-ttu-id="07886-110">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="07886-110">The request context associated with the object.</span></span> <span data-ttu-id="07886-111">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="07886-111">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.NamedItem.delete
    summary: |-
      <span data-ttu-id="07886-112">Löscht den angegebenen Namen.</span><span class="sxs-lookup"><span data-stu-id="07886-112">Deletes the given name.</span></span>

      <span data-ttu-id="07886-113">\[[API-Satz: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="07886-113">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="07886-114">Beispiele</span><span class="sxs-lookup"><span data-stu-id="07886-114">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const totalName = sheet.names.getItemOrNullObject("TotalAmount");
              totalName.load();
              await context.sync();

              if (totalName.value) {
                  totalName.delete();

                  // Replace the named item (TotalAmount) with the actual formula for TotalAmount to avoid displaying #NAME in the cell.
                  sheet.getRange("D11").values = [["=SUM(ExpensesTable[AMOUNT])"]];
              } else {
                  console.log("No named item created for the formula.");
              }

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.NamedItem.formula
    summary: |-
      <span data-ttu-id="07886-115">Ruft die Formel des benannten Elements ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="07886-115">Gets or sets the formula of the named item.</span></span> <span data-ttu-id="07886-116">Formel beginnt immer mit einem "=".</span><span class="sxs-lookup"><span data-stu-id="07886-116">Formula always starts with a '=' sign.</span></span>

      <span data-ttu-id="07886-117">\[[API-Satz: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="07886-117">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: formula
    fullName: formula
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formula: any;'
      return:
        type:
          - any
        description: |-


          #### <a name="examples"></a><span data-ttu-id="07886-118">Beispiele</span><span class="sxs-lookup"><span data-stu-id="07886-118">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");

              // Get the named item
              const myNamedItem = sheet.names.getItemOrNullObject("MyRange");
              myNamedItem.load("name, formula");
              await context.sync();

              if (myNamedItem.isNullObject) {
                  console.log(`There is no named item. Create it with "Add named item for a range" first.`);
              } else {                    
                  // Update named item to point to the second range
                  myNamedItem.formula = "=Sample!$B$10:$D$14";
                  sheet.getRange("B10:D14").select();
                  await context.sync();

                  console.log(`Just updated the named item "${myNamedItem.name}" -- it's now located here: ${myNamedItem.formula}`);
              }
          });
          ```
  - uid: excel_release.Excel.NamedItem.getRange
    summary: |-
      <span data-ttu-id="07886-119">Ruft das Bereichsobjekt ab, das mit dem Namen verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="07886-119">Returns the range object that is associated with the name.</span></span> <span data-ttu-id="07886-120">Gibt einen Fehler zurück, wenn der Typ des benannten Elements kein Bereich ist.</span><span class="sxs-lookup"><span data-stu-id="07886-120">Throws an error if the named item's type is not a range.</span></span>

      <span data-ttu-id="07886-121">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="07886-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="07886-122">Beispiele</span><span class="sxs-lookup"><span data-stu-id="07886-122">Examples</span></span>

          ```javascript
          // Returns the Range object that is associated with the name. 
          // null if the name is not of the type Range.
          // Note: This API currently supports only the Workbook scoped items.
          Excel.run(function (ctx) { 
              var names = ctx.workbook.names;
              var range = names.getItem('MyRange').getRange();
              range.load('address');
              return ctx.sync().then(function() {
                  console.log(range.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel_release.Excel.NamedItem.getRangeOrNullObject
    summary: |-
      <span data-ttu-id="07886-123">Ruft das Bereichsobjekt ab, das mit dem Namen verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="07886-123">Returns the range object that is associated with the name.</span></span> <span data-ttu-id="07886-124">Gibt ein NULL-Objekt zurück, wenn der Typ des benannten Elements kein Bereich ist.</span><span class="sxs-lookup"><span data-stu-id="07886-124">Returns a null object if the named item's type is not a range.</span></span>

      <span data-ttu-id="07886-125">\[[API-Satz: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="07886-125">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRangeOrNullObject()
    fullName: getRangeOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRangeOrNullObject(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel_release.Excel.NamedItem.load
    summary: <span data-ttu-id="07886-126">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="07886-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="07886-127">Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.</span><span class="sxs-lookup"><span data-stu-id="07886-127">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="07886-128">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="07886-128">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="07886-129">`load(option?: string | string[]): Excel.NamedItem`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="07886-129">`load(option?: string | string[]): Excel.NamedItem` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="07886-130">`load(option?: { select?: string; expand?: string; }): Excel.NamedItem`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="07886-130">`load(option?: { select?: string; expand?: string; }): Excel.NamedItem` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="07886-131">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItem`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="07886-131">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItem` - Only available on collection types.</span></span> <span data-ttu-id="07886-132">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="07886-132">It is similar to the preceding signature.</span></span> <span data-ttu-id="07886-133">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="07886-133">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="07886-134">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="07886-134">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="07886-135">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="07886-135">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.NamedItemLoadOptions): Excel.NamedItem;'
      return:
        type:
          - excel.Excel.NamedItem
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.NamedItemLoadOptions
  - uid: excel_release.Excel.NamedItem.load_1
    summary: <span data-ttu-id="07886-136">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="07886-136">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="07886-137">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="07886-137">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.NamedItem;'
      return:
        type:
          - excel.Excel.NamedItem
        description: |-


          #### <a name="examples"></a><span data-ttu-id="07886-138">Beispiele</span><span class="sxs-lookup"><span data-stu-id="07886-138">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var names = ctx.workbook.names;
              var namedItem = names.getItem('MyRange');
              namedItem.load('type');
              return ctx.sync().then(function() {
                      console.log(namedItem.type);
              });
          }).catch(function(error) {
                  console.log("Error: " + error);
                  if (error instanceof OfficeExtension.Error) {
                      console.log("Debug info: " + JSON.stringify(error.debugInfo));
                  }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="07886-139">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="07886-139">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.NamedItem.load_2
    summary: <span data-ttu-id="07886-140">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="07886-140">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="07886-141">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="07886-141">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.NamedItem;'
      return:
        type:
          - excel.Excel.NamedItem
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="07886-142">Wobei propertyNamesAndPaths. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="07886-142">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel_release.Excel.NamedItem.name
    summary: |-
      <span data-ttu-id="07886-143">Der Name des Objekts.</span><span class="sxs-lookup"><span data-stu-id="07886-143">The name of the object.</span></span> <span data-ttu-id="07886-144">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="07886-144">Read-only.</span></span>

      <span data-ttu-id="07886-145">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="07886-145">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly name: string;'
      return:
        type:
          - string
  - uid: excel_release.Excel.NamedItem.scope
    summary: |-
      <span data-ttu-id="07886-146">Gibt an, ob der Name im Bereich der Arbeitsmappe oder im Bereich eines bestimmten Arbeitsblatts liegt.</span><span class="sxs-lookup"><span data-stu-id="07886-146">Indicates whether the name is scoped to the workbook or to a specific worksheet.</span></span> <span data-ttu-id="07886-147">Mögliche Werte sind Arbeitsblatt, Arbeitsmappe.</span><span class="sxs-lookup"><span data-stu-id="07886-147">Possible values are: Worksheet, Workbook.</span></span> <span data-ttu-id="07886-148">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="07886-148">Read-only.</span></span>

      <span data-ttu-id="07886-149">\[[API-Satz: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="07886-149">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: scope
    fullName: scope
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly scope: Excel.NamedItemScope | "Worksheet" | "Workbook";'
      return:
        type:
          - Excel.NamedItemScope | "Worksheet" | "Workbook"
  - uid: excel_release.Excel.NamedItem.set
    summary: '<span data-ttu-id="07886-150">Legt mehrere Eigenschaften eines Objekts gleichzeitig fest.</span><span class="sxs-lookup"><span data-stu-id="07886-150">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="07886-151">Sie können entweder ein plain-Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs weitergeben.</span><span class="sxs-lookup"><span data-stu-id="07886-151">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="07886-152">Diese Methode hat die folgende zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="07886-152">This method has the following additional signature:</span></span>

      `set(properties: Excel.NamedItem): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.NamedItemUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="07886-153">Ein JavaScript-Objekt mit Eigenschaften, die isomorphically strukturiert sind, um die Eigenschaften des Objekts, für das die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="07886-153">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.NamedItemUpdateData
        - id: options
          description: '<span data-ttu-id="07886-154">Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.</span><span class="sxs-lookup"><span data-stu-id="07886-154">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel_release.Excel.NamedItem.set_1
    summary: '<span data-ttu-id="07886-155">Legt mehrere Eigenschaften für das Objekt auf der Grundlage eines vorhandenen geladenen Objekts zur gleichen Zeit fest.</span><span class="sxs-lookup"><span data-stu-id="07886-155">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.NamedItem): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.NamedItem
  - uid: excel_release.Excel.NamedItem.toJSON
    summary: '<span data-ttu-id="07886-156">ÜberSchreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API-Objekt an`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="07886-156">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="07886-157">.</span><span class="sxs-lookup"><span data-stu-id="07886-157"></span></span> <span data-ttu-id="07886-158">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="07886-158"></span></span><!-- --><span data-ttu-id="07886-159">Ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche Excel. NamedItem-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt zurück (typisiert als`Excel.Interfaces.NamedItemData`</span><span class="sxs-lookup"><span data-stu-id="07886-159">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.NamedItem object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.NamedItemData`</span></span><!-- --><span data-ttu-id="07886-160">), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="07886-160">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.NamedItemData;'
      return:
        type:
          - excel.Excel.Interfaces.NamedItemData
        description: ''
  - uid: excel_release.Excel.NamedItem.type
    summary: |-
      <span data-ttu-id="07886-161">Gibt den Typ des Werts, der von der Formel des Namens zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="07886-161">Indicates the type of the value returned by the name's formula.</span></span> <span data-ttu-id="07886-162">Weitere Informationen finden Sie unter Excel. NamedItemType.</span><span class="sxs-lookup"><span data-stu-id="07886-162">See Excel.NamedItemType for details.</span></span> <span data-ttu-id="07886-163">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="07886-163">Read-only.</span></span>

      <span data-ttu-id="07886-164">\[[API-Satz: ExcelApi 1,1 für String, Integer, Double, Boolean, Range, Error; 1,7 für Array](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="07886-164">\[ [API set: ExcelApi 1.1 for String,Integer,Double,Boolean,Range,Error; 1.7 for Array](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array";'
      return:
        type:
          - Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array"
  - uid: excel_release.Excel.NamedItem.value
    summary: |-
      <span data-ttu-id="07886-165">Stellt den Wert dar, der von der Formel des Namens berechnet wurde.</span><span class="sxs-lookup"><span data-stu-id="07886-165">Represents the value computed by the name's formula.</span></span> <span data-ttu-id="07886-166">Für einen benannten Bereich wird die Bereichsadresse zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="07886-166">For a named range, will return the range address.</span></span> <span data-ttu-id="07886-167">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="07886-167">Read-only.</span></span>

      <span data-ttu-id="07886-168">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="07886-168">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly value: any;'
      return:
        type:
          - any
  - uid: excel_release.Excel.NamedItem.visible
    summary: |-
      <span data-ttu-id="07886-169">Gibt an, ob das Objekt sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="07886-169">Specifies whether the object is visible or not.</span></span>

      <span data-ttu-id="07886-170">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="07886-170">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: visible
    fullName: visible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'visible: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.NamedItem.worksheet
    summary: |-
      <span data-ttu-id="07886-171">Gibt das Arbeitsblatt zurück, auf dessen Bereich das benannte Element beschränkt ist.</span><span class="sxs-lookup"><span data-stu-id="07886-171">Returns the worksheet on which the named item is scoped to.</span></span> <span data-ttu-id="07886-172">Löst einen Fehler aus, wenn das Element stattdessen auf die Arbeitsmappe beschränkt ist.</span><span class="sxs-lookup"><span data-stu-id="07886-172">Throws an error if the item is scoped to the workbook instead.</span></span>

      <span data-ttu-id="07886-173">\[[API-Satz: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="07886-173">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet
  - uid: excel_release.Excel.NamedItem.worksheetOrNullObject
    summary: |-
      <span data-ttu-id="07886-174">Gibt das Arbeitsblatt zurück, auf dessen Bereich das benannte Element beschränkt ist.</span><span class="sxs-lookup"><span data-stu-id="07886-174">Returns the worksheet on which the named item is scoped to.</span></span> <span data-ttu-id="07886-175">Gibt ein NULL-Objekt zurück, wenn das Element stattdessen auf den Bereich der Arbeitsmappe beschränkt ist.</span><span class="sxs-lookup"><span data-stu-id="07886-175">Returns a null object if the item is scoped to the workbook instead.</span></span>

      <span data-ttu-id="07886-176">\[[API-Satz: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="07886-176">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: worksheetOrNullObject
    fullName: worksheetOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheetOrNullObject: Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet