### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.PivotLayout
    summary: |-
      <span data-ttu-id="c1d72-101">Stellt das visuelle Layout der PivotTable dar.</span><span class="sxs-lookup"><span data-stu-id="c1d72-101">Represents the visual layout of the PivotTable.</span></span>

      <span data-ttu-id="c1d72-102">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c1d72-102">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.PivotLayout
    fullName: Excel.PivotLayout
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.PivotLayout.autoFormat
      - excel_release.Excel.PivotLayout.context
      - excel_release.Excel.PivotLayout.getColumnLabelRange
      - excel_release.Excel.PivotLayout.getDataBodyRange
      - excel_release.Excel.PivotLayout.getDataHierarchy
      - excel_release.Excel.PivotLayout.getFilterAxisRange
      - excel_release.Excel.PivotLayout.getPivotItems
      - excel_release.Excel.PivotLayout.getPivotItems_1
      - excel_release.Excel.PivotLayout.getRange
      - excel_release.Excel.PivotLayout.getRowLabelRange
      - excel_release.Excel.PivotLayout.layoutType
      - excel_release.Excel.PivotLayout.load
      - excel_release.Excel.PivotLayout.load_1
      - excel_release.Excel.PivotLayout.load_2
      - excel_release.Excel.PivotLayout.preserveFormatting
      - excel_release.Excel.PivotLayout.set
      - excel_release.Excel.PivotLayout.set_1
      - excel_release.Excel.PivotLayout.setAutoSortOnCell
      - excel_release.Excel.PivotLayout.setAutoSortOnCell_1
      - excel_release.Excel.PivotLayout.showColumnGrandTotals
      - excel_release.Excel.PivotLayout.showRowGrandTotals
      - excel_release.Excel.PivotLayout.subtotalLocation
      - excel_release.Excel.PivotLayout.toJSON
  - uid: excel_release.Excel.PivotLayout.autoFormat
    summary: |-
      <span data-ttu-id="c1d72-103">Gibt an, ob die Formatierung automatisch formatiert wird, wenn Sie aktualisiert wird, oder wenn Felder verschoben werden.</span><span class="sxs-lookup"><span data-stu-id="c1d72-103">Specifies whether formatting will be automatically formatted when it’s refreshed or when fields are moved</span></span>

      <span data-ttu-id="c1d72-104">\[[API-Satz: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c1d72-104">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: autoFormat
    fullName: autoFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'autoFormat: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.PivotLayout.context
    summary: <span data-ttu-id="c1d72-105">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="c1d72-105">The request context associated with the object.</span></span> <span data-ttu-id="c1d72-106">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="c1d72-106">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.PivotLayout.getColumnLabelRange
    summary: |-
      <span data-ttu-id="c1d72-107">Gibt den Bereich zurück, in dem sich die Spaltenbeschriftungen in PivotTable befinden.</span><span class="sxs-lookup"><span data-stu-id="c1d72-107">Returns the range where the PivotTable's column labels reside.</span></span>

      <span data-ttu-id="c1d72-108">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c1d72-108">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getColumnLabelRange()
    fullName: getColumnLabelRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getColumnLabelRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel_release.Excel.PivotLayout.getDataBodyRange
    summary: |-
      <span data-ttu-id="c1d72-109">Gibt den Bereich zurück, in dem sich die Datenwerte in PivotTable befinden.</span><span class="sxs-lookup"><span data-stu-id="c1d72-109">Returns the range where the PivotTable's data values reside.</span></span>

      <span data-ttu-id="c1d72-110">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c1d72-110">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getDataBodyRange()
    fullName: getDataBodyRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataBodyRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="c1d72-111">Beispiele</span><span class="sxs-lookup"><span data-stu-id="c1d72-111">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");

              // the layout controls the ranges used by the PivotTable
              const range = pivotTable.layout.getDataBodyRange();

              // get all the data hierarchy totals
              const grandTotalRange = range.getLastRow();
              grandTotalRange.load("address");
              await context.sync();
              
              // use the wholesale and farm sale totals to make a final sum
              const masterTotalRange = context.workbook.worksheets.getActiveWorksheet().getRange("B27:C27");
              masterTotalRange.formulas = [["All Crates", "=SUM(" + grandTotalRange.address + ")"]];
              await context.sync();
          });
          ```
  - uid: excel_release.Excel.PivotLayout.getDataHierarchy
    summary: |-
      <span data-ttu-id="c1d72-112">Ruft die DataHierarchy ab, die zum Berechnen des Werts in einem angegebenen Bereich innerhalb der PivotTable verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="c1d72-112">Gets the DataHierarchy that is used to calculate the value in a specified range within the PivotTable.</span></span>

      <span data-ttu-id="c1d72-113">\[[API-Satz: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c1d72-113">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getDataHierarchy(cell)
    fullName: getDataHierarchy(cell)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataHierarchy(cell: Range | string): Excel.DataPivotHierarchy;'
      return:
        type:
          - excel.Excel.DataPivotHierarchy
        description: '<span data-ttu-id="c1d72-114">Das DataPivotHierarchy-Objekt, mit dem der Wert in der angegebenen Zelle berechnet wird.</span><span class="sxs-lookup"><span data-stu-id="c1d72-114">The DataPivotHierarchy object used to calculate the value in the specified cell.</span></span>'
      parameters:
        - id: cell
          description: <span data-ttu-id="c1d72-115">Eine einzelne Zelle innerhalb des PivotTable-Daten Texts.</span><span class="sxs-lookup"><span data-stu-id="c1d72-115">A single cell within the PivotTable data body.</span></span>
          type:
            - Range | string
  - uid: excel_release.Excel.PivotLayout.getFilterAxisRange
    summary: |-
      <span data-ttu-id="c1d72-116">Gibt den Bereich des Filterbereichs von PivotTable zurück.</span><span class="sxs-lookup"><span data-stu-id="c1d72-116">Returns the range of the PivotTable's filter area.</span></span>

      <span data-ttu-id="c1d72-117">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c1d72-117">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getFilterAxisRange()
    fullName: getFilterAxisRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFilterAxisRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel_release.Excel.PivotLayout.getPivotItems
    summary: |-
      <span data-ttu-id="c1d72-118">Ruft die PivotItems von einer Achse ab, die den Wert in einem angegebenen Bereich innerhalb der PivotTable bilden.</span><span class="sxs-lookup"><span data-stu-id="c1d72-118">Gets the PivotItems from an axis that make up the value in a specified range within the PivotTable.</span></span>

      <span data-ttu-id="c1d72-119">\[[API-Satz: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c1d72-119">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'getPivotItems(axis, cell)'
    fullName: 'getPivotItems(axis, cell)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPivotItems(axis: Excel.PivotAxis, cell: Range | string): OfficeExtension.ClientResult<Excel.PivotItem[]>;'
      return:
        type:
          - 'OfficeExtension.ClientResult<Excel.PivotItem[]>'
        description: '<span data-ttu-id="c1d72-120">Eine Auflistung von PivotItems, die zum Berechnen der Werte in der angegebenen Zeile verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="c1d72-120">A collection of PivotItems that are used to calculate the values in the specified row.</span></span>'
      parameters:
        - id: axis
          description: '<span data-ttu-id="c1d72-121">Die Achse, von der die PivotItems abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="c1d72-121">The axis from which to get the PivotItems.</span></span> <span data-ttu-id="c1d72-122">Muss entweder "Row" oder "Column" lauten.</span><span class="sxs-lookup"><span data-stu-id="c1d72-122">Must be either "row" or "column."</span></span>'
          type:
            - excel.Excel.PivotAxis
        - id: cell
          description: <span data-ttu-id="c1d72-123">Eine einzelne Zelle innerhalb des Daten Texts der PivotTable.</span><span class="sxs-lookup"><span data-stu-id="c1d72-123">A single cell within the PivotTable's data body.</span></span>
          type:
            - Range | string
  - uid: excel_release.Excel.PivotLayout.getPivotItems_1
    summary: |-
      <span data-ttu-id="c1d72-124">Ruft die PivotItems von einer Achse ab, die den Wert in einem angegebenen Bereich innerhalb der PivotTable bilden.</span><span class="sxs-lookup"><span data-stu-id="c1d72-124">Gets the PivotItems from an axis that make up the value in a specified range within the PivotTable.</span></span>

      <span data-ttu-id="c1d72-125">\[[API-Satz: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c1d72-125">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'getPivotItems(axisString, cell)'
    fullName: 'getPivotItems(axisString, cell)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPivotItems(axisString: "Unknown" | "Row" | "Column" | "Data" | "Filter", cell: Range | string): OfficeExtension.ClientResult<Excel.PivotItem[]>;'
      return:
        type:
          - 'OfficeExtension.ClientResult<Excel.PivotItem[]>'
        description: '<span data-ttu-id="c1d72-126">Eine Auflistung von PivotItems, die zum Berechnen der Werte in der angegebenen Zeile verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="c1d72-126">A collection of PivotItems that are used to calculate the values in the specified row.</span></span>'
      parameters:
        - id: axisString
          description: '<span data-ttu-id="c1d72-127">Die Achse, von der die PivotItems abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="c1d72-127">The axis from which to get the PivotItems.</span></span> <span data-ttu-id="c1d72-128">Muss entweder "Row" oder "Column" lauten.</span><span class="sxs-lookup"><span data-stu-id="c1d72-128">Must be either "row" or "column."</span></span>'
          type:
            - '"Unknown" | "Row" | "Column" | "Data" | "Filter"'
        - id: cell
          description: <span data-ttu-id="c1d72-129">Eine einzelne Zelle innerhalb des Daten Texts der PivotTable.</span><span class="sxs-lookup"><span data-stu-id="c1d72-129">A single cell within the PivotTable's data body.</span></span>
          type:
            - Range | string
  - uid: excel_release.Excel.PivotLayout.getRange
    summary: |-
      <span data-ttu-id="c1d72-130">Gibt den Bereich an, in dem PivotTable vorhanden ist, mit Ausnahme des Filterbereichs.</span><span class="sxs-lookup"><span data-stu-id="c1d72-130">Returns the range the PivotTable exists on, excluding the filter area.</span></span>

      <span data-ttu-id="c1d72-131">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c1d72-131">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel_release.Excel.PivotLayout.getRowLabelRange
    summary: |-
      <span data-ttu-id="c1d72-132">Gibt den Bereich zurück, in dem sich die Zeilenbeschriftungen in PivotTable befinden.</span><span class="sxs-lookup"><span data-stu-id="c1d72-132">Returns the range where the PivotTable's row labels reside.</span></span>

      <span data-ttu-id="c1d72-133">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c1d72-133">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRowLabelRange()
    fullName: getRowLabelRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRowLabelRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel_release.Excel.PivotLayout.layoutType
    summary: |-
      <span data-ttu-id="c1d72-134">Diese Eigenschaft gibt das PivotLayoutType-Objekt aller Felder in PivotTable an.</span><span class="sxs-lookup"><span data-stu-id="c1d72-134">This property indicates the PivotLayoutType of all fields on the PivotTable.</span></span> <span data-ttu-id="c1d72-135">Wenn Felder verschiedenen Status aufweisen, lautet dies NULL.</span><span class="sxs-lookup"><span data-stu-id="c1d72-135">If fields have different states, this will be null.</span></span>

      <span data-ttu-id="c1d72-136">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c1d72-136">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: layoutType
    fullName: layoutType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'layoutType: Excel.PivotLayoutType | "Compact" | "Tabular" | "Outline";'
      return:
        type:
          - Excel.PivotLayoutType | "Compact" | "Tabular" | "Outline"
  - uid: excel_release.Excel.PivotLayout.load
    summary: <span data-ttu-id="c1d72-137">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="c1d72-137">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c1d72-138">Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.</span><span class="sxs-lookup"><span data-stu-id="c1d72-138">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="c1d72-139">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="c1d72-139">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="c1d72-140">`load(option?: string | string[]): Excel.PivotLayout`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="c1d72-140">`load(option?: string | string[]): Excel.PivotLayout` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="c1d72-141">`load(option?: { select?: string; expand?: string; }): Excel.PivotLayout`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="c1d72-141">`load(option?: { select?: string; expand?: string; }): Excel.PivotLayout` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="c1d72-142">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotLayout`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="c1d72-142">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotLayout` - Only available on collection types.</span></span> <span data-ttu-id="c1d72-143">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="c1d72-143">It is similar to the preceding signature.</span></span> <span data-ttu-id="c1d72-144">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="c1d72-144">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="c1d72-145">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="c1d72-145">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="c1d72-146">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="c1d72-146">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.PivotLayoutLoadOptions): Excel.PivotLayout;'
      return:
        type:
          - excel.Excel.PivotLayout
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.PivotLayoutLoadOptions
  - uid: excel_release.Excel.PivotLayout.load_1
    summary: <span data-ttu-id="c1d72-147">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="c1d72-147">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c1d72-148">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="c1d72-148">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotLayout;'
      return:
        type:
          - excel.Excel.PivotLayout
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="c1d72-149">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="c1d72-149">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.PivotLayout.load_2
    summary: <span data-ttu-id="c1d72-150">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="c1d72-150">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c1d72-151">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="c1d72-151">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.PivotLayout;'
      return:
        type:
          - excel.Excel.PivotLayout
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="c1d72-152">Wobei propertyNamesAndPaths. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="c1d72-152">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel_release.Excel.PivotLayout.preserveFormatting
    summary: |-
      <span data-ttu-id="c1d72-153">Gibt an, ob die Formatierung beibehalten wird, wenn der Bericht durch Vorgänge wie Pivotieren, Sortieren oder Ändern von Seitenfeldelementen aktualisiert oder neu berechnet wird.</span><span class="sxs-lookup"><span data-stu-id="c1d72-153">Specifies whether formatting is preserved when the report is refreshed or recalculated by operations such as pivoting, sorting, or changing page field items.</span></span>

      <span data-ttu-id="c1d72-154">\[[API-Satz: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c1d72-154">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: preserveFormatting
    fullName: preserveFormatting
    langs:
      - typeScript
    type: property
    syntax:
      content: 'preserveFormatting: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.PivotLayout.set
    summary: '<span data-ttu-id="c1d72-155">Legt mehrere Eigenschaften eines Objekts gleichzeitig fest.</span><span class="sxs-lookup"><span data-stu-id="c1d72-155">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="c1d72-156">Sie können entweder ein plain-Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs weitergeben.</span><span class="sxs-lookup"><span data-stu-id="c1d72-156">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="c1d72-157">Diese Methode hat die folgende zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="c1d72-157">This method has the following additional signature:</span></span>

      `set(properties: Excel.PivotLayout): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.PivotLayoutUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="c1d72-158">Ein JavaScript-Objekt mit Eigenschaften, die isomorphically strukturiert sind, um die Eigenschaften des Objekts, für das die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="c1d72-158">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.PivotLayoutUpdateData
        - id: options
          description: '<span data-ttu-id="c1d72-159">Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.</span><span class="sxs-lookup"><span data-stu-id="c1d72-159">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel_release.Excel.PivotLayout.set_1
    summary: '<span data-ttu-id="c1d72-160">Legt mehrere Eigenschaften für das Objekt auf der Grundlage eines vorhandenen geladenen Objekts zur gleichen Zeit fest.</span><span class="sxs-lookup"><span data-stu-id="c1d72-160">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.PivotLayout): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.PivotLayout
  - uid: excel_release.Excel.PivotLayout.setAutoSortOnCell
    summary: |-
      <span data-ttu-id="c1d72-161">Legt fest, dass die PivotTable automatisch mithilfe der angegebenen Zelle sortiert wird, um automatisch alle erforderlichen Kriterien und Kontexte auszuwählen.</span><span class="sxs-lookup"><span data-stu-id="c1d72-161">Sets the PivotTable to automatically sort using the specified cell to automatically select all necessary criteria and context.</span></span> <span data-ttu-id="c1d72-162">Dies verhält sich identisch mit dem Anwenden einer AutoSortieren von der Benutzeroberfläche.</span><span class="sxs-lookup"><span data-stu-id="c1d72-162">This behaves identically to applying an autosort from the UI.</span></span>

      <span data-ttu-id="c1d72-163">\[[API-Satz: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c1d72-163">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'setAutoSortOnCell(cell, sortBy)'
    fullName: 'setAutoSortOnCell(cell, sortBy)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAutoSortOnCell(cell: Range | string, sortBy: Excel.SortBy): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cell
          description: <span data-ttu-id="c1d72-164">Eine einzelne zu verwendende Zelle Abrufen der Kriterien für die Anwendung der AutoSortieren.</span><span class="sxs-lookup"><span data-stu-id="c1d72-164">A single cell to use get the criteria from for applying the autosort.</span></span>
          type:
            - Range | string
        - id: sortBy
          description: <span data-ttu-id="c1d72-165">Die Richtung der Sortierung.</span><span class="sxs-lookup"><span data-stu-id="c1d72-165">The direction of the sort.</span></span>
          type:
            - excel.Excel.SortBy
  - uid: excel_release.Excel.PivotLayout.setAutoSortOnCell_1
    summary: |-
      <span data-ttu-id="c1d72-166">Legt fest, dass die PivotTable automatisch mithilfe der angegebenen Zelle sortiert wird, um automatisch alle erforderlichen Kriterien und Kontexte auszuwählen.</span><span class="sxs-lookup"><span data-stu-id="c1d72-166">Sets the PivotTable to automatically sort using the specified cell to automatically select all necessary criteria and context.</span></span> <span data-ttu-id="c1d72-167">Dies verhält sich identisch mit dem Anwenden einer AutoSortieren von der Benutzeroberfläche.</span><span class="sxs-lookup"><span data-stu-id="c1d72-167">This behaves identically to applying an autosort from the UI.</span></span>

      <span data-ttu-id="c1d72-168">\[[API-Satz: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c1d72-168">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'setAutoSortOnCell(cell, sortByString)'
    fullName: 'setAutoSortOnCell(cell, sortByString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAutoSortOnCell(cell: Range | string, sortByString: "Ascending" | "Descending"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cell
          description: <span data-ttu-id="c1d72-169">Eine einzelne zu verwendende Zelle Abrufen der Kriterien für die Anwendung der AutoSortieren.</span><span class="sxs-lookup"><span data-stu-id="c1d72-169">A single cell to use get the criteria from for applying the autosort.</span></span>
          type:
            - Range | string
        - id: sortByString
          description: <span data-ttu-id="c1d72-170">Die Richtung der Sortierung.</span><span class="sxs-lookup"><span data-stu-id="c1d72-170">The direction of the sort.</span></span>
          type:
            - '"Ascending" | "Descending"'
  - uid: excel_release.Excel.PivotLayout.showColumnGrandTotals
    summary: |-
      <span data-ttu-id="c1d72-171">Gibt an, ob im PivotTable-Bericht Gesamtergebnisse für Spalten angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="c1d72-171">Specifies whether the PivotTable report shows grand totals for columns.</span></span>

      <span data-ttu-id="c1d72-172">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c1d72-172">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showColumnGrandTotals
    fullName: showColumnGrandTotals
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showColumnGrandTotals: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.PivotLayout.showRowGrandTotals
    summary: |-
      <span data-ttu-id="c1d72-173">Gibt an, ob im PivotTable-Bericht Gesamtergebnisse für Zeilen angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="c1d72-173">Specifies whether the PivotTable report shows grand totals for rows.</span></span>

      <span data-ttu-id="c1d72-174">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c1d72-174">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showRowGrandTotals
    fullName: showRowGrandTotals
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showRowGrandTotals: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.PivotLayout.subtotalLocation
    summary: |-
      <span data-ttu-id="c1d72-175">Diese Eigenschaft gibt das SubtotalLocationType-Objekt aller Felder in PivotTable an.</span><span class="sxs-lookup"><span data-stu-id="c1d72-175">This property indicates the SubtotalLocationType of all fields on the PivotTable.</span></span> <span data-ttu-id="c1d72-176">Wenn Felder verschiedenen Status aufweisen, lautet dies NULL.</span><span class="sxs-lookup"><span data-stu-id="c1d72-176">If fields have different states, this will be null.</span></span>

      <span data-ttu-id="c1d72-177">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c1d72-177">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: subtotalLocation
    fullName: subtotalLocation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subtotalLocation: Excel.SubtotalLocationType | "AtTop" | "AtBottom" | "Off";'
      return:
        type:
          - Excel.SubtotalLocationType | "AtTop" | "AtBottom" | "Off"
  - uid: excel_release.Excel.PivotLayout.toJSON
    summary: '<span data-ttu-id="c1d72-178">Überschreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API-Objekt an`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="c1d72-178">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="c1d72-179">.</span><span class="sxs-lookup"><span data-stu-id="c1d72-179"></span></span> <span data-ttu-id="c1d72-180">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="c1d72-180"></span></span><!-- --><span data-ttu-id="c1d72-181">Ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche Excel. PivotLayout-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt zurück (typisiert als`Excel.Interfaces.PivotLayoutData`</span><span class="sxs-lookup"><span data-stu-id="c1d72-181">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.PivotLayout object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotLayoutData`</span></span><!-- --><span data-ttu-id="c1d72-182">), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="c1d72-182">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotLayoutData;'
      return:
        type:
          - excel.Excel.Interfaces.PivotLayoutData
        description: ''