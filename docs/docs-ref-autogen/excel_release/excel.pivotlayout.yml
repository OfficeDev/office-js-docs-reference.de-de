### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.PivotLayout
    summary: |-
      Stellt das visuelle Layout der PivotTable dar.

      \[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.PivotLayout
    fullName: Excel.PivotLayout
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.PivotLayout.autoFormat
      - excel_release.Excel.PivotLayout.context
      - excel_release.Excel.PivotLayout.getColumnLabelRange
      - excel_release.Excel.PivotLayout.getDataBodyRange
      - excel_release.Excel.PivotLayout.getDataHierarchy
      - excel_release.Excel.PivotLayout.getFilterAxisRange
      - excel_release.Excel.PivotLayout.getPivotItems
      - excel_release.Excel.PivotLayout.getPivotItems_1
      - excel_release.Excel.PivotLayout.getRange
      - excel_release.Excel.PivotLayout.getRowLabelRange
      - excel_release.Excel.PivotLayout.layoutType
      - excel_release.Excel.PivotLayout.load
      - excel_release.Excel.PivotLayout.load_1
      - excel_release.Excel.PivotLayout.load_2
      - excel_release.Excel.PivotLayout.preserveFormatting
      - excel_release.Excel.PivotLayout.set
      - excel_release.Excel.PivotLayout.set_1
      - excel_release.Excel.PivotLayout.setAutoSortOnCell
      - excel_release.Excel.PivotLayout.setAutoSortOnCell_1
      - excel_release.Excel.PivotLayout.showColumnGrandTotals
      - excel_release.Excel.PivotLayout.showRowGrandTotals
      - excel_release.Excel.PivotLayout.subtotalLocation
      - excel_release.Excel.PivotLayout.toJSON
  - uid: excel_release.Excel.PivotLayout.autoFormat
    summary: |-
      Gibt an, ob die Formatierung automatisch formatiert wird, wenn Sie aktualisiert wird, oder wenn Felder verschoben werden.

      \[[API-Satz: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: autoFormat
    fullName: autoFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'autoFormat: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.PivotLayout.context
    summary: Der dem Objekt zugeordnete Anforderungskontext. Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.PivotLayout.getColumnLabelRange
    summary: |-
      Gibt den Bereich zurück, in dem sich die Spaltenbeschriftungen in PivotTable befinden.

      \[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getColumnLabelRange()
    fullName: getColumnLabelRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getColumnLabelRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel_release.Excel.PivotLayout.getDataBodyRange
    summary: |-
      Gibt den Bereich zurück, in dem sich die Datenwerte in PivotTable befinden.

      \[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getDataBodyRange()
    fullName: getDataBodyRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataBodyRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a>Beispiele

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");

              // the layout controls the ranges used by the PivotTable
              const range = pivotTable.layout.getDataBodyRange();

              // get all the data hierarchy totals
              const grandTotalRange = range.getLastRow();
              grandTotalRange.load("address");
              await context.sync();
              
              // use the wholesale and farm sale totals to make a final sum
              const masterTotalRange = context.workbook.worksheets.getActiveWorksheet().getRange("B27:C27");
              masterTotalRange.formulas = [["All Crates", "=SUM(" + grandTotalRange.address + ")"]];
              await context.sync();
          });
          ```
  - uid: excel_release.Excel.PivotLayout.getDataHierarchy
    summary: |-
      Ruft die DataHierarchy ab, die zum Berechnen des Werts in einem angegebenen Bereich innerhalb der PivotTable verwendet wird.

      \[[API-Satz: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getDataHierarchy(cell)
    fullName: getDataHierarchy(cell)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataHierarchy(cell: Range | string): Excel.DataPivotHierarchy;'
      return:
        type:
          - excel.Excel.DataPivotHierarchy
        description: 'Das DataPivotHierarchy-Objekt, mit dem der Wert in der angegebenen Zelle berechnet wird.'
      parameters:
        - id: cell
          description: Eine einzelne Zelle innerhalb des PivotTable-Daten Texts.
          type:
            - Range | string
  - uid: excel_release.Excel.PivotLayout.getFilterAxisRange
    summary: |-
      Gibt den Bereich des Filterbereichs von PivotTable zurück.

      \[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getFilterAxisRange()
    fullName: getFilterAxisRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFilterAxisRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel_release.Excel.PivotLayout.getPivotItems
    summary: |-
      Ruft die PivotItems von einer Achse ab, die den Wert in einem angegebenen Bereich innerhalb der PivotTable bilden.

      \[[API-Satz: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'getPivotItems(axis, cell)'
    fullName: 'getPivotItems(axis, cell)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPivotItems(axis: Excel.PivotAxis, cell: Range | string): OfficeExtension.ClientResult<Excel.PivotItem[]>;'
      return:
        type:
          - 'OfficeExtension.ClientResult<Excel.PivotItem[]>'
        description: 'Eine Auflistung von PivotItems, die zum Berechnen der Werte in der angegebenen Zeile verwendet werden.'
      parameters:
        - id: axis
          description: 'Die Achse, von der die PivotItems abgerufen werden soll. Muss entweder "Row" oder "Column" lauten.'
          type:
            - excel.Excel.PivotAxis
        - id: cell
          description: Eine einzelne Zelle innerhalb des Daten Texts der PivotTable.
          type:
            - Range | string
  - uid: excel_release.Excel.PivotLayout.getPivotItems_1
    summary: |-
      Ruft die PivotItems von einer Achse ab, die den Wert in einem angegebenen Bereich innerhalb der PivotTable bilden.

      \[[API-Satz: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'getPivotItems(axisString, cell)'
    fullName: 'getPivotItems(axisString, cell)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPivotItems(axisString: "Unknown" | "Row" | "Column" | "Data" | "Filter", cell: Range | string): OfficeExtension.ClientResult<Excel.PivotItem[]>;'
      return:
        type:
          - 'OfficeExtension.ClientResult<Excel.PivotItem[]>'
        description: 'Eine Auflistung von PivotItems, die zum Berechnen der Werte in der angegebenen Zeile verwendet werden.'
      parameters:
        - id: axisString
          description: 'Die Achse, von der die PivotItems abgerufen werden soll. Muss entweder "Row" oder "Column" lauten.'
          type:
            - '"Unknown" | "Row" | "Column" | "Data" | "Filter"'
        - id: cell
          description: Eine einzelne Zelle innerhalb des Daten Texts der PivotTable.
          type:
            - Range | string
  - uid: excel_release.Excel.PivotLayout.getRange
    summary: |-
      Gibt den Bereich an, in dem PivotTable vorhanden ist, mit Ausnahme des Filterbereichs.

      \[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel_release.Excel.PivotLayout.getRowLabelRange
    summary: |-
      Gibt den Bereich zurück, in dem sich die Zeilenbeschriftungen in PivotTable befinden.

      \[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getRowLabelRange()
    fullName: getRowLabelRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRowLabelRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel_release.Excel.PivotLayout.layoutType
    summary: |-
      Diese Eigenschaft gibt das PivotLayoutType-Objekt aller Felder in PivotTable an. Wenn Felder verschiedenen Status aufweisen, lautet dies NULL.

      \[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: layoutType
    fullName: layoutType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'layoutType: Excel.PivotLayoutType | "Compact" | "Tabular" | "Outline";'
      return:
        type:
          - Excel.PivotLayoutType | "Compact" | "Tabular" | "Outline"
  - uid: excel_release.Excel.PivotLayout.load
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.
    remarks: |-
      Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:

      `load(option?: string | string[]): Excel.PivotLayout`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.

      `load(option?: { select?: string; expand?: string; }): Excel.PivotLayout`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotLayout`-Nur verfügbar für Sammlungstypen. Sie ähnelt der vorherigen Signatur. Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können. Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind. Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.PivotLayoutLoadOptions): Excel.PivotLayout;'
      return:
        type:
          - excel.Excel.PivotLayout
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.PivotLayoutLoadOptions
  - uid: excel_release.Excel.PivotLayout.load_1
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotLayout;'
      return:
        type:
          - excel.Excel.PivotLayout
        description: ''
      parameters:
        - id: propertyNames
          description: 'Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.'
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.PivotLayout.load_2
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.PivotLayout;'
      return:
        type:
          - excel.Excel.PivotLayout
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: 'Wobei propertyNamesAndPaths. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Navigationseigenschaften angibt.'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel_release.Excel.PivotLayout.preserveFormatting
    summary: |-
      Gibt an, ob die Formatierung beibehalten wird, wenn der Bericht durch Vorgänge wie Pivotieren, Sortieren oder Ändern von Seitenfeldelementen aktualisiert oder neu berechnet wird.

      \[[API-Satz: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: preserveFormatting
    fullName: preserveFormatting
    langs:
      - typeScript
    type: property
    syntax:
      content: 'preserveFormatting: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.PivotLayout.set
    summary: Legt mehrere Eigenschaften eines Objekts gleichzeitig fest. Sie können entweder ein plain-Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs weitergeben.
    remarks: |-
      Diese Methode hat die folgende zusätzliche Signatur:

      `set(properties: Excel.PivotLayout): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.PivotLayoutUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: 'Ein JavaScript-Objekt mit Eigenschaften, die isomorphically strukturiert sind, um die Eigenschaften des Objekts, für das die Methode aufgerufen wird.'
          type:
            - Interfaces.PivotLayoutUpdateData
        - id: options
          description: 'Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.'
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel_release.Excel.PivotLayout.set_1
    summary: Legt mehrere Eigenschaften für das Objekt auf der Grundlage eines vorhandenen geladenen Objekts zur gleichen Zeit fest.
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.PivotLayout): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.PivotLayout
  - uid: excel_release.Excel.PivotLayout.setAutoSortOnCell
    summary: |-
      Legt fest, dass die PivotTable automatisch mithilfe der angegebenen Zelle sortiert wird, um automatisch alle erforderlichen Kriterien und Kontexte auszuwählen. Dies verhält sich identisch mit dem Anwenden einer AutoSortieren von der Benutzeroberfläche.

      \[[API-Satz: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'setAutoSortOnCell(cell, sortBy)'
    fullName: 'setAutoSortOnCell(cell, sortBy)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAutoSortOnCell(cell: Range | string, sortBy: Excel.SortBy): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cell
          description: Eine einzelne zu verwendende Zelle Abrufen der Kriterien für die Anwendung der AutoSortieren.
          type:
            - Range | string
        - id: sortBy
          description: Die Richtung der Sortierung.
          type:
            - excel.Excel.SortBy
  - uid: excel_release.Excel.PivotLayout.setAutoSortOnCell_1
    summary: |-
      Legt fest, dass die PivotTable automatisch mithilfe der angegebenen Zelle sortiert wird, um automatisch alle erforderlichen Kriterien und Kontexte auszuwählen. Dies verhält sich identisch mit dem Anwenden einer AutoSortieren von der Benutzeroberfläche.

      \[[API-Satz: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'setAutoSortOnCell(cell, sortByString)'
    fullName: 'setAutoSortOnCell(cell, sortByString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAutoSortOnCell(cell: Range | string, sortByString: "Ascending" | "Descending"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cell
          description: Eine einzelne zu verwendende Zelle Abrufen der Kriterien für die Anwendung der AutoSortieren.
          type:
            - Range | string
        - id: sortByString
          description: Die Richtung der Sortierung.
          type:
            - '"Ascending" | "Descending"'
  - uid: excel_release.Excel.PivotLayout.showColumnGrandTotals
    summary: |-
      Gibt an, ob im PivotTable-Bericht Gesamtergebnisse für Spalten angezeigt werden.

      \[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: showColumnGrandTotals
    fullName: showColumnGrandTotals
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showColumnGrandTotals: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.PivotLayout.showRowGrandTotals
    summary: |-
      Gibt an, ob im PivotTable-Bericht Gesamtergebnisse für Zeilen angezeigt werden.

      \[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: showRowGrandTotals
    fullName: showRowGrandTotals
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showRowGrandTotals: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.PivotLayout.subtotalLocation
    summary: |-
      Diese Eigenschaft gibt das SubtotalLocationType-Objekt aller Felder in PivotTable an. Wenn Felder verschiedenen Status aufweisen, lautet dies NULL.

      \[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: subtotalLocation
    fullName: subtotalLocation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subtotalLocation: Excel.SubtotalLocationType | "AtTop" | "AtBottom" | "Off";'
      return:
        type:
          - Excel.SubtotalLocationType | "AtTop" | "AtBottom" | "Off"
  - uid: excel_release.Excel.PivotLayout.toJSON
    summary: 'Überschreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API-Objekt an`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->Ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche Excel. PivotLayout-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt zurück (typisiert als`Excel.Interfaces.PivotLayoutData`<!-- -->), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotLayoutData;'
      return:
        type:
          - excel.Excel.Interfaces.PivotLayoutData
        description: ''