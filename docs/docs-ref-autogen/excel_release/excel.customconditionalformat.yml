### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.CustomConditionalFormat
    summary: |-
      <span data-ttu-id="513d7-101">Stellt einen benutzerdefinierten bedingten Formattyp dar.</span><span class="sxs-lookup"><span data-stu-id="513d7-101">Represents a custom conditional format type.</span></span>

      <span data-ttu-id="513d7-102">\[[API-Satz: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="513d7-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.CustomConditionalFormat
    fullName: Excel.CustomConditionalFormat
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.CustomConditionalFormat.context
      - excel_release.Excel.CustomConditionalFormat.format
      - excel_release.Excel.CustomConditionalFormat.load
      - excel_release.Excel.CustomConditionalFormat.load_1
      - excel_release.Excel.CustomConditionalFormat.load_2
      - excel_release.Excel.CustomConditionalFormat.rule
      - excel_release.Excel.CustomConditionalFormat.set
      - excel_release.Excel.CustomConditionalFormat.set_1
      - excel_release.Excel.CustomConditionalFormat.toJSON
  - uid: excel_release.Excel.CustomConditionalFormat.context
    summary: <span data-ttu-id="513d7-103">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="513d7-103">The request context associated with the object.</span></span> <span data-ttu-id="513d7-104">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="513d7-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.CustomConditionalFormat.format
    summary: |-
      <span data-ttu-id="513d7-105">Gibt ein Format-Objekt, das die bedingten Formate Schriftart, Füllung, Rahmen und andere Eigenschaften kapselt.</span><span class="sxs-lookup"><span data-stu-id="513d7-105">Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties.</span></span> <span data-ttu-id="513d7-106">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="513d7-106">Read-only.</span></span>

      <span data-ttu-id="513d7-107">\[[API-Satz: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="513d7-107">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.ConditionalRangeFormat;'
      return:
        type:
          - excel.Excel.ConditionalRangeFormat
        description: |-


          #### <a name="examples"></a><span data-ttu-id="513d7-108">Beispiele</span><span class="sxs-lookup"><span data-stu-id="513d7-108">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B8:E13");
              const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.custom);
              conditionalFormat.custom.rule.formula = '=IF(B8>INDIRECT("RC[-1]",0),TRUE)';
              conditionalFormat.custom.format.font.color = "green";

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.CustomConditionalFormat.load
    summary: <span data-ttu-id="513d7-109">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="513d7-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="513d7-110">Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.</span><span class="sxs-lookup"><span data-stu-id="513d7-110">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="513d7-111">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="513d7-111">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="513d7-112">`load(option?: string | string[]): Excel.CustomConditionalFormat`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="513d7-112">`load(option?: string | string[]): Excel.CustomConditionalFormat` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="513d7-113">`load(option?: { select?: string; expand?: string; }): Excel.CustomConditionalFormat`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="513d7-113">`load(option?: { select?: string; expand?: string; }): Excel.CustomConditionalFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="513d7-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.CustomConditionalFormat`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="513d7-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.CustomConditionalFormat` - Only available on collection types.</span></span> <span data-ttu-id="513d7-115">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="513d7-115">It is similar to the preceding signature.</span></span> <span data-ttu-id="513d7-116">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="513d7-116">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="513d7-117">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="513d7-117">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="513d7-118">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="513d7-118">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.CustomConditionalFormatLoadOptions): Excel.CustomConditionalFormat;'
      return:
        type:
          - excel.Excel.CustomConditionalFormat
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.CustomConditionalFormatLoadOptions
  - uid: excel_release.Excel.CustomConditionalFormat.load_1
    summary: <span data-ttu-id="513d7-119">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="513d7-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="513d7-120">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="513d7-120">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.CustomConditionalFormat;'
      return:
        type:
          - excel.Excel.CustomConditionalFormat
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="513d7-121">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="513d7-121">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.CustomConditionalFormat.load_2
    summary: <span data-ttu-id="513d7-122">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="513d7-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="513d7-123">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="513d7-123">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.CustomConditionalFormat;'
      return:
        type:
          - excel.Excel.CustomConditionalFormat
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="513d7-124">Wobei propertyNamesAndPaths. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="513d7-124">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel_release.Excel.CustomConditionalFormat.rule
    summary: |-
      <span data-ttu-id="513d7-125">Stellt das Regelobjekt in diesem bedingte Format dar.</span><span class="sxs-lookup"><span data-stu-id="513d7-125">Represents the Rule object on this conditional format.</span></span> <span data-ttu-id="513d7-126">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="513d7-126">Read-only.</span></span>

      <span data-ttu-id="513d7-127">\[[API-Satz: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="513d7-127">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: rule
    fullName: rule
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rule: Excel.ConditionalFormatRule;'
      return:
        type:
          - excel.Excel.ConditionalFormatRule
        description: |-


          #### <a name="examples"></a><span data-ttu-id="513d7-128">Beispiele</span><span class="sxs-lookup"><span data-stu-id="513d7-128">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) {
              var sheet = ctx.workbook.worksheets.getActiveWorksheet();
              var range = sheet.getRange("A1:A5");
              range.values = [[1], [20], [""], [5], ["test"]];
              var cf = range.conditionalFormats.add(Excel.ConditionalFormatType.custom);
              var cfCustom = cf.customOrNullObject;
              cfCustom.rule.formula = "=ISBLANK(A1)";
              cfCustom.format.fill.color = "#00FF00";
              return ctx.sync().then(function () {
                  console.log("Added new custom conditional format highlighting all blank cells.");
              });
          }).catch(function (error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel_release.Excel.CustomConditionalFormat.set
    summary: '<span data-ttu-id="513d7-129">Legt mehrere Eigenschaften eines Objekts gleichzeitig fest.</span><span class="sxs-lookup"><span data-stu-id="513d7-129">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="513d7-130">Sie können entweder ein plain-Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs weitergeben.</span><span class="sxs-lookup"><span data-stu-id="513d7-130">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="513d7-131">Diese Methode hat die folgende zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="513d7-131">This method has the following additional signature:</span></span>

      `set(properties: Excel.CustomConditionalFormat): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.CustomConditionalFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="513d7-132">Ein JavaScript-Objekt mit Eigenschaften, die isomorphically strukturiert sind, um die Eigenschaften des Objekts, für das die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="513d7-132">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.CustomConditionalFormatUpdateData
        - id: options
          description: '<span data-ttu-id="513d7-133">Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.</span><span class="sxs-lookup"><span data-stu-id="513d7-133">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel_release.Excel.CustomConditionalFormat.set_1
    summary: '<span data-ttu-id="513d7-134">Legt mehrere Eigenschaften für das Objekt auf der Grundlage eines vorhandenen geladenen Objekts zur gleichen Zeit fest.</span><span class="sxs-lookup"><span data-stu-id="513d7-134">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.CustomConditionalFormat): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.CustomConditionalFormat
  - uid: excel_release.Excel.CustomConditionalFormat.toJSON
    summary: '<span data-ttu-id="513d7-135">ÜberSchreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API-Objekt an`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="513d7-135">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="513d7-136">.</span><span class="sxs-lookup"><span data-stu-id="513d7-136"></span></span> <span data-ttu-id="513d7-137">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="513d7-137"></span></span><!-- --><span data-ttu-id="513d7-138">Ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche Excel. CustomConditionalFormat-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt zurück (typisiert als`Excel.Interfaces.CustomConditionalFormatData`</span><span class="sxs-lookup"><span data-stu-id="513d7-138">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.CustomConditionalFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.CustomConditionalFormatData`</span></span><!-- --><span data-ttu-id="513d7-139">), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="513d7-139">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.CustomConditionalFormatData;'
      return:
        type:
          - excel.Excel.Interfaces.CustomConditionalFormatData
        description: ''