### YamlMime:UniversalReference
ms.openlocfilehash: f8da0aa8f211304f6d54fd119af4a484795c66ae
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/20/2019
ms.locfileid: "30105356"
items:
- uid: excel_release.Excel.Binding
  summary: >-
    <span data-ttu-id="a92b5-101">Stellt eine Office.js-Bindung dar, die in der Arbeitsmappe definiert wird.</span><span class="sxs-lookup"><span data-stu-id="a92b5-101">Represents an Office.js binding that is defined in the workbook.</span></span>


    <span data-ttu-id="a92b5-102">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a92b5-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.Binding
  fullName: Excel.Binding
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.Binding.context
  - excel_release.Excel.Binding.delete
  - excel_release.Excel.Binding.getRange
  - excel_release.Excel.Binding.getTable
  - excel_release.Excel.Binding.getText
  - excel_release.Excel.Binding.id
  - excel_release.Excel.Binding.load
  - excel_release.Excel.Binding.load_1
  - excel_release.Excel.Binding.load_2
  - excel_release.Excel.Binding.onDataChanged
  - excel_release.Excel.Binding.onSelectionChanged
  - excel_release.Excel.Binding.toJSON
  - excel_release.Excel.Binding.type
- uid: excel_release.Excel.Binding.context
  summary: <span data-ttu-id="a92b5-103">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="a92b5-103">The request context associated with the object.</span></span> <span data-ttu-id="a92b5-104">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="a92b5-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.Binding.delete
  summary: >-
    <span data-ttu-id="a92b5-105">Löscht die Bindung.</span><span class="sxs-lookup"><span data-stu-id="a92b5-105">Deletes the binding.</span></span>


    <span data-ttu-id="a92b5-106">\[[API-Satz: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a92b5-106">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel_release.Excel.Binding.getRange
  summary: >-
    <span data-ttu-id="a92b5-p102">Gibt den durch die Bindung dargestellten Bereich zurück. Gibt einen Fehler zurück, wenn die Bindung nicht den korrekten Typ aufweist.</span><span class="sxs-lookup"><span data-stu-id="a92b5-p102">Returns the range represented by the binding. Will throw an error if binding is not of the correct type.</span></span>


    <span data-ttu-id="a92b5-109">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a92b5-109">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRange()
  fullName: getRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"a92b5-110\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"a92b5-110\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var binding = ctx.workbook.bindings.getItemAt(0);\n    var range = binding.getRange();\n    range.load('cellCount');\n    return ctx.sync().then(function() {\n        console.log(range.cellCount);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel_release.Excel.Binding.getTable
  summary: >-
    <span data-ttu-id="a92b5-p103">Gibt die durch die Bindung dargestellte Tabelle zurück. Gibt einen Fehler zurück, wenn die Bindung nicht den korrekten Typ aufweist.</span><span class="sxs-lookup"><span data-stu-id="a92b5-p103">Returns the table represented by the binding. Will throw an error if binding is not of the correct type.</span></span>


    <span data-ttu-id="a92b5-113">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a92b5-113">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getTable()
  fullName: getTable()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTable(): Excel.Table;'
    return:
      type:
      - excel.Excel.Table
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"a92b5-114\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"a92b5-114\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var binding = ctx.workbook.bindings.getItemAt(0);\n    var table = binding.getTable();\n    table.load('name');\n    return ctx.sync().then(function() {\n            console.log(table.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel_release.Excel.Binding.getText
  summary: >-
    <span data-ttu-id="a92b5-p104">Gibt den durch die Bindung dargestellten Text zurück. Gibt einen Fehler zurück, wenn die Bindung nicht den korrekten Typ aufweist.</span><span class="sxs-lookup"><span data-stu-id="a92b5-p104">Returns the text represented by the binding. Will throw an error if binding is not of the correct type.</span></span>


    <span data-ttu-id="a92b5-117">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a92b5-117">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getText()
  fullName: getText()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getText(): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"a92b5-118\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"a92b5-118\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var binding = ctx.workbook.bindings.getItemAt(0);\n    var text = binding.getText();\n    binding.load('text');\n    return ctx.sync().then(function() {\n        console.log(text);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel_release.Excel.Binding.id
  summary: >-
    <span data-ttu-id="a92b5-p105">Stellt die Bindungs-ID dar. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="a92b5-p105">Represents binding identifier. Read-only.</span></span>


    <span data-ttu-id="a92b5-121">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a92b5-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel_release.Excel.Binding.load
  summary: <span data-ttu-id="a92b5-122">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="a92b5-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a92b5-123">Sie müssen "context. Sync ()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="a92b5-123">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="a92b5-124">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="a92b5-124">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="a92b5-125">`load(option?: string | string[]): Excel.Binding`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="a92b5-125">`load(option?: string | string[]): Excel.Binding` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="a92b5-126">`load(option?: { select?: string; expand?: string; }): Excel.Binding`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="a92b5-126">`load(option?: { select?: string; expand?: string; }): Excel.Binding` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="a92b5-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Binding`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="a92b5-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Binding` - Only available on collection types.</span></span> <span data-ttu-id="a92b5-128">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="a92b5-128">It is similar to the preceding signature.</span></span> <span data-ttu-id="a92b5-129">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="a92b5-129">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="a92b5-130">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="a92b5-130">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="a92b5-131">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="a92b5-131">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.BindingLoadOptions): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.BindingLoadOptions
- uid: excel_release.Excel.Binding.load_1
  summary: <span data-ttu-id="a92b5-132">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="a92b5-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a92b5-133">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="a92b5-133">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"a92b5-134\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"a92b5-134\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var binding = ctx.workbook.bindings.getItemAt(0);\n    binding.load('type');\n    return ctx.sync().then(function() {\n        console.log(binding.type);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="a92b5-135">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="a92b5-135">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.Binding.load_2
  summary: <span data-ttu-id="a92b5-136">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="a92b5-136">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a92b5-137">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="a92b5-137">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Binding;'
    return:
      type:
      - excel.Excel.Binding
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="a92b5-138">Wobei propertyNamesAndPaths. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="a92b5-138">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.Binding.onDataChanged
  summary: >-
    <span data-ttu-id="a92b5-139">Tritt ein, wenn die Daten oder die Formatierung in der Datenbindung geändert werden.</span><span class="sxs-lookup"><span data-stu-id="a92b5-139">Occurs when data or formatting within the binding is changed.</span></span>


    <span data-ttu-id="a92b5-140">\[[API-Satz: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a92b5-140">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onDataChanged
  fullName: onDataChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onDataChanged: OfficeExtension.EventHandlers<Excel.BindingDataChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.BindingDataChangedEventArgs>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"a92b5-141\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"a92b5-141\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");    \n    const salesTable = sheet.tables.getItem(\"SalesTable\");\n    const salesByQuarterBinding = context.workbook.bindings.add(salesTable.getRange(), \"Table\", \"SalesByQuarter\");\n    salesByQuarterBinding.onDataChanged.add(onSalesDataChanged);\n\n    console.log(\"The data changed handler is registered.\");\n\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.Binding.onSelectionChanged
  summary: >-
    <span data-ttu-id="a92b5-142">Tritt auf, wenn der ausgewählte Inhalt in der Bindung geändert wird.</span><span class="sxs-lookup"><span data-stu-id="a92b5-142">Occurs when the selected content in the binding is changed.</span></span>


    <span data-ttu-id="a92b5-143">\[[API-Satz: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a92b5-143">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onSelectionChanged
  fullName: onSelectionChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.BindingSelectionChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.BindingSelectionChangedEventArgs>
- uid: excel_release.Excel.Binding.toJSON
  summary: <span data-ttu-id="a92b5-144">ÜberSchreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API `JSON.stringify()` <!-- -->-Objekt an übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="a92b5-144">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="a92b5-145">(`JSON.stringify`<!-- -->ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche Excel. Binding-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt `Excel.Interfaces.BindingData` <!-- -->(typisiert als) zurück, das flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="a92b5-145">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Binding object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.BindingData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.BindingData;'
    return:
      type:
      - excel.Excel.Interfaces.BindingData
      description: ''
- uid: excel_release.Excel.Binding.type
  summary: >-
    <span data-ttu-id="a92b5-146">Gibt den Typ der Bindung zurück.</span><span class="sxs-lookup"><span data-stu-id="a92b5-146">Returns the type of the binding.</span></span> <span data-ttu-id="a92b5-147">Weitere Informationen finden Sie unter Excel. BindingType.</span><span class="sxs-lookup"><span data-stu-id="a92b5-147">See Excel.BindingType for details.</span></span> <span data-ttu-id="a92b5-148">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="a92b5-148">Read-only.</span></span>


    <span data-ttu-id="a92b5-149">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a92b5-149">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: Excel.BindingType | "Range" | "Table" | "Text";'
    return:
      type:
      - Excel.BindingType | "Range" | "Table" | "Text"
