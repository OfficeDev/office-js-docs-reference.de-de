### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.ColorScaleConditionalFormat
    summary: |-
      <span data-ttu-id="8f70f-101">Stellt ein Iconset-Kriterium für die bedingte Formatierung dar.</span><span class="sxs-lookup"><span data-stu-id="8f70f-101">Represents an IconSet criteria for conditional formatting.</span></span>

      <span data-ttu-id="8f70f-102">\[[API-Satz: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8f70f-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ColorScaleConditionalFormat
    fullName: Excel.ColorScaleConditionalFormat
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.ColorScaleConditionalFormat.context
      - excel_release.Excel.ColorScaleConditionalFormat.criteria
      - excel_release.Excel.ColorScaleConditionalFormat.load
      - excel_release.Excel.ColorScaleConditionalFormat.load_1
      - excel_release.Excel.ColorScaleConditionalFormat.load_2
      - excel_release.Excel.ColorScaleConditionalFormat.set
      - excel_release.Excel.ColorScaleConditionalFormat.set_1
      - excel_release.Excel.ColorScaleConditionalFormat.threeColorScale
      - excel_release.Excel.ColorScaleConditionalFormat.toJSON
  - uid: excel_release.Excel.ColorScaleConditionalFormat.context
    summary: <span data-ttu-id="8f70f-103">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="8f70f-103">The request context associated with the object.</span></span> <span data-ttu-id="8f70f-104">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="8f70f-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.ColorScaleConditionalFormat.criteria
    summary: |-
      <span data-ttu-id="8f70f-105">Die Kriterien der Farbskala.</span><span class="sxs-lookup"><span data-stu-id="8f70f-105">The criteria of the color scale.</span></span> <span data-ttu-id="8f70f-106">Der mittelPunkt ist optional, wenn eine farbskalierung von zwei Punkten verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="8f70f-106">Midpoint is optional when using a two point color scale.</span></span>

      <span data-ttu-id="8f70f-107">\[[API-Satz: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8f70f-107">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: criteria
    fullName: criteria
    langs:
      - typeScript
    type: property
    syntax:
      content: 'criteria: Excel.ConditionalColorScaleCriteria;'
      return:
        type:
          - excel.Excel.ConditionalColorScaleCriteria
        description: |-


          #### <a name="examples"></a><span data-ttu-id="8f70f-108">Beispiele</span><span class="sxs-lookup"><span data-stu-id="8f70f-108">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B2:M5");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.colorScale);
              const criteria = {
                  minimum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.lowestValue, color: "blue" },
                  midpoint: { formula: "50", type: Excel.ConditionalFormatColorCriterionType.percent, color: "yellow" },
                  maximum: { formula: null, type: Excel.ConditionalFormatColorCriterionType.highestValue, color: "red" }
              };
              conditionalFormat.colorScale.criteria = criteria;

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.ColorScaleConditionalFormat.load
    summary: <span data-ttu-id="8f70f-109">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="8f70f-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8f70f-110">Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.</span><span class="sxs-lookup"><span data-stu-id="8f70f-110">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="8f70f-111">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="8f70f-111">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="8f70f-112">`load(option?: string | string[]): Excel.ColorScaleConditionalFormat`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="8f70f-112">`load(option?: string | string[]): Excel.ColorScaleConditionalFormat` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="8f70f-113">`load(option?: { select?: string; expand?: string; }): Excel.ColorScaleConditionalFormat`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="8f70f-113">`load(option?: { select?: string; expand?: string; }): Excel.ColorScaleConditionalFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="8f70f-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ColorScaleConditionalFormat`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="8f70f-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ColorScaleConditionalFormat` - Only available on collection types.</span></span> <span data-ttu-id="8f70f-115">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="8f70f-115">It is similar to the preceding signature.</span></span> <span data-ttu-id="8f70f-116">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="8f70f-116">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="8f70f-117">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="8f70f-117">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="8f70f-118">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="8f70f-118">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ColorScaleConditionalFormatLoadOptions): Excel.ColorScaleConditionalFormat;'
      return:
        type:
          - excel.Excel.ColorScaleConditionalFormat
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.ColorScaleConditionalFormatLoadOptions
  - uid: excel_release.Excel.ColorScaleConditionalFormat.load_1
    summary: <span data-ttu-id="8f70f-119">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="8f70f-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8f70f-120">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="8f70f-120">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ColorScaleConditionalFormat;'
      return:
        type:
          - excel.Excel.ColorScaleConditionalFormat
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="8f70f-121">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="8f70f-121">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.ColorScaleConditionalFormat.load_2
    summary: <span data-ttu-id="8f70f-122">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="8f70f-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8f70f-123">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="8f70f-123">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ColorScaleConditionalFormat;'
      return:
        type:
          - excel.Excel.ColorScaleConditionalFormat
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="8f70f-124">Wobei propertyNamesAndPaths. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="8f70f-124">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel_release.Excel.ColorScaleConditionalFormat.set
    summary: '<span data-ttu-id="8f70f-125">Legt mehrere Eigenschaften eines Objekts gleichzeitig fest.</span><span class="sxs-lookup"><span data-stu-id="8f70f-125">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="8f70f-126">Sie können entweder ein plain-Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs weitergeben.</span><span class="sxs-lookup"><span data-stu-id="8f70f-126">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="8f70f-127">Diese Methode hat die folgende zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="8f70f-127">This method has the following additional signature:</span></span>

      `set(properties: Excel.ColorScaleConditionalFormat): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ColorScaleConditionalFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="8f70f-128">Ein JavaScript-Objekt mit Eigenschaften, die isomorphically strukturiert sind, um die Eigenschaften des Objekts, für das die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="8f70f-128">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.ColorScaleConditionalFormatUpdateData
        - id: options
          description: '<span data-ttu-id="8f70f-129">Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.</span><span class="sxs-lookup"><span data-stu-id="8f70f-129">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel_release.Excel.ColorScaleConditionalFormat.set_1
    summary: '<span data-ttu-id="8f70f-130">Legt mehrere Eigenschaften für das Objekt auf der Grundlage eines vorhandenen geladenen Objekts zur gleichen Zeit fest.</span><span class="sxs-lookup"><span data-stu-id="8f70f-130">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ColorScaleConditionalFormat): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.ColorScaleConditionalFormat
  - uid: excel_release.Excel.ColorScaleConditionalFormat.threeColorScale
    summary: |-
      <span data-ttu-id="8f70f-131">Wenn true, hat die Farbskala drei Punkte (Minimum, Mittelpunkt, Maximum), andernfalls hat Sie zwei (Minimum, Maximum).</span><span class="sxs-lookup"><span data-stu-id="8f70f-131">If true the color scale will have three points (minimum, midpoint, maximum), otherwise it will have two (minimum, maximum).</span></span>

      <span data-ttu-id="8f70f-132">\[[API-Satz: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8f70f-132">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: threeColorScale
    fullName: threeColorScale
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly threeColorScale: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.ColorScaleConditionalFormat.toJSON
    summary: '<span data-ttu-id="8f70f-133">ÜberSchreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API-Objekt an`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="8f70f-133">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="8f70f-134">.</span><span class="sxs-lookup"><span data-stu-id="8f70f-134"></span></span> <span data-ttu-id="8f70f-135">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="8f70f-135"></span></span><!-- --><span data-ttu-id="8f70f-136">Ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche Excel. ColorScaleConditionalFormat-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt zurück (typisiert als`Excel.Interfaces.ColorScaleConditionalFormatData`</span><span class="sxs-lookup"><span data-stu-id="8f70f-136">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ColorScaleConditionalFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ColorScaleConditionalFormatData`</span></span><!-- --><span data-ttu-id="8f70f-137">), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="8f70f-137">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ColorScaleConditionalFormatData;'
      return:
        type:
          - excel.Excel.Interfaces.ColorScaleConditionalFormatData
        description: ''