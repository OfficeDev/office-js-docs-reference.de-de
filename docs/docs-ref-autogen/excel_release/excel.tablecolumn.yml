### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.TableColumn
    summary: |-
      <span data-ttu-id="4011e-101">Stellt eine Spalte in einer Tabelle dar.</span><span class="sxs-lookup"><span data-stu-id="4011e-101">Represents a column in a table.</span></span>

      <span data-ttu-id="4011e-102">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4011e-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.TableColumn
    fullName: Excel.TableColumn
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.TableColumn.context
      - excel_release.Excel.TableColumn.delete
      - excel_release.Excel.TableColumn.filter
      - excel_release.Excel.TableColumn.getDataBodyRange
      - excel_release.Excel.TableColumn.getHeaderRowRange
      - excel_release.Excel.TableColumn.getRange
      - excel_release.Excel.TableColumn.getTotalRowRange
      - excel_release.Excel.TableColumn.id
      - excel_release.Excel.TableColumn.index
      - excel_release.Excel.TableColumn.load
      - excel_release.Excel.TableColumn.load_1
      - excel_release.Excel.TableColumn.load_2
      - excel_release.Excel.TableColumn.name
      - excel_release.Excel.TableColumn.set
      - excel_release.Excel.TableColumn.set_1
      - excel_release.Excel.TableColumn.toJSON
      - excel_release.Excel.TableColumn.values
  - uid: excel_release.Excel.TableColumn.context
    summary: <span data-ttu-id="4011e-103">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="4011e-103">The request context associated with the object.</span></span> <span data-ttu-id="4011e-104">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="4011e-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.TableColumn.delete
    summary: |-
      <span data-ttu-id="4011e-105">Löscht die Spalte aus der Tabelle.</span><span class="sxs-lookup"><span data-stu-id="4011e-105">Deletes the column from the table.</span></span>

      <span data-ttu-id="4011e-106">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4011e-106">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="4011e-107">Beispiele</span><span class="sxs-lookup"><span data-stu-id="4011e-107">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(2);
              column.delete();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel_release.Excel.TableColumn.filter
    summary: |-
      <span data-ttu-id="4011e-108">Ruft den auf die Salte angewendeten Filter ab.</span><span class="sxs-lookup"><span data-stu-id="4011e-108">Retrieve the filter applied to the column.</span></span> <span data-ttu-id="4011e-109">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="4011e-109">Read-only.</span></span>

      <span data-ttu-id="4011e-110">\[[API-Satz: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4011e-110">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: filter
    fullName: filter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly filter: Excel.Filter;'
      return:
        type:
          - excel.Excel.Filter
  - uid: excel_release.Excel.TableColumn.getDataBodyRange
    summary: |-
      <span data-ttu-id="4011e-111">Ruft das Bereichsobjekt ab, das mit dem Datenteil der Spalte verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="4011e-111">Gets the range object associated with the data body of the column.</span></span>

      <span data-ttu-id="4011e-112">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4011e-112">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getDataBodyRange()
    fullName: getDataBodyRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataBodyRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="4011e-113">Beispiele</span><span class="sxs-lookup"><span data-stu-id="4011e-113">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);
              var dataBodyRange = column.getDataBodyRange();
              dataBodyRange.load('address');
              return ctx.sync().then(function() {
                  console.log(dataBodyRange.address);
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel_release.Excel.TableColumn.getHeaderRowRange
    summary: |-
      <span data-ttu-id="4011e-114">Ruft das Bereichsobjekt ab, das mit der Überschriftenzeile der Spalte verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="4011e-114">Gets the range object associated with the header row of the column.</span></span>

      <span data-ttu-id="4011e-115">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4011e-115">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getHeaderRowRange()
    fullName: getHeaderRowRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHeaderRowRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="4011e-116">Beispiele</span><span class="sxs-lookup"><span data-stu-id="4011e-116">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);
              var headerRowRange = columns.getHeaderRowRange();
              headerRowRange.load('address');
              return ctx.sync().then(function() {
                  console.log(headerRowRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel_release.Excel.TableColumn.getRange
    summary: |-
      <span data-ttu-id="4011e-117">Ruft das Bereichsobjekt ab, das mit der gesamten Spalte verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="4011e-117">Gets the range object associated with the entire column.</span></span>

      <span data-ttu-id="4011e-118">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4011e-118">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="4011e-119">Beispiele</span><span class="sxs-lookup"><span data-stu-id="4011e-119">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);
              var columnRange = columns.getRange();
              columnRange.load('address');
              return ctx.sync().then(function() {
                  console.log(columnRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel_release.Excel.TableColumn.getTotalRowRange
    summary: |-
      <span data-ttu-id="4011e-120">Ruft das Bereichsobjekt ab, das mit der Ergebniszeile der Spalte verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="4011e-120">Gets the range object associated with the totals row of the column.</span></span>

      <span data-ttu-id="4011e-121">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4011e-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getTotalRowRange()
    fullName: getTotalRowRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTotalRowRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="4011e-122">Beispiele</span><span class="sxs-lookup"><span data-stu-id="4011e-122">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);
              var totalRowRange = columns.getTotalRowRange();
              totalRowRange.load('address');
              return ctx.sync().then(function() {
                  console.log(totalRowRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: excel_release.Excel.TableColumn.id
    summary: |-
      <span data-ttu-id="4011e-123">Gibt einen eindeutigen Schlüssel an, der die Spalte in der Tabelle angibt.</span><span class="sxs-lookup"><span data-stu-id="4011e-123">Returns a unique key that identifies the column within the table.</span></span> <span data-ttu-id="4011e-124">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="4011e-124">Read-only.</span></span>

      <span data-ttu-id="4011e-125">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4011e-125">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.TableColumn.index
    summary: |-
      <span data-ttu-id="4011e-126">Gibt die Indexnummer der Spalte in der Spaltenauflistung der Tabelle zurück.</span><span class="sxs-lookup"><span data-stu-id="4011e-126">Returns the index number of the column within the columns collection of the table.</span></span> <span data-ttu-id="4011e-127">Nullindiziert.</span><span class="sxs-lookup"><span data-stu-id="4011e-127">Zero-indexed.</span></span> <span data-ttu-id="4011e-128">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="4011e-128">Read-only.</span></span>

      <span data-ttu-id="4011e-129">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4011e-129">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: index
    fullName: index
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly index: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.TableColumn.load
    summary: <span data-ttu-id="4011e-130">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="4011e-130">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4011e-131">Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.</span><span class="sxs-lookup"><span data-stu-id="4011e-131">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="4011e-132">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="4011e-132">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="4011e-133">`load(option?: string | string[]): Excel.TableColumn`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="4011e-133">`load(option?: string | string[]): Excel.TableColumn` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="4011e-134">`load(option?: { select?: string; expand?: string; }): Excel.TableColumn`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="4011e-134">`load(option?: { select?: string; expand?: string; }): Excel.TableColumn` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="4011e-135">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumn`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="4011e-135">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumn` - Only available on collection types.</span></span> <span data-ttu-id="4011e-136">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="4011e-136">It is similar to the preceding signature.</span></span> <span data-ttu-id="4011e-137">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="4011e-137">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="4011e-138">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="4011e-138">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="4011e-139">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="4011e-139">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.TableColumnLoadOptions): Excel.TableColumn;'
      return:
        type:
          - excel.Excel.TableColumn
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.TableColumnLoadOptions
  - uid: excel_release.Excel.TableColumn.load_1
    summary: <span data-ttu-id="4011e-140">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="4011e-140">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4011e-141">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="4011e-141">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableColumn;'
      return:
        type:
          - excel.Excel.TableColumn
        description: |-


          #### <a name="examples"></a><span data-ttu-id="4011e-142">Beispiele</span><span class="sxs-lookup"><span data-stu-id="4011e-142">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var column = ctx.workbook.tables.getItem(tableName).columns.getItem(0);
              column.load('index');
              return ctx.sync().then(function() {
                  console.log(column.index);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var tables = ctx.workbook.tables;
              var newValues = [["New"], ["Values"], ["For"], ["New"], ["Column"]];
              var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(2);
              column.values = newValues;
              column.load('values');
              return ctx.sync().then(function() {
                  console.log(column.values);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="4011e-143">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="4011e-143">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.TableColumn.load_2
    summary: <span data-ttu-id="4011e-144">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="4011e-144">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4011e-145">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="4011e-145">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.TableColumn;'
      return:
        type:
          - excel.Excel.TableColumn
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="4011e-146">Wobei propertyNamesAndPaths. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="4011e-146">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel_release.Excel.TableColumn.name
    summary: |-
      <span data-ttu-id="4011e-147">Gibt den Namen der Tabellenspalte zurück.</span><span class="sxs-lookup"><span data-stu-id="4011e-147">Represents the name of the table column.</span></span>

      <span data-ttu-id="4011e-148">\[[API-Satz: ExcelApi 1,1 zum Aufrufen des Namens; 1,4 zum festlegen.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span><span class="sxs-lookup"><span data-stu-id="4011e-148">\[ [API set: ExcelApi 1.1 for getting the name; 1.4 for setting it.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id="4011e-149">\]</span><span class="sxs-lookup"><span data-stu-id="4011e-149"></span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel_release.Excel.TableColumn.set
    summary: '<span data-ttu-id="4011e-150">Legt mehrere Eigenschaften eines Objekts gleichzeitig fest.</span><span class="sxs-lookup"><span data-stu-id="4011e-150">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="4011e-151">Sie können entweder ein plain-Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs weitergeben.</span><span class="sxs-lookup"><span data-stu-id="4011e-151">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="4011e-152">Diese Methode hat die folgende zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="4011e-152">This method has the following additional signature:</span></span>

      `set(properties: Excel.TableColumn): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.TableColumnUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="4011e-153">Ein JavaScript-Objekt mit Eigenschaften, die isomorphically strukturiert sind, um die Eigenschaften des Objekts, für das die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="4011e-153">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.TableColumnUpdateData
        - id: options
          description: '<span data-ttu-id="4011e-154">Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.</span><span class="sxs-lookup"><span data-stu-id="4011e-154">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel_release.Excel.TableColumn.set_1
    summary: '<span data-ttu-id="4011e-155">Legt mehrere Eigenschaften für das Objekt auf der Grundlage eines vorhandenen geladenen Objekts zur gleichen Zeit fest.</span><span class="sxs-lookup"><span data-stu-id="4011e-155">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.TableColumn): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.TableColumn
  - uid: excel_release.Excel.TableColumn.toJSON
    summary: '<span data-ttu-id="4011e-156">ÜberSchreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API-Objekt an`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="4011e-156">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="4011e-157">.</span><span class="sxs-lookup"><span data-stu-id="4011e-157"></span></span> <span data-ttu-id="4011e-158">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="4011e-158"></span></span><!-- --><span data-ttu-id="4011e-159">Ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche Excel. Column-Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt zurück (typisiert als`Excel.Interfaces.TableColumnData`</span><span class="sxs-lookup"><span data-stu-id="4011e-159">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.TableColumn object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableColumnData`</span></span><!-- --><span data-ttu-id="4011e-160">), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="4011e-160">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableColumnData;'
      return:
        type:
          - excel.Excel.Interfaces.TableColumnData
        description: ''
  - uid: excel_release.Excel.TableColumn.values
    summary: |-
      <span data-ttu-id="4011e-161">Stellt die Rohwerte des angegebenen Bereichs dar.</span><span class="sxs-lookup"><span data-stu-id="4011e-161">Represents the raw values of the specified range.</span></span> <span data-ttu-id="4011e-162">Die zurückgegebenen Daten können vom Typ Zeichenfolge, Zahl oder ein boolescher Wert sein.</span><span class="sxs-lookup"><span data-stu-id="4011e-162">The data returned could be of type string, number, or a boolean.</span></span> <span data-ttu-id="4011e-163">Zellen, die einen Fehler enthalten, geben die Fehlerzeichenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="4011e-163">Cells that contain an error will return the error string.</span></span>

      <span data-ttu-id="4011e-164">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4011e-164">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: values
    fullName: values
    langs:
      - typeScript
    type: property
    syntax:
      content: 'values: any[][];'
      return:
        type:
          - 'any[][]'