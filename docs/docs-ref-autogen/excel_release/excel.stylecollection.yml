### YamlMime:UniversalReference
ms.openlocfilehash: ad4674f718210c0b495b4244c7ae9f783ea2a236
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/20/2019
ms.locfileid: "30107862"
items:
- uid: excel_release.Excel.StyleCollection
  summary: >-
    <span data-ttu-id="4d15d-101">Stellt eine Auflistung aller Formatvorlagen dar.</span><span class="sxs-lookup"><span data-stu-id="4d15d-101">Represents a collection of all the styles.</span></span>


    <span data-ttu-id="4d15d-102">\[[API-Satz: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d15d-102">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.StyleCollection
  fullName: Excel.StyleCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.StyleCollection.add
  - excel_release.Excel.StyleCollection.context
  - excel_release.Excel.StyleCollection.getItem
  - excel_release.Excel.StyleCollection.items
  - excel_release.Excel.StyleCollection.load
  - excel_release.Excel.StyleCollection.load_1
  - excel_release.Excel.StyleCollection.load_2
  - excel_release.Excel.StyleCollection.toJSON
- uid: excel_release.Excel.StyleCollection.add
  summary: >-
    <span data-ttu-id="4d15d-103">Fügt der Sammlung eine neue Formatvorlage hinzu.</span><span class="sxs-lookup"><span data-stu-id="4d15d-103">Adds a new style to the collection.</span></span>


    <span data-ttu-id="4d15d-104">\[[API-Satz: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d15d-104">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: add(name)
  fullName: add(name)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(name: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4d15d-105\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"4d15d-105\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let styles = context.workbook.styles;\n\n    // Add a new style to the style collection.\n    // Styles is in the Home tab ribbon.\n    styles.add(\"Diagonal Orientation Style\");\n          \n    let newStyle = styles.getItem(\"Diagonal Orientation Style\");\n    \n    // The \"Diagonal Orientation Style\" properties.\n    newStyle.textOrientation = 38;\n    newStyle.autoIndent = true;\n    newStyle.includeProtection = true;\n    newStyle.shrinkToFit = true;\n    newStyle.locked = false;\n    \n    await context.sync();\n\n    console.log(\"Successfully added a new style with diagonal orientation to the Home tab ribbon.\");\n});\n```"
    parameters:
    - id: name
      description: <span data-ttu-id="4d15d-106">Name des hinzuzufügenden Formats.</span><span class="sxs-lookup"><span data-stu-id="4d15d-106">Name of the style to be added.</span></span>
      type:
      - string
- uid: excel_release.Excel.StyleCollection.context
  summary: <span data-ttu-id="4d15d-107">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="4d15d-107">The request context associated with the object.</span></span> <span data-ttu-id="4d15d-108">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="4d15d-108">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.StyleCollection.getItem
  summary: >-
    <span data-ttu-id="4d15d-109">Ruft eine Formatvorlage anhand des Namens ab.</span><span class="sxs-lookup"><span data-stu-id="4d15d-109">Gets a style by name.</span></span>


    <span data-ttu-id="4d15d-110">\[[API-Satz: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4d15d-110">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(name)
  fullName: getItem(name)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(name: string): Excel.Style;'
    return:
      type:
      - excel.Excel.Style
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4d15d-111\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"4d15d-111\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let styles = context.workbook.styles;\n\n    // Add a new style to the style collection.\n    // Styles is in the Home tab ribbon.\n    styles.add(\"Diagonal Orientation Style\");\n          \n    let newStyle = styles.getItem(\"Diagonal Orientation Style\");\n    \n    // The \"Diagonal Orientation Style\" properties.\n    newStyle.textOrientation = 38;\n    newStyle.autoIndent = true;\n    newStyle.includeProtection = true;\n    newStyle.shrinkToFit = true;\n    newStyle.locked = false;\n    \n    await context.sync();\n\n    console.log(\"Successfully added a new style with diagonal orientation to the Home tab ribbon.\");\n});\n```"
    parameters:
    - id: name
      description: <span data-ttu-id="4d15d-112">Name des abzurufenden Formats.</span><span class="sxs-lookup"><span data-stu-id="4d15d-112">Name of the style to be retrieved.</span></span>
      type:
      - string
- uid: excel_release.Excel.StyleCollection.items
  summary: <span data-ttu-id="4d15d-113">Ruft die geladenen untergeordneten Elemente in dieser Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="4d15d-113">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.Style[];'
    return:
      type:
      - Excel.Style[]
- uid: excel_release.Excel.StyleCollection.load
  summary: <span data-ttu-id="4d15d-114">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="4d15d-114">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4d15d-115">Sie müssen "context. Sync ()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="4d15d-115">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="4d15d-116">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="4d15d-116">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="4d15d-117">`load(option?: string | string[]): Excel.StyleCollection`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="4d15d-117">`load(option?: string | string[]): Excel.StyleCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="4d15d-118">`load(option?: { select?: string; expand?: string; }): Excel.StyleCollection`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="4d15d-118">`load(option?: { select?: string; expand?: string; }): Excel.StyleCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="4d15d-119">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.StyleCollection`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="4d15d-119">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.StyleCollection` - Only available on collection types.</span></span> <span data-ttu-id="4d15d-120">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="4d15d-120">It is similar to the preceding signature.</span></span> <span data-ttu-id="4d15d-121">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="4d15d-121">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="4d15d-122">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="4d15d-122">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="4d15d-123">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="4d15d-123">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.StyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.StyleCollection;'
    return:
      type:
      - excel.Excel.StyleCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.StyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel_release.Excel.StyleCollection.load_1
  summary: <span data-ttu-id="4d15d-124">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="4d15d-124">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4d15d-125">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="4d15d-125">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.StyleCollection;'
    return:
      type:
      - excel.Excel.StyleCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="4d15d-126">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="4d15d-126">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.StyleCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.StyleCollection;'
    return:
      type:
      - excel.Excel.StyleCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel_release.Excel.StyleCollection.toJSON
  summary: <span data-ttu-id="4d15d-127">ÜberSchreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API `JSON.stringify()` <!-- -->-Objekt an übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="4d15d-127">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="4d15d-128">(`JSON.stringify`<!-- -->ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche `Excel.StyleCollection` Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt ( `Excel.Interfaces.StyleCollectionData` <!-- -->typisiert als) zurück, das ein "Items"-Array mit flachen Kopien aller geladenen Eigenschaften aus den Elementen der Auflistung enthält.</span><span class="sxs-lookup"><span data-stu-id="4d15d-128">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.StyleCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.StyleCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.StyleCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.StyleCollectionData
      description: ''
