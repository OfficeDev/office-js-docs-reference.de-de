### YamlMime:UniversalReference
ms.openlocfilehash: 96c7a20d063ecf21925b8d6d4973e378c02fcb5c
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/20/2019
ms.locfileid: "30114911"
items:
- uid: excel_release.Excel.ChartPointsCollection
  summary: >-
    <span data-ttu-id="7863b-101">Eine Sammlung aller Diagrammpunkte in einer Datenreihe eines Diagramms.</span><span class="sxs-lookup"><span data-stu-id="7863b-101">A collection of all the chart points within a series inside a chart.</span></span>


    <span data-ttu-id="7863b-102">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7863b-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ChartPointsCollection
  fullName: Excel.ChartPointsCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.ChartPointsCollection.context
  - excel_release.Excel.ChartPointsCollection.count
  - excel_release.Excel.ChartPointsCollection.getCount
  - excel_release.Excel.ChartPointsCollection.getItemAt
  - excel_release.Excel.ChartPointsCollection.items
  - excel_release.Excel.ChartPointsCollection.load
  - excel_release.Excel.ChartPointsCollection.load_1
  - excel_release.Excel.ChartPointsCollection.load_2
  - excel_release.Excel.ChartPointsCollection.toJSON
- uid: excel_release.Excel.ChartPointsCollection.context
  summary: <span data-ttu-id="7863b-103">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="7863b-103">The request context associated with the object.</span></span> <span data-ttu-id="7863b-104">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="7863b-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.ChartPointsCollection.count
  summary: >-
    <span data-ttu-id="7863b-p102">Gibt die Anzahl der Diagrammpunkte in der Reihe zurück. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="7863b-p102">Returns the number of chart points in the series. Read-only.</span></span>


    <span data-ttu-id="7863b-107">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7863b-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: count
  fullName: count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: excel_release.Excel.ChartPointsCollection.getCount
  summary: >-
    <span data-ttu-id="7863b-108">Gibt die Anzahl der Diagrammpunkten in der Reihe zurück.</span><span class="sxs-lookup"><span data-stu-id="7863b-108">Returns the number of chart points in the series.</span></span>


    <span data-ttu-id="7863b-109">\[[API-Satz: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7863b-109">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel_release.Excel.ChartPointsCollection.getItemAt
  summary: >-
    <span data-ttu-id="7863b-110">Dient zum Abrufen eines Punkts anhand seiner Position in der Datenreihe.</span><span class="sxs-lookup"><span data-stu-id="7863b-110">Retrieve a point based on its position within the series.</span></span>


    <span data-ttu-id="7863b-111">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7863b-111">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.ChartPoint;'
    return:
      type:
      - excel.Excel.ChartPoint
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"7863b-112\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"7863b-112\">Examples</span></span>\n\n```javascript\n// Set the border color for the first points in the points collection\nExcel.run(function (ctx) { \n    var points = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\").series.getItemAt(0).points;\n    points.getItemAt(0).format.fill.setSolidColor(\"8FBC8F\");\n    return ctx.sync().then(function() {\n        console.log(\"Point Border Color Changed\");\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="7863b-p103">Index-Wert des abzurufenden Objekts. Nullindiziert.</span><span class="sxs-lookup"><span data-stu-id="7863b-p103">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel_release.Excel.ChartPointsCollection.items
  summary: <span data-ttu-id="7863b-115">Ruft die geladenen untergeordneten Elemente in dieser Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="7863b-115">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.ChartPoint[];'
    return:
      type:
      - Excel.ChartPoint[]
- uid: excel_release.Excel.ChartPointsCollection.load
  summary: <span data-ttu-id="7863b-116">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="7863b-116">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7863b-117">Sie müssen "context. Sync ()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="7863b-117">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="7863b-118">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="7863b-118">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="7863b-119">`load(option?: string | string[]): Excel.ChartPointsCollection`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="7863b-119">`load(option?: string | string[]): Excel.ChartPointsCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="7863b-120">`load(option?: { select?: string; expand?: string; }): Excel.ChartPointsCollection`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="7863b-120">`load(option?: { select?: string; expand?: string; }): Excel.ChartPointsCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="7863b-121">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartPointsCollection`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="7863b-121">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartPointsCollection` - Only available on collection types.</span></span> <span data-ttu-id="7863b-122">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="7863b-122">It is similar to the preceding signature.</span></span> <span data-ttu-id="7863b-123">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="7863b-123">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="7863b-124">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="7863b-124">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="7863b-125">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="7863b-125">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ChartPointsCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.ChartPointsCollection;'
    return:
      type:
      - excel.Excel.ChartPointsCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.ChartPointsCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel_release.Excel.ChartPointsCollection.load_1
  summary: <span data-ttu-id="7863b-126">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="7863b-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7863b-127">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="7863b-127">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.ChartPointsCollection;'
    return:
      type:
      - excel.Excel.ChartPointsCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"7863b-128\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"7863b-128\">Examples</span></span>\n\n```javascript\n// Get the names of points in the points collection\nExcel.run(function (ctx) { \n    var pointsCollection = \n        ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\").series.getItemAt(0).points;\n    pointsCollection.load('items');\n    return ctx.sync().then(function() {\n        console.log(\"Points Collection loaded\");\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Get the number of points\nExcel.run(function (ctx) { \n    var pointsCollection = \n        ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\").series.getItemAt(0).points;\n    pointsCollection.load('count');\n    return ctx.sync().then(function() {\n        console.log(\"points: Count= \" + pointsCollection.count);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="7863b-129">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="7863b-129">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.ChartPointsCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.ChartPointsCollection;'
    return:
      type:
      - excel.Excel.ChartPointsCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel_release.Excel.ChartPointsCollection.toJSON
  summary: <span data-ttu-id="7863b-130">ÜberSchreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API `JSON.stringify()` <!-- -->-Objekt an übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="7863b-130">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="7863b-131">(`JSON.stringify`<!-- -->ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche `Excel.ChartPointsCollection` Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt ( `Excel.Interfaces.ChartPointsCollectionData` <!-- -->typisiert als) zurück, das ein "Items"-Array mit flachen Kopien aller geladenen Eigenschaften aus den Elementen der Auflistung enthält.</span><span class="sxs-lookup"><span data-stu-id="7863b-131">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.ChartPointsCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartPointsCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ChartPointsCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.ChartPointsCollectionData
      description: ''
