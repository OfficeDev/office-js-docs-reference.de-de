### YamlMime:UniversalReference
ms.openlocfilehash: 28697222fc3f9066bb0e3e0da8799b2939520a8e
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/20/2019
ms.locfileid: "30109710"
items:
- uid: excel_release.Excel.NamedItemCollection
  summary: >-
    <span data-ttu-id="ded92-101">Eine Auflistung aller NamedItem-Objekte, die Teil der Arbeitsmappe oder des Arbeitsblatts sind, je nachdem, wie Sie erreicht wurde.</span><span class="sxs-lookup"><span data-stu-id="ded92-101">A collection of all the NamedItem objects that are part of the workbook or worksheet, depending on how it was reached.</span></span>


    <span data-ttu-id="ded92-102">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ded92-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.NamedItemCollection
  fullName: Excel.NamedItemCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.NamedItemCollection.add
  - excel_release.Excel.NamedItemCollection.addFormulaLocal
  - excel_release.Excel.NamedItemCollection.context
  - excel_release.Excel.NamedItemCollection.getCount
  - excel_release.Excel.NamedItemCollection.getItem
  - excel_release.Excel.NamedItemCollection.getItemOrNullObject
  - excel_release.Excel.NamedItemCollection.items
  - excel_release.Excel.NamedItemCollection.load
  - excel_release.Excel.NamedItemCollection.load_1
  - excel_release.Excel.NamedItemCollection.load_2
  - excel_release.Excel.NamedItemCollection.toJSON
- uid: excel_release.Excel.NamedItemCollection.add
  summary: >-
    <span data-ttu-id="ded92-103">Fügt einen neuen Namen zur Auflistung des angegebenen Bereichs hinzu.</span><span class="sxs-lookup"><span data-stu-id="ded92-103">Adds a new name to the collection of the given scope.</span></span>


    <span data-ttu-id="ded92-104">\[[API-Satz: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ded92-104">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: add(name, reference, comment)
  fullName: add(name, reference, comment)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(name: string, reference: Range | string, comment?: string): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ded92-105\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"ded92-105\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const headerRange = sheet.getRange(\"A1:D1\");\n\n    sheet.names.add(\"ExpensesHeader\", headerRange);\n    const namedItems = sheet.names.load(\"name, type\");\n\n    await context.sync();\n});\n```"
    parameters:
    - id: name
      description: <span data-ttu-id="ded92-106">Der Name des benannten Elements.</span><span class="sxs-lookup"><span data-stu-id="ded92-106">The name of the named item.</span></span>
      type:
      - string
    - id: reference
      description: <span data-ttu-id="ded92-107">Die Formel oder der Bereich, auf die bzw. den der Name verweist.</span><span class="sxs-lookup"><span data-stu-id="ded92-107">The formula or the range that the name will refer to.</span></span>
      type:
      - Range | string
    - id: comment
      description: <span data-ttu-id="ded92-108">Optional.</span><span class="sxs-lookup"><span data-stu-id="ded92-108">Optional.</span></span> <span data-ttu-id="ded92-109">Der mit dem benannten Element verknüpfte Kommentar.</span><span class="sxs-lookup"><span data-stu-id="ded92-109">The comment associated with the named item.</span></span>
      type:
      - string
- uid: excel_release.Excel.NamedItemCollection.addFormulaLocal
  summary: >-
    <span data-ttu-id="ded92-110">Fügt einen neuen Namen zu der Auflistung des angegebenen Bereichs unter Verwendung des Gebietsschemas des Benutzers für die Formel hinzu.</span><span class="sxs-lookup"><span data-stu-id="ded92-110">Adds a new name to the collection of the given scope using the user's locale for the formula.</span></span>


    <span data-ttu-id="ded92-111">\[[API-Satz: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ded92-111">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: addFormulaLocal(name, formula, comment)
  fullName: addFormulaLocal(name, formula, comment)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFormulaLocal(name: string, formula: string, comment?: string): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: ''
    parameters:
    - id: name
      description: <span data-ttu-id="ded92-112">Der „Name“ des benannten Elements.</span><span class="sxs-lookup"><span data-stu-id="ded92-112">The "name" of the named item.</span></span>
      type:
      - string
    - id: formula
      description: <span data-ttu-id="ded92-113">Die Formel im Gebietsschema des Benutzers, auf die der Name verweist.</span><span class="sxs-lookup"><span data-stu-id="ded92-113">The formula in the user's locale that the name will refer to.</span></span>
      type:
      - string
    - id: comment
      description: <span data-ttu-id="ded92-114">Optional.</span><span class="sxs-lookup"><span data-stu-id="ded92-114">Optional.</span></span> <span data-ttu-id="ded92-115">Der mit dem benannten Element verknüpfte Kommentar.</span><span class="sxs-lookup"><span data-stu-id="ded92-115">The comment associated with the named item.</span></span>
      type:
      - string
- uid: excel_release.Excel.NamedItemCollection.context
  summary: <span data-ttu-id="ded92-116">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="ded92-116">The request context associated with the object.</span></span> <span data-ttu-id="ded92-117">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="ded92-117">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.NamedItemCollection.getCount
  summary: >-
    <span data-ttu-id="ded92-118">Ruft die Anzahl von benannten Elementen in der Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="ded92-118">Gets the number of named items in the collection.</span></span>


    <span data-ttu-id="ded92-119">\[[API-Satz: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ded92-119">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel_release.Excel.NamedItemCollection.getItem
  summary: >-
    <span data-ttu-id="ded92-120">Ruft ein NamedItem-Objekt mit dem Namen ab.</span><span class="sxs-lookup"><span data-stu-id="ded92-120">Gets a NamedItem object using its name.</span></span>


    <span data-ttu-id="ded92-121">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ded92-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(name)
  fullName: getItem(name)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(name: string): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ded92-122\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"ded92-122\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = 'Sheet1';\n    var nameditem = ctx.workbook.names.getItem(sheetName);\n    nameditem.load('type');\n    return ctx.sync().then(function() {\n            console.log(nameditem.type);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: name
      description: <span data-ttu-id="ded92-123">NamedItem Name.</span><span class="sxs-lookup"><span data-stu-id="ded92-123">Nameditem name.</span></span>
      type:
      - string
- uid: excel_release.Excel.NamedItemCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="ded92-124">Ruft ein NamedItem-Objekt mit dem Namen ab.</span><span class="sxs-lookup"><span data-stu-id="ded92-124">Gets a NamedItem object using its name.</span></span> <span data-ttu-id="ded92-125">Wenn das NamedItem-Objekt nicht vorhanden ist, wird ein NULL-Objekt zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="ded92-125">If the nameditem object does not exist, will return a null object.</span></span>


    <span data-ttu-id="ded92-126">\[[API-Satz: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="ded92-126">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemOrNullObject(name)
  fullName: getItemOrNullObject(name)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(name: string): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: ''
    parameters:
    - id: name
      description: <span data-ttu-id="ded92-127">NamedItem Name.</span><span class="sxs-lookup"><span data-stu-id="ded92-127">Nameditem name.</span></span>
      type:
      - string
- uid: excel_release.Excel.NamedItemCollection.items
  summary: <span data-ttu-id="ded92-128">Ruft die geladenen untergeordneten Elemente in dieser Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="ded92-128">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.NamedItem[];'
    return:
      type:
      - Excel.NamedItem[]
- uid: excel_release.Excel.NamedItemCollection.load
  summary: <span data-ttu-id="ded92-129">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="ded92-129">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ded92-130">Sie müssen "context. Sync ()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="ded92-130">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="ded92-131">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="ded92-131">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="ded92-132">`load(option?: string | string[]): Excel.NamedItemCollection`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="ded92-132">`load(option?: string | string[]): Excel.NamedItemCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="ded92-133">`load(option?: { select?: string; expand?: string; }): Excel.NamedItemCollection`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="ded92-133">`load(option?: { select?: string; expand?: string; }): Excel.NamedItemCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="ded92-134">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItemCollection`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="ded92-134">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItemCollection` - Only available on collection types.</span></span> <span data-ttu-id="ded92-135">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="ded92-135">It is similar to the preceding signature.</span></span> <span data-ttu-id="ded92-136">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="ded92-136">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="ded92-137">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="ded92-137">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="ded92-138">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="ded92-138">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.NamedItemCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.NamedItemCollection;'
    return:
      type:
      - excel.Excel.NamedItemCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.NamedItemCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel_release.Excel.NamedItemCollection.load_1
  summary: <span data-ttu-id="ded92-139">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="ded92-139">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="ded92-140">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="ded92-140">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.NamedItemCollection;'
    return:
      type:
      - excel.Excel.NamedItemCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"ded92-141\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"ded92-141\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var nameditems = ctx.workbook.names;\n    nameditems.load('items');\n    return ctx.sync().then(function() {\n        for (var i = 0; i < nameditems.items.length; i++)\n        {\n            console.log(nameditems.items[i].name);\n            console.log(nameditems.items[i].index);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="ded92-142">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="ded92-142">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.NamedItemCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.NamedItemCollection;'
    return:
      type:
      - excel.Excel.NamedItemCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel_release.Excel.NamedItemCollection.toJSON
  summary: <span data-ttu-id="ded92-143">ÜberSchreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API `JSON.stringify()` <!-- -->-Objekt an übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="ded92-143">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="ded92-144">(`JSON.stringify`<!-- -->ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche `Excel.NamedItemCollection` Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt ( `Excel.Interfaces.NamedItemCollectionData` <!-- -->typisiert als) zurück, das ein "Items"-Array mit flachen Kopien aller geladenen Eigenschaften aus den Elementen der Auflistung enthält.</span><span class="sxs-lookup"><span data-stu-id="ded92-144">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.NamedItemCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.NamedItemCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.NamedItemCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.NamedItemCollectionData
      description: ''
