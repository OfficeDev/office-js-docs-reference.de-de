### YamlMime:UniversalReference
ms.openlocfilehash: 444b0ae7e43f55652f5557bd47e42b8567545dd7
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/20/2019
ms.locfileid: "30110298"
items:
- uid: excel_release.Excel.DataValidation
  summary: >-
    <span data-ttu-id="1834a-101">Stellt die Datenüberprüfung dar, die auf den aktuellen Zeitraum angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="1834a-101">Represents the data validation applied to the current range.</span></span>


    <span data-ttu-id="1834a-102">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1834a-102">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.DataValidation
  fullName: Excel.DataValidation
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.DataValidation.clear
  - excel_release.Excel.DataValidation.context
  - excel_release.Excel.DataValidation.errorAlert
  - excel_release.Excel.DataValidation.ignoreBlanks
  - excel_release.Excel.DataValidation.load
  - excel_release.Excel.DataValidation.load_1
  - excel_release.Excel.DataValidation.load_2
  - excel_release.Excel.DataValidation.prompt
  - excel_release.Excel.DataValidation.rule
  - excel_release.Excel.DataValidation.set
  - excel_release.Excel.DataValidation.set_1
  - excel_release.Excel.DataValidation.toJSON
  - excel_release.Excel.DataValidation.type
  - excel_release.Excel.DataValidation.valid
- uid: excel_release.Excel.DataValidation.clear
  summary: >-
    <span data-ttu-id="1834a-103">Löscht die Datenüberprüfung aus dem aktuellen Bereich.</span><span class="sxs-lookup"><span data-stu-id="1834a-103">Clears the data validation from the current range.</span></span>


    <span data-ttu-id="1834a-104">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1834a-104">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: clear()
  fullName: clear()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel_release.Excel.DataValidation.context
  summary: <span data-ttu-id="1834a-105">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="1834a-105">The request context associated with the object.</span></span> <span data-ttu-id="1834a-106">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="1834a-106">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.DataValidation.errorAlert
  summary: >-
    <span data-ttu-id="1834a-107">Fehlermeldung, wenn Benutzer ungültige Daten eingibt.</span><span class="sxs-lookup"><span data-stu-id="1834a-107">Error alert when user enters invalid data.</span></span>


    <span data-ttu-id="1834a-108">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1834a-108">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: errorAlert
  fullName: errorAlert
  langs:
  - typeScript
  type: property
  syntax:
    content: 'errorAlert: Excel.DataValidationErrorAlert;'
    return:
      type:
      - excel.Excel.DataValidationErrorAlert
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1834a-109\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"1834a-109\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Decision\");\n    const commentsRange = \n        sheet.tables.getItem(\"NameOptionsTable\").columns.getItem(\"Comments\").getDataBodyRange();\n\n    // When you are developing, it is a good practice to\n    // clear the dataValidation object with each run of your code.\n    commentsRange.dataValidation.clear();   \n\n    // If the value of A2 is contained in the value of C2, then \n    // SEARCH(A2,C2) returns the number where it begins. Otherwise,\n    // it does not return a number.\n    let redundantStringRule = {\n        custom: {\n            formula: \"=NOT(ISNUMBER(SEARCH(A2,C2)))\"\n        }\n    };\n    commentsRange.dataValidation.rule = redundantStringRule;\n    commentsRange.dataValidation.errorAlert = {\n        message: \"It is redundant to include the baby name in the comment.\",\n        showAlert: true,\n        style: \"Information\",\n        title: \"Baby Name in Comment\"\n    };\n\n    await context.sync();\n});\n```"
- uid: excel_release.Excel.DataValidation.ignoreBlanks
  summary: >-
    <span data-ttu-id="1834a-110">Leere Zellen ignorieren: Es wird keine Datenüberprüfung für leere Zellen durchgeführt. Die Eigenschaft ist standardmäßig auf „true“ festgelegt.</span><span class="sxs-lookup"><span data-stu-id="1834a-110">Ignore blanks: no data validation will be performed on blank cells, it defaults to true.</span></span>


    <span data-ttu-id="1834a-111">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1834a-111">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: ignoreBlanks
  fullName: ignoreBlanks
  langs:
  - typeScript
  type: property
  syntax:
    content: 'ignoreBlanks: boolean;'
    return:
      type:
      - boolean
- uid: excel_release.Excel.DataValidation.load
  summary: <span data-ttu-id="1834a-112">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="1834a-112">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1834a-113">Sie müssen "context. Sync ()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="1834a-113">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="1834a-114">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="1834a-114">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="1834a-115">`load(option?: string | string[]): Excel.DataValidation`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="1834a-115">`load(option?: string | string[]): Excel.DataValidation` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="1834a-116">`load(option?: { select?: string; expand?: string; }): Excel.DataValidation`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="1834a-116">`load(option?: { select?: string; expand?: string; }): Excel.DataValidation` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="1834a-117">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.DataValidation`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="1834a-117">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.DataValidation` - Only available on collection types.</span></span> <span data-ttu-id="1834a-118">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="1834a-118">It is similar to the preceding signature.</span></span> <span data-ttu-id="1834a-119">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="1834a-119">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="1834a-120">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="1834a-120">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="1834a-121">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="1834a-121">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.DataValidationLoadOptions): Excel.DataValidation;'
    return:
      type:
      - excel.Excel.DataValidation
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.DataValidationLoadOptions
- uid: excel_release.Excel.DataValidation.load_1
  summary: <span data-ttu-id="1834a-122">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="1834a-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1834a-123">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="1834a-123">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.DataValidation;'
    return:
      type:
      - excel.Excel.DataValidation
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="1834a-124">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="1834a-124">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.DataValidation.load_2
  summary: <span data-ttu-id="1834a-125">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="1834a-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1834a-126">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="1834a-126">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.DataValidation;'
    return:
      type:
      - excel.Excel.DataValidation
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="1834a-127">Wobei propertyNamesAndPaths. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="1834a-127">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.DataValidation.prompt
  summary: >-
    <span data-ttu-id="1834a-128">AufFordern, wenn Benutzer eine Zelle auswählen.</span><span class="sxs-lookup"><span data-stu-id="1834a-128">Prompt when users select a cell.</span></span>


    <span data-ttu-id="1834a-129">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1834a-129">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: prompt
  fullName: prompt
  langs:
  - typeScript
  type: property
  syntax:
    content: 'prompt: Excel.DataValidationPrompt;'
    return:
      type:
      - excel.Excel.DataValidationPrompt
- uid: excel_release.Excel.DataValidation.rule
  summary: >-
    <span data-ttu-id="1834a-130">Daten Überprüfungsregel, die unterschiedliche Arten von Daten Überprüfungskriterien enthält.</span><span class="sxs-lookup"><span data-stu-id="1834a-130">Data validation rule that contains different type of data validation criteria.</span></span>


    <span data-ttu-id="1834a-131">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1834a-131">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: rule
  fullName: rule
  langs:
  - typeScript
  type: property
  syntax:
    content: 'rule: Excel.DataValidationRule;'
    return:
      type:
      - excel.Excel.DataValidationRule
- uid: excel_release.Excel.DataValidation.set
  summary: <span data-ttu-id="1834a-132">Legt mehrere Eigenschaften eines Objekts gleichzeitig fest.</span><span class="sxs-lookup"><span data-stu-id="1834a-132">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="1834a-133">Sie können entweder ein plain-Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs weitergeben.</span><span class="sxs-lookup"><span data-stu-id="1834a-133">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="1834a-134">Diese Methode hat die folgende zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="1834a-134">This method has the following additional signature:</span></span>


    `set(properties: Excel.DataValidation): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.DataValidationUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="1834a-135">Ein JavaScript-Objekt mit Eigenschaften, die isomorphically strukturiert sind, um die Eigenschaften des Objekts, für das die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="1834a-135">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.DataValidationUpdateData
    - id: options
      description: <span data-ttu-id="1834a-136">Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.</span><span class="sxs-lookup"><span data-stu-id="1834a-136">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel_release.Excel.DataValidation.set_1
  summary: <span data-ttu-id="1834a-137">Legt mehrere Eigenschaften für das Objekt auf der Grundlage eines vorhandenen geladenen Objekts zur gleichen Zeit fest.</span><span class="sxs-lookup"><span data-stu-id="1834a-137">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.DataValidation): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.DataValidation
- uid: excel_release.Excel.DataValidation.toJSON
  summary: <span data-ttu-id="1834a-138">ÜberSchreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API `JSON.stringify()` <!-- -->-Objekt an übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="1834a-138">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="1834a-139">(`JSON.stringify`<!-- -->ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche Excel. DataValidation-Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt ( `Excel.Interfaces.DataValidationData` <!-- -->typisiert als) zurück, das flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="1834a-139">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.DataValidation object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.DataValidationData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.DataValidationData;'
    return:
      type:
      - excel.Excel.Interfaces.DataValidationData
      description: ''
- uid: excel_release.Excel.DataValidation.type
  summary: >-
    <span data-ttu-id="1834a-140">Informationen zum Typ der Datenüberprüfung finden Sie unter Excel.DataValidationType.</span><span class="sxs-lookup"><span data-stu-id="1834a-140">Type of the data validation, see Excel.DataValidationType for details.</span></span>


    <span data-ttu-id="1834a-141">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1834a-141">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: Excel.DataValidationType | "None" | "WholeNumber" | "Decimal" | "List" | "Date" | "Time" | "TextLength" | "Custom" | "Inconsistent" | "MixedCriteria";'
    return:
      type:
      - Excel.DataValidationType | "None" | "WholeNumber" | "Decimal" | "List" | "Date" | "Time" | "TextLength" | "Custom" | "Inconsistent" | "MixedCriteria"
- uid: excel_release.Excel.DataValidation.valid
  summary: >-
    <span data-ttu-id="1834a-142">Gibt an, ob alle Zellwerte entsprechend den Datenüberprüfungsregeln gültig sind.</span><span class="sxs-lookup"><span data-stu-id="1834a-142">Represents if all cell values are valid according to the data validation rules.</span></span> <span data-ttu-id="1834a-143">Gibt true zurück, wenn alle Zellwerte gültig sind, oder false, wenn alle Zellwerte ungültig sind.</span><span class="sxs-lookup"><span data-stu-id="1834a-143">Returns true if all cell values are valid, or false if all cell values are invalid.</span></span> <span data-ttu-id="1834a-144">Gibt NULL zurück, wenn gültige und ungültige Zellwerte innerhalb des Bereiches vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="1834a-144">Returns null if there are both valid and invalid cell values within the range.</span></span>


    <span data-ttu-id="1834a-145">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1834a-145">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: valid
  fullName: valid
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly valid: boolean;'
    return:
      type:
      - boolean
