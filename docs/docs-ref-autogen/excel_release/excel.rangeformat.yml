### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.RangeFormat
    summary: |-
      Gibt ein Formatobjekt zurück, das die Schriftart des Bereichs, Füllung, Rahmen, die Ausrichtung und andere Eigenschaften verschachtelt.

      \[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.RangeFormat
    fullName: Excel.RangeFormat
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.RangeFormat.autofitColumns
      - excel_release.Excel.RangeFormat.autofitRows
      - excel_release.Excel.RangeFormat.autoIndent
      - excel_release.Excel.RangeFormat.borders
      - excel_release.Excel.RangeFormat.columnWidth
      - excel_release.Excel.RangeFormat.context
      - excel_release.Excel.RangeFormat.fill
      - excel_release.Excel.RangeFormat.font
      - excel_release.Excel.RangeFormat.horizontalAlignment
      - excel_release.Excel.RangeFormat.indentLevel
      - excel_release.Excel.RangeFormat.load
      - excel_release.Excel.RangeFormat.load_1
      - excel_release.Excel.RangeFormat.load_2
      - excel_release.Excel.RangeFormat.protection
      - excel_release.Excel.RangeFormat.readingOrder
      - excel_release.Excel.RangeFormat.rowHeight
      - excel_release.Excel.RangeFormat.set
      - excel_release.Excel.RangeFormat.set_1
      - excel_release.Excel.RangeFormat.shrinkToFit
      - excel_release.Excel.RangeFormat.textOrientation
      - excel_release.Excel.RangeFormat.toJSON
      - excel_release.Excel.RangeFormat.useStandardHeight
      - excel_release.Excel.RangeFormat.useStandardWidth
      - excel_release.Excel.RangeFormat.verticalAlignment
      - excel_release.Excel.RangeFormat.wrapText
  - uid: excel_release.Excel.RangeFormat.autofitColumns
    summary: |-
      Ändert die Breite der Spalten des aktuellen Bereichs, um basierend auf den aktuellen Daten in den Spalten die optimale Breite zu erzielen.

      \[[API-Satz: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: autofitColumns()
    fullName: autofitColumns()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'autofitColumns(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel_release.Excel.RangeFormat.autofitRows
    summary: |-
      Ändert die Höhe der Zeilen des aktuellen Bereichs, um basierend auf den aktuellen Daten in den Zeilen die optimale Höhe zu erzielen.

      \[[API-Satz: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: autofitRows()
    fullName: autofitRows()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'autofitRows(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel_release.Excel.RangeFormat.autoIndent
    summary: |-
      Gibt an, ob der Text automatisch eingezogen wird, wenn die Textausrichtung auf eine gleichmäßige Verteilung festgelegt ist.

      \[[API-Satz: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: autoIndent
    fullName: autoIndent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'autoIndent: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.RangeFormat.borders
    summary: |-
      Auflistung von Border-Objekten, die für den gesamten ausgewählten Bereich gelten. Schreibgeschützt.

      \[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: borders
    fullName: borders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly borders: Excel.RangeBorderCollection;'
      return:
        type:
          - excel.Excel.RangeBorderCollection
  - uid: excel_release.Excel.RangeFormat.columnWidth
    summary: |-
      Ruft die Breite aller Spalten innerhalb des Bereichs ab oder legt diese fest. Wenn die Breite der Spalten nicht gleichmäßig ist, wird Null zurückgegeben.

      \[[API-Satz: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: columnWidth
    fullName: columnWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'columnWidth: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.RangeFormat.context
    summary: Der dem Objekt zugeordnete Anforderungskontext. Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.RangeFormat.fill
    summary: |-
      Gibt das Fill-Objekt an, das für den gesamten Bereich definiert ist. Schreibgeschützt.

      \[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: fill
    fullName: fill
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly fill: Excel.RangeFill;'
      return:
        type:
          - excel.Excel.RangeFill
  - uid: excel_release.Excel.RangeFormat.font
    summary: |-
      Gibt das Font-Objekt an, das für den gesamten Bereich definiert ist. Schreibgeschützt.

      \[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Excel.RangeFont;'
      return:
        type:
          - excel.Excel.RangeFont
  - uid: excel_release.Excel.RangeFormat.horizontalAlignment
    summary: |-
      Stellt die horizontale Ausrichtung für das angegebene Objekt dar. Weitere Informationen finden Sie unter Excel. HorizontalAlignment.

      \[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: horizontalAlignment
    fullName: horizontalAlignment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'horizontalAlignment: Excel.HorizontalAlignment | "General" | "Left" | "Center" | "Right" | "Fill" | "Justify" | "CenterAcrossSelection" | "Distributed";'
      return:
        type:
          - Excel.HorizontalAlignment | "General" | "Left" | "Center" | "Right" | "Fill" | "Justify" | "CenterAcrossSelection" | "Distributed"
  - uid: excel_release.Excel.RangeFormat.indentLevel
    summary: |-
      Eine ganze Zahl zwischen 0 und 250, die die Einzugsebene angibt.

      \[[API-Satz: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: indentLevel
    fullName: indentLevel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'indentLevel: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.RangeFormat.load
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.
    remarks: |-
      Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:

      `load(option?: string | string[]): Excel.RangeFormat`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.

      `load(option?: { select?: string; expand?: string; }): Excel.RangeFormat`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeFormat`-Nur verfügbar für Sammlungstypen. Sie ähnelt der vorherigen Signatur. Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können. Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind. Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.RangeFormatLoadOptions): Excel.RangeFormat;'
      return:
        type:
          - excel.Excel.RangeFormat
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.RangeFormatLoadOptions
  - uid: excel_release.Excel.RangeFormat.load_1
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.RangeFormat;'
      return:
        type:
          - excel.Excel.RangeFormat
        description: |-


          #### <a name="examples"></a>Beispiele

          ```javascript
          // Below example selects all of the Range's format properties. 
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "F:G";
              var worksheet = ctx.workbook.worksheets.getItem(sheetName);
              var range = worksheet.getRange(rangeAddress);
              range.load(["format/*", "format/fill", "format/borders", "format/font"]);
              return ctx.sync().then(function() {
                  console.log(range.format.wrapText);
                  console.log(range.format.fill.color);
                  console.log(range.format.font.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // The example below sets font name, fill color and wraps text. 
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "F:G";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
              range.format.wrapText = true;
              range.format.font.name = 'Times New Roman';
              range.format.fill.color = '0000FF';
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // The example below adds grid border around the range.
          Excel.run(function (ctx) { 
              var sheetName = "Sheet1";
              var rangeAddress = "F:G";
              var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);
              range.format.borders.getItem('InsideHorizontal').style = 'Continuous';
              range.format.borders.getItem('InsideVertical').style = 'Continuous';
              range.format.borders.getItem('EdgeBottom').style = 'Continuous';
              range.format.borders.getItem('EdgeLeft').style = 'Continuous';
              range.format.borders.getItem('EdgeRight').style = 'Continuous';
              range.format.borders.getItem('EdgeTop').style = 'Continuous';
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: 'Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.'
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.RangeFormat.load_2
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.RangeFormat;'
      return:
        type:
          - excel.Excel.RangeFormat
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: 'Wobei propertyNamesAndPaths. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Navigationseigenschaften angibt.'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel_release.Excel.RangeFormat.protection
    summary: |-
      Gibt das Formatschutz-Objekt für einen Bereich zurück. Schreibgeschützt.

      \[[API-Satz: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: protection
    fullName: protection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly protection: Excel.FormatProtection;'
      return:
        type:
          - excel.Excel.FormatProtection
  - uid: excel_release.Excel.RangeFormat.readingOrder
    summary: |-
      Die Leserichtung für den Bereich.

      \[[API-Satz: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: readingOrder
    fullName: readingOrder
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readingOrder: Excel.ReadingOrder | "Context" | "LeftToRight" | "RightToLeft";'
      return:
        type:
          - Excel.ReadingOrder | "Context" | "LeftToRight" | "RightToLeft"
  - uid: excel_release.Excel.RangeFormat.rowHeight
    summary: |-
      Ruft die Höhe aller Zeilen des Bereichs ab oder legt diese fest. Wenn die Zeilenhöhen nicht einheitlich sind, wird NULL zurückgegeben.

      \[[API-Satz: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: rowHeight
    fullName: rowHeight
    langs:
      - typeScript
    type: property
    syntax:
      content: 'rowHeight: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.RangeFormat.set
    summary: Legt mehrere Eigenschaften eines Objekts gleichzeitig fest. Sie können entweder ein plain-Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs weitergeben.
    remarks: |-
      Diese Methode hat die folgende zusätzliche Signatur:

      `set(properties: Excel.RangeFormat): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.RangeFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: 'Ein JavaScript-Objekt mit Eigenschaften, die isomorphically strukturiert sind, um die Eigenschaften des Objekts, für das die Methode aufgerufen wird.'
          type:
            - Interfaces.RangeFormatUpdateData
        - id: options
          description: 'Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.'
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel_release.Excel.RangeFormat.set_1
    summary: Legt mehrere Eigenschaften für das Objekt auf der Grundlage eines vorhandenen geladenen Objekts zur gleichen Zeit fest.
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.RangeFormat): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.RangeFormat
  - uid: excel_release.Excel.RangeFormat.shrinkToFit
    summary: |-
      Zeigt an, dass Text automatisch verkleinert wird, um in die verfügbare Spaltenbreite zu passen.

      \[[API-Satz: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: shrinkToFit
    fullName: shrinkToFit
    langs:
      - typeScript
    type: property
    syntax:
      content: 'shrinkToFit: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.RangeFormat.textOrientation
    summary: |-
      Ruft die Ausrichtung von Text für alle Zellen innerhalb des Bereichs an oder legt diese fest. Die Textausrichtung sollte eine ganze Zahl von-90 bis 90 oder 180 für vertikal orientierten Text sein. Wenn die Ausrichtung innerhalb eines Bereiches nicht einheitlich ist, wird NULL zurückgegeben.

      \[[API-Satz: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: textOrientation
    fullName: textOrientation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'textOrientation: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a>Beispiele

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B2:E2");

              // Set textOrientation to either an integer between -90 and 90
              // or to 180 for vertically-oriented text.
              range.format.textOrientation = 90;

              await context.sync();
          });
          ```
  - uid: excel_release.Excel.RangeFormat.toJSON
    summary: 'Überschreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API-Objekt an`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->Ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche Excel. RangeFormat-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt zurück (typisiert als`Excel.Interfaces.RangeFormatData`<!-- -->), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.RangeFormatData;'
      return:
        type:
          - excel.Excel.Interfaces.RangeFormatData
        description: ''
  - uid: excel_release.Excel.RangeFormat.useStandardHeight
    summary: |-
      Legt fest, ob die Zeilenhöhe des Bereichsobjekts mit der Standardhöhe des Blatts übereinstimmt. Gibt true zurück, wenn die Zeilenhöhe des Range-Objekts der Standardhöhe des Blatts entspricht. Gibt NULL zurück, wenn der Range-Wert mehr als eine Zeile enthält und die Zeilen nicht alle dieselbe Höhe aufweisen. Andernfalls wird false zurückgegeben.

      \[[API-Satz: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: useStandardHeight
    fullName: useStandardHeight
    langs:
      - typeScript
    type: property
    syntax:
      content: 'useStandardHeight: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.RangeFormat.useStandardWidth
    summary: |-
      Gibt an, ob die Spaltenbreite des Range-Objekts der Standardbreite des Blatts entspricht. Gibt true zurück, wenn die Spaltenbreite des Range-Objekts der Standardbreite des Blatts entspricht. Gibt NULL zurück, wenn der Range-Wert mehr als eine Spalte enthält und die Spalten nicht alle dieselbe Höhe aufweisen. Andernfalls wird false zurückgegeben.

      \[[API-Satz: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: useStandardWidth
    fullName: useStandardWidth
    langs:
      - typeScript
    type: property
    syntax:
      content: 'useStandardWidth: boolean;'
      return:
        type:
          - boolean
  - uid: excel_release.Excel.RangeFormat.verticalAlignment
    summary: |-
      Stellt die vertikale Ausrichtung für das angegebene Objekt dar. Weitere Informationen finden Sie unter Excel. VerticalAlignment.

      \[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: verticalAlignment
    fullName: verticalAlignment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'verticalAlignment: Excel.VerticalAlignment | "Top" | "Center" | "Bottom" | "Justify" | "Distributed";'
      return:
        type:
          - Excel.VerticalAlignment | "Top" | "Center" | "Bottom" | "Justify" | "Distributed"
  - uid: excel_release.Excel.RangeFormat.wrapText
    summary: |-
      Gibt an, ob Excel den Text im Objekt umbricht. Ein Nullwert gibt an, dass der gesamte Bereich keine einheitliche Textumbruch-Einstellung hat

      \[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: wrapText
    fullName: wrapText
    langs:
      - typeScript
    type: property
    syntax:
      content: 'wrapText: boolean;'
      return:
        type:
          - boolean