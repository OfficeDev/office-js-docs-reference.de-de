### YamlMime:UniversalReference
ms.openlocfilehash: 305ae1cf89ec36fb2facf30722812b7e6783aea7
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/20/2019
ms.locfileid: "30112825"
items:
- uid: excel_release.Excel.Application
  summary: >-
    <span data-ttu-id="0e804-101">Stellt die Excel-Anwendung dar, die die Arbeitsmappe verwaltet.</span><span class="sxs-lookup"><span data-stu-id="0e804-101">Represents the Excel application that manages the workbook.</span></span>


    <span data-ttu-id="0e804-102">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0e804-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.Application
  fullName: Excel.Application
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.Application.calculate
  - excel_release.Excel.Application.calculate_1
  - excel_release.Excel.Application.calculationMode
  - excel_release.Excel.Application.context
  - excel_release.Excel.Application.load
  - excel_release.Excel.Application.load_1
  - excel_release.Excel.Application.load_2
  - excel_release.Excel.Application.set
  - excel_release.Excel.Application.set_1
  - excel_release.Excel.Application.suspendApiCalculationUntilNextSync
  - excel_release.Excel.Application.toJSON
- uid: excel_release.Excel.Application.calculate
  summary: >-
    <span data-ttu-id="0e804-103">Alle in Excel geöffnete Arbeitsmappen werden neu berechnet.</span><span class="sxs-lookup"><span data-stu-id="0e804-103">Recalculate all currently opened workbooks in Excel.</span></span>


    <span data-ttu-id="0e804-104">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0e804-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: calculate(calculationType)
  fullName: calculate(calculationType)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'calculate(calculationType: Excel.CalculationType): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: calculationType
      description: <span data-ttu-id="0e804-105">Gibt den zu verwendenden Berechnungstyp an.</span><span class="sxs-lookup"><span data-stu-id="0e804-105">Specifies the calculation type to use.</span></span> <span data-ttu-id="0e804-106">Weitere Informationen finden Sie unter Excel. CalculationType.</span><span class="sxs-lookup"><span data-stu-id="0e804-106">See Excel.CalculationType for details.</span></span>
      type:
      - excel.Excel.CalculationType
- uid: excel_release.Excel.Application.calculate_1
  summary: >-
    <span data-ttu-id="0e804-107">Alle in Excel geöffnete Arbeitsmappen werden neu berechnet.</span><span class="sxs-lookup"><span data-stu-id="0e804-107">Recalculate all currently opened workbooks in Excel.</span></span>


    <span data-ttu-id="0e804-108">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0e804-108">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: calculate(calculationTypeString)
  fullName: calculate(calculationTypeString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'calculate(calculationTypeString: "Recalculate" | "Full" | "FullRebuild"): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"0e804-109\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"0e804-109\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) {\n    ctx.workbook.application.calculate('Full');\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: calculationTypeString
      description: <span data-ttu-id="0e804-110">Gibt den zu verwendenden Berechnungstyp an.</span><span class="sxs-lookup"><span data-stu-id="0e804-110">Specifies the calculation type to use.</span></span> <span data-ttu-id="0e804-111">Weitere Informationen finden Sie unter Excel. CalculationType.</span><span class="sxs-lookup"><span data-stu-id="0e804-111">See Excel.CalculationType for details.</span></span>
      type:
      - "\"Recalculate\" | \"Full\" | \"FullRebuild\""
- uid: excel_release.Excel.Application.calculationMode
  summary: >-
    <span data-ttu-id="0e804-112">Gibt den Berechnungsmodus zurück, der in der Arbeitsmappe verwendet wird, wie durch die Konstanten in Excel. CalculationMode definiert.</span><span class="sxs-lookup"><span data-stu-id="0e804-112">Returns the calculation mode used in the workbook, as defined by the constants in Excel.CalculationMode.</span></span> <span data-ttu-id="0e804-113">Mögliche Werte sind: `Automatic` <!-- -->, wobei Excel die Neuberechnung steuert; `AutomaticExceptTables`, wobei Excel die Neuberechnung steuert, aber Änderungen in Tabellen <!-- -->ignoriert; `Manual`, wobei die Berechnung erfolgt, wenn der Benutzer sie anfordert <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="0e804-113">Possible values are: `Automatic`<!-- -->, where Excel controls recalculation; `AutomaticExceptTables`<!-- -->, where Excel controls recalculation but ignores changes in tables; `Manual`<!-- -->, where calculation is done when the user requests it.</span></span>


    <span data-ttu-id="0e804-114">\[[API-Satz: ExcelApi 1,1 für Get, 1,8 für Set](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0e804-114">\[ [API set: ExcelApi 1.1 for get, 1.8 for set](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: calculationMode
  fullName: calculationMode
  langs:
  - typeScript
  type: property
  syntax:
    content: 'calculationMode: Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual";'
    return:
      type:
      - Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual"
- uid: excel_release.Excel.Application.context
  summary: <span data-ttu-id="0e804-115">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="0e804-115">The request context associated with the object.</span></span> <span data-ttu-id="0e804-116">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="0e804-116">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.Application.load
  summary: <span data-ttu-id="0e804-117">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="0e804-117">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0e804-118">Sie müssen "context. Sync ()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="0e804-118">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="0e804-119">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="0e804-119">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="0e804-120">`load(option?: string | string[]): Excel.Application`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="0e804-120">`load(option?: string | string[]): Excel.Application` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="0e804-121">`load(option?: { select?: string; expand?: string; }): Excel.Application`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="0e804-121">`load(option?: { select?: string; expand?: string; }): Excel.Application` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="0e804-122">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Application`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="0e804-122">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Application` - Only available on collection types.</span></span> <span data-ttu-id="0e804-123">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="0e804-123">It is similar to the preceding signature.</span></span> <span data-ttu-id="0e804-124">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="0e804-124">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="0e804-125">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="0e804-125">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="0e804-126">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="0e804-126">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ApplicationLoadOptions): Excel.Application;'
    return:
      type:
      - excel.Excel.Application
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.ApplicationLoadOptions
- uid: excel_release.Excel.Application.load_1
  summary: <span data-ttu-id="0e804-127">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="0e804-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0e804-128">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="0e804-128">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Application;'
    return:
      type:
      - excel.Excel.Application
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"0e804-129\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"0e804-129\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) {\n    var application = ctx.workbook.application;\n    application.load('calculationMode');\n    return ctx.sync().then(function() {\n        console.log(application.calculationMode);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="0e804-130">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="0e804-130">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.Application.load_2
  summary: <span data-ttu-id="0e804-131">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="0e804-131">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0e804-132">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="0e804-132">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Application;'
    return:
      type:
      - excel.Excel.Application
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="0e804-133">Wobei propertyNamesAndPaths. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="0e804-133">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel_release.Excel.Application.set
  summary: <span data-ttu-id="0e804-134">Legt mehrere Eigenschaften eines Objekts gleichzeitig fest.</span><span class="sxs-lookup"><span data-stu-id="0e804-134">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="0e804-135">Sie können entweder ein plain-Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs weitergeben.</span><span class="sxs-lookup"><span data-stu-id="0e804-135">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="0e804-136">Diese Methode hat die folgende zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="0e804-136">This method has the following additional signature:</span></span>


    `set(properties: Excel.Application): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ApplicationUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="0e804-137">Ein JavaScript-Objekt mit Eigenschaften, die isomorphically strukturiert sind, um die Eigenschaften des Objekts, für das die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="0e804-137">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.ApplicationUpdateData
    - id: options
      description: <span data-ttu-id="0e804-138">Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.</span><span class="sxs-lookup"><span data-stu-id="0e804-138">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel_release.Excel.Application.set_1
  summary: <span data-ttu-id="0e804-139">Legt mehrere Eigenschaften für das Objekt auf der Grundlage eines vorhandenen geladenen Objekts zur gleichen Zeit fest.</span><span class="sxs-lookup"><span data-stu-id="0e804-139">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.Application): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.Application
- uid: excel_release.Excel.Application.suspendApiCalculationUntilNextSync
  summary: >-
    <span data-ttu-id="0e804-p110">Hält die Berechnung an, bis die nächste „context.sync()“ aufgerufen wird. Nachdem dies festgelegt wurde, liegt es in der Verantwortung des Entwicklers, die Arbeitsmappe neu zu berechnen, um sicherzustellen, dass alle Abhängigkeiten verteilt werden.</span><span class="sxs-lookup"><span data-stu-id="0e804-p110">Suspends calculation until the next "context.sync()" is called. Once set, it is the developer's responsibility to re-calc the workbook, to ensure that any dependencies are propagated.</span></span>


    <span data-ttu-id="0e804-142">\[[API-Satz: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0e804-142">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: suspendApiCalculationUntilNextSync()
  fullName: suspendApiCalculationUntilNextSync()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'suspendApiCalculationUntilNextSync(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel_release.Excel.Application.toJSON
  summary: <span data-ttu-id="0e804-143">ÜberSchreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API `JSON.stringify()` <!-- -->-Objekt an übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="0e804-143">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="0e804-144">(`JSON.stringify`<!-- -->ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche Excel. Application-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt `Excel.Interfaces.ApplicationData` <!-- -->(typisiert als) zurück, das flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="0e804-144">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Application object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ApplicationData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ApplicationData;'
    return:
      type:
      - excel.Excel.Interfaces.ApplicationData
      description: ''
