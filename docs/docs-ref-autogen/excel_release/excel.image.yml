### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.Image
    summary: |-
      <span data-ttu-id="689f2-101">Stellt ein Bild im Arbeitsblatt dar.</span><span class="sxs-lookup"><span data-stu-id="689f2-101">Represents an image in the worksheet.</span></span> <span data-ttu-id="689f2-102">Verwenden Sie Image. Shape, um das entsprechende Shape-Objekt abzurufen.</span><span class="sxs-lookup"><span data-stu-id="689f2-102">To get the corresponding Shape object, use Image.shape.</span></span>

      <span data-ttu-id="689f2-103">\[[API-Satz: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="689f2-103">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Image
    fullName: Excel.Image
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.Image.context
      - excel_release.Excel.Image.format
      - excel_release.Excel.Image.id
      - excel_release.Excel.Image.load
      - excel_release.Excel.Image.load_1
      - excel_release.Excel.Image.load_2
      - excel_release.Excel.Image.shape
      - excel_release.Excel.Image.toJSON
  - uid: excel_release.Excel.Image.context
    summary: <span data-ttu-id="689f2-104">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="689f2-104">The request context associated with the object.</span></span> <span data-ttu-id="689f2-105">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="689f2-105">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.Image.format
    summary: |-
      <span data-ttu-id="689f2-106">Gibt das Format des Bilds zurück.</span><span class="sxs-lookup"><span data-stu-id="689f2-106">Returns the format of the image.</span></span> <span data-ttu-id="689f2-107">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="689f2-107">Read-only.</span></span>

      <span data-ttu-id="689f2-108">\[[API-Satz: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="689f2-108">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.PictureFormat | "UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG";'
      return:
        type:
          - Excel.PictureFormat | "UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG"
        description: |-


          #### <a name="examples"></a><span data-ttu-id="689f2-109">Beispiele</span><span class="sxs-lookup"><span data-stu-id="689f2-109">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const image = sheet.shapes.getItem("Image").image;
              image.load("format");
              await context.sync();

              console.log("The image's format is: " + image.format);
              await context.sync();
          });
          ```
  - uid: excel_release.Excel.Image.id
    summary: |-
      <span data-ttu-id="689f2-110">Stellt die Form-ID für das Bildobjekt dar.</span><span class="sxs-lookup"><span data-stu-id="689f2-110">Represents the shape identifier for the image object.</span></span> <span data-ttu-id="689f2-111">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="689f2-111">Read-only.</span></span>

      <span data-ttu-id="689f2-112">\[[API-Satz: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="689f2-112">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel_release.Excel.Image.load
    summary: <span data-ttu-id="689f2-113">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="689f2-113">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="689f2-114">Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.</span><span class="sxs-lookup"><span data-stu-id="689f2-114">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="689f2-115">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="689f2-115">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="689f2-116">`load(option?: string | string[]): Excel.Image`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="689f2-116">`load(option?: string | string[]): Excel.Image` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="689f2-117">`load(option?: { select?: string; expand?: string; }): Excel.Image`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="689f2-117">`load(option?: { select?: string; expand?: string; }): Excel.Image` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="689f2-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Image`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="689f2-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Image` - Only available on collection types.</span></span> <span data-ttu-id="689f2-119">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="689f2-119">It is similar to the preceding signature.</span></span> <span data-ttu-id="689f2-120">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="689f2-120">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="689f2-121">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="689f2-121">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="689f2-122">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="689f2-122">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ImageLoadOptions): Excel.Image;'
      return:
        type:
          - excel.Excel.Image
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.ImageLoadOptions
  - uid: excel_release.Excel.Image.load_1
    summary: <span data-ttu-id="689f2-123">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="689f2-123">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="689f2-124">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="689f2-124">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Image;'
      return:
        type:
          - excel.Excel.Image
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="689f2-125">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="689f2-125">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.Image.load_2
    summary: <span data-ttu-id="689f2-126">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="689f2-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="689f2-127">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="689f2-127">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Image;'
      return:
        type:
          - excel.Excel.Image
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="689f2-128">Wobei propertyNamesAndPaths. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="689f2-128">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel_release.Excel.Image.shape
    summary: |-
      <span data-ttu-id="689f2-129">Gibt das Formobjekt zurück, das dem Bild zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="689f2-129">Returns the Shape object associated with the image.</span></span> <span data-ttu-id="689f2-130">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="689f2-130">Read-only.</span></span>

      <span data-ttu-id="689f2-131">\[[API-Satz: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="689f2-131">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: shape
    fullName: shape
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly shape: Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
  - uid: excel_release.Excel.Image.toJSON
    summary: '<span data-ttu-id="689f2-132">Überschreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API-Objekt an`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="689f2-132">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="689f2-133">.</span><span class="sxs-lookup"><span data-stu-id="689f2-133"></span></span> <span data-ttu-id="689f2-134">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="689f2-134"></span></span><!-- --><span data-ttu-id="689f2-135">Ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche Excel. Image-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt zurück (typisiert als`Excel.Interfaces.ImageData`</span><span class="sxs-lookup"><span data-stu-id="689f2-135">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Image object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ImageData`</span></span><!-- --><span data-ttu-id="689f2-136">), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="689f2-136">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ImageData;'
      return:
        type:
          - excel.Excel.Interfaces.ImageData
        description: ''