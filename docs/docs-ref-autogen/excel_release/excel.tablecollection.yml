### YamlMime:UniversalReference
items:
  - uid: excel_release.Excel.TableCollection
    summary: |-
      <span data-ttu-id="718a3-101">Stellt eine Auflistung aller Tabellen dar, die Teil der Arbeitsmappe oder des Arbeitsblatts in Abhängigkeit davon dar, wie diese abgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="718a3-101">Represents a collection of all the tables that are part of the workbook or worksheet, depending on how it was reached.</span></span>

      <span data-ttu-id="718a3-102">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="718a3-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.TableCollection
    fullName: Excel.TableCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel_release
    children:
      - excel_release.Excel.TableCollection.add
      - excel_release.Excel.TableCollection.context
      - excel_release.Excel.TableCollection.count
      - excel_release.Excel.TableCollection.getCount
      - excel_release.Excel.TableCollection.getItem
      - excel_release.Excel.TableCollection.getItemAt
      - excel_release.Excel.TableCollection.getItemOrNullObject
      - excel_release.Excel.TableCollection.items
      - excel_release.Excel.TableCollection.load
      - excel_release.Excel.TableCollection.load_1
      - excel_release.Excel.TableCollection.load_2
      - excel_release.Excel.TableCollection.onChanged
      - excel_release.Excel.TableCollection.toJSON
  - uid: excel_release.Excel.TableCollection.add
    summary: "<span data-ttu-id=\"718a3-p101\">Erstellt eine neue Tabelle. Das Bereichsobjekt oder die Quelladresse bestimmt das Arbeitsblatt, unter dem die Tabelle hinzugefügt wird. Wenn die Tabelle nicht hinzugefügt werden kann (z.\_B. weil die Adresse ungültig ist oder sich die Tabelle mit einer anderen Tabelle überlappen würde), wird ein Fehler ausgelöst.</span><span class=\"sxs-lookup\"><span data-stu-id=\"718a3-p101\">Create a new table. The range object or source address determines the worksheet under which the table will be added. If the table cannot be added (e.g., because the address is invalid, or the table would overlap with another table), an error will be thrown.</span></span>\n\n<span data-ttu-id=\"718a3-106\">\\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\\]</span><span class=\"sxs-lookup\"><span data-stu-id=\"718a3-106\">\\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \\]</span></span>"
    name: 'add(address, hasHeaders)'
    fullName: 'add(address, hasHeaders)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(address: Range | string, hasHeaders: boolean): Excel.Table;'
      return:
        type:
          - excel.Excel.Table
        description: |-


          #### <a name="examples"></a><span data-ttu-id="718a3-107">Beispiele</span><span class="sxs-lookup"><span data-stu-id="718a3-107">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var table = ctx.workbook.tables.add('Sheet1!A1:E7', true);
              table.load('name');
              return ctx.sync().then(function() {
                  console.log(table.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: address
          description: '<span data-ttu-id="718a3-108">Ein Range-Objekt oder eine Zeichenfolgenadresse oder der Name des Bereichs, der die Datenquelle darstellt.</span><span class="sxs-lookup"><span data-stu-id="718a3-108">A Range object, or a string address or name of the range representing the data source.</span></span> <span data-ttu-id="718a3-109">Wenn die Adresse keinen Arbeitsblattnamen enthält, wird das aktuell aktive Blatt verwendet.</span><span class="sxs-lookup"><span data-stu-id="718a3-109">If the address does not contain a sheet name, the currently-active sheet is used.</span></span> <span data-ttu-id="718a3-110">\[API-Satz: ExcelApi 1,1/1,3.</span><span class="sxs-lookup"><span data-stu-id="718a3-110">\[Api set: ExcelApi 1.1 / 1.3.</span></span> <span data-ttu-id="718a3-111">Vor ExcelApi 1,3 muss dieser Parameter eine Zeichenfolge sein.</span><span class="sxs-lookup"><span data-stu-id="718a3-111">Prior to ExcelApi 1.3, this parameter must be a string.</span></span> <span data-ttu-id="718a3-112">Beginnend mit der Excel-API 1,3 kann dieser Parameter ein Range-Objekt oder eine Zeichenfolge sein.\]</span><span class="sxs-lookup"><span data-stu-id="718a3-112">Starting with Excel Api 1.3, this parameter may be a Range object or a string.\]</span></span>'
          type:
            - Range | string
        - id: hasHeaders
          description: '<span data-ttu-id="718a3-p103">Boolescher Wert, der angibt, ob die importierten Daten Spaltenüberschriften besitzen. Wenn die Quelle keine Überschriften enthält (d. h. wenn diese Eigenschaft auf falsch festgelegt ist), generiert Excel automatisch eine Überschriftenänderung der Daten nach einer Zeile.</span><span class="sxs-lookup"><span data-stu-id="718a3-p103">Boolean value that indicates whether the data being imported has column labels. If the source does not contain headers (i.e,. when this property set to false), Excel will automatically generate header shifting the data down by one row.</span></span>'
          type:
            - boolean
  - uid: excel_release.Excel.TableCollection.context
    summary: <span data-ttu-id="718a3-116">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="718a3-116">The request context associated with the object.</span></span> <span data-ttu-id="718a3-117">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="718a3-117">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel_release.Excel.TableCollection.count
    summary: |-
      <span data-ttu-id="718a3-118">Gibt die Anzahl der Tabellen in der Arbeitsmappe zurück.</span><span class="sxs-lookup"><span data-stu-id="718a3-118">Returns the number of tables in the workbook.</span></span> <span data-ttu-id="718a3-119">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="718a3-119">Read-only.</span></span>

      <span data-ttu-id="718a3-120">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="718a3-120">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: excel_release.Excel.TableCollection.getCount
    summary: |-
      <span data-ttu-id="718a3-121">Ruft die Anzahl von Tabellen in der Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="718a3-121">Gets the number of tables in the collection.</span></span>

      <span data-ttu-id="718a3-122">\[[API-Satz: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="718a3-122">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel_release.Excel.TableCollection.getItem
    summary: |-
      <span data-ttu-id="718a3-123">Ruft eine Tabelle anhand des Namens oder der ID ab.</span><span class="sxs-lookup"><span data-stu-id="718a3-123">Gets a table by Name or ID.</span></span>

      <span data-ttu-id="718a3-124">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="718a3-124">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Table;'
      return:
        type:
          - excel.Excel.Table
        description: |-


          #### <a name="examples"></a><span data-ttu-id="718a3-125">Beispiele</span><span class="sxs-lookup"><span data-stu-id="718a3-125">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.load('name');
              return ctx.sync().then(function() {
                      console.log(table.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: key
          description: <span data-ttu-id="718a3-126">Name oder ID der abzurufenden Tabelle.</span><span class="sxs-lookup"><span data-stu-id="718a3-126">Name or ID of the table to be retrieved.</span></span>
          type:
            - string
  - uid: excel_release.Excel.TableCollection.getItemAt
    summary: |-
      <span data-ttu-id="718a3-127">Ruft eine Tabelle anhand ihrer Position in der Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="718a3-127">Gets a table based on its position in the collection.</span></span>

      <span data-ttu-id="718a3-128">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="718a3-128">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Table;'
      return:
        type:
          - excel.Excel.Table
        description: |-


          #### <a name="examples"></a><span data-ttu-id="718a3-129">Beispiele</span><span class="sxs-lookup"><span data-stu-id="718a3-129">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var table = ctx.workbook.tables.getItemAt(0);
              table.load('name');
              return ctx.sync().then(function() {
                      console.log(table.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="718a3-130">Index-Wert des abzurufenden Objekts.</span><span class="sxs-lookup"><span data-stu-id="718a3-130">Index value of the object to be retrieved.</span></span> <span data-ttu-id="718a3-131">Nullindiziert.</span><span class="sxs-lookup"><span data-stu-id="718a3-131">Zero-indexed.</span></span>
          type:
            - number
  - uid: excel_release.Excel.TableCollection.getItemOrNullObject
    summary: |-
      <span data-ttu-id="718a3-132">Ruft eine Tabelle anhand des Namens oder der ID ab.</span><span class="sxs-lookup"><span data-stu-id="718a3-132">Gets a table by Name or ID.</span></span> <span data-ttu-id="718a3-133">Wenn die Tabelle nicht vorhanden ist, wird ein NULL-Objekt zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="718a3-133">If the table does not exist, will return a null object.</span></span>

      <span data-ttu-id="718a3-134">\[[API-Satz: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="718a3-134">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemOrNullObject(key)
    fullName: getItemOrNullObject(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: string): Excel.Table;'
      return:
        type:
          - excel.Excel.Table
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="718a3-135">Name oder ID der abzurufenden Tabelle.</span><span class="sxs-lookup"><span data-stu-id="718a3-135">Name or ID of the table to be retrieved.</span></span>
          type:
            - string
  - uid: excel_release.Excel.TableCollection.items
    summary: <span data-ttu-id="718a3-136">Ruft die geladenen untergeordneten Elemente in dieser Sammlung ab.</span><span class="sxs-lookup"><span data-stu-id="718a3-136">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Table[];'
      return:
        type:
          - 'Excel.Table[]'
  - uid: excel_release.Excel.TableCollection.load
    summary: <span data-ttu-id="718a3-137">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="718a3-137">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="718a3-138">Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.</span><span class="sxs-lookup"><span data-stu-id="718a3-138">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="718a3-139">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="718a3-139">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="718a3-140">`load(option?: string | string[]): Excel.TableCollection`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="718a3-140">`load(option?: string | string[]): Excel.TableCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="718a3-141">`load(option?: { select?: string; expand?: string; }): Excel.TableCollection`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="718a3-141">`load(option?: { select?: string; expand?: string; }): Excel.TableCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="718a3-142">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableCollection`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="718a3-142">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableCollection` - Only available on collection types.</span></span> <span data-ttu-id="718a3-143">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="718a3-143">It is similar to the preceding signature.</span></span> <span data-ttu-id="718a3-144">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="718a3-144">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="718a3-145">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="718a3-145">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="718a3-146">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="718a3-146">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.TableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.TableCollection;'
      return:
        type:
          - excel.Excel.TableCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.TableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel_release.Excel.TableCollection.load_1
    summary: <span data-ttu-id="718a3-147">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="718a3-147">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="718a3-148">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="718a3-148">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableCollection;'
      return:
        type:
          - excel.Excel.TableCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="718a3-149">Beispiele</span><span class="sxs-lookup"><span data-stu-id="718a3-149">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tables = ctx.workbook.tables;
              tables.load();
              return ctx.sync().then(function() {
                  console.log("tables Count: " + tables.count);
                  for (var i = 0; i < tables.items.length; i++)
                  {
                      console.log(tables.items[i].name);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get the number of tables
          Excel.run(function (ctx) { 
              var tables = ctx.workbook.tables;
              tables.load('count');
              return ctx.sync().then(function() {
                  console.log(tables.count);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="718a3-150">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="718a3-150">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel_release.Excel.TableCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.TableCollection;'
      return:
        type:
          - excel.Excel.TableCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: excel_release.Excel.TableCollection.onChanged
    summary: |-
      <span data-ttu-id="718a3-151">Tritt auf, wenn Daten in einer Tabelle in einer Arbeitsmappe oder in einem Arbeitsblatt geändert werden.</span><span class="sxs-lookup"><span data-stu-id="718a3-151">Occurs when data changes on any table in a workbook, or a worksheet.</span></span>

      <span data-ttu-id="718a3-152">\[[API-Satz: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="718a3-152">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onChanged
    fullName: onChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onChanged: OfficeExtension.EventHandlers<Excel.TableChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.TableChangedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="718a3-153">Beispiele</span><span class="sxs-lookup"><span data-stu-id="718a3-153">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let tables = context.workbook.tables;
              tables.onChanged.add(onChange);

              await context.sync();
              console.log("A handler has been registered for the table collection onChanged event");
          });
          ```
  - uid: excel_release.Excel.TableCollection.toJSON
    summary: '<span data-ttu-id="718a3-154">ÜberSchreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API-Objekt an`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="718a3-154">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="718a3-155">.</span><span class="sxs-lookup"><span data-stu-id="718a3-155"></span></span> <span data-ttu-id="718a3-156">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="718a3-156"></span></span><!-- --><span data-ttu-id="718a3-157">Ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche `Excel.TableCollection` Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`Excel.Interfaces.TableCollectionData`</span><span class="sxs-lookup"><span data-stu-id="718a3-157">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.TableCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableCollectionData`</span></span><!-- --><span data-ttu-id="718a3-158">), die ein Array "Items" mit flachen Kopien aller geladenen Eigenschaften aus den Elementen der Auflistung enthält.</span><span class="sxs-lookup"><span data-stu-id="718a3-158">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.TableCollectionData
        description: ''