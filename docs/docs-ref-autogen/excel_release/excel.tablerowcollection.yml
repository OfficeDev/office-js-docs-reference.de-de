### YamlMime:UniversalReference
ms.openlocfilehash: 041dc1d0ec672224ed1f69908b0f28083eec0070
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/20/2019
ms.locfileid: "30110431"
items:
- uid: excel_release.Excel.TableRowCollection
  summary: >-
    <span data-ttu-id="b700b-101">Stellt eine Auflistung aller Zeilen dar, die Teil der Tabelle sind.</span><span class="sxs-lookup"><span data-stu-id="b700b-101">Represents a collection of all the rows that are part of the table.</span></span>


    <span data-ttu-id="b700b-102">Beachten Sie, dass im Gegensatz zu Bereichen oder Spalten, die angepasst werden, wenn neue Zeilen/Spalten hinzugefügt werden, ein TableRow-Objekt den physikalischen Speicherort der Tabellenzeile, nicht jedoch die Daten darstellt.</span><span class="sxs-lookup"><span data-stu-id="b700b-102">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="b700b-103">Das heißt, wenn die Daten sortiert sind oder neue Zeilen hinzugefügt werden, zeigt eine Tabellenzeile weiterhin an dem Index, für den Sie erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="b700b-103">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>


    <span data-ttu-id="b700b-104">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b700b-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.TableRowCollection
  fullName: Excel.TableRowCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel_release
  children:
  - excel_release.Excel.TableRowCollection.add
  - excel_release.Excel.TableRowCollection.context
  - excel_release.Excel.TableRowCollection.count
  - excel_release.Excel.TableRowCollection.getCount
  - excel_release.Excel.TableRowCollection.getItemAt
  - excel_release.Excel.TableRowCollection.items
  - excel_release.Excel.TableRowCollection.load
  - excel_release.Excel.TableRowCollection.load_1
  - excel_release.Excel.TableRowCollection.load_2
  - excel_release.Excel.TableRowCollection.toJSON
- uid: excel_release.Excel.TableRowCollection.add
  summary: >-
    <span data-ttu-id="b700b-p102">Fügt der Tabelle mindestens eine Zeile hinzu. Das Rückgabeobjekt ist die oberste Zeile der neu hinzugefügten Zeilen.</span><span class="sxs-lookup"><span data-stu-id="b700b-p102">Adds one or more rows to the table. The return object will be the top of the newly added row(s).</span></span>


    <span data-ttu-id="b700b-107">Beachten Sie, dass im Gegensatz zu Bereichen oder Spalten, die angepasst werden, wenn neue Zeilen/Spalten hinzugefügt werden, ein TableRow-Objekt den physikalischen Speicherort der Tabellenzeile, nicht jedoch die Daten darstellt.</span><span class="sxs-lookup"><span data-stu-id="b700b-107">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="b700b-108">Das heißt, wenn die Daten sortiert sind oder neue Zeilen hinzugefügt werden, zeigt eine Tabellenzeile weiterhin an dem Index, für den Sie erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="b700b-108">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>


    <span data-ttu-id="b700b-109">\[[API-Satz: ExcelApi 1,1 zum Hinzufügen einer einzelnen Zeile; 1,4 ermöglicht das Hinzufügen mehrerer Zeilen.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span><span class="sxs-lookup"><span data-stu-id="b700b-109">\[ [API set: ExcelApi 1.1 for adding a single row; 1.4 allows adding of multiple rows.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id="b700b-110">\]</span><span class="sxs-lookup"><span data-stu-id="b700b-110"></span></span>
  name: add(index, values)
  fullName: add(index, values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(index?: number, values?: Array<Array<boolean | string | number>> | boolean | string | number): Excel.TableRow;'
    return:
      type:
      - excel.Excel.TableRow
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"b700b-111\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"b700b-111\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tables = ctx.workbook.tables;\n    var values = [[\"Sample\", \"Values\", \"For\", \"New\", \"Row\"]];\n    var row = tables.getItem(\"Table1\").rows.add(null, values);\n    row.load('index');\n    return ctx.sync().then(function() {\n        console.log(row.index);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="b700b-p105">Optional. Gibt die relative Position der neuen Zeile an. Bei NULL oder -1 erfolgt die Erweiterung am Ende. Alle Zeilen unterhalb der eingefügten Zeile werden nach unten verschoben. Nullindiziert.</span><span class="sxs-lookup"><span data-stu-id="b700b-p105">Optional. Specifies the relative position of the new row. If null or -1, the addition happens at the end. Any rows below the inserted row are shifted downwards. Zero-indexed.</span></span>
      type:
      - number
    - id: values
      description: <span data-ttu-id="b700b-p106">Optional. Ein 2-dimensionales Array von unformatierten Werten der Tabellenzeile.</span><span class="sxs-lookup"><span data-stu-id="b700b-p106">Optional. A 2-dimensional array of unformatted values of the table row.</span></span>
      type:
      - Array<Array<boolean | string | number>> | boolean | string | number
- uid: excel_release.Excel.TableRowCollection.context
  summary: <span data-ttu-id="b700b-119">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="b700b-119">The request context associated with the object.</span></span> <span data-ttu-id="b700b-120">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="b700b-120">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel_release.Excel.TableRowCollection.count
  summary: >-
    <span data-ttu-id="b700b-p108">Gibt die Anzahl der Zeilen in der Tabelle zurück. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b700b-p108">Returns the number of rows in the table. Read-only.</span></span>


    <span data-ttu-id="b700b-123">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b700b-123">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: count
  fullName: count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: excel_release.Excel.TableRowCollection.getCount
  summary: >-
    <span data-ttu-id="b700b-124">Ruft die Anzahl der Zeilen in der Tabelle ab.</span><span class="sxs-lookup"><span data-stu-id="b700b-124">Gets the number of rows in the table.</span></span>


    <span data-ttu-id="b700b-125">\[[API-Satz: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b700b-125">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel_release.Excel.TableRowCollection.getItemAt
  summary: >-
    <span data-ttu-id="b700b-126">Ruft eine Zeile anhand ihrer Position in der Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="b700b-126">Gets a row based on its position in the collection.</span></span>


    <span data-ttu-id="b700b-127">Beachten Sie, dass im Gegensatz zu Bereichen oder Spalten, die angepasst werden, wenn neue Zeilen/Spalten hinzugefügt werden, ein TableRow-Objekt den physikalischen Speicherort der Tabellenzeile, nicht jedoch die Daten darstellt.</span><span class="sxs-lookup"><span data-stu-id="b700b-127">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="b700b-128">Das heißt, wenn die Daten sortiert sind oder neue Zeilen hinzugefügt werden, zeigt eine Tabellenzeile weiterhin an dem Index, für den Sie erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="b700b-128">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>


    <span data-ttu-id="b700b-129">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b700b-129">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.TableRow;'
    return:
      type:
      - excel.Excel.TableRow
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"b700b-130\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"b700b-130\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tablerow = ctx.workbook.tables.getItem('Table1').rows.getItemAt(0);\n    tablerow.load('name');\n    return ctx.sync().then(function() {\n            console.log(tablerow.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="b700b-p110">Index-Wert des abzurufenden Objekts. Nullindiziert.</span><span class="sxs-lookup"><span data-stu-id="b700b-p110">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel_release.Excel.TableRowCollection.items
  summary: <span data-ttu-id="b700b-133">Ruft die geladenen untergeordneten Elemente in dieser Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="b700b-133">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.TableRow[];'
    return:
      type:
      - Excel.TableRow[]
- uid: excel_release.Excel.TableRowCollection.load
  summary: <span data-ttu-id="b700b-134">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="b700b-134">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b700b-135">Sie müssen "context. Sync ()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="b700b-135">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="b700b-136">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="b700b-136">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="b700b-137">`load(option?: string | string[]): Excel.TableRowCollection`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="b700b-137">`load(option?: string | string[]): Excel.TableRowCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="b700b-138">`load(option?: { select?: string; expand?: string; }): Excel.TableRowCollection`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="b700b-138">`load(option?: { select?: string; expand?: string; }): Excel.TableRowCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="b700b-139">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableRowCollection`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="b700b-139">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableRowCollection` - Only available on collection types.</span></span> <span data-ttu-id="b700b-140">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="b700b-140">It is similar to the preceding signature.</span></span> <span data-ttu-id="b700b-141">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="b700b-141">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="b700b-142">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="b700b-142">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="b700b-143">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="b700b-143">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.TableRowCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.TableRowCollection;'
    return:
      type:
      - excel.Excel.TableRowCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.TableRowCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel_release.Excel.TableRowCollection.load_1
  summary: <span data-ttu-id="b700b-144">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="b700b-144">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b700b-145">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="b700b-145">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.TableRowCollection;'
    return:
      type:
      - excel.Excel.TableRowCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"b700b-146\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"b700b-146\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tablerows = ctx.workbook.tables.getItem('Table1').rows;\n    tablerows.load('items');\n    return ctx.sync().then(function() {\n        console.log(\"tablerows Count: \" + tablerows.count);\n        for (var i = 0; i < tablerows.items.length; i++)\n        {\n            console.log(tablerows.items[i].index);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// In the example, we'll select the top 100 rows of the table.\nExcel.run(function (ctx) { \n    var table = ctx.workbook.tables.getItem(\"Table1\");\n    var tableRows = table.rows.load({\"select\" : \"index, values\",\"top\": 100, \"skip\": 0 })\n    return ctx.sync().then(function() {\n        for (var i = 0; i < tableRows.items.length; i++)\n        {\n            console.log(tableRows.items[i].index);\n            console.log(tableRows.items[i].values);\n        }\n    });\n}).catch(function(error) {\n        console.log(\"Error: \" + error);\n        if (error instanceof OfficeExtension.Error) {\n            console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n        }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="b700b-147">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="b700b-147">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel_release.Excel.TableRowCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.TableRowCollection;'
    return:
      type:
      - excel.Excel.TableRowCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel_release.Excel.TableRowCollection.toJSON
  summary: <span data-ttu-id="b700b-148">ÜberSchreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API `JSON.stringify()` <!-- -->-Objekt an übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="b700b-148">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="b700b-149">(`JSON.stringify`<!-- -->ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche `Excel.TableRowCollection` Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt ( `Excel.Interfaces.TableRowCollectionData` <!-- -->typisiert als) zurück, das ein "Items"-Array mit flachen Kopien aller geladenen Eigenschaften aus den Elementen der Auflistung enthält.</span><span class="sxs-lookup"><span data-stu-id="b700b-149">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.TableRowCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableRowCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableRowCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.TableRowCollectionData
      description: ''
