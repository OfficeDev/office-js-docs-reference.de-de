### YamlMime:UniversalReference
items:
  - uid: 'outlook!Office.EnhancedLocation:interface'
    summary: |-
      Stellt die Gruppe von Speicherorten für einen Termin dar.

      \[[API-Gruppe: Mailbox 1,8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[Minimale Berechtigungsstufe](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->** :`ReadItem`

      **[Anwendbarer Outlook-Modus](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** : Verfassen oder lesen
    name: Office.EnhancedLocation
    fullName: Office.EnhancedLocation
    langs:
      - typeScript
    type: interface
    package: outlook!
    children:
      - 'outlook!Office.EnhancedLocation#addAsync:member(1)'
      - 'outlook!Office.EnhancedLocation#getAsync:member(1)'
      - 'outlook!Office.EnhancedLocation#removeAsync:member(1)'
  - uid: 'outlook!Office.EnhancedLocation#addAsync:member(1)'
    summary: |-
      Fügt zu der Gruppe von Speicherorten hinzu, die dem Termin zugeordnet sind.

      \[[API-Gruppe: Mailbox 1,8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[Minimale Berechtigungsstufe](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->** :`ReadWriteItem`

      **[Zutreffender Outlook-Modus](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** : Verfassen

      **Fehler** :

      - `InvalidFormatError`<!-- -->: Das Format des angegebenen Datenobjekts ist ungültig.

      #### <a name="examples"></a>Beispiele

      ```javascript
      // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/outlook/90-other-item-apis/get-add-remove-enhancedlocation-appointment.yaml
      var locations = [
        {
          id: "Contoso",
          type: Office.MailboxEnums.LocationType.Custom
        },
        {
          id: "room500@test.com",
          type: Office.MailboxEnums.LocationType.Room
        }
      ];
      Office.context.mailbox.item.enhancedLocation.addAsync(locations, (result) => {
        if (result.status === Office.AsyncResultStatus.Succeeded) {
          console.log(`Successfully added locations ${JSON.stringify(locations)}`);
        } else {
          console.error(`Failed to add locations. Error message: ${result.error.message}`);
        }
      });
      ```
    name: 'addAsync(locationIdentifiers, options, callback)'
    fullName: 'addAsync(locationIdentifiers, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addAsync(locationIdentifiers: LocationIdentifier[], options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: locationIdentifiers
          description: 'Die Speicherorte, die der aktuellen Liste der Speicherorte hinzugefügt werden sollen.'
          type:
            - 'outlook!Office.EnhancedLocation#addAsync~0:complex'
        - id: options
          description: 'Optional. Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält. `asyncContext`<!-- -->: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Optional. Wenn die Methode abgeschlossen ist, wird die Funktion, die im- `callback` Parameter übergeben wird, mit einem einzelnen Parameter aufgerufen. `asyncResult`<!-- -->, bei dem es sich um ein `Office.AsyncResult` Objekt handelt. Überprüfen Sie die `status` -Eigenschaft von `asyncResult` , um zu ermitteln, ob der Aufruf erfolgreich war.'
          type:
            - 'outlook!Office.EnhancedLocation#addAsync~1:complex'
  - uid: 'outlook!Office.EnhancedLocation#getAsync:member(1)'
    summary: |-
      Ruft die Gruppe von Speicherorten ab, die dem Termin zugeordnet sind.

      \[[API-Gruppe: Mailbox 1,8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[Minimale Berechtigungsstufe](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->** :`ReadItem`

      **[Anwendbarer Outlook-Modus](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** : Verfassen oder lesen

      #### <a name="examples"></a>Beispiele

      ```javascript
      // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/outlook/90-other-item-apis/get-add-remove-enhancedlocation-appointment.yaml
      Office.context.mailbox.item.enhancedLocation.getAsync((result) => {
        if (result.status !== Office.AsyncResultStatus.Succeeded) {
          console.error(`Failed to get locations. Error message: ${result.error.message}`);
          return;
        }
        var places = result.value;
        if (places && places.length > 0) {
          result.value.forEach(function(place) {
            console.log(`Location: ${place.displayName} (type: ${place.locationIdentifier.type})`);
            if (place.locationIdentifier.type === Office.MailboxEnums.LocationType.Room) {
              console.log("Email address: " + place.emailAddress);
            }
          });
        } else {
          console.log("There are no locations.");
        }
      });
      ```
    name: 'getAsync(options, callback)'
    fullName: 'getAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<LocationDetails[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: 'Optional. Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält. `asyncContext`<!-- -->: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Optional. Wenn die Methode abgeschlossen ist, wird die Funktion, die im- `callback` Parameter übergeben wird, mit einem einzelnen Parameter aufgerufen. `asyncResult`<!-- -->, bei dem es sich um ein `Office.AsyncResult` Objekt handelt.'
          type:
            - 'outlook!Office.EnhancedLocation#getAsync~0:complex'
  - uid: 'outlook!Office.EnhancedLocation#removeAsync:member(1)'
    summary: |-
      Entfernt die Gruppe von Speicherorten, die dem Termin zugeordnet sind.

      Wenn mehrere Speicherorte mit dem gleichen Namen vorhanden sind, werden alle übereinstimmenden Speicherorte entfernt, auch wenn nur eine in angegeben wurde. `locationIdentifiers`<!-- -->.

      \[[API-Gruppe: Mailbox 1,8](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      **[Minimale Berechtigungsstufe](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->** :`ReadWriteItem`

      **[Zutreffender Outlook-Modus](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** : Verfassen

      #### <a name="examples"></a>Beispiele

      ```javascript
      // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/outlook/90-other-item-apis/get-add-remove-enhancedlocation-appointment.yaml
      var locations = [
        {
          id: "Contoso",
          type: Office.MailboxEnums.LocationType.Custom
        },
        {
          id: "room500@test.com",
          type: Office.MailboxEnums.LocationType.Room
        }
      ];
      Office.context.mailbox.item.enhancedLocation.removeAsync(locations, (result) => {
        if (result.status === Office.AsyncResultStatus.Succeeded) {
          console.log(`Successfully removed locations ${JSON.stringify(locations)}`);
        } else {
          console.error(`Failed to remove locations. Error message: ${result.error.message}`);
        }
      });
      ```
    name: 'removeAsync(locationIdentifiers, options, callback)'
    fullName: 'removeAsync(locationIdentifiers, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeAsync(locationIdentifiers: LocationIdentifier[], options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: locationIdentifiers
          description: 'Die Speicherorte, die aus der aktuellen Liste der Speicherorte entfernt werden sollen.'
          type:
            - 'outlook!Office.EnhancedLocation#removeAsync~0:complex'
        - id: options
          description: 'Optional. Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält. `asyncContext`<!-- -->: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Optional. Wenn die Methode abgeschlossen ist, wird die Funktion, die im- `callback` Parameter übergeben wird, mit einem einzelnen Parameter aufgerufen. `asyncResult`<!-- -->, bei dem es sich um ein `Office.AsyncResult` Objekt handelt. Überprüfen Sie die `status` -Eigenschaft von `asyncResult` , um zu ermitteln, ob der Aufruf erfolgreich war.'
          type:
            - 'outlook!Office.EnhancedLocation#removeAsync~1:complex'
references:
  - uid: 'outlook!Office.EnhancedLocation#addAsync~0:complex'
    name: 'LocationIdentifier[]'
    fullName: 'Office.LocationIdentifier[]'
    spec.typeScript:
      - uid: 'outlook!Office.LocationIdentifier:interface'
        name: LocationIdentifier
        fullName: Office.LocationIdentifier
      - name: '[]'
        fullName: '[]'
  - uid: 'office!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'outlook!Office.EnhancedLocation#addAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.EnhancedLocation#getAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<LocationDetails[]>) => void'
    fullName: '(asyncResult: Office.AsyncResult<Office.LocationDetails[]>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'outlook!Office.LocationDetails:interface'
        name: LocationDetails
        fullName: Office.LocationDetails
      - name: '[]>) => void'
        fullName: '[]>) => void'
  - uid: 'outlook!Office.EnhancedLocation#removeAsync~0:complex'
    name: 'LocationIdentifier[]'
    fullName: 'Office.LocationIdentifier[]'
    spec.typeScript:
      - uid: 'outlook!Office.LocationIdentifier:interface'
        name: LocationIdentifier
        fullName: Office.LocationIdentifier
      - name: '[]'
        fullName: '[]'
  - uid: 'outlook!Office.EnhancedLocation#removeAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'office!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void