### YamlMime:UniversalReference
ms.openlocfilehash: 2be3d5f9b86cefeb3eaa9e691f8a0d3ce82c05d7
ms.sourcegitcommit: beffe9455dace422e85b92f0105c54ff7b594cbf
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 09/20/2018
ms.locfileid: "24045629"
items:
- uid: excel.Excel.RangeFormat
  summary: >-
    Gibt ein Formatobjekt zurück, das die Schriftart des Bereichs, Füllung, Rahmen, die Ausrichtung und andere Eigenschaften verschachtelt.


    \[[API-Satz: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.RangeFormat
  fullName: excel.Excel.RangeFormat
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.RangeFormat.autofitColumns
  - excel.Excel.RangeFormat.autofitRows
  - excel.Excel.RangeFormat.borders
  - excel.Excel.RangeFormat.columnWidth
  - excel.Excel.RangeFormat.fill
  - excel.Excel.RangeFormat.font
  - excel.Excel.RangeFormat.horizontalAlignment
  - excel.Excel.RangeFormat.load
  - excel.Excel.RangeFormat.protection
  - excel.Excel.RangeFormat.rowHeight
  - excel.Excel.RangeFormat.textOrientation
  - excel.Excel.RangeFormat.toJSON
  - excel.Excel.RangeFormat.useStandardHeight
  - excel.Excel.RangeFormat.useStandardWidth
  - excel.Excel.RangeFormat.verticalAlignment
  - excel.Excel.RangeFormat.wrapText
- uid: excel.Excel.RangeFormat.autofitColumns
  summary: >-
    Ändert die Breite der Spalten des aktuellen Bereichs, um basierend auf den aktuellen Daten in den Spalten die optimale Breite zu erzielen.


    \[[API-Satz: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: autofitColumns()
  fullName: excel.Excel.RangeFormat.autofitColumns
  langs:
  - typeScript
  type: method
  syntax:
    content: 'autofitColumns(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.RangeFormat.autofitRows
  summary: >-
    Ändert die Höhe der Zeilen des aktuellen Bereichs, um basierend auf den aktuellen Daten in den Zeilen die optimale Höhe zu erzielen.


    \[[API-Satz: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: autofitRows()
  fullName: excel.Excel.RangeFormat.autofitRows
  langs:
  - typeScript
  type: method
  syntax:
    content: 'autofitRows(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.RangeFormat.borders
  summary: >-
    Auflistung von Border-Objekten, die für den gesamten ausgewählten Bereich gelten. Schreibgeschützt.


    \[[API-Satz: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: borders
  fullName: excel.Excel.RangeFormat.borders
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly borders: Excel.RangeBorderCollection;'
    return:
      type:
      - excel.Excel.RangeBorderCollection
- uid: excel.Excel.RangeFormat.columnWidth
  summary: >-
    Ruft die Breite aller Spalten innerhalb des Bereichs ab oder legt diese fest. Wenn die Breite der Spalten nicht gleichmäßig ist, wird Null zurückgegeben.


    \[[API-Satz: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: columnWidth
  fullName: excel.Excel.RangeFormat.columnWidth
  langs:
  - typeScript
  type: property
  syntax:
    content: 'columnWidth: number;'
    return:
      type:
      - number
- uid: excel.Excel.RangeFormat.fill
  summary: >-
    Gibt das Fill-Objekt an, das für den gesamten Bereich definiert ist. Schreibgeschützt.


    \[[API-Satz: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: fill
  fullName: excel.Excel.RangeFormat.fill
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly fill: Excel.RangeFill;'
    return:
      type:
      - excel.Excel.RangeFill
- uid: excel.Excel.RangeFormat.font
  summary: >-
    Gibt das Font-Objekt an, das für den gesamten Bereich definiert ist. Schreibgeschützt.


    \[[API-Satz: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: font
  fullName: excel.Excel.RangeFormat.font
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly font: Excel.RangeFont;'
    return:
      type:
      - excel.Excel.RangeFont
- uid: excel.Excel.RangeFormat.horizontalAlignment
  summary: >-
    Die horizontale Ausrichtung für das angegebene Objekt darstellt. Einzelheiten finden Sie unter Excel.HorizontalAlignment.


    \[[API-Satz: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: horizontalAlignment
  fullName: excel.Excel.RangeFormat.horizontalAlignment
  langs:
  - typeScript
  type: property
  syntax:
    content: 'horizontalAlignment: Excel.HorizontalAlignment | "General" | "Left" | "Center" | "Right" | "Fill" | "Justify" | "CenterAcrossSelection" | "Distributed";'
    return:
      type:
      - Excel.HorizontalAlignment | "General" | "Left" | "Center" | "Right" | "Fill" | "Justify" | "CenterAcrossSelection" | "Distributed"
- uid: excel.Excel.RangeFormat.load
  summary: Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts. Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.
  remarks: "Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:\n\n`load(option?: { select?: string; expand?: string; }): Excel.RangeFormat`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.\n\n`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeFormat`-Nur auf Auflistungstypen verfügbar. Es ist ähnlich wie die jeweils vorhergehende Signatur. Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können. Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen. Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Below example selects all of the Range's format properties. \nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    range.load([\"format/*\", \"format/fill\", \"format/borders\", \"format/font\"]);\n    return ctx.sync().then(function() {\n        console.log(range.format.wrapText);\n        console.log(range.format.fill.color);\n        console.log(range.format.font.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// The example below sets font name, fill color and wraps text. \nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.format.wrapText = true;\n    range.format.font.name = 'Times New Roman';\n    range.format.fill.color = '0000FF';\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// The example below adds grid border around the range.\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.format.borders.getItem('InsideHorizontal').style = 'Continuous';\n    range.format.borders.getItem('InsideVertical').style = 'Continuous';\n    range.format.borders.getItem('EdgeBottom').style = 'Continuous';\n    range.format.borders.getItem('EdgeLeft').style = 'Continuous';\n    range.format.borders.getItem('EdgeRight').style = 'Continuous';\n    range.format.borders.getItem('EdgeTop').style = 'Continuous';\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: excel.Excel.RangeFormat.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.RangeFormat;'
    return:
      type:
      - excel.Excel.RangeFormat
      description: ''
    parameters:
    - id: option
      description: Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.
      type:
      - string | string[]
- uid: excel.Excel.RangeFormat.protection
  summary: >-
    Gibt das Formatschutz-Objekt für einen Bereich zurück. Schreibgeschützt.


    \[[API-Satz: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: protection
  fullName: excel.Excel.RangeFormat.protection
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly protection: Excel.FormatProtection;'
    return:
      type:
      - excel.Excel.FormatProtection
- uid: excel.Excel.RangeFormat.rowHeight
  summary: >-
    Ruft ab oder legt die Höhe aller Zeilen im Bereich fest. Wenn die Zeilenhöhe nicht uniform sind, wird Null zurückgegeben.


    \[[API-Satz: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: rowHeight
  fullName: excel.Excel.RangeFormat.rowHeight
  langs:
  - typeScript
  type: property
  syntax:
    content: 'rowHeight: number;'
    return:
      type:
      - number
- uid: excel.Excel.RangeFormat.textOrientation
  summary: >-
    Ruft ab oder legt die Ausrichtung von Text aller Zellen innerhalb des Bereichs. Die Ausrichtung von Text sollte eine ganze Zahl von-90 bis 90 oder 180 für Text vertikal ausgerichtet. Wenn die Ausrichtung des innerhalb eines Bereichs nicht uniform sind, wird Null zurückgegeben.


    \[[API-Satz: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: textOrientation
  fullName: excel.Excel.RangeFormat.textOrientation
  langs:
  - typeScript
  type: property
  syntax:
    content: 'textOrientation: number;'
    return:
      type:
      - number
      description: "\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B2:E2\");\n\n    // Set textOrientation to either an integer between -90 and 90\n    // or to 180 for vertically-oriented text.\n    range.format.textOrientation = 90;\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.RangeFormat.toJSON
  name: toJSON()
  fullName: excel.Excel.RangeFormat.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.RangeFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.RangeFormatData
      description: ''
- uid: excel.Excel.RangeFormat.useStandardHeight
  summary: >-
    Bestimmt, ob die Zeilenhöhe des Range-Objekts die Standardhöhe für das Blatt übereinstimmt. Gibt True zurück, wenn die Zeilenhöhe des Range-Objekts die Standardhöhe für das Blatt übereinstimmt. Gibt Null zurück, wenn der Bereich mehr als eine Zeile enthält und die Zeilen werden nicht alle dieselbe Höhe. Andernfalls wird False zurückgegeben.


    \[[API-Satz: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: useStandardHeight
  fullName: excel.Excel.RangeFormat.useStandardHeight
  langs:
  - typeScript
  type: property
  syntax:
    content: 'useStandardHeight: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.RangeFormat.useStandardWidth
  summary: >-
    Gibt an, ob die Spaltenbreite des Range-Objekts der Standardbreite des Blatts übereinstimmt. Gibt True zurück, wenn die Spaltenbreite des Range-Objekts die Standardbreite des Blatts entspricht. Gibt Null zurück, wenn der Bereich mehr als eine Spalte enthält und die Spalten werden nicht alle dieselbe Höhe. Andernfalls wird False zurückgegeben.


    \[[API-Satz: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: useStandardWidth
  fullName: excel.Excel.RangeFormat.useStandardWidth
  langs:
  - typeScript
  type: property
  syntax:
    content: 'useStandardWidth: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.RangeFormat.verticalAlignment
  summary: >-
    Die vertikale Ausrichtung für das angegebene Objekt darstellt. Einzelheiten finden Sie unter Excel.VerticalAlignment.


    \[[API-Satz: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: verticalAlignment
  fullName: excel.Excel.RangeFormat.verticalAlignment
  langs:
  - typeScript
  type: property
  syntax:
    content: 'verticalAlignment: Excel.VerticalAlignment | "Top" | "Center" | "Bottom" | "Justify" | "Distributed";'
    return:
      type:
      - Excel.VerticalAlignment | "Top" | "Center" | "Bottom" | "Justify" | "Distributed"
- uid: excel.Excel.RangeFormat.wrapText
  summary: >-
    Gibt an, ob Excel den Text im Objekt umbricht. Ein Nullwert gibt an, dass der gesamte Bereich keine einheitliche Textumbruch-Einstellung hat


    \[[API-Satz: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: wrapText
  fullName: excel.Excel.RangeFormat.wrapText
  langs:
  - typeScript
  type: property
  syntax:
    content: 'wrapText: boolean;'
    return:
      type:
      - boolean
