### YamlMime:UniversalReference
ms.openlocfilehash: a82ec21e4cae7f98d36705b7a001e3eea29c8d78
ms.sourcegitcommit: 3f4a320fa860d05d348c8bdec2295e046a45a34f
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/07/2019
ms.locfileid: "29769771"
items:
- uid: excel.Excel.ConditionalDataBarPositiveFormat
  summary: >-
    <span data-ttu-id="129fc-101">Stellt ein bedingtes Datenbalkenformat für die positive Seite des Datenbalkens dar.</span><span class="sxs-lookup"><span data-stu-id="129fc-101">Represents a conditional format DataBar Format for the positive side of the data bar.</span></span>


    <span data-ttu-id="129fc-102">\[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="129fc-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ConditionalDataBarPositiveFormat
  fullName: Excel.ConditionalDataBarPositiveFormat
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ConditionalDataBarPositiveFormat.borderColor
  - excel.Excel.ConditionalDataBarPositiveFormat.context
  - excel.Excel.ConditionalDataBarPositiveFormat.fillColor
  - excel.Excel.ConditionalDataBarPositiveFormat.gradientFill
  - excel.Excel.ConditionalDataBarPositiveFormat.load
  - excel.Excel.ConditionalDataBarPositiveFormat.set
  - excel.Excel.ConditionalDataBarPositiveFormat.toJSON
- uid: excel.Excel.ConditionalDataBarPositiveFormat.borderColor
  summary: >-
    <span data-ttu-id="129fc-103">HTML-Farbcode, der die Farbe der Rahmenlinie des Formulars \#RRGGBB (z. B. "FFA500") oder als eine benannte HTML-Farbe (z. B. "orange").</span><span class="sxs-lookup"><span data-stu-id="129fc-103">HTML color code representing the color of the border line, of the form \#RRGGBB (e.g. "FFA500") or as a named HTML color (e.g. "orange").</span></span> <span data-ttu-id="129fc-104">"" (leere Zeichenfolge), wenn kein Rahmen vorhanden oder festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="129fc-104">"" (empty string) if no border is present or set.</span></span>


    <span data-ttu-id="129fc-105">\[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="129fc-105">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: borderColor
  fullName: borderColor
  langs:
  - typeScript
  type: property
  syntax:
    content: 'borderColor: string;'
    return:
      type:
      - string
- uid: excel.Excel.ConditionalDataBarPositiveFormat.context
  summary: <span data-ttu-id="129fc-106">Der Anforderungskontext-zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="129fc-106">The request context associated with the object.</span></span> <span data-ttu-id="129fc-107">Dadurch wird das Add-in Prozess mit der Office-hostanwendung Prozess verbunden.</span><span class="sxs-lookup"><span data-stu-id="129fc-107">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.ConditionalDataBarPositiveFormat.fillColor
  summary: >-
    <span data-ttu-id="129fc-108">HTML-Farbcode, die Füllfarbe des Formulars darstellt \#RRGGBB (z. B. "FFA500") oder als eine benannte HTML-Farbe (z. B. "orange").</span><span class="sxs-lookup"><span data-stu-id="129fc-108">HTML color code representing the fill color, of the form \#RRGGBB (e.g. "FFA500") or as a named HTML color (e.g. "orange").</span></span>


    <span data-ttu-id="129fc-109">\[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="129fc-109">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: fillColor
  fullName: fillColor
  langs:
  - typeScript
  type: property
  syntax:
    content: 'fillColor: string;'
    return:
      type:
      - string
- uid: excel.Excel.ConditionalDataBarPositiveFormat.gradientFill
  summary: >-
    <span data-ttu-id="129fc-110">Boolesche Darstellung der Angabe, ob der Datenbalken einen Farbverlauf hat.</span><span class="sxs-lookup"><span data-stu-id="129fc-110">Boolean representation of whether or not the DataBar has a gradient.</span></span>


    <span data-ttu-id="129fc-111">\[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="129fc-111">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: gradientFill
  fullName: gradientFill
  langs:
  - typeScript
  type: property
  syntax:
    content: 'gradientFill: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.ConditionalDataBarPositiveFormat.load
  summary: <span data-ttu-id="129fc-112">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="129fc-112">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="129fc-113">Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="129fc-113">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="129fc-114">Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="129fc-114">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="129fc-115">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalDataBarPositiveFormat`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class="sxs-lookup"><span data-stu-id="129fc-115">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalDataBarPositiveFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="129fc-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalDataBarPositiveFormat`-Nur auf Auflistungstypen verfügbar.</span><span class="sxs-lookup"><span data-stu-id="129fc-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalDataBarPositiveFormat` - Only available on collection types.</span></span> <span data-ttu-id="129fc-117">Es ist ähnlich wie die jeweils vorhergehende Signatur.</span><span class="sxs-lookup"><span data-stu-id="129fc-117">It is similar to the preceding signature.</span></span> <span data-ttu-id="129fc-118">Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können.</span><span class="sxs-lookup"><span data-stu-id="129fc-118">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="129fc-119">Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="129fc-119">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="129fc-120">Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.</span><span class="sxs-lookup"><span data-stu-id="129fc-120">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.ConditionalDataBarPositiveFormat;'
    return:
      type:
      - excel.Excel.ConditionalDataBarPositiveFormat
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="129fc-121">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="129fc-121">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.ConditionalDataBarPositiveFormat.set
  summary: <span data-ttu-id="129fc-122">Legt mehrere Eigenschaften eines Objekts zur selben Zeit fest.</span><span class="sxs-lookup"><span data-stu-id="129fc-122">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="129fc-123">Sie können entweder eine einfache-Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt des gleichen Typs übergeben.</span><span class="sxs-lookup"><span data-stu-id="129fc-123">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="129fc-124">Diese Methode hat die folgenden zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="129fc-124">This method has the following additional signature:</span></span>


    `set(properties: Excel.ConditionalDataBarPositiveFormat): void`
  name: set(properties, options)
  fullName: set
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ConditionalDataBarPositiveFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="129fc-125">Ein JavaScript-Objekt mit Eigenschaften, die an die Eigenschaften des Objekts isomorphically strukturiert werden, auf denen die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="129fc-125">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.ConditionalDataBarPositiveFormatUpdateData
    - id: options
      description: <span data-ttu-id="129fc-126">Bietet eine Option, um Fehler zu unterdrücken, wenn schreibgeschützte Eigenschaften festgelegt werden, versucht das Properties-Objekt.</span><span class="sxs-lookup"><span data-stu-id="129fc-126">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.ConditionalDataBarPositiveFormat.toJSON
  summary: <span data-ttu-id="129fc-127">Überschreibt das JavaScript `toJSON()` Methode, um nützliche Ausgabe zu gewährleisten, wenn ein API-Objekt zu übergeben ist `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="129fc-127">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="129fc-128">(`JSON.stringify`<!-- -->, wiederum die `toJSON` -Methode des Objekts, das es übergeben wird.) Das ursprüngliche Excel.ConditionalDataBarPositiveFormat-Objekt ist ein API-Objekt der `toJSON` -Methode gibt eine einfache JavaScript-Objekt zurück (als `Excel.Interfaces.ConditionalDataBarPositiveFormatData` <!-- -->), die flache Kopien der geladene untergeordnete Eigenschaften aus dem ursprünglichen-Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="129fc-128">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ConditionalDataBarPositiveFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ConditionalDataBarPositiveFormatData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ConditionalDataBarPositiveFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.ConditionalDataBarPositiveFormatData
      description: ''
