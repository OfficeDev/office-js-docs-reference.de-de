### YamlMime:UniversalReference
ms.openlocfilehash: fce68579b42ba54d8d7c60c560b3cd3211e5ca08
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/13/2019
ms.locfileid: "29977597"
items:
- uid: excel.Excel.CustomPropertyCollection
  summary: >-
    <span data-ttu-id="cfb48-101">Enthält die Sammlung von customProperty-Objekten.</span><span class="sxs-lookup"><span data-stu-id="cfb48-101">Contains the collection of customProperty objects.</span></span>


    <span data-ttu-id="cfb48-102">\[[API-Satz: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cfb48-102">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.CustomPropertyCollection
  fullName: Excel.CustomPropertyCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.CustomPropertyCollection.add
  - excel.Excel.CustomPropertyCollection.context
  - excel.Excel.CustomPropertyCollection.deleteAll
  - excel.Excel.CustomPropertyCollection.getCount
  - excel.Excel.CustomPropertyCollection.getItem
  - excel.Excel.CustomPropertyCollection.getItemOrNullObject
  - excel.Excel.CustomPropertyCollection.items
  - excel.Excel.CustomPropertyCollection.load
  - excel.Excel.CustomPropertyCollection.load_1
  - excel.Excel.CustomPropertyCollection.load_2
  - excel.Excel.CustomPropertyCollection.toJSON
- uid: excel.Excel.CustomPropertyCollection.add
  summary: >-
    <span data-ttu-id="cfb48-103">Erstellt eine neue benutzerdefinierte Eigenschaft oder legt eine vorhandene fest.</span><span class="sxs-lookup"><span data-stu-id="cfb48-103">Creates a new or sets an existing custom property.</span></span>


    <span data-ttu-id="cfb48-104">\[[API-Satz: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cfb48-104">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: add(key, value)
  fullName: add(key, value)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(key: string, value: any): Excel.CustomProperty;'
    return:
      type:
      - excel.Excel.CustomProperty
      description: ''
    parameters:
    - id: key
      description: <span data-ttu-id="cfb48-p101">Erforderlich. Der Schlüssel der benutzerdefinierten Eigenschaften, bei dem Groß-/Kleinschreibung nicht beachtet wird.</span><span class="sxs-lookup"><span data-stu-id="cfb48-p101">Required. The custom property's key, which is case-insensitive.</span></span>
      type:
      - string
    - id: value
      description: <span data-ttu-id="cfb48-p102">Erforderlich. Der Wert der benutzerdefinierten Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="cfb48-p102">Required. The custom property's value.</span></span>
      type:
      - any
- uid: excel.Excel.CustomPropertyCollection.context
  summary: <span data-ttu-id="cfb48-109">Der Anforderungskontext-zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="cfb48-109">The request context associated with the object.</span></span> <span data-ttu-id="cfb48-110">Dadurch wird das Add-in Prozess mit der Office-hostanwendung Prozess verbunden.</span><span class="sxs-lookup"><span data-stu-id="cfb48-110">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.CustomPropertyCollection.deleteAll
  summary: >-
    <span data-ttu-id="cfb48-111">Löscht alle benutzerdefinierten Eigenschaften in dieser Sammlung.</span><span class="sxs-lookup"><span data-stu-id="cfb48-111">Deletes all custom properties in this collection.</span></span>


    <span data-ttu-id="cfb48-112">\[[API-Satz: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cfb48-112">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: deleteAll()
  fullName: deleteAll()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'deleteAll(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.CustomPropertyCollection.getCount
  summary: >-
    <span data-ttu-id="cfb48-113">Ruft die Anzahl von benutzerdefinierten Eigenschaften ab.</span><span class="sxs-lookup"><span data-stu-id="cfb48-113">Gets the count of custom properties.</span></span>


    <span data-ttu-id="cfb48-114">\[[API-Satz: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cfb48-114">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.CustomPropertyCollection.getItem
  summary: >-
    <span data-ttu-id="cfb48-p104">Ruft ein benutzerdefiniertes Eigenschaftsobjekt anhand seines Schlüssels ab, das Fall-unabhängig ist. Gibt einen Fehler zurück, wenn die benutzerdefinierte Eigenschaft nicht existiert.</span><span class="sxs-lookup"><span data-stu-id="cfb48-p104">Gets a custom property object by its key, which is case-insensitive. Throws if the custom property does not exist.</span></span>


    <span data-ttu-id="cfb48-117">\[[API-Satz: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cfb48-117">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(key)
  fullName: getItem(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: string): Excel.CustomProperty;'
    return:
      type:
      - excel.Excel.CustomProperty
      description: ''
    parameters:
    - id: key
      description: <span data-ttu-id="cfb48-118">Der Schlüssel, der das Objekt für benutzerdefinierte Eigenschaften identifiziert.</span><span class="sxs-lookup"><span data-stu-id="cfb48-118">The key that identifies the custom property object.</span></span>
      type:
      - string
- uid: excel.Excel.CustomPropertyCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="cfb48-p105">Ruft ein benutzerdefiniertes Eigenschaftsobjekt anhand seines Schlüssels ab, das Fall-unabhängig ist. Gibt ein Null-Objekt zurück, wenn die benutzerdefinierte Eigenschaft nicht existiert.</span><span class="sxs-lookup"><span data-stu-id="cfb48-p105">Gets a custom property object by its key, which is case-insensitive. Returns a null object if the custom property does not exist.</span></span>


    <span data-ttu-id="cfb48-121">\[[API-Satz: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cfb48-121">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemOrNullObject(key)
  fullName: getItemOrNullObject(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(key: string): Excel.CustomProperty;'
    return:
      type:
      - excel.Excel.CustomProperty
      description: ''
    parameters:
    - id: key
      description: <span data-ttu-id="cfb48-p106">Erforderlich. Der Schlüssel, der das Objekt für benutzerdefinierte Eigenschaften identifiziert.</span><span class="sxs-lookup"><span data-stu-id="cfb48-p106">Required. The key that identifies the custom property object.</span></span>
      type:
      - string
- uid: excel.Excel.CustomPropertyCollection.items
  summary: <span data-ttu-id="cfb48-124">Ruft die geladene untergeordnete Elemente in dieser Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="cfb48-124">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.CustomProperty[];'
    return:
      type:
      - Excel.CustomProperty[]
- uid: excel.Excel.CustomPropertyCollection.load
  summary: <span data-ttu-id="cfb48-125">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="cfb48-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="cfb48-126">Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="cfb48-126">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="cfb48-127">Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="cfb48-127">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="cfb48-128">`load(option?: string | string[]): Excel.CustomPropertyCollection`-Wo Option ist eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="cfb48-128">`load(option?: string | string[]): Excel.CustomPropertyCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="cfb48-129">`load(option?: { select?: string; expand?: string; }): Excel.CustomPropertyCollection`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class="sxs-lookup"><span data-stu-id="cfb48-129">`load(option?: { select?: string; expand?: string; }): Excel.CustomPropertyCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="cfb48-130">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.CustomPropertyCollection`-Nur auf Auflistungstypen verfügbar.</span><span class="sxs-lookup"><span data-stu-id="cfb48-130">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.CustomPropertyCollection` - Only available on collection types.</span></span> <span data-ttu-id="cfb48-131">Es ist ähnlich wie die jeweils vorhergehende Signatur.</span><span class="sxs-lookup"><span data-stu-id="cfb48-131">It is similar to the preceding signature.</span></span> <span data-ttu-id="cfb48-132">Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können.</span><span class="sxs-lookup"><span data-stu-id="cfb48-132">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="cfb48-133">Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="cfb48-133">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="cfb48-134">Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.</span><span class="sxs-lookup"><span data-stu-id="cfb48-134">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.CustomPropertyCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.CustomPropertyCollection;'
    return:
      type:
      - excel.Excel.CustomPropertyCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.CustomPropertyCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.CustomPropertyCollection.load_1
  summary: <span data-ttu-id="cfb48-135">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="cfb48-135">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="cfb48-136">Sie müssen Aufrufen `context.sync()` vor dem Lesen der Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="cfb48-136">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.CustomPropertyCollection;'
    return:
      type:
      - excel.Excel.CustomPropertyCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="cfb48-137">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="cfb48-137">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.CustomPropertyCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.CustomPropertyCollection;'
    return:
      type:
      - excel.Excel.CustomPropertyCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.CustomPropertyCollection.toJSON
  summary: <span data-ttu-id="cfb48-138">Überschreibt das JavaScript `toJSON()` Methode, um nützliche Ausgabe zu gewährleisten, wenn ein API-Objekt zu übergeben ist `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="cfb48-138">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="cfb48-139">(`JSON.stringify`<!-- -->, wiederum die `toJSON` -Methode des Objekts, das es übergeben wird.) Während der ursprünglichen `Excel.CustomPropertyCollection` Objekt ist ein API-Objekt der `toJSON` -Methode gibt eine einfache JavaScript-Objekt zurück (als `Excel.Interfaces.CustomPropertyCollectionData` <!-- -->), die ein Array "Elemente" mit flache Kopien der geladenen Eigenschaften aus der Auflistung von Elementen enthält.</span><span class="sxs-lookup"><span data-stu-id="cfb48-139">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.CustomPropertyCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.CustomPropertyCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.CustomPropertyCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.CustomPropertyCollectionData
      description: ''
