### YamlMime:UniversalReference
ms.openlocfilehash: 549c137b5748be863a360d4184fe64d9dbaf9a79
ms.sourcegitcommit: a36161c2113d94680dc68150d024e68bdf0390fa
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 10/10/2018
ms.locfileid: "25457354"
items:
- uid: excel.Excel.Application
  summary: >-
    <span data-ttu-id="efb42-101">Stellt die Excel-Anwendung dar, die die Arbeitsmappe verwaltet.</span><span class="sxs-lookup"><span data-stu-id="efb42-101">Represents the Excel application that manages the workbook.</span></span>


    <span data-ttu-id="efb42-102">\[[API-Satz: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="efb42-102">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.Application
  fullName: excel.Excel.Application
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Application.calculate
  - excel.Excel.Application.calculationMode
  - excel.Excel.Application.load
  - excel.Excel.Application.suspendApiCalculationUntilNextSync
  - excel.Excel.Application.toJSON
- uid: excel.Excel.Application.calculate
  summary: >-
    <span data-ttu-id="efb42-103">Alle in Excel geöffnete Arbeitsmappen werden neu berechnet.</span><span class="sxs-lookup"><span data-stu-id="efb42-103">Recalculate all currently opened workbooks in Excel.</span></span>


    <span data-ttu-id="efb42-104">\[[API-Satz: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="efb42-104">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: calculate(calculationType)
  fullName: excel.Excel.Application.calculate
  langs:
  - typeScript
  type: method
  syntax:
    content: 'calculate(calculationType: Excel.CalculationType): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"efb42-105\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"efb42-105\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) {\n    ctx.workbook.application.calculate('Full');\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: calculationType
      description: <span data-ttu-id="efb42-106">Gibt den Berechnungstyp verwendet.</span><span class="sxs-lookup"><span data-stu-id="efb42-106">Specifies the calculation type to use.</span></span> <span data-ttu-id="efb42-107">Einzelheiten finden Sie unter Excel.CalculationType.</span><span class="sxs-lookup"><span data-stu-id="efb42-107">See Excel.CalculationType for details.</span></span>
      type:
      - excel.Excel.CalculationType
- uid: excel.Excel.Application.calculationMode
  summary: >-
    <span data-ttu-id="efb42-108">Gibt den Berechnungsmodus in der Arbeitsmappe verwendeten durch die Konstanten im Excel.CalculationMode definiert.</span><span class="sxs-lookup"><span data-stu-id="efb42-108">Returns the calculation mode used in the workbook, as defined by the constants in Excel.CalculationMode.</span></span> <span data-ttu-id="efb42-109">Mögliche Werte sind: `Automatic` <!-- -->, wobei neuberechnung; wird von Excel gesteuert `AutomaticExceptTables` <!-- -->, wobei Excel die neuberechnung steuert jedoch Änderungen in den Tabellen ignoriert; `Manual` <!-- -->, wobei Berechnung ausgeführt wird, wenn der Benutzer diese anfordert.</span><span class="sxs-lookup"><span data-stu-id="efb42-109">Possible values are: `Automatic`<!-- -->, where Excel controls recalculation; `AutomaticExceptTables`<!-- -->, where Excel controls recalculation but ignores changes in tables; `Manual`<!-- -->, where calculation is done when the user requests it.</span></span>


    <span data-ttu-id="efb42-110">\[[API-Satz: ExcelApi 1.1 für Get, 1,8 für ein](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="efb42-110">\[ [API set: ExcelApi 1.1 for get, 1.8 for set](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: calculationMode
  fullName: excel.Excel.Application.calculationMode
  langs:
  - typeScript
  type: property
  syntax:
    content: 'calculationMode: Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual";'
    return:
      type:
      - Excel.CalculationMode | "Automatic" | "AutomaticExceptTables" | "Manual"
- uid: excel.Excel.Application.load
  summary: <span data-ttu-id="efb42-111">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="efb42-111">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="efb42-112">Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="efb42-112">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="efb42-113">Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="efb42-113">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="efb42-114">`load(option?: { select?: string; expand?: string; }): Excel.Application`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class="sxs-lookup"><span data-stu-id="efb42-114">`load(option?: { select?: string; expand?: string; }): Excel.Application` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="efb42-115">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Application`-Nur auf Auflistungstypen verfügbar.</span><span class="sxs-lookup"><span data-stu-id="efb42-115">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Application` - Only available on collection types.</span></span> <span data-ttu-id="efb42-116">Es ist ähnlich wie die jeweils vorhergehende Signatur.</span><span class="sxs-lookup"><span data-stu-id="efb42-116">It is similar to the preceding signature.</span></span> <span data-ttu-id="efb42-117">Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können.</span><span class="sxs-lookup"><span data-stu-id="efb42-117">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="efb42-118">Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="efb42-118">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="efb42-119">Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.</span><span class="sxs-lookup"><span data-stu-id="efb42-119">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

    #### <a name="examples"></a><span data-ttu-id="efb42-120">Beispiele</span><span class="sxs-lookup"><span data-stu-id="efb42-120">Examples</span></span>


    ```javascript

    Excel.run(function (ctx) {
        var application = ctx.workbook.application;
        application.load('calculationMode');
        return ctx.sync().then(function() {
            console.log(application.calculationMode);
        });
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```
  name: load(option)
  fullName: excel.Excel.Application.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.Application;'
    return:
      type:
      - excel.Excel.Application
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="efb42-121">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="efb42-121">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.Application.suspendApiCalculationUntilNextSync
  summary: >-
    <span data-ttu-id="efb42-p105">Hält die Berechnung an, bis die nächste „context.sync()“ aufgerufen wird. Nachdem dies festgelegt wurde, liegt es in der Verantwortung des Entwicklers, die Arbeitsmappe neu zu berechnen, um sicherzustellen, dass alle Abhängigkeiten verteilt werden.</span><span class="sxs-lookup"><span data-stu-id="efb42-p105">Suspends calculation until the next "context.sync()" is called. Once set, it is the developer's responsibility to re-calc the workbook, to ensure that any dependencies are propagated.</span></span>


    <span data-ttu-id="efb42-124">\[[API-Satz: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="efb42-124">\[ [API set: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: suspendApiCalculationUntilNextSync()
  fullName: excel.Excel.Application.suspendApiCalculationUntilNextSync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'suspendApiCalculationUntilNextSync(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.Application.toJSON
  name: toJSON()
  fullName: excel.Excel.Application.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ApplicationData;'
    return:
      type:
      - excel.Excel.Interfaces.ApplicationData
      description: ''
