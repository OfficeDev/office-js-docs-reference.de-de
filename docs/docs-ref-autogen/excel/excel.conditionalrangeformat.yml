### YamlMime:UniversalReference
ms.openlocfilehash: 938e3ab08f7abcb174d0402e82b8deaee9a69e3b
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/13/2019
ms.locfileid: "29976229"
items:
- uid: excel.Excel.ConditionalRangeFormat
  summary: >-
    <span data-ttu-id="45b1c-101">Ein Formatobjekt, das die Schriftart, die Füllung, den Rahmen und andere Eigenschaften bedingter Bereichsformate kapselt.</span><span class="sxs-lookup"><span data-stu-id="45b1c-101">A format object encapsulating the conditional formats range's font, fill, borders, and other properties.</span></span>


    <span data-ttu-id="45b1c-102">\[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45b1c-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ConditionalRangeFormat
  fullName: Excel.ConditionalRangeFormat
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ConditionalRangeFormat.borders
  - excel.Excel.ConditionalRangeFormat.context
  - excel.Excel.ConditionalRangeFormat.fill
  - excel.Excel.ConditionalRangeFormat.font
  - excel.Excel.ConditionalRangeFormat.load
  - excel.Excel.ConditionalRangeFormat.load_1
  - excel.Excel.ConditionalRangeFormat.load_2
  - excel.Excel.ConditionalRangeFormat.numberFormat
  - excel.Excel.ConditionalRangeFormat.set
  - excel.Excel.ConditionalRangeFormat.set_1
  - excel.Excel.ConditionalRangeFormat.toJSON
- uid: excel.Excel.ConditionalRangeFormat.borders
  summary: >-
    <span data-ttu-id="45b1c-p101">Sammlung von Rahmenobjekten, die für den gesamten bedingten Formatbereich gelten. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="45b1c-p101">Collection of border objects that apply to the overall conditional format range. Read-only.</span></span>


    <span data-ttu-id="45b1c-105">\[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45b1c-105">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: borders
  fullName: borders
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly borders: Excel.ConditionalRangeBorderCollection;'
    return:
      type:
      - excel.Excel.ConditionalRangeBorderCollection
- uid: excel.Excel.ConditionalRangeFormat.context
  summary: <span data-ttu-id="45b1c-106">Der Anforderungskontext-zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="45b1c-106">The request context associated with the object.</span></span> <span data-ttu-id="45b1c-107">Dadurch wird das Add-in Prozess mit der Office-hostanwendung Prozess verbunden.</span><span class="sxs-lookup"><span data-stu-id="45b1c-107">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.ConditionalRangeFormat.fill
  summary: >-
    <span data-ttu-id="45b1c-p103">Gibt das Füllungsobjekt zurück, das für den gesamten bedingten Formatbereich definiert ist. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="45b1c-p103">Returns the fill object defined on the overall conditional format range. Read-only.</span></span>


    <span data-ttu-id="45b1c-110">\[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45b1c-110">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: fill
  fullName: fill
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly fill: Excel.ConditionalRangeFill;'
    return:
      type:
      - excel.Excel.ConditionalRangeFill
- uid: excel.Excel.ConditionalRangeFormat.font
  summary: >-
    <span data-ttu-id="45b1c-p104">Gibt das Schriftartobjekt zurück, das für den gesamten bedingten Formatbereich definiert ist. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="45b1c-p104">Returns the font object defined on the overall conditional format range. Read-only.</span></span>


    <span data-ttu-id="45b1c-113">\[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45b1c-113">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: font
  fullName: font
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly font: Excel.ConditionalRangeFont;'
    return:
      type:
      - excel.Excel.ConditionalRangeFont
- uid: excel.Excel.ConditionalRangeFormat.load
  summary: <span data-ttu-id="45b1c-114">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="45b1c-114">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="45b1c-115">Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="45b1c-115">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="45b1c-116">Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="45b1c-116">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="45b1c-117">`load(option?: string | string[]): Excel.ConditionalRangeFormat`-Wo Option ist eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="45b1c-117">`load(option?: string | string[]): Excel.ConditionalRangeFormat` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="45b1c-118">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalRangeFormat`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class="sxs-lookup"><span data-stu-id="45b1c-118">`load(option?: { select?: string; expand?: string; }): Excel.ConditionalRangeFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="45b1c-119">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalRangeFormat`-Nur auf Auflistungstypen verfügbar.</span><span class="sxs-lookup"><span data-stu-id="45b1c-119">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalRangeFormat` - Only available on collection types.</span></span> <span data-ttu-id="45b1c-120">Es ist ähnlich wie die jeweils vorhergehende Signatur.</span><span class="sxs-lookup"><span data-stu-id="45b1c-120">It is similar to the preceding signature.</span></span> <span data-ttu-id="45b1c-121">Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können.</span><span class="sxs-lookup"><span data-stu-id="45b1c-121">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="45b1c-122">Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="45b1c-122">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="45b1c-123">Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.</span><span class="sxs-lookup"><span data-stu-id="45b1c-123">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ConditionalRangeFormatLoadOptions): Excel.ConditionalRangeFormat;'
    return:
      type:
      - excel.Excel.ConditionalRangeFormat
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.ConditionalRangeFormatLoadOptions
- uid: excel.Excel.ConditionalRangeFormat.load_1
  summary: <span data-ttu-id="45b1c-124">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="45b1c-124">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="45b1c-125">Sie müssen Aufrufen `context.sync()` vor dem Lesen der Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="45b1c-125">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.ConditionalRangeFormat;'
    return:
      type:
      - excel.Excel.ConditionalRangeFormat
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="45b1c-126">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="45b1c-126">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.ConditionalRangeFormat.load_2
  summary: <span data-ttu-id="45b1c-127">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="45b1c-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="45b1c-128">Sie müssen Aufrufen `context.sync()` vor dem Lesen der Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="45b1c-128">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ConditionalRangeFormat;'
    return:
      type:
      - excel.Excel.ConditionalRangeFormat
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="45b1c-129">Wobei propertyNamesAndPaths.select ist eine durch Kommas getrennte Zeichenfolge, die angibt, die Eigenschaften zum Laden und propertyNamesAndPaths.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class="sxs-lookup"><span data-stu-id="45b1c-129">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.ConditionalRangeFormat.numberFormat
  summary: >-
    <span data-ttu-id="45b1c-p109">Stellt den Excel-Zahlenformatcode für den angegebenen Bereich dar. Wird deaktiviert, wenn „null“ übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="45b1c-p109">Represents Excel's number format code for the given range. Cleared if null is passed in.</span></span>


    <span data-ttu-id="45b1c-132">\[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45b1c-132">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: numberFormat
  fullName: numberFormat
  langs:
  - typeScript
  type: property
  syntax:
    content: 'numberFormat: any;'
    return:
      type:
      - any
- uid: excel.Excel.ConditionalRangeFormat.set
  summary: <span data-ttu-id="45b1c-133">Legt mehrere Eigenschaften eines Objekts zur selben Zeit fest.</span><span class="sxs-lookup"><span data-stu-id="45b1c-133">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="45b1c-134">Sie können entweder eine einfache-Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt des gleichen Typs übergeben.</span><span class="sxs-lookup"><span data-stu-id="45b1c-134">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="45b1c-135">Diese Methode hat die folgenden zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="45b1c-135">This method has the following additional signature:</span></span>


    `set(properties: Excel.ConditionalRangeFormat): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ConditionalRangeFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="45b1c-136">Ein JavaScript-Objekt mit Eigenschaften, die an die Eigenschaften des Objekts isomorphically strukturiert werden, auf denen die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="45b1c-136">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.ConditionalRangeFormatUpdateData
    - id: options
      description: <span data-ttu-id="45b1c-137">Bietet eine Option, um Fehler zu unterdrücken, wenn schreibgeschützte Eigenschaften festgelegt werden, versucht das Properties-Objekt.</span><span class="sxs-lookup"><span data-stu-id="45b1c-137">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.ConditionalRangeFormat.set_1
  summary: <span data-ttu-id="45b1c-138">Mehrere Eigenschaften festgelegt auf das Objekt zur selben Zeit, basierend auf einem vorhandenen geladen-Objekt.</span><span class="sxs-lookup"><span data-stu-id="45b1c-138">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.ConditionalRangeFormat): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.ConditionalRangeFormat
- uid: excel.Excel.ConditionalRangeFormat.toJSON
  summary: <span data-ttu-id="45b1c-139">Überschreibt das JavaScript `toJSON()` Methode, um nützliche Ausgabe zu gewährleisten, wenn ein API-Objekt zu übergeben ist `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="45b1c-139">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="45b1c-140">(`JSON.stringify`<!-- -->, wiederum die `toJSON` -Methode des Objekts, das es übergeben wird.) Das ursprüngliche Excel.ConditionalRangeFormat-Objekt ist ein API-Objekt der `toJSON` -Methode gibt eine einfache JavaScript-Objekt zurück (als `Excel.Interfaces.ConditionalRangeFormatData` <!-- -->), die flache Kopien der geladene untergeordnete Eigenschaften aus dem ursprünglichen-Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="45b1c-140">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ConditionalRangeFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ConditionalRangeFormatData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ConditionalRangeFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.ConditionalRangeFormatData
      description: ''
