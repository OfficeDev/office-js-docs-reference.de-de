### YamlMime:UniversalReference
ms.openlocfilehash: f99270b115239646a20972b3c83aaecea8900c1a
ms.sourcegitcommit: beffe9455dace422e85b92f0105c54ff7b594cbf
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 09/20/2018
ms.locfileid: "24045193"
items:
- uid: excel.Excel.Interfaces.ConditionalFormatData
  summary: Eine Schnittstelle, die von der aufrufenden "conditionalFormat.toJSON()" zurückgegebenen Daten beschreibt.
  name: Excel.Interfaces.ConditionalFormatData
  fullName: excel.Excel.Interfaces.ConditionalFormatData
  langs:
  - typeScript
  type: interface
  package: excel
  children:
  - excel.Excel.Interfaces.ConditionalFormatData.cellValue
  - excel.Excel.Interfaces.ConditionalFormatData.cellValueOrNullObject
  - excel.Excel.Interfaces.ConditionalFormatData.colorScale
  - excel.Excel.Interfaces.ConditionalFormatData.colorScaleOrNullObject
  - excel.Excel.Interfaces.ConditionalFormatData.custom
  - excel.Excel.Interfaces.ConditionalFormatData.customOrNullObject
  - excel.Excel.Interfaces.ConditionalFormatData.dataBar
  - excel.Excel.Interfaces.ConditionalFormatData.dataBarOrNullObject
  - excel.Excel.Interfaces.ConditionalFormatData.iconSet
  - excel.Excel.Interfaces.ConditionalFormatData.iconSetOrNullObject
  - excel.Excel.Interfaces.ConditionalFormatData.id
  - excel.Excel.Interfaces.ConditionalFormatData.preset
  - excel.Excel.Interfaces.ConditionalFormatData.presetOrNullObject
  - excel.Excel.Interfaces.ConditionalFormatData.priority
  - excel.Excel.Interfaces.ConditionalFormatData.stopIfTrue
  - excel.Excel.Interfaces.ConditionalFormatData.textComparison
  - excel.Excel.Interfaces.ConditionalFormatData.textComparisonOrNullObject
  - excel.Excel.Interfaces.ConditionalFormatData.topBottom
  - excel.Excel.Interfaces.ConditionalFormatData.topBottomOrNullObject
  - excel.Excel.Interfaces.ConditionalFormatData.type
- uid: excel.Excel.Interfaces.ConditionalFormatData.cellValue
  summary: >-
    Gibt die Zelle Werteigenschaften bedingtes Format zurück, wenn die aktuelle bedingte Formatierung ein CellValue-Typ ist. Beispielsweise alle Zellen zwischen 5 und 10 formatieren. Schreibgeschützt.


    \[[API-Satz: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: cellValue
  fullName: excel.Excel.Interfaces.ConditionalFormatData.cellValue
  langs:
  - typeScript
  type: property
  syntax:
    content: 'cellValue?: Excel.Interfaces.CellValueConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.CellValueConditionalFormatData
- uid: excel.Excel.Interfaces.ConditionalFormatData.cellValueOrNullObject
  summary: >-
    Gibt die Zelle Werteigenschaften bedingtes Format zurück, wenn die aktuelle bedingte Formatierung ein CellValue-Typ ist. Beispielsweise alle Zellen zwischen 5 und 10 formatieren. Schreibgeschützt.


    \[[API-Satz: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: cellValueOrNullObject
  fullName: excel.Excel.Interfaces.ConditionalFormatData.cellValueOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'cellValueOrNullObject?: Excel.Interfaces.CellValueConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.CellValueConditionalFormatData
- uid: excel.Excel.Interfaces.ConditionalFormatData.colorScale
  summary: >-
    Gibt die ColorScale-Eigenschaften des bedingten Formats zurück, wenn das aktuelle bedingte Format einen ColorScale-Typ aufweist. Schreibgeschützt.


    \[[API-Satz: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: colorScale
  fullName: excel.Excel.Interfaces.ConditionalFormatData.colorScale
  langs:
  - typeScript
  type: property
  syntax:
    content: 'colorScale?: Excel.Interfaces.ColorScaleConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.ColorScaleConditionalFormatData
- uid: excel.Excel.Interfaces.ConditionalFormatData.colorScaleOrNullObject
  summary: >-
    Gibt die ColorScale-Eigenschaften des bedingten Formats zurück, wenn das aktuelle bedingte Format einen ColorScale-Typ aufweist. Schreibgeschützt.


    \[[API-Satz: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: colorScaleOrNullObject
  fullName: excel.Excel.Interfaces.ConditionalFormatData.colorScaleOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'colorScaleOrNullObject?: Excel.Interfaces.ColorScaleConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.ColorScaleConditionalFormatData
- uid: excel.Excel.Interfaces.ConditionalFormatData.custom
  summary: >-
    Gibt die benutzerdefinierten Eigenschaften des bedingten Formats zurück, wenn das aktuelle bedingte Format einen custom-Typ aufweist. Schreibgeschützt.


    \[[API-Satz: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: custom
  fullName: excel.Excel.Interfaces.ConditionalFormatData.custom
  langs:
  - typeScript
  type: property
  syntax:
    content: 'custom?: Excel.Interfaces.CustomConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.CustomConditionalFormatData
- uid: excel.Excel.Interfaces.ConditionalFormatData.customOrNullObject
  summary: >-
    Gibt die benutzerdefinierten Eigenschaften des bedingten Formats zurück, wenn das aktuelle bedingte Format einen custom-Typ aufweist. Schreibgeschützt.


    \[[API-Satz: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: customOrNullObject
  fullName: excel.Excel.Interfaces.ConditionalFormatData.customOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'customOrNullObject?: Excel.Interfaces.CustomConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.CustomConditionalFormatData
- uid: excel.Excel.Interfaces.ConditionalFormatData.dataBar
  summary: >-
    Gibt die Datenbalkeneigenschaften zurück, wenn das aktuelle bedingte Format ein Datenbalken ist. Schreibgeschützt.


    \[[API-Satz: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: dataBar
  fullName: excel.Excel.Interfaces.ConditionalFormatData.dataBar
  langs:
  - typeScript
  type: property
  syntax:
    content: 'dataBar?: Excel.Interfaces.DataBarConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.DataBarConditionalFormatData
- uid: excel.Excel.Interfaces.ConditionalFormatData.dataBarOrNullObject
  summary: >-
    Gibt die Datenbalkeneigenschaften zurück, wenn das aktuelle bedingte Format ein Datenbalken ist. Schreibgeschützt.


    \[[API-Satz: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: dataBarOrNullObject
  fullName: excel.Excel.Interfaces.ConditionalFormatData.dataBarOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'dataBarOrNullObject?: Excel.Interfaces.DataBarConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.DataBarConditionalFormatData
- uid: excel.Excel.Interfaces.ConditionalFormatData.iconSet
  summary: >-
    Gibt die IconSet-Eigenschaften des bedingten Formats zurück, wenn das aktuelle bedingte Format einen IconSet-Typ aufweist. Schreibgeschützt.


    \[[API-Satz: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: iconSet
  fullName: excel.Excel.Interfaces.ConditionalFormatData.iconSet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'iconSet?: Excel.Interfaces.IconSetConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.IconSetConditionalFormatData
- uid: excel.Excel.Interfaces.ConditionalFormatData.iconSetOrNullObject
  summary: >-
    Gibt die IconSet-Eigenschaften des bedingten Formats zurück, wenn das aktuelle bedingte Format einen IconSet-Typ aufweist. Schreibgeschützt.


    \[[API-Satz: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: iconSetOrNullObject
  fullName: excel.Excel.Interfaces.ConditionalFormatData.iconSetOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'iconSetOrNullObject?: Excel.Interfaces.IconSetConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.IconSetConditionalFormatData
- uid: excel.Excel.Interfaces.ConditionalFormatData.id
  summary: >-
    Die Priorität der bedingten Formatierung in der aktuellen ConditionalFormatCollection. Schreibgeschützt.


    \[[API-Satz: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: id
  fullName: excel.Excel.Interfaces.ConditionalFormatData.id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'id?: string;'
    return:
      type:
      - string
- uid: excel.Excel.Interfaces.ConditionalFormatData.preset
  summary: >-
    Gibt die bedingte Formatierung voreingestellten Kriterien zurück. Einzelheiten finden Sie unter Excel.PresetCriteriaConditionalFormat.


    \[[API-Satz: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: preset
  fullName: excel.Excel.Interfaces.ConditionalFormatData.preset
  langs:
  - typeScript
  type: property
  syntax:
    content: 'preset?: Excel.Interfaces.PresetCriteriaConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.PresetCriteriaConditionalFormatData
- uid: excel.Excel.Interfaces.ConditionalFormatData.presetOrNullObject
  summary: >-
    Gibt die bedingte Formatierung voreingestellten Kriterien zurück. Einzelheiten finden Sie unter Excel.PresetCriteriaConditionalFormat.


    \[[API-Satz: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: presetOrNullObject
  fullName: excel.Excel.Interfaces.ConditionalFormatData.presetOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'presetOrNullObject?: Excel.Interfaces.PresetCriteriaConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.PresetCriteriaConditionalFormatData
- uid: excel.Excel.Interfaces.ConditionalFormatData.priority
  summary: >-
    Der Priorität (oder Index) in der bedingten Formatierung-Auflistung, die diese bedingte format derzeit ist in vorhanden. Dies ändern, ändert sich auch andere bedingte Formate Prioritäten, um einen zusammenhängenden Prioritätsreihenfolge zu ermöglichen. Verwenden Sie eine negative Priorität auf der Rückseite beginnen. Größer als Grenzen Prioritäten werden abrufen und Festlegen der Priorität maximalen (oder minimalen Wenn negativ). Wenn Sie die Priorität ändern, müssen Sie eine neue Kopie des Objekts an diesem Speicherort der neuen Priorität erneut abzurufen, wenn Sie weitere machen möchten ändert sich ebenfalls hinzu. Schreibgeschützt.


    \[[API-Satz: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: priority
  fullName: excel.Excel.Interfaces.ConditionalFormatData.priority
  langs:
  - typeScript
  type: property
  syntax:
    content: 'priority?: number;'
    return:
      type:
      - number
- uid: excel.Excel.Interfaces.ConditionalFormatData.stopIfTrue
  summary: >-
    Wenn die Bedingungen dieses bedingten Formats erfüllt sind, werden keine Formate niedrigerer Priorität für diese Zelle wirksam. Wie es kein Konzept von StopIfTrue für diese gibt Databars, Symbolsätze und Colorscales null


    \[[API-Satz: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: stopIfTrue
  fullName: excel.Excel.Interfaces.ConditionalFormatData.stopIfTrue
  langs:
  - typeScript
  type: property
  syntax:
    content: 'stopIfTrue?: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Interfaces.ConditionalFormatData.textComparison
  summary: >-
    Der bestimmten Text erste bedingte Format der Eigenschaften die aktuelle bedingte Formatierung einen Textfeldtyp wird zurückgegeben. Beispiel zum Formatieren von Zellen für die Suche nach Übereinstimmungen das Wort "Text". Schreibgeschützt.


    \[[API-Satz: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: textComparison
  fullName: excel.Excel.Interfaces.ConditionalFormatData.textComparison
  langs:
  - typeScript
  type: property
  syntax:
    content: 'textComparison?: Excel.Interfaces.TextConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.TextConditionalFormatData
- uid: excel.Excel.Interfaces.ConditionalFormatData.textComparisonOrNullObject
  summary: >-
    Der bestimmten Text erste bedingte Format der Eigenschaften die aktuelle bedingte Formatierung einen Textfeldtyp wird zurückgegeben. Beispiel zum Formatieren von Zellen für die Suche nach Übereinstimmungen das Wort "Text". Schreibgeschützt.


    \[[API-Satz: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: textComparisonOrNullObject
  fullName: excel.Excel.Interfaces.ConditionalFormatData.textComparisonOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'textComparisonOrNullObject?: Excel.Interfaces.TextConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.TextConditionalFormatData
- uid: excel.Excel.Interfaces.ConditionalFormatData.topBottom
  summary: >-
    Die oben/unten bedingtes Format-Eigenschaften zurückgegeben, wenn die aktuelle bedingte Formatierung ein TopBottom-Typ ist. Beispielsweise zum Formatieren der obersten 10 % oder die letzte 10 Elemente. Schreibgeschützt.


    \[[API-Satz: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: topBottom
  fullName: excel.Excel.Interfaces.ConditionalFormatData.topBottom
  langs:
  - typeScript
  type: property
  syntax:
    content: 'topBottom?: Excel.Interfaces.TopBottomConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.TopBottomConditionalFormatData
- uid: excel.Excel.Interfaces.ConditionalFormatData.topBottomOrNullObject
  summary: >-
    Die oben/unten bedingtes Format-Eigenschaften zurückgegeben, wenn die aktuelle bedingte Formatierung ein TopBottom-Typ ist. Beispielsweise zum Formatieren der obersten 10 % oder die letzte 10 Elemente. Schreibgeschützt.


    \[[API-Satz: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: topBottomOrNullObject
  fullName: excel.Excel.Interfaces.ConditionalFormatData.topBottomOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'topBottomOrNullObject?: Excel.Interfaces.TopBottomConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.TopBottomConditionalFormatData
- uid: excel.Excel.Interfaces.ConditionalFormatData.type
  summary: >-
    Ein Typ von bedingten Formatierung. Zu einem Zeitpunkt kann nur festgelegt werden. Schreibgeschützt.


    \[[API-Satz: ExcelApi 1.6](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: type
  fullName: excel.Excel.Interfaces.ConditionalFormatData.type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'type?: Excel.ConditionalFormatType | "Custom" | "DataBar" | "ColorScale" | "IconSet" | "TopBottom" | "PresetCriteria" | "ContainsText" | "CellValue";'
    return:
      type:
      - Excel.ConditionalFormatType | "Custom" | "DataBar" | "ColorScale" | "IconSet" | "TopBottom" | "PresetCriteria" | "ContainsText" | "CellValue"
