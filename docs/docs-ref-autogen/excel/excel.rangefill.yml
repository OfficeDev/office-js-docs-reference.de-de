### YamlMime:UniversalReference
ms.openlocfilehash: 7cf795e16d8b1c4d1b7f31f4c07a8002519356e0
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/13/2019
ms.locfileid: "29980478"
items:
- uid: excel.Excel.RangeFill
  summary: >-
    <span data-ttu-id="0c59d-101">Stellt den Hintergrund eines Bereichsobjekts dar.</span><span class="sxs-lookup"><span data-stu-id="0c59d-101">Represents the background of a range object.</span></span>


    <span data-ttu-id="0c59d-102">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0c59d-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.RangeFill
  fullName: Excel.RangeFill
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.RangeFill.clear
  - excel.Excel.RangeFill.color
  - excel.Excel.RangeFill.context
  - excel.Excel.RangeFill.load
  - excel.Excel.RangeFill.load_1
  - excel.Excel.RangeFill.load_2
  - excel.Excel.RangeFill.set
  - excel.Excel.RangeFill.set_1
  - excel.Excel.RangeFill.toJSON
- uid: excel.Excel.RangeFill.clear
  summary: >-
    <span data-ttu-id="0c59d-103">Setzt den Hintergrund des Bereichs zurück.</span><span class="sxs-lookup"><span data-stu-id="0c59d-103">Resets the range background.</span></span>


    <span data-ttu-id="0c59d-104">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0c59d-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: clear()
  fullName: clear()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"0c59d-105\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"0c59d-105\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var rangeFill = range.format.fill;\n    rangeFill.clear();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.RangeFill.color
  summary: >-
    <span data-ttu-id="0c59d-106">HTML-Farbcode, die Hintergrundfarbe des Formulars darstellt \#RRGGBB (z. B. "FFA500") oder als eine benannte HTML-Farbe (z. B. "orange")</span><span class="sxs-lookup"><span data-stu-id="0c59d-106">HTML color code representing the color of the background, of the form \#RRGGBB (e.g. "FFA500") or as a named HTML color (e.g. "orange")</span></span>


    <span data-ttu-id="0c59d-107">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0c59d-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: color
  fullName: color
  langs:
  - typeScript
  type: property
  syntax:
    content: 'color: string;'
    return:
      type:
      - string
- uid: excel.Excel.RangeFill.context
  summary: <span data-ttu-id="0c59d-108">Der Anforderungskontext-zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="0c59d-108">The request context associated with the object.</span></span> <span data-ttu-id="0c59d-109">Dadurch wird das Add-in Prozess mit der Office-hostanwendung Prozess verbunden.</span><span class="sxs-lookup"><span data-stu-id="0c59d-109">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.RangeFill.load
  summary: <span data-ttu-id="0c59d-110">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="0c59d-110">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0c59d-111">Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="0c59d-111">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="0c59d-112">Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="0c59d-112">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="0c59d-113">`load(option?: string | string[]): Excel.RangeFill`-Wo Option ist eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="0c59d-113">`load(option?: string | string[]): Excel.RangeFill` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="0c59d-114">`load(option?: { select?: string; expand?: string; }): Excel.RangeFill`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class="sxs-lookup"><span data-stu-id="0c59d-114">`load(option?: { select?: string; expand?: string; }): Excel.RangeFill` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="0c59d-115">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeFill`-Nur auf Auflistungstypen verfügbar.</span><span class="sxs-lookup"><span data-stu-id="0c59d-115">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeFill` - Only available on collection types.</span></span> <span data-ttu-id="0c59d-116">Es ist ähnlich wie die jeweils vorhergehende Signatur.</span><span class="sxs-lookup"><span data-stu-id="0c59d-116">It is similar to the preceding signature.</span></span> <span data-ttu-id="0c59d-117">Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können.</span><span class="sxs-lookup"><span data-stu-id="0c59d-117">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="0c59d-118">Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="0c59d-118">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="0c59d-119">Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.</span><span class="sxs-lookup"><span data-stu-id="0c59d-119">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.RangeFillLoadOptions): Excel.RangeFill;'
    return:
      type:
      - excel.Excel.RangeFill
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.RangeFillLoadOptions
- uid: excel.Excel.RangeFill.load_1
  summary: <span data-ttu-id="0c59d-120">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="0c59d-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0c59d-121">Sie müssen Aufrufen `context.sync()` vor dem Lesen der Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="0c59d-121">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.RangeFill;'
    return:
      type:
      - excel.Excel.RangeFill
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"0c59d-122\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"0c59d-122\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var rangeFill = range.format.fill;\n    rangeFill.load('color');\n    return ctx.sync().then(function() {\n        console.log(rangeFill.color);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// The example below sets fill color. \nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.format.fill.color = '0000FF';\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="0c59d-123">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="0c59d-123">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.RangeFill.load_2
  summary: <span data-ttu-id="0c59d-124">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="0c59d-124">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0c59d-125">Sie müssen Aufrufen `context.sync()` vor dem Lesen der Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="0c59d-125">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.RangeFill;'
    return:
      type:
      - excel.Excel.RangeFill
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="0c59d-126">Wobei propertyNamesAndPaths.select ist eine durch Kommas getrennte Zeichenfolge, die angibt, die Eigenschaften zum Laden und propertyNamesAndPaths.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class="sxs-lookup"><span data-stu-id="0c59d-126">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.RangeFill.set
  summary: <span data-ttu-id="0c59d-127">Legt mehrere Eigenschaften eines Objekts zur selben Zeit fest.</span><span class="sxs-lookup"><span data-stu-id="0c59d-127">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="0c59d-128">Sie können entweder eine einfache-Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt des gleichen Typs übergeben.</span><span class="sxs-lookup"><span data-stu-id="0c59d-128">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="0c59d-129">Diese Methode hat die folgenden zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="0c59d-129">This method has the following additional signature:</span></span>


    `set(properties: Excel.RangeFill): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.RangeFillUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="0c59d-130">Ein JavaScript-Objekt mit Eigenschaften, die an die Eigenschaften des Objekts isomorphically strukturiert werden, auf denen die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="0c59d-130">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.RangeFillUpdateData
    - id: options
      description: <span data-ttu-id="0c59d-131">Bietet eine Option, um Fehler zu unterdrücken, wenn schreibgeschützte Eigenschaften festgelegt werden, versucht das Properties-Objekt.</span><span class="sxs-lookup"><span data-stu-id="0c59d-131">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.RangeFill.set_1
  summary: <span data-ttu-id="0c59d-132">Mehrere Eigenschaften festgelegt auf das Objekt zur selben Zeit, basierend auf einem vorhandenen geladen-Objekt.</span><span class="sxs-lookup"><span data-stu-id="0c59d-132">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.RangeFill): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.RangeFill
- uid: excel.Excel.RangeFill.toJSON
  summary: <span data-ttu-id="0c59d-133">Überschreibt das JavaScript `toJSON()` Methode, um nützliche Ausgabe zu gewährleisten, wenn ein API-Objekt zu übergeben ist `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="0c59d-133">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="0c59d-134">(`JSON.stringify`<!-- -->, wiederum die `toJSON` -Methode des Objekts, das es übergeben wird.) Das ursprüngliche Excel.RangeFill-Objekt ist ein API-Objekt der `toJSON` -Methode gibt eine einfache JavaScript-Objekt zurück (als `Excel.Interfaces.RangeFillData` <!-- -->), die flache Kopien der geladene untergeordnete Eigenschaften aus dem ursprünglichen-Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="0c59d-134">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.RangeFill object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.RangeFillData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.RangeFillData;'
    return:
      type:
      - excel.Excel.Interfaces.RangeFillData
      description: ''
