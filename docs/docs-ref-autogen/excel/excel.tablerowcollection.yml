### YamlMime:UniversalReference
ms.openlocfilehash: 585a94b64064bcd631ccafdcf656acedc89d7ad8
ms.sourcegitcommit: 262b7c417245b7b61a57d53eee33a477a722ca6e
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 09/28/2018
ms.locfileid: "24047151"
items:
- uid: excel.Excel.TableRowCollection
  summary: >-
    <span data-ttu-id="c91b6-101">Stellt eine Auflistung aller Zeilen dar, die Teil der Tabelle sind.</span><span class="sxs-lookup"><span data-stu-id="c91b6-101">Represents a collection of all the rows that are part of the table.</span></span>


    <span data-ttu-id="c91b6-102">Beachten Sie, dass im Gegensatz zu Bereichen oder Spalten, die angepasst werden, wenn neue Zeilen/Spalten, bevor Sie diese hinzugefügt werden, ein TableRow-Objekt den physischen Standort der Tabellenzeile, jedoch nicht die Daten darstellen.</span><span class="sxs-lookup"><span data-stu-id="c91b6-102">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="c91b6-103">D. h., weiterhin Wenn die Daten sortiert ist oder wenn neue Zeilen hinzugefügt werden, eine Tabellenzeile am Index zeigen Sie für die sie erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="c91b6-103">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>


    <span data-ttu-id="c91b6-104">\[[API-Satz: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c91b6-104">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.TableRowCollection
  fullName: excel.Excel.TableRowCollection
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.TableRowCollection.add
  - excel.Excel.TableRowCollection.count
  - excel.Excel.TableRowCollection.getCount
  - excel.Excel.TableRowCollection.getItemAt
  - excel.Excel.TableRowCollection.items
  - excel.Excel.TableRowCollection.load
  - excel.Excel.TableRowCollection.toJSON
- uid: excel.Excel.TableRowCollection.add
  summary: >-
    <span data-ttu-id="c91b6-p102">Fügt der Tabelle mindestens eine Zeile hinzu. Das Rückgabeobjekt ist die oberste Zeile der neu hinzugefügten Zeilen.</span><span class="sxs-lookup"><span data-stu-id="c91b6-p102">Adds one or more rows to the table. The return object will be the top of the newly added row(s).</span></span>


    <span data-ttu-id="c91b6-107">Beachten Sie, dass im Gegensatz zu Bereichen oder Spalten, die angepasst werden, wenn neue Zeilen/Spalten, bevor Sie diese hinzugefügt werden, ein TableRow-Objekt den physischen Standort der Tabellenzeile, jedoch nicht die Daten darstellen.</span><span class="sxs-lookup"><span data-stu-id="c91b6-107">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="c91b6-108">D. h., weiterhin Wenn die Daten sortiert ist oder wenn neue Zeilen hinzugefügt werden, eine Tabellenzeile am Index zeigen Sie für die sie erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="c91b6-108">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>


    <span data-ttu-id="c91b6-109">\[[API-Satz: ExcelApi 1.1 für das Hinzufügen einer einzelnen Zeile; 1.4 ermöglicht das Hinzufügen mehrerer Zeilen.](/javascript/office/requirement-sets/excel-api-requirement-sets)</span><span class="sxs-lookup"><span data-stu-id="c91b6-109">\[ [API set: ExcelApi 1.1 for adding a single row; 1.4 allows adding of multiple rows.](/javascript/office/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id="c91b6-110">\]</span><span class="sxs-lookup"><span data-stu-id="c91b6-110"></span></span>
  name: add(index, values)
  fullName: excel.Excel.TableRowCollection.add
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(index?: number, values?: Array<Array<boolean | string | number>> | boolean | string | number): Excel.TableRow;'
    return:
      type:
      - excel.Excel.TableRow
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"c91b6-111\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"c91b6-111\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tables = ctx.workbook.tables;\n    var values = [[\"Sample\", \"Values\", \"For\", \"New\", \"Row\"]];\n    var row = tables.getItem(\"Table1\").rows.add(null, values);\n    row.load('index');\n    return ctx.sync().then(function() {\n        console.log(row.index);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="c91b6-p105">Optional. Gibt die relative Position der neuen Zeile an. Bei NULL oder -1 erfolgt die Erweiterung am Ende. Alle Zeilen unterhalb der eingefügten Zeile werden nach unten verschoben. Nullindiziert.</span><span class="sxs-lookup"><span data-stu-id="c91b6-p105">Optional. Specifies the relative position of the new row. If null or -1, the addition happens at the end. Any rows below the inserted row are shifted downwards. Zero-indexed.</span></span>
      type:
      - number
    - id: values
      description: <span data-ttu-id="c91b6-p106">Optional. Ein 2-dimensionales Array von unformatierten Werten der Tabellenzeile.</span><span class="sxs-lookup"><span data-stu-id="c91b6-p106">Optional. A 2-dimensional array of unformatted values of the table row.</span></span>
      type:
      - Array<Array<boolean | string | number>> | boolean | string | number
- uid: excel.Excel.TableRowCollection.count
  summary: >-
    <span data-ttu-id="c91b6-p107">Gibt die Anzahl der Zeilen in der Tabelle zurück. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="c91b6-p107">Returns the number of rows in the table. Read-only.</span></span>


    <span data-ttu-id="c91b6-121">\[[API-Satz: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c91b6-121">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: count
  fullName: excel.Excel.TableRowCollection.count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: excel.Excel.TableRowCollection.getCount
  summary: >-
    <span data-ttu-id="c91b6-122">Ruft die Anzahl der Zeilen in der Tabelle ab.</span><span class="sxs-lookup"><span data-stu-id="c91b6-122">Gets the number of rows in the table.</span></span>


    <span data-ttu-id="c91b6-123">\[[API-Satz: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c91b6-123">\[ [API set: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: excel.Excel.TableRowCollection.getCount
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.TableRowCollection.getItemAt
  summary: >-
    <span data-ttu-id="c91b6-124">Ruft eine Zeile anhand ihrer Position in der Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="c91b6-124">Gets a row based on its position in the collection.</span></span>


    <span data-ttu-id="c91b6-125">Beachten Sie, dass im Gegensatz zu Bereichen oder Spalten, die angepasst werden, wenn neue Zeilen/Spalten, bevor Sie diese hinzugefügt werden, ein TableRow-Objekt den physischen Standort der Tabellenzeile, jedoch nicht die Daten darstellen.</span><span class="sxs-lookup"><span data-stu-id="c91b6-125">Note that unlike Ranges or Columns, which will adjust if new rows/columns are added before them, a TableRow object represent the physical location of the table row, but not the data.</span></span> <span data-ttu-id="c91b6-126">D. h., weiterhin Wenn die Daten sortiert ist oder wenn neue Zeilen hinzugefügt werden, eine Tabellenzeile am Index zeigen Sie für die sie erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="c91b6-126">That is, if the data is sorted or if new rows are added, a table row will continue to point at the index for which it was created.</span></span>


    <span data-ttu-id="c91b6-127">\[[API-Satz: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c91b6-127">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: excel.Excel.TableRowCollection.getItemAt
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.TableRow;'
    return:
      type:
      - excel.Excel.TableRow
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"c91b6-128\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"c91b6-128\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tablerow = ctx.workbook.tables.getItem('Table1').rows.getItemAt(0);\n    tablerow.load('name');\n    return ctx.sync().then(function() {\n            console.log(tablerow.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="c91b6-p109">Index-Wert des abzurufenden Objekts. Nullindiziert.</span><span class="sxs-lookup"><span data-stu-id="c91b6-p109">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.TableRowCollection.items
  summary: <span data-ttu-id="c91b6-131">Ruft die geladene untergeordnete Elemente in dieser Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="c91b6-131">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: excel.Excel.TableRowCollection.items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.TableRow[];'
    return:
      type:
      - Excel.TableRow[]
- uid: excel.Excel.TableRowCollection.load
  summary: <span data-ttu-id="c91b6-132">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="c91b6-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c91b6-133">Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="c91b6-133">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"c91b6-134\">Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:</span><span class=\"sxs-lookup\"><span data-stu-id=\"c91b6-134\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"c91b6-135\">`load(option?: { select?: string; expand?: string; }): Excel.TableRowCollection`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c91b6-135\">`load(option?: { select?: string; expand?: string; }): Excel.TableRowCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"c91b6-136\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableRowCollection`-Nur auf Auflistungstypen verfügbar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c91b6-136\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableRowCollection` - Only available on collection types.</span></span> <span data-ttu-id=\"c91b6-137\">Es ist ähnlich wie die jeweils vorhergehende Signatur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c91b6-137\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"c91b6-138\">Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c91b6-138\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"c91b6-139\">Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c91b6-139\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"c91b6-140\">Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.</span><span class=\"sxs-lookup\"><span data-stu-id=\"c91b6-140\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"c91b6-141\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"c91b6-141\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tablerows = ctx.workbook.tables.getItem('Table1').rows;\n    tablerows.load('items');\n    return ctx.sync().then(function() {\n        console.log(\"tablerows Count: \" + tablerows.count);\n        for (var i = 0; i < tablerows.items.length; i++)\n        {\n            console.log(tablerows.items[i].index);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// In the example, we'll select the top 100 rows of the table.\nExcel.run(function (ctx) { \n    var table = ctx.workbook.tables.getItem(\"Table1\");\n    var tableRows = table.rows.load({\"select\" : \"index, values\",\"top\": 100, \"skip\": 0 })\n    return ctx.sync().then(function() {\n        for (var i = 0; i < tableRows.items.length; i++)\n        {\n            console.log(tableRows.items[i].index);\n            console.log(tableRows.items[i].values);\n        }\n    });\n}).catch(function(error) {\n        console.log(\"Error: \" + error);\n        if (error instanceof OfficeExtension.Error) {\n            console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n        }\n});\n```"
  name: load(option)
  fullName: excel.Excel.TableRowCollection.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.TableRowCollection;'
    return:
      type:
      - excel.Excel.TableRowCollection
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="c91b6-142">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="c91b6-142">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.TableRowCollection.toJSON
  name: toJSON()
  fullName: excel.Excel.TableRowCollection.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableRowCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.TableRowCollectionData
      description: ''
