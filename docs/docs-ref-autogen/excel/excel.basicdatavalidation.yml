### YamlMime:UniversalReference
items:
  - uid: excel.Excel.BasicDataValidation
    summary: |-
      Stellt die grundlegenden Typen Daten Überprüfungskriterien dar.

      \[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.BasicDataValidation
    fullName: Excel.BasicDataValidation
    langs:
      - typeScript
    type: interface
    package: excel
    children:
      - excel.Excel.BasicDataValidation.formula1
      - excel.Excel.BasicDataValidation.formula2
      - excel.Excel.BasicDataValidation.operator
  - uid: excel.Excel.BasicDataValidation.formula1
    summary: |-
      Gibt den rechten Operanden an, wenn die Operator-Eigenschaft auf einen binären Operator wie GreaterThan festgelegt ist (der linke Operand ist der Wert, den der Benutzer in die Zelle eingeben will). Mit den dreistelligen Operatoren zwischen und NotBetween gibt den unteren gebundenen Operanden an. Wenn Sie beispielsweise die Formel 1 auf 10 und den Operator zu GreaterThan festlegen, müssen gültige Daten für den Range größer als 10 sein. Beim Festlegen des Werts kann er als Zahl, ein Range-Objekt oder eine Zeichenfolgenformel übergeben werden (wobei es sich bei der Zeichenfolge entweder um eine stringified-Nummer, einen Zellverweis wie "= a1" oder eine Formel wie "= MIN (a1, B1)") handelt. Wenn der Wert abgerufen wird, wird er immer als Zeichenfolgenformel zurückgegeben, beispielsweise: "= 10", "= a1", "= SUM (a1: B5)" usw.

      \[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: formula1
    fullName: formula1
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formula1: string | number | Range;'
      return:
        type:
          - string | number | Range
  - uid: excel.Excel.BasicDataValidation.formula2
    summary: |-
      Mit den dreistelligen Operatoren zwischen und NotBetween gibt den oberen gebundenen Operanden an. Wird nicht mit den binären Operatoren wie GreaterThan verwendet. Beim Festlegen des Werts kann er als Zahl, ein Range-Objekt oder eine Zeichenfolgenformel übergeben werden (wobei es sich bei der Zeichenfolge entweder um eine stringified-Nummer, einen Zellverweis wie "= a1" oder eine Formel wie "= MIN (a1, B1)") handelt. Wenn der Wert abgerufen wird, wird er immer als Zeichenfolgenformel zurückgegeben, beispielsweise: "= 10", "= a1", "= SUM (a1: B5)" usw.

      \[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: formula2
    fullName: formula2
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formula2?: string | number | Range;'
      return:
        type:
          - string | number | Range
  - uid: excel.Excel.BasicDataValidation.operator
    summary: |-
      Der Operator, der zum Überprüfen der Daten verwendet wird.

      \[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: operator
    fullName: operator
    langs:
      - typeScript
    type: property
    syntax:
      content: 'operator: Excel.DataValidationOperator | "Between" | "NotBetween" | "EqualTo" | "NotEqualTo" | "GreaterThan" | "LessThan" | "GreaterThanOrEqualTo" | "LessThanOrEqualTo";'
      return:
        type:
          - Excel.DataValidationOperator | "Between" | "NotBetween" | "EqualTo" | "NotEqualTo" | "GreaterThan" | "LessThan" | "GreaterThanOrEqualTo" | "LessThanOrEqualTo"