### YamlMime:UniversalReference
ms.openlocfilehash: b5463837bbec9b7ec646ff2c11dae2784157faa1
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/13/2019
ms.locfileid: "29985136"
items:
- uid: excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions
  summary: >-
    Stelle eine Sammlung aller bedingte Formate dar, die den Bereich überlappen.


    \[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.Interfaces.ConditionalFormatCollectionLoadOptions
  fullName: Excel.Interfaces.ConditionalFormatCollectionLoadOptions
  langs:
  - typeScript
  type: interface
  package: excel
  children:
  - excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.$all
  - excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.cellValue
  - excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.cellValueOrNullObject
  - excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.colorScale
  - excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.colorScaleOrNullObject
  - excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.custom
  - excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.customOrNullObject
  - excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.dataBar
  - excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.dataBarOrNullObject
  - excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.iconSet
  - excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.iconSetOrNullObject
  - excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.id
  - excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.preset
  - excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.presetOrNullObject
  - excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.priority
  - excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.stopIfTrue
  - excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.textComparison
  - excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.textComparisonOrNullObject
  - excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.topBottom
  - excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.topBottomOrNullObject
  - excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.type
- uid: excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.$all
  name: $all
  fullName: $all
  langs:
  - typeScript
  type: property
  syntax:
    content: '$all?: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.cellValue
  summary: >-
    Für jedes Element in der Auflistung: Gibt die Zelle Werteigenschaften bedingtes Format zurück, wenn die aktuelle bedingte Formatierung ein CellValue-Typ ist. Beispielsweise alle Zellen zwischen 5 und 10 formatieren.


    \[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: cellValue
  fullName: cellValue
  langs:
  - typeScript
  type: property
  syntax:
    content: 'cellValue?: Excel.Interfaces.CellValueConditionalFormatLoadOptions;'
    return:
      type:
      - excel.Excel.Interfaces.CellValueConditionalFormatLoadOptions
- uid: excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.cellValueOrNullObject
  summary: >-
    Für jedes Element in der Auflistung: Gibt die Zelle Werteigenschaften bedingtes Format zurück, wenn die aktuelle bedingte Formatierung ein CellValue-Typ ist. Beispielsweise alle Zellen zwischen 5 und 10 formatieren.


    \[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: cellValueOrNullObject
  fullName: cellValueOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'cellValueOrNullObject?: Excel.Interfaces.CellValueConditionalFormatLoadOptions;'
    return:
      type:
      - excel.Excel.Interfaces.CellValueConditionalFormatLoadOptions
- uid: excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.colorScale
  summary: >-
    Für jedes Element in der Auflistung: die ColorScale bedingtes Formateigenschaften zurückgegeben, wenn die aktuelle bedingte Formatierung ein ColorScale-Typ ist.


    \[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: colorScale
  fullName: colorScale
  langs:
  - typeScript
  type: property
  syntax:
    content: 'colorScale?: Excel.Interfaces.ColorScaleConditionalFormatLoadOptions;'
    return:
      type:
      - excel.Excel.Interfaces.ColorScaleConditionalFormatLoadOptions
- uid: excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.colorScaleOrNullObject
  summary: >-
    Für jedes Element in der Auflistung: die ColorScale bedingtes Formateigenschaften zurückgegeben, wenn die aktuelle bedingte Formatierung ein ColorScale-Typ ist.


    \[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: colorScaleOrNullObject
  fullName: colorScaleOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'colorScaleOrNullObject?: Excel.Interfaces.ColorScaleConditionalFormatLoadOptions;'
    return:
      type:
      - excel.Excel.Interfaces.ColorScaleConditionalFormatLoadOptions
- uid: excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.custom
  summary: >-
    Für jedes Element in der Auflistung: Gibt die bedingte Formatierung benutzerdefinierte Eigenschaften zurück, wenn die aktuelle bedingte Formatierung einen benutzerdefinierten Typ handelt.


    \[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: custom
  fullName: custom
  langs:
  - typeScript
  type: property
  syntax:
    content: 'custom?: Excel.Interfaces.CustomConditionalFormatLoadOptions;'
    return:
      type:
      - excel.Excel.Interfaces.CustomConditionalFormatLoadOptions
- uid: excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.customOrNullObject
  summary: >-
    Für jedes Element in der Auflistung: Gibt die bedingte Formatierung benutzerdefinierte Eigenschaften zurück, wenn die aktuelle bedingte Formatierung einen benutzerdefinierten Typ handelt.


    \[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: customOrNullObject
  fullName: customOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'customOrNullObject?: Excel.Interfaces.CustomConditionalFormatLoadOptions;'
    return:
      type:
      - excel.Excel.Interfaces.CustomConditionalFormatLoadOptions
- uid: excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.dataBar
  summary: >-
    Für jedes Element in der Auflistung: Gibt die Eigenschaften der Daten zurück, wenn die aktuelle bedingte Formatierung eines Datenbalkens ist.


    \[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: dataBar
  fullName: dataBar
  langs:
  - typeScript
  type: property
  syntax:
    content: 'dataBar?: Excel.Interfaces.DataBarConditionalFormatLoadOptions;'
    return:
      type:
      - excel.Excel.Interfaces.DataBarConditionalFormatLoadOptions
- uid: excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.dataBarOrNullObject
  summary: >-
    Für jedes Element in der Auflistung: Gibt die Eigenschaften der Daten zurück, wenn die aktuelle bedingte Formatierung eines Datenbalkens ist.


    \[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: dataBarOrNullObject
  fullName: dataBarOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'dataBarOrNullObject?: Excel.Interfaces.DataBarConditionalFormatLoadOptions;'
    return:
      type:
      - excel.Excel.Interfaces.DataBarConditionalFormatLoadOptions
- uid: excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.iconSet
  summary: >-
    Für jedes Element in der Auflistung: die IconSet bedingtes Formateigenschaften zurückgegeben, wenn die aktuelle bedingte Formatierung ein IconSet-Typ ist.


    \[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: iconSet
  fullName: iconSet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'iconSet?: Excel.Interfaces.IconSetConditionalFormatLoadOptions;'
    return:
      type:
      - excel.Excel.Interfaces.IconSetConditionalFormatLoadOptions
- uid: excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.iconSetOrNullObject
  summary: >-
    Für jedes Element in der Auflistung: die IconSet bedingtes Formateigenschaften zurückgegeben, wenn die aktuelle bedingte Formatierung ein IconSet-Typ ist.


    \[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: iconSetOrNullObject
  fullName: iconSetOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'iconSetOrNullObject?: Excel.Interfaces.IconSetConditionalFormatLoadOptions;'
    return:
      type:
      - excel.Excel.Interfaces.IconSetConditionalFormatLoadOptions
- uid: excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.id
  summary: >-
    Für jedes Element in der Auflistung: die Priorität der bedingten Formatierung in der aktuellen ConditionalFormatCollection. Schreibgeschützt.


    \[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'id?: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.preset
  summary: >-
    Für jedes Element in der Auflistung: Gibt die bedingte Formatierung voreingestellten Kriterien. Einzelheiten finden Sie unter Excel.PresetCriteriaConditionalFormat.


    \[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: preset
  fullName: preset
  langs:
  - typeScript
  type: property
  syntax:
    content: 'preset?: Excel.Interfaces.PresetCriteriaConditionalFormatLoadOptions;'
    return:
      type:
      - excel.Excel.Interfaces.PresetCriteriaConditionalFormatLoadOptions
- uid: excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.presetOrNullObject
  summary: >-
    Für jedes Element in der Auflistung: Gibt die bedingte Formatierung voreingestellten Kriterien. Einzelheiten finden Sie unter Excel.PresetCriteriaConditionalFormat.


    \[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: presetOrNullObject
  fullName: presetOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'presetOrNullObject?: Excel.Interfaces.PresetCriteriaConditionalFormatLoadOptions;'
    return:
      type:
      - excel.Excel.Interfaces.PresetCriteriaConditionalFormatLoadOptions
- uid: excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.priority
  summary: >-
    Für jedes Element in der Auflistung: der Priorität (oder Index) in der bedingten Formatierung-Auflistung, die derzeit diese bedingte Formatierung in vorhanden ist. Dies ändern, ändert sich auch andere bedingte Formate Prioritäten, um einen zusammenhängenden Prioritätsreihenfolge zu ermöglichen. Verwenden Sie eine negative Priorität auf der Rückseite beginnen. Größer als Grenzen Prioritäten werden abrufen und Festlegen der Priorität maximalen (oder minimalen Wenn negativ). Wenn Sie die Priorität ändern, müssen Sie eine neue Kopie des Objekts an diesem Speicherort der neuen Priorität erneut abzurufen, wenn Sie weitere machen möchten ändert sich ebenfalls hinzu. Schreibgeschützt.


    \[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: priority
  fullName: priority
  langs:
  - typeScript
  type: property
  syntax:
    content: 'priority?: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.stopIfTrue
  summary: >-
    Für jedes Element in der Auflistung: Wenn die diese bedingten Formats erfüllt sind, treffen keine niedrigerer Priorität Formate Auswirkung auf die Zelle. Wie es kein Konzept von StopIfTrue für diese gibt Databars, Symbolsätze und Colorscales null


    \[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: stopIfTrue
  fullName: stopIfTrue
  langs:
  - typeScript
  type: property
  syntax:
    content: 'stopIfTrue?: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.textComparison
  summary: >-
    Für jedes Element in der Auflistung: der bestimmten Text bedingtes Formateigenschaften zurückgegeben, wenn die aktuelle bedingte Formatierung ein Textfeldtyp ist. Beispiel zum Formatieren von Zellen für die Suche nach Übereinstimmungen das Wort "Text".


    \[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: textComparison
  fullName: textComparison
  langs:
  - typeScript
  type: property
  syntax:
    content: 'textComparison?: Excel.Interfaces.TextConditionalFormatLoadOptions;'
    return:
      type:
      - excel.Excel.Interfaces.TextConditionalFormatLoadOptions
- uid: excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.textComparisonOrNullObject
  summary: >-
    Für jedes Element in der Auflistung: der bestimmten Text bedingtes Formateigenschaften zurückgegeben, wenn die aktuelle bedingte Formatierung ein Textfeldtyp ist. Beispiel zum Formatieren von Zellen für die Suche nach Übereinstimmungen das Wort "Text".


    \[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: textComparisonOrNullObject
  fullName: textComparisonOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'textComparisonOrNullObject?: Excel.Interfaces.TextConditionalFormatLoadOptions;'
    return:
      type:
      - excel.Excel.Interfaces.TextConditionalFormatLoadOptions
- uid: excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.topBottom
  summary: >-
    Für jedes Element in der Auflistung: die oben/unten bedingtes Formateigenschaften zurückgegeben, wenn die aktuelle bedingte Formatierung ein TopBottom-Typ ist. Beispielsweise zum Formatieren der obersten 10 % oder die letzte 10 Elemente.


    \[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: topBottom
  fullName: topBottom
  langs:
  - typeScript
  type: property
  syntax:
    content: 'topBottom?: Excel.Interfaces.TopBottomConditionalFormatLoadOptions;'
    return:
      type:
      - excel.Excel.Interfaces.TopBottomConditionalFormatLoadOptions
- uid: excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.topBottomOrNullObject
  summary: >-
    Für jedes Element in der Auflistung: die oben/unten bedingtes Formateigenschaften zurückgegeben, wenn die aktuelle bedingte Formatierung ein TopBottom-Typ ist. Beispielsweise zum Formatieren der obersten 10 % oder die letzte 10 Elemente.


    \[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: topBottomOrNullObject
  fullName: topBottomOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'topBottomOrNullObject?: Excel.Interfaces.TopBottomConditionalFormatLoadOptions;'
    return:
      type:
      - excel.Excel.Interfaces.TopBottomConditionalFormatLoadOptions
- uid: excel.Excel.Interfaces.ConditionalFormatCollectionLoadOptions.type
  summary: >-
    Für jedes Element in der Auflistung: ein bedingtes Format. Zu einem Zeitpunkt kann nur festgelegt werden. Schreibgeschützt.


    \[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'type?: boolean;'
    return:
      type:
      - boolean
