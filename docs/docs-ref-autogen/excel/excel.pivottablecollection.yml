### YamlMime:UniversalReference
ms.openlocfilehash: a87b42583512df979f9ae15b74358f8d3085dec1
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/13/2019
ms.locfileid: "29980513"
items:
- uid: excel.Excel.PivotTableCollection
  summary: >-
    <span data-ttu-id="00fd9-101">Stellt eine Auflistung aller PivotTables dar, die Teil der Arbeitsmappe oder des Arbeitsblatts sind.</span><span class="sxs-lookup"><span data-stu-id="00fd9-101">Represents a collection of all the PivotTables that are part of the workbook or worksheet.</span></span>


    <span data-ttu-id="00fd9-102">\[[API-Satz: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="00fd9-102">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.PivotTableCollection
  fullName: Excel.PivotTableCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.PivotTableCollection.add
  - excel.Excel.PivotTableCollection.context
  - excel.Excel.PivotTableCollection.getCount
  - excel.Excel.PivotTableCollection.getItem
  - excel.Excel.PivotTableCollection.getItemOrNullObject
  - excel.Excel.PivotTableCollection.items
  - excel.Excel.PivotTableCollection.load
  - excel.Excel.PivotTableCollection.load_1
  - excel.Excel.PivotTableCollection.load_2
  - excel.Excel.PivotTableCollection.refreshAll
  - excel.Excel.PivotTableCollection.toJSON
- uid: excel.Excel.PivotTableCollection.add
  summary: >-
    <span data-ttu-id="00fd9-103">Fügt ein PivotTable-Objekt basierend auf den Quelldaten hinzu und fügt es in die obere linke Zelle des Zielbereichs ein.</span><span class="sxs-lookup"><span data-stu-id="00fd9-103">Add a Pivottable based on the specified source data and insert it at the top left cell of the destination range.</span></span>


    <span data-ttu-id="00fd9-104">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="00fd9-104">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: add(name, source, destination)
  fullName: add(name, source, destination)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(name: string, source: Range | string | Table, destination: Range | string): Excel.PivotTable;'
    return:
      type:
      - excel.Excel.PivotTable
      description: >-
        <span data-ttu-id="00fd9-105">Gibt die neu eingefügte PivotTable zurück.</span><span class="sxs-lookup"><span data-stu-id="00fd9-105">Returns the newly inserted PivotTable.</span></span>

        #### <a name="examples"></a><span data-ttu-id="00fd9-106">Beispiele</span><span class="sxs-lookup"><span data-stu-id="00fd9-106">Examples</span></span>


        ```typescript

        await Excel.run(async (context) => {
            const rangeToAnalyze = context.workbook.worksheets.getItem("Data").getRange("A1:E21");
            const rangeToPlacePivot = context.workbook.worksheets.getItem("Pivot").getRange("A2");
            context.workbook.worksheets.getItem("Pivot").pivotTables.add("Farm Sales", rangeToAnalyze, rangeToPlacePivot);

            await context.sync();
        });

        ```
    parameters:
    - id: name
      description: <span data-ttu-id="00fd9-107">Der Name der neuen PivotTable.</span><span class="sxs-lookup"><span data-stu-id="00fd9-107">The name of the new PivotTable.</span></span>
      type:
      - string
    - id: source
      description: <span data-ttu-id="00fd9-108">Die Quelldaten für die neue PivotTable, dies kann entweder ein Bereich (oder sein einschließlich des Arbeitsblatts ein String-Adresse) oder eine Tabelle.</span><span class="sxs-lookup"><span data-stu-id="00fd9-108">The source data for the new PivotTable, this can either be a range (or string address including the worksheet name) or a table.</span></span>
      type:
      - Range | string | Table
    - id: destination
      description: <span data-ttu-id="00fd9-109">Die Zelle in der oberen linken Ecke des Zielbereichs des PivotTable-Berichts (der Bereich im Arbeitsblatt, in dem der resultierende Bericht befinden wird).</span><span class="sxs-lookup"><span data-stu-id="00fd9-109">The cell in the upper-left corner of the PivotTable report's destination range (the range on the worksheet where the resulting report will be placed).</span></span>
      type:
      - Range | string
- uid: excel.Excel.PivotTableCollection.context
  summary: <span data-ttu-id="00fd9-110">Der Anforderungskontext-zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="00fd9-110">The request context associated with the object.</span></span> <span data-ttu-id="00fd9-111">Dadurch wird das Add-in Prozess mit der Office-hostanwendung Prozess verbunden.</span><span class="sxs-lookup"><span data-stu-id="00fd9-111">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.PivotTableCollection.getCount
  summary: >-
    <span data-ttu-id="00fd9-112">Ruft die Anzahl von PivotTables in der Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="00fd9-112">Gets the number of pivot tables in the collection.</span></span>


    <span data-ttu-id="00fd9-113">\[[API-Satz: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="00fd9-113">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.PivotTableCollection.getItem
  summary: >-
    <span data-ttu-id="00fd9-114">Ruft eine PivotTable anhand des Namens ab.</span><span class="sxs-lookup"><span data-stu-id="00fd9-114">Gets a PivotTable by name.</span></span>


    <span data-ttu-id="00fd9-115">\[[API-Satz: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="00fd9-115">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(name)
  fullName: getItem(name)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(name: string): Excel.PivotTable;'
    return:
      type:
      - excel.Excel.PivotTable
      description: ''
    parameters:
    - id: name
      description: <span data-ttu-id="00fd9-116">Name der abzurufenden PivotTable.</span><span class="sxs-lookup"><span data-stu-id="00fd9-116">Name of the PivotTable to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.PivotTableCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="00fd9-p102">Ruft eine PivotTable anhand des Namens ab. Wenn die PivotTable nicht vorhanden ist, wird ein NULL-Objekt zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="00fd9-p102">Gets a PivotTable by name. If the PivotTable does not exist, will return a null object.</span></span>


    <span data-ttu-id="00fd9-119">\[[API-Satz: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="00fd9-119">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemOrNullObject(name)
  fullName: getItemOrNullObject(name)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(name: string): Excel.PivotTable;'
    return:
      type:
      - excel.Excel.PivotTable
      description: ''
    parameters:
    - id: name
      description: <span data-ttu-id="00fd9-120">Name der abzurufenden PivotTable.</span><span class="sxs-lookup"><span data-stu-id="00fd9-120">Name of the PivotTable to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.PivotTableCollection.items
  summary: <span data-ttu-id="00fd9-121">Ruft die geladene untergeordnete Elemente in dieser Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="00fd9-121">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.PivotTable[];'
    return:
      type:
      - Excel.PivotTable[]
- uid: excel.Excel.PivotTableCollection.load
  summary: <span data-ttu-id="00fd9-122">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="00fd9-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="00fd9-123">Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="00fd9-123">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="00fd9-124">Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="00fd9-124">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="00fd9-125">`load(option?: string | string[]): Excel.PivotTableCollection`-Wo Option ist eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="00fd9-125">`load(option?: string | string[]): Excel.PivotTableCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="00fd9-126">`load(option?: { select?: string; expand?: string; }): Excel.PivotTableCollection`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class="sxs-lookup"><span data-stu-id="00fd9-126">`load(option?: { select?: string; expand?: string; }): Excel.PivotTableCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="00fd9-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTableCollection`-Nur auf Auflistungstypen verfügbar.</span><span class="sxs-lookup"><span data-stu-id="00fd9-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTableCollection` - Only available on collection types.</span></span> <span data-ttu-id="00fd9-128">Es ist ähnlich wie die jeweils vorhergehende Signatur.</span><span class="sxs-lookup"><span data-stu-id="00fd9-128">It is similar to the preceding signature.</span></span> <span data-ttu-id="00fd9-129">Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können.</span><span class="sxs-lookup"><span data-stu-id="00fd9-129">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="00fd9-130">Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="00fd9-130">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="00fd9-131">Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.</span><span class="sxs-lookup"><span data-stu-id="00fd9-131">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.PivotTableCollection;'
    return:
      type:
      - excel.Excel.PivotTableCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.PivotTableCollection.load_1
  summary: <span data-ttu-id="00fd9-132">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="00fd9-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="00fd9-133">Sie müssen Aufrufen `context.sync()` vor dem Lesen der Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="00fd9-133">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.PivotTableCollection;'
    return:
      type:
      - excel.Excel.PivotTableCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="00fd9-134">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="00fd9-134">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.PivotTableCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.PivotTableCollection;'
    return:
      type:
      - excel.Excel.PivotTableCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.PivotTableCollection.refreshAll
  summary: >-
    <span data-ttu-id="00fd9-135">Aktualisiert alle PivotTables in der Sammlung.</span><span class="sxs-lookup"><span data-stu-id="00fd9-135">Refreshes all the pivot tables in the collection.</span></span>


    <span data-ttu-id="00fd9-136">\[[API-Satz: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="00fd9-136">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: refreshAll()
  fullName: refreshAll()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'refreshAll(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.PivotTableCollection.toJSON
  summary: <span data-ttu-id="00fd9-137">Überschreibt das JavaScript `toJSON()` Methode, um nützliche Ausgabe zu gewährleisten, wenn ein API-Objekt zu übergeben ist `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="00fd9-137">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="00fd9-138">(`JSON.stringify`<!-- -->, wiederum die `toJSON` -Methode des Objekts, das es übergeben wird.) Während der ursprünglichen `Excel.PivotTableCollection` Objekt ist ein API-Objekt der `toJSON` -Methode gibt eine einfache JavaScript-Objekt zurück (als `Excel.Interfaces.PivotTableCollectionData` <!-- -->), die ein Array "Elemente" mit flache Kopien der geladenen Eigenschaften aus der Auflistung von Elementen enthält.</span><span class="sxs-lookup"><span data-stu-id="00fd9-138">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.PivotTableCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotTableCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.PivotTableCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.PivotTableCollectionData
      description: ''
