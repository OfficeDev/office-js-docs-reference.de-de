### YamlMime:UniversalReference
ms.openlocfilehash: 21467b5958e49032fda1cfba8a405a94d085720e
ms.sourcegitcommit: 31847d2ea6be78b8f473dfbfb0a575fdecd877be
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 11/13/2018
ms.locfileid: "26297910"
items:
- uid: excel.Excel.NamedItemCollection
  summary: >-
    <span data-ttu-id="294c2-101">Eine Auflistung aller GetNamedItem-Objekte, die Teil der Arbeitsmappe oder ein Arbeitsblatt, je nachdem, wie sie erreicht wurde.</span><span class="sxs-lookup"><span data-stu-id="294c2-101">A collection of all the NamedItem objects that are part of the workbook or worksheet, depending on how it was reached.</span></span>


    <span data-ttu-id="294c2-102">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="294c2-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.NamedItemCollection
  fullName: Excel.NamedItemCollection
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.NamedItemCollection.add
  - excel.Excel.NamedItemCollection.addFormulaLocal
  - excel.Excel.NamedItemCollection.getCount
  - excel.Excel.NamedItemCollection.getItem
  - excel.Excel.NamedItemCollection.getItemOrNullObject
  - excel.Excel.NamedItemCollection.items
  - excel.Excel.NamedItemCollection.load
  - excel.Excel.NamedItemCollection.toJSON
- uid: excel.Excel.NamedItemCollection.add
  summary: >-
    <span data-ttu-id="294c2-103">Fügt einen neuen Namen zur Auflistung des angegebenen Bereichs hinzu.</span><span class="sxs-lookup"><span data-stu-id="294c2-103">Adds a new name to the collection of the given scope.</span></span>


    <span data-ttu-id="294c2-104">\[[API-Satz: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="294c2-104">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: add(name, reference, comment)
  fullName: add
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(name: string, reference: Range | string, comment?: string): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"294c2-105\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"294c2-105\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const headerRange = sheet.getRange(\"A1:E1\");\n    sheet.names.add(\"ExpensesHeader\", headerRange);\n    const namedItems = sheet.names.load(\"name, type\");\n\n    await context.sync();\n\n    let namedItemsList = `This workbook contains ${namedItems.items.length} named item(s):`;\n    for (let i = 0; i < namedItems.items.length; i++) {\n        namedItemsList += JSON.stringify(namedItems.items[i]);\n    }\n    OfficeHelpers.UI.notify(namedItemsList);\n\n    await context.sync();\n});\n```\n```typescript\ntry {\n    await Excel.run(async (context) => {\n        const sheet = context.workbook.worksheets.getItem(\"Sample\");\n        sheet.names.add(\"TotalAmount\", \"=SUM(ExpensesTable[AMOUNT])\");\n        sheet.getRange(\"D11\").values = [[\"=TotalAmount\"]];\n        await context.sync();\n    });\n}\ncatch (error) {\n    OfficeHelpers.UI.notify(error);\n    OfficeHelpers.Utilities.log(error);\n}\n```"
    parameters:
    - id: name
      description: <span data-ttu-id="294c2-106">Der Name des benannten Elements.</span><span class="sxs-lookup"><span data-stu-id="294c2-106">The name of the named item.</span></span>
      type:
      - string
    - id: reference
      description: <span data-ttu-id="294c2-107">Die Formel oder der Bereich, auf die bzw. den der Name verweist.</span><span class="sxs-lookup"><span data-stu-id="294c2-107">The formula or the range that the name will refer to.</span></span>
      type:
      - Range | string
    - id: comment
      description: <span data-ttu-id="294c2-108">Optional.</span><span class="sxs-lookup"><span data-stu-id="294c2-108">Optional.</span></span> <span data-ttu-id="294c2-109">Das benannte Element zugeordnete Kommentar.</span><span class="sxs-lookup"><span data-stu-id="294c2-109">The comment associated with the named item.</span></span>
      type:
      - string
- uid: excel.Excel.NamedItemCollection.addFormulaLocal
  summary: >-
    <span data-ttu-id="294c2-110">Fügt einen neuen Namen zu der Auflistung des angegebenen Bereichs unter Verwendung des Gebietsschemas des Benutzers für die Formel hinzu.</span><span class="sxs-lookup"><span data-stu-id="294c2-110">Adds a new name to the collection of the given scope using the user's locale for the formula.</span></span>


    <span data-ttu-id="294c2-111">\[[API-Satz: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="294c2-111">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: addFormulaLocal(name, formula, comment)
  fullName: addFormulaLocal
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addFormulaLocal(name: string, formula: string, comment?: string): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: ''
    parameters:
    - id: name
      description: <span data-ttu-id="294c2-112">Der „Name“ des benannten Elements.</span><span class="sxs-lookup"><span data-stu-id="294c2-112">The "name" of the named item.</span></span>
      type:
      - string
    - id: formula
      description: <span data-ttu-id="294c2-113">Die Formel im Gebietsschema des Benutzers, auf die der Name verweist.</span><span class="sxs-lookup"><span data-stu-id="294c2-113">The formula in the user's locale that the name will refer to.</span></span>
      type:
      - string
    - id: comment
      description: <span data-ttu-id="294c2-114">Optional.</span><span class="sxs-lookup"><span data-stu-id="294c2-114">Optional.</span></span> <span data-ttu-id="294c2-115">Das benannte Element zugeordnete Kommentar.</span><span class="sxs-lookup"><span data-stu-id="294c2-115">The comment associated with the named item.</span></span>
      type:
      - string
- uid: excel.Excel.NamedItemCollection.getCount
  summary: >-
    <span data-ttu-id="294c2-116">Ruft die Anzahl von benannten Elementen in der Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="294c2-116">Gets the number of named items in the collection.</span></span>


    <span data-ttu-id="294c2-117">\[[API-Satz: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="294c2-117">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.NamedItemCollection.getItem
  summary: >-
    <span data-ttu-id="294c2-118">Ruft ein GetNamedItem-Objekt unter Verwendung seines Namens ab.</span><span class="sxs-lookup"><span data-stu-id="294c2-118">Gets a NamedItem object using its name.</span></span>


    <span data-ttu-id="294c2-119">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="294c2-119">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItem(name)
  fullName: getItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(name: string): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"294c2-120\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"294c2-120\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = 'Sheet1';\n    var nameditem = ctx.workbook.names.getItem(sheetName);\n    nameditem.load('type');\n    return ctx.sync().then(function() {\n            console.log(nameditem.type);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: name
      description: <span data-ttu-id="294c2-121">GetNamedItem Name.</span><span class="sxs-lookup"><span data-stu-id="294c2-121">Nameditem name.</span></span>
      type:
      - string
- uid: excel.Excel.NamedItemCollection.getItemOrNullObject
  summary: >-
    <span data-ttu-id="294c2-122">Ruft ein GetNamedItem-Objekt unter Verwendung seines Namens ab.</span><span class="sxs-lookup"><span data-stu-id="294c2-122">Gets a NamedItem object using its name.</span></span> <span data-ttu-id="294c2-123">Wenn das GetNamedItem-Objekt nicht vorhanden ist, wird ein null-Objekt zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="294c2-123">If the nameditem object does not exist, will return a null object.</span></span>


    <span data-ttu-id="294c2-124">\[[API-Satz: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="294c2-124">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemOrNullObject(name)
  fullName: getItemOrNullObject
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemOrNullObject(name: string): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: ''
    parameters:
    - id: name
      description: <span data-ttu-id="294c2-125">GetNamedItem Name.</span><span class="sxs-lookup"><span data-stu-id="294c2-125">Nameditem name.</span></span>
      type:
      - string
- uid: excel.Excel.NamedItemCollection.items
  summary: <span data-ttu-id="294c2-126">Ruft die geladene untergeordnete Elemente in dieser Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="294c2-126">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.NamedItem[];'
    return:
      type:
      - Excel.NamedItem[]
- uid: excel.Excel.NamedItemCollection.load
  summary: <span data-ttu-id="294c2-127">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="294c2-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="294c2-128">Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="294c2-128">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"294c2-129\">Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:</span><span class=\"sxs-lookup\"><span data-stu-id=\"294c2-129\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"294c2-130\">`load(option?: { select?: string; expand?: string; }): Excel.NamedItemCollection`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"294c2-130\">`load(option?: { select?: string; expand?: string; }): Excel.NamedItemCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"294c2-131\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItemCollection`-Nur auf Auflistungstypen verfügbar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"294c2-131\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItemCollection` - Only available on collection types.</span></span> <span data-ttu-id=\"294c2-132\">Es ist ähnlich wie die jeweils vorhergehende Signatur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"294c2-132\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"294c2-133\">Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können.</span><span class=\"sxs-lookup\"><span data-stu-id=\"294c2-133\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"294c2-134\">Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"294c2-134\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"294c2-135\">Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.</span><span class=\"sxs-lookup\"><span data-stu-id=\"294c2-135\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"294c2-136\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"294c2-136\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var nameditems = ctx.workbook.names;\n    nameditems.load('items');\n    return ctx.sync().then(function() {\n        for (var i = 0; i < nameditems.items.length; i++)\n        {\n            console.log(nameditems.items[i].name);\n            console.log(nameditems.items[i].index);\n        }\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.NamedItemCollection;'
    return:
      type:
      - excel.Excel.NamedItemCollection
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="294c2-137">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="294c2-137">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.NamedItemCollection.toJSON
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.NamedItemCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.NamedItemCollectionData
      description: ''
