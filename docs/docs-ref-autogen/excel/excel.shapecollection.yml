### YamlMime:UniversalReference
ms.openlocfilehash: f7c626d3fa1568ffc1251822b061802fb76cd9d4
ms.sourcegitcommit: 788ab9c595c9143f8b8f4822a170e8b90d72ee1d
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 03/06/2019
ms.locfileid: "30413833"
items:
- uid: excel.Excel.ShapeCollection
  summary: >-
    <span data-ttu-id="015bc-101">Stellt alle Formen im Arbeitsblatt dar.</span><span class="sxs-lookup"><span data-stu-id="015bc-101">Represents all the shapes in the worksheet.</span></span>


    <span data-ttu-id="015bc-102">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="015bc-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: Excel.ShapeCollection
  fullName: Excel.ShapeCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ShapeCollection.addGeometricShape
  - excel.Excel.ShapeCollection.addGeometricShape_1
  - excel.Excel.ShapeCollection.addGroup
  - excel.Excel.ShapeCollection.addImage
  - excel.Excel.ShapeCollection.addLine
  - excel.Excel.ShapeCollection.addLine_1
  - excel.Excel.ShapeCollection.addSVG
  - excel.Excel.ShapeCollection.addTextBox
  - excel.Excel.ShapeCollection.context
  - excel.Excel.ShapeCollection.getCount
  - excel.Excel.ShapeCollection.getItem
  - excel.Excel.ShapeCollection.getItemAt
  - excel.Excel.ShapeCollection.items
  - excel.Excel.ShapeCollection.load
  - excel.Excel.ShapeCollection.load_1
  - excel.Excel.ShapeCollection.load_2
  - excel.Excel.ShapeCollection.toJSON
- uid: excel.Excel.ShapeCollection.addGeometricShape
  summary: >-
    <span data-ttu-id="015bc-103">Fügt dem Arbeitsblatt eine geometrische Form hinzu.</span><span class="sxs-lookup"><span data-stu-id="015bc-103">Adds a geometric shape to worksheet.</span></span> <span data-ttu-id="015bc-104">Gibt ein Shape-Objekt zurück, das die neue Form darstellt.</span><span class="sxs-lookup"><span data-stu-id="015bc-104">Returns a Shape object that represents the new shape.</span></span>


    <span data-ttu-id="015bc-105">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="015bc-105">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: addGeometricShape(geometricShapeType)
  fullName: addGeometricShape(geometricShapeType)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addGeometricShape(geometricShapeType: Excel.GeometricShapeType): Excel.Shape;'
    return:
      type:
      - excel.Excel.Shape
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"015bc-106\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"015bc-106\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Shapes\");\n    const shape = sheet.shapes.addGeometricShape(Excel.GeometricShapeType.hexagon);\n    shape.left = 5;\n    shape.top = 5;\n    shape.height = 175;\n    shape.width = 200;\n    await context.sync();\n});\n```"
    parameters:
    - id: geometricShapeType
      description: <span data-ttu-id="015bc-107">Stellt den geometrischen Typ der Form dar.</span><span class="sxs-lookup"><span data-stu-id="015bc-107">Represents the geometric type of the shape.</span></span> <span data-ttu-id="015bc-108">Weitere Informationen finden Sie unter Excel. GeometricShapeType.</span><span class="sxs-lookup"><span data-stu-id="015bc-108">See Excel.GeometricShapeType for details.</span></span>
      type:
      - excel.Excel.GeometricShapeType
- uid: excel.Excel.ShapeCollection.addGeometricShape_1
  summary: >-
    <span data-ttu-id="015bc-109">Fügt dem Arbeitsblatt eine geometrische Form hinzu.</span><span class="sxs-lookup"><span data-stu-id="015bc-109">Adds a geometric shape to worksheet.</span></span> <span data-ttu-id="015bc-110">Gibt ein Shape-Objekt zurück, das die neue Form darstellt.</span><span class="sxs-lookup"><span data-stu-id="015bc-110">Returns a Shape object that represents the new shape.</span></span>


    <span data-ttu-id="015bc-111">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="015bc-111">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: addGeometricShape(geometricShapeTypeString)
  fullName: addGeometricShape(geometricShapeTypeString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addGeometricShape(geometricShapeTypeString: "LineInverse" | "Triangle" | "RightTriangle" | "Rectangle" | "Diamond" | "Parallelogram" | "Trapezoid" | "NonIsoscelesTrapezoid" | "Pentagon" | "Hexagon" | "Heptagon" | "Octagon" | "Decagon" | "Dodecagon" | "Star4" | "Star5" | "Star6" | "Star7" | "Star8" | "Star10" | "Star12" | "Star16" | "Star24" | "Star32" | "RoundRectangle" | "Round1Rectangle" | "Round2SameRectangle" | "Round2DiagonalRectangle" | "SnipRoundRectangle" | "Snip1Rectangle" | "Snip2SameRectangle" | "Snip2DiagonalRectangle" | "Plaque" | "Ellipse" | "Teardrop" | "HomePlate" | "Chevron" | "PieWedge" | "Pie" | "BlockArc" | "Donut" | "NoSmoking" | "RightArrow" | "LeftArrow" | "UpArrow" | "DownArrow" | "StripedRightArrow" | "NotchedRightArrow" | "BentUpArrow" | "LeftRightArrow" | "UpDownArrow" | "LeftUpArrow" | "LeftRightUpArrow" | "QuadArrow" | "LeftArrowCallout" | "RightArrowCallout" | "UpArrowCallout" | "DownArrowCallout" | "LeftRightArrowCallout" | "UpDownArrowCallout" | "QuadArrowCallout" | "BentArrow" | "UturnArrow" | "CircularArrow" | "LeftCircularArrow" | "LeftRightCircularArrow" | "CurvedRightArrow" | "CurvedLeftArrow" | "CurvedUpArrow" | "CurvedDownArrow" | "SwooshArrow" | "Cube" | "Can" | "LightningBolt" | "Heart" | "Sun" | "Moon" | "SmileyFace" | "IrregularSeal1" | "IrregularSeal2" | "FoldedCorner" | "Bevel" | "Frame" | "HalfFrame" | "Corner" | "DiagonalStripe" | "Chord" | "Arc" | "LeftBracket" | "RightBracket" | "LeftBrace" | "RightBrace" | "BracketPair" | "BracePair" | "Callout1" | "Callout2" | "Callout3" | "AccentCallout1" | "AccentCallout2" | "AccentCallout3" | "BorderCallout1" | "BorderCallout2" | "BorderCallout3" | "AccentBorderCallout1" | "AccentBorderCallout2" | "AccentBorderCallout3" | "WedgeRectCallout" | "WedgeRRectCallout" | "WedgeEllipseCallout" | "CloudCallout" | "Cloud" | "Ribbon" | "Ribbon2" | "EllipseRibbon" | "EllipseRibbon2" | "LeftRightRibbon" | "VerticalScroll" | "HorizontalScroll" | "Wave" | "DoubleWave" | "Plus" | "FlowChartProcess" | "FlowChartDecision" | "FlowChartInputOutput" | "FlowChartPredefinedProcess" | "FlowChartInternalStorage" | "FlowChartDocument" | "FlowChartMultidocument" | "FlowChartTerminator" | "FlowChartPreparation" | "FlowChartManualInput" | "FlowChartManualOperation" | "FlowChartConnector" | "FlowChartPunchedCard" | "FlowChartPunchedTape" | "FlowChartSummingJunction" | "FlowChartOr" | "FlowChartCollate" | "FlowChartSort" | "FlowChartExtract" | "FlowChartMerge" | "FlowChartOfflineStorage" | "FlowChartOnlineStorage" | "FlowChartMagneticTape" | "FlowChartMagneticDisk" | "FlowChartMagneticDrum" | "FlowChartDisplay" | "FlowChartDelay" | "FlowChartAlternateProcess" | "FlowChartOffpageConnector" | "ActionButtonBlank" | "ActionButtonHome" | "ActionButtonHelp" | "ActionButtonInformation" | "ActionButtonForwardNext" | "ActionButtonBackPrevious" | "ActionButtonEnd" | "ActionButtonBeginning" | "ActionButtonReturn" | "ActionButtonDocument" | "ActionButtonSound" | "ActionButtonMovie" | "Gear6" | "Gear9" | "Funnel" | "MathPlus" | "MathMinus" | "MathMultiply" | "MathDivide" | "MathEqual" | "MathNotEqual" | "CornerTabs" | "SquareTabs" | "PlaqueTabs" | "ChartX" | "ChartStar" | "ChartPlus"): Excel.Shape;'
    return:
      type:
      - excel.Excel.Shape
      description: ''
    parameters:
    - id: geometricShapeTypeString
      description: <span data-ttu-id="015bc-112">Stellt den geometrischen Typ der Form dar.</span><span class="sxs-lookup"><span data-stu-id="015bc-112">Represents the geometric type of the shape.</span></span> <span data-ttu-id="015bc-113">Weitere Informationen finden Sie unter Excel. GeometricShapeType.</span><span class="sxs-lookup"><span data-stu-id="015bc-113">See Excel.GeometricShapeType for details.</span></span>
      type:
      - "\"LineInverse\" | \"Triangle\" | \"RightTriangle\" | \"Rectangle\" | \"Diamond\" | \"Parallelogram\" | \"Trapezoid\" | \"NonIsoscelesTrapezoid\" | \"Pentagon\" | \"Hexagon\" | \"Heptagon\" | \"Octagon\" | \"Decagon\" | \"Dodecagon\" | \"Star4\" | \"Star5\" | \"Star6\" | \"Star7\" | \"Star8\" | \"Star10\" | \"Star12\" | \"Star16\" | \"Star24\" | \"Star32\" | \"RoundRectangle\" | \"Round1Rectangle\" | \"Round2SameRectangle\" | \"Round2DiagonalRectangle\" | \"SnipRoundRectangle\" | \"Snip1Rectangle\" | \"Snip2SameRectangle\" | \"Snip2DiagonalRectangle\" | \"Plaque\" | \"Ellipse\" | \"Teardrop\" | \"HomePlate\" | \"Chevron\" | \"PieWedge\" | \"Pie\" | \"BlockArc\" | \"Donut\" | \"NoSmoking\" | \"RightArrow\" | \"LeftArrow\" | \"UpArrow\" | \"DownArrow\" | \"StripedRightArrow\" | \"NotchedRightArrow\" | \"BentUpArrow\" | \"LeftRightArrow\" | \"UpDownArrow\" | \"LeftUpArrow\" | \"LeftRightUpArrow\" | \"QuadArrow\" | \"LeftArrowCallout\" | \"RightArrowCallout\" | \"UpArrowCallout\" | \"DownArrowCallout\" | \"LeftRightArrowCallout\" | \"UpDownArrowCallout\" | \"QuadArrowCallout\" | \"BentArrow\" | \"UturnArrow\" | \"CircularArrow\" | \"LeftCircularArrow\" | \"LeftRightCircularArrow\" | \"CurvedRightArrow\" | \"CurvedLeftArrow\" | \"CurvedUpArrow\" | \"CurvedDownArrow\" | \"SwooshArrow\" | \"Cube\" | \"Can\" | \"LightningBolt\" | \"Heart\" | \"Sun\" | \"Moon\" | \"SmileyFace\" | \"IrregularSeal1\" | \"IrregularSeal2\" | \"FoldedCorner\" | \"Bevel\" | \"Frame\" | \"HalfFrame\" | \"Corner\" | \"DiagonalStripe\" | \"Chord\" | \"Arc\" | \"LeftBracket\" | \"RightBracket\" | \"LeftBrace\" | \"RightBrace\" | \"BracketPair\" | \"BracePair\" | \"Callout1\" | \"Callout2\" | \"Callout3\" | \"AccentCallout1\" | \"AccentCallout2\" | \"AccentCallout3\" | \"BorderCallout1\" | \"BorderCallout2\" | \"BorderCallout3\" | \"AccentBorderCallout1\" | \"AccentBorderCallout2\" | \"AccentBorderCallout3\" | \"WedgeRectCallout\" | \"WedgeRRectCallout\" | \"WedgeEllipseCallout\" | \"CloudCallout\" | \"Cloud\" | \"Ribbon\" | \"Ribbon2\" | \"EllipseRibbon\" | \"EllipseRibbon2\" | \"LeftRightRibbon\" | \"VerticalScroll\" | \"HorizontalScroll\" | \"Wave\" | \"DoubleWave\" | \"Plus\" | \"FlowChartProcess\" | \"FlowChartDecision\" | \"FlowChartInputOutput\" | \"FlowChartPredefinedProcess\" | \"FlowChartInternalStorage\" | \"FlowChartDocument\" | \"FlowChartMultidocument\" | \"FlowChartTerminator\" | \"FlowChartPreparation\" | \"FlowChartManualInput\" | \"FlowChartManualOperation\" | \"FlowChartConnector\" | \"FlowChartPunchedCard\" | \"FlowChartPunchedTape\" | \"FlowChartSummingJunction\" | \"FlowChartOr\" | \"FlowChartCollate\" | \"FlowChartSort\" | \"FlowChartExtract\" | \"FlowChartMerge\" | \"FlowChartOfflineStorage\" | \"FlowChartOnlineStorage\" | \"FlowChartMagneticTape\" | \"FlowChartMagneticDisk\" | \"FlowChartMagneticDrum\" | \"FlowChartDisplay\" | \"FlowChartDelay\" | \"FlowChartAlternateProcess\" | \"FlowChartOffpageConnector\" | \"ActionButtonBlank\" | \"ActionButtonHome\" | \"ActionButtonHelp\" | \"ActionButtonInformation\" | \"ActionButtonForwardNext\" | \"ActionButtonBackPrevious\" | \"ActionButtonEnd\" | \"ActionButtonBeginning\" | \"ActionButtonReturn\" | \"ActionButtonDocument\" | \"ActionButtonSound\" | \"ActionButtonMovie\" | \"Gear6\" | \"Gear9\" | \"Funnel\" | \"MathPlus\" | \"MathMinus\" | \"MathMultiply\" | \"MathDivide\" | \"MathEqual\" | \"MathNotEqual\" | \"CornerTabs\" | \"SquareTabs\" | \"PlaqueTabs\" | \"ChartX\" | \"ChartStar\" | \"ChartPlus\""
- uid: excel.Excel.ShapeCollection.addGroup
  summary: >-
    <span data-ttu-id="015bc-114">Gruppiert eine Teilmenge von Formen auf einem Arbeitsblatt.</span><span class="sxs-lookup"><span data-stu-id="015bc-114">Group a subset of shapes in a worksheet.</span></span> <span data-ttu-id="015bc-115">Gibt ein Shape-Objekt zurück, das die neue Gruppe von Formen darstellt.</span><span class="sxs-lookup"><span data-stu-id="015bc-115">Returns a Shape object that represents the new group of shapes.</span></span>


    <span data-ttu-id="015bc-116">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="015bc-116">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: addGroup(values)
  fullName: addGroup(values)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addGroup(values: Array<string | Shape>): Excel.Shape;'
    return:
      type:
      - excel.Excel.Shape
      description: ''
    parameters:
    - id: values
      description: <span data-ttu-id="015bc-117">Ein Array von Shape-ID-oder Shape-Objekten.</span><span class="sxs-lookup"><span data-stu-id="015bc-117">An array of shape ID or shape objects.</span></span>
      type:
      - Array<string | Shape>
- uid: excel.Excel.ShapeCollection.addImage
  summary: >-
    <span data-ttu-id="015bc-118">Erstellt ein Bild aus einer base64-Zeichenfolge und fügt es dem Arbeitsblatt hinzu.</span><span class="sxs-lookup"><span data-stu-id="015bc-118">Creates an image from a base64 string and adds it to worksheet.</span></span> <span data-ttu-id="015bc-119">Gibt das Shape-Objekt zurück, das das neue Bild darstellt.</span><span class="sxs-lookup"><span data-stu-id="015bc-119">Returns the Shape object that represents the new Image.</span></span>


    <span data-ttu-id="015bc-120">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="015bc-120">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: addImage(base64ImageString)
  fullName: addImage(base64ImageString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addImage(base64ImageString: string): Excel.Shape;'
    return:
      type:
      - excel.Excel.Shape
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"015bc-121\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"015bc-121\">Examples</span></span>\n\n```javascript\nconst myFile = <HTMLInputElement>document.getElementById(\"selectedFile\");\nconst reader = new FileReader();\n\nreader.onload = (event) => {\n    Excel.run((context) => {\n        const startIndex = (<string>(<FileReader>event.target).result).indexOf(\"base64,\");\n        const mybase64 = (<string>(<FileReader>event.target).result).substr(startIndex + 7);\n        const sheet = context.workbook.worksheets.getItem(\"Shapes\");\n        const image = sheet.shapes.addImage(mybase64);\n        image.name = \"Image\";\n        return context.sync();\n    });\n};\n\n// Read in the image file as a data URL.\nreader.readAsDataURL(myFile.files[0]);\n```"
    parameters:
    - id: base64ImageString
      description: <span data-ttu-id="015bc-122">Ein Base64-codiertes Bild im JPEG-oder PNG-Format.</span><span class="sxs-lookup"><span data-stu-id="015bc-122">A base64 encoded image in JPEG or PNG formats.</span></span>
      type:
      - string
- uid: excel.Excel.ShapeCollection.addLine
  summary: >-
    <span data-ttu-id="015bc-123">Fügt einem Arbeitsblatt eine Linie hinzu.</span><span class="sxs-lookup"><span data-stu-id="015bc-123">Adds a line to worksheet.</span></span> <span data-ttu-id="015bc-124">Gibt ein Shape-Objekt zurück, das die neue Linie darstellt.</span><span class="sxs-lookup"><span data-stu-id="015bc-124">Returns a Shape object that represents the new line.</span></span>


    <span data-ttu-id="015bc-125">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="015bc-125">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: addLine(startLeft, startTop, endLeft, endTop, connectorType)
  fullName: addLine(startLeft, startTop, endLeft, endTop, connectorType)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addLine(startLeft: number, startTop: number, endLeft: number, endTop: number, connectorType?: Excel.ConnectorType): Excel.Shape;'
    return:
      type:
      - excel.Excel.Shape
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"015bc-126\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"015bc-126\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const shapes = context.workbook.worksheets.getItem(\"Shapes\").shapes;\n    const line = shapes.addLine(200, 50, 300, 150, Excel.ConnectorType.straight);\n    line.name = \"StraightLine\";\n    await context.sync();\n});\n```"
    parameters:
    - id: startLeft
      description: <span data-ttu-id="015bc-127">Der Abstand zwischen dem linken Rand der Zeile und der linken Seite des Arbeitsblatts in Punkt.</span><span class="sxs-lookup"><span data-stu-id="015bc-127">The distance, in points, from the start left of the line to the left side of the worksheet.</span></span>
      type:
      - number
    - id: startTop
      description: <span data-ttu-id="015bc-128">Der Abstand (in Punkt) vom oberen Rand der Zeile zum oberen Rand des Arbeitsblatts.</span><span class="sxs-lookup"><span data-stu-id="015bc-128">The distance, in points, from the start top of the line to the top of the worksheet.</span></span>
      type:
      - number
    - id: endLeft
      description: <span data-ttu-id="015bc-129">Der Abstand (in Punkt) von der linken Seite des Arbeitsblatts.</span><span class="sxs-lookup"><span data-stu-id="015bc-129">The distance, in points, from the end left of the line to the left of the worksheet.</span></span>
      type:
      - number
    - id: endTop
      description: <span data-ttu-id="015bc-130">Der Abstand (in Punkt) vom oberen Rand der Linie zum oberen Rand des Arbeitsblatts.</span><span class="sxs-lookup"><span data-stu-id="015bc-130">The distance, in points, from the end top of the line to the top of the worksheet.</span></span>
      type:
      - number
    - id: connectorType
      description: <span data-ttu-id="015bc-131">Stellt den Verbindertyp dar.</span><span class="sxs-lookup"><span data-stu-id="015bc-131">Represents the connector type.</span></span> <span data-ttu-id="015bc-132">Weitere Informationen finden Sie unter Excel. ConnectorType.</span><span class="sxs-lookup"><span data-stu-id="015bc-132">See Excel.ConnectorType for details.</span></span>
      type:
      - excel.Excel.ConnectorType
- uid: excel.Excel.ShapeCollection.addLine_1
  summary: >-
    <span data-ttu-id="015bc-133">Fügt einem Arbeitsblatt eine Linie hinzu.</span><span class="sxs-lookup"><span data-stu-id="015bc-133">Adds a line to worksheet.</span></span> <span data-ttu-id="015bc-134">Gibt ein Shape-Objekt zurück, das die neue Linie darstellt.</span><span class="sxs-lookup"><span data-stu-id="015bc-134">Returns a Shape object that represents the new line.</span></span>


    <span data-ttu-id="015bc-135">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="015bc-135">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: addLine(startLeft, startTop, endLeft, endTop, connectorTypeString)
  fullName: addLine(startLeft, startTop, endLeft, endTop, connectorTypeString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addLine(startLeft: number, startTop: number, endLeft: number, endTop: number, connectorTypeString?: "Straight" | "Elbow" | "Curve"): Excel.Shape;'
    return:
      type:
      - excel.Excel.Shape
      description: ''
    parameters:
    - id: startLeft
      description: <span data-ttu-id="015bc-136">Der Abstand zwischen dem linken Rand der Zeile und der linken Seite des Arbeitsblatts in Punkt.</span><span class="sxs-lookup"><span data-stu-id="015bc-136">The distance, in points, from the start left of the line to the left side of the worksheet.</span></span>
      type:
      - number
    - id: startTop
      description: <span data-ttu-id="015bc-137">Der Abstand (in Punkt) vom oberen Rand der Zeile zum oberen Rand des Arbeitsblatts.</span><span class="sxs-lookup"><span data-stu-id="015bc-137">The distance, in points, from the start top of the line to the top of the worksheet.</span></span>
      type:
      - number
    - id: endLeft
      description: <span data-ttu-id="015bc-138">Der Abstand (in Punkt) von der linken Seite des Arbeitsblatts.</span><span class="sxs-lookup"><span data-stu-id="015bc-138">The distance, in points, from the end left of the line to the left of the worksheet.</span></span>
      type:
      - number
    - id: endTop
      description: <span data-ttu-id="015bc-139">Der Abstand (in Punkt) vom oberen Rand der Linie zum oberen Rand des Arbeitsblatts.</span><span class="sxs-lookup"><span data-stu-id="015bc-139">The distance, in points, from the end top of the line to the top of the worksheet.</span></span>
      type:
      - number
    - id: connectorTypeString
      description: <span data-ttu-id="015bc-140">Stellt den Verbindertyp dar.</span><span class="sxs-lookup"><span data-stu-id="015bc-140">Represents the connector type.</span></span> <span data-ttu-id="015bc-141">Weitere Informationen finden Sie unter Excel. ConnectorType.</span><span class="sxs-lookup"><span data-stu-id="015bc-141">See Excel.ConnectorType for details.</span></span>
      type:
      - "\"Straight\" | \"Elbow\" | \"Curve\""
- uid: excel.Excel.ShapeCollection.addSVG
  summary: >-
    <span data-ttu-id="015bc-142">Erstellt ein SVG aus einer XML-Zeichenfolge und fügt es dem Arbeitsblatt hinzu.</span><span class="sxs-lookup"><span data-stu-id="015bc-142">Creates an SVG from a XML string and adds it to worksheet.</span></span> <span data-ttu-id="015bc-143">Gibt ein Shape-Objekt zurück, das das neue Bild darstellt.</span><span class="sxs-lookup"><span data-stu-id="015bc-143">Returns a Shape object that represents the new Image.</span></span>


    <span data-ttu-id="015bc-144">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="015bc-144">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: addSVG(xmlImageString)
  fullName: addSVG(xmlImageString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addSVG(xmlImageString: string): Excel.Shape;'
    return:
      type:
      - excel.Excel.Shape
      description: ''
    parameters:
    - id: xmlImageString
      description: <span data-ttu-id="015bc-145">Eine XML-Zeichenfolge, die ein SVG darstellt.</span><span class="sxs-lookup"><span data-stu-id="015bc-145">An XML string that represents an SVG.</span></span>
      type:
      - string
- uid: excel.Excel.ShapeCollection.addTextBox
  summary: >-
    <span data-ttu-id="015bc-146">Fügt einem Arbeitsblatt ein Textfeld hinzu, indem es dessen Textinhalt angibt.</span><span class="sxs-lookup"><span data-stu-id="015bc-146">Adds a textbox to worksheet by telling it's text content.</span></span> <span data-ttu-id="015bc-147">Gibt ein Shape-Objekt zurück, das das neue Textfeld darstellt.</span><span class="sxs-lookup"><span data-stu-id="015bc-147">Returns a Shape object that represents the new text box.</span></span>


    <span data-ttu-id="015bc-148">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="015bc-148">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: addTextBox(text)
  fullName: addTextBox(text)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addTextBox(text?: string): Excel.Shape;'
    return:
      type:
      - excel.Excel.Shape
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"015bc-149\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"015bc-149\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const shapes = context.workbook.worksheets.getItem(\"Shapes\").shapes;\n    const textbox = shapes.addTextBox(\"A box with text\");\n    textbox.left = 100;\n    textbox.top = 100;\n    textbox.height = 20;\n    textbox.width = 175;\n    textbox.name = \"Textbox\";\n    await context.sync();\n});\n```"
    parameters:
    - id: text
      description: <span data-ttu-id="015bc-150">Stellt den Text dar, der im erstellten Textfeld angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="015bc-150">Represents the text that will be shown in the created text box.</span></span>
      type:
      - string
- uid: excel.Excel.ShapeCollection.context
  summary: <span data-ttu-id="015bc-151">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="015bc-151">The request context associated with the object.</span></span> <span data-ttu-id="015bc-152">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="015bc-152">This connects the add-in's process to the Office host application's process.</span></span>
  isPreview: true
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.ShapeCollection.getCount
  summary: >-
    <span data-ttu-id="015bc-153">Gibt die Anzahl der Formen auf dem Arbeitsblatt zurück.</span><span class="sxs-lookup"><span data-stu-id="015bc-153">Returns the number of shapes in the worksheet.</span></span> <span data-ttu-id="015bc-154">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="015bc-154">Read-only.</span></span>


    <span data-ttu-id="015bc-155">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="015bc-155">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.ShapeCollection.getItem
  summary: >-
    <span data-ttu-id="015bc-156">Ruft eine Form anhand ihres Namens ab.</span><span class="sxs-lookup"><span data-stu-id="015bc-156">Gets a shape using its name.</span></span>


    <span data-ttu-id="015bc-157">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="015bc-157">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getItem(name)
  fullName: getItem(name)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(name: string): Excel.Shape;'
    return:
      type:
      - excel.Excel.Shape
      description: ''
    parameters:
    - id: name
      description: <span data-ttu-id="015bc-158">Der Name des abzurufenden Shapes.</span><span class="sxs-lookup"><span data-stu-id="015bc-158">Name of the shape to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.ShapeCollection.getItemAt
  summary: >-
    <span data-ttu-id="015bc-159">Ruft eine Form anhand ihrer Position in der Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="015bc-159">Gets a shape based on its position in the collection.</span></span>


    <span data-ttu-id="015bc-160">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="015bc-160">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.Shape;'
    return:
      type:
      - excel.Excel.Shape
      description: ''
    parameters:
    - id: index
      description: <span data-ttu-id="015bc-161">Index-Wert des abzurufenden Objekts.</span><span class="sxs-lookup"><span data-stu-id="015bc-161">Index value of the object to be retrieved.</span></span> <span data-ttu-id="015bc-162">Nullindiziert.</span><span class="sxs-lookup"><span data-stu-id="015bc-162">Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.ShapeCollection.items
  summary: <span data-ttu-id="015bc-163">Ruft die geladenen untergeordneten Elemente in dieser Sammlung ab.</span><span class="sxs-lookup"><span data-stu-id="015bc-163">Gets the loaded child items in this collection.</span></span>
  isPreview: true
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.Shape[];'
    return:
      type:
      - Excel.Shape[]
- uid: excel.Excel.ShapeCollection.load
  summary: <span data-ttu-id="015bc-164">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="015bc-164">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="015bc-165">Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.</span><span class="sxs-lookup"><span data-stu-id="015bc-165">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="015bc-166">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="015bc-166">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="015bc-167">`load(option?: string | string[]): Excel.ShapeCollection`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="015bc-167">`load(option?: string | string[]): Excel.ShapeCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="015bc-168">`load(option?: { select?: string; expand?: string; }): Excel.ShapeCollection`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="015bc-168">`load(option?: { select?: string; expand?: string; }): Excel.ShapeCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="015bc-169">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ShapeCollection`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="015bc-169">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ShapeCollection` - Only available on collection types.</span></span> <span data-ttu-id="015bc-170">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="015bc-170">It is similar to the preceding signature.</span></span> <span data-ttu-id="015bc-171">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="015bc-171">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="015bc-172">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="015bc-172">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="015bc-173">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="015bc-173">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ShapeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.ShapeCollection;'
    return:
      type:
      - excel.Excel.ShapeCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.ShapeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.ShapeCollection.load_1
  summary: <span data-ttu-id="015bc-174">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="015bc-174">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="015bc-175">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="015bc-175">You must call `context.sync()` before reading the properties.</span></span>
  isPreview: true
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.ShapeCollection;'
    return:
      type:
      - excel.Excel.ShapeCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="015bc-176">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="015bc-176">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.ShapeCollection.load_2
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.ShapeCollection;'
    return:
      type:
      - excel.Excel.ShapeCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.ShapeCollection.toJSON
  summary: <span data-ttu-id="015bc-177">ÜberSchreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API `JSON.stringify()` <!-- -->-Objekt an übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="015bc-177">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="015bc-178">(`JSON.stringify`<!-- -->ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche `Excel.ShapeCollection` Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt ( `Excel.Interfaces.ShapeCollectionData` <!-- -->typisiert als) zurück, das ein "Items"-Array mit flachen Kopien aller geladenen Eigenschaften aus den Elementen der Auflistung enthält.</span><span class="sxs-lookup"><span data-stu-id="015bc-178">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.ShapeCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ShapeCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  isPreview: true
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ShapeCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.ShapeCollectionData
      description: ''
