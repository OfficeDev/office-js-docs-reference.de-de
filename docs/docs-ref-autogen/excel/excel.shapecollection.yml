### YamlMime:UniversalReference
items:
  - uid: excel.Excel.ShapeCollection
    summary: |-
      <span data-ttu-id="7d31f-101">Stellt eine Auflistung aller Formen im Arbeitsblatt dar.</span><span class="sxs-lookup"><span data-stu-id="7d31f-101">Represents a collection of all the shapes in the worksheet.</span></span>

      <span data-ttu-id="7d31f-102">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7d31f-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: Excel.ShapeCollection
    fullName: Excel.ShapeCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.ShapeCollection.addGeometricShape
      - excel.Excel.ShapeCollection.addGeometricShape_1
      - excel.Excel.ShapeCollection.addGroup
      - excel.Excel.ShapeCollection.addImage
      - excel.Excel.ShapeCollection.addLine
      - excel.Excel.ShapeCollection.addLine_1
      - excel.Excel.ShapeCollection.addSvg
      - excel.Excel.ShapeCollection.addTextBox
      - excel.Excel.ShapeCollection.context
      - excel.Excel.ShapeCollection.getCount
      - excel.Excel.ShapeCollection.getItem
      - excel.Excel.ShapeCollection.getItemAt
      - excel.Excel.ShapeCollection.items
      - excel.Excel.ShapeCollection.load
      - excel.Excel.ShapeCollection.load_1
      - excel.Excel.ShapeCollection.load_2
      - excel.Excel.ShapeCollection.toJSON
  - uid: excel.Excel.ShapeCollection.addGeometricShape
    summary: |-
      <span data-ttu-id="7d31f-103">Fügt dem Arbeitsblatt eine geometrische Form hinzu.</span><span class="sxs-lookup"><span data-stu-id="7d31f-103">Adds a geometric shape to the worksheet.</span></span> <span data-ttu-id="7d31f-104">Gibt ein Shape-Objekt zurück, das die neue Form darstellt.</span><span class="sxs-lookup"><span data-stu-id="7d31f-104">Returns a Shape object that represents the new shape.</span></span>

      <span data-ttu-id="7d31f-105">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7d31f-105">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: addGeometricShape(geometricShapeType)
    fullName: addGeometricShape(geometricShapeType)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addGeometricShape(geometricShapeType: Excel.GeometricShapeType): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7d31f-106">Beispiele</span><span class="sxs-lookup"><span data-stu-id="7d31f-106">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const shape = sheet.shapes.addGeometricShape(Excel.GeometricShapeType.hexagon);
              shape.left = 5;
              shape.top = 5;
              shape.height = 175;
              shape.width = 200;
              await context.sync();
          });
          ```
      parameters:
        - id: geometricShapeType
          description: <span data-ttu-id="7d31f-107">Stellt den Typ der geometrischen Form dar.</span><span class="sxs-lookup"><span data-stu-id="7d31f-107">Represents the type of the geometric shape.</span></span> <span data-ttu-id="7d31f-108">Details finden Sie unter Excel.GeometricShapeType.</span><span class="sxs-lookup"><span data-stu-id="7d31f-108">See Excel.GeometricShapeType for details.</span></span>
          type:
            - excel.Excel.GeometricShapeType
  - uid: excel.Excel.ShapeCollection.addGeometricShape_1
    summary: |-
      <span data-ttu-id="7d31f-109">Fügt dem Arbeitsblatt eine geometrische Form hinzu.</span><span class="sxs-lookup"><span data-stu-id="7d31f-109">Adds a geometric shape to the worksheet.</span></span> <span data-ttu-id="7d31f-110">Gibt ein Shape-Objekt zurück, das die neue Form darstellt.</span><span class="sxs-lookup"><span data-stu-id="7d31f-110">Returns a Shape object that represents the new shape.</span></span>

      <span data-ttu-id="7d31f-111">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7d31f-111">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: addGeometricShape(geometricShapeTypeString)
    fullName: addGeometricShape(geometricShapeTypeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addGeometricShape(geometricShapeTypeString: "LineInverse" | "Triangle" | "RightTriangle" | "Rectangle" | "Diamond" | "Parallelogram" | "Trapezoid" | "NonIsoscelesTrapezoid" | "Pentagon" | "Hexagon" | "Heptagon" | "Octagon" | "Decagon" | "Dodecagon" | "Star4" | "Star5" | "Star6" | "Star7" | "Star8" | "Star10" | "Star12" | "Star16" | "Star24" | "Star32" | "RoundRectangle" | "Round1Rectangle" | "Round2SameRectangle" | "Round2DiagonalRectangle" | "SnipRoundRectangle" | "Snip1Rectangle" | "Snip2SameRectangle" | "Snip2DiagonalRectangle" | "Plaque" | "Ellipse" | "Teardrop" | "HomePlate" | "Chevron" | "PieWedge" | "Pie" | "BlockArc" | "Donut" | "NoSmoking" | "RightArrow" | "LeftArrow" | "UpArrow" | "DownArrow" | "StripedRightArrow" | "NotchedRightArrow" | "BentUpArrow" | "LeftRightArrow" | "UpDownArrow" | "LeftUpArrow" | "LeftRightUpArrow" | "QuadArrow" | "LeftArrowCallout" | "RightArrowCallout" | "UpArrowCallout" | "DownArrowCallout" | "LeftRightArrowCallout" | "UpDownArrowCallout" | "QuadArrowCallout" | "BentArrow" | "UturnArrow" | "CircularArrow" | "LeftCircularArrow" | "LeftRightCircularArrow" | "CurvedRightArrow" | "CurvedLeftArrow" | "CurvedUpArrow" | "CurvedDownArrow" | "SwooshArrow" | "Cube" | "Can" | "LightningBolt" | "Heart" | "Sun" | "Moon" | "SmileyFace" | "IrregularSeal1" | "IrregularSeal2" | "FoldedCorner" | "Bevel" | "Frame" | "HalfFrame" | "Corner" | "DiagonalStripe" | "Chord" | "Arc" | "LeftBracket" | "RightBracket" | "LeftBrace" | "RightBrace" | "BracketPair" | "BracePair" | "Callout1" | "Callout2" | "Callout3" | "AccentCallout1" | "AccentCallout2" | "AccentCallout3" | "BorderCallout1" | "BorderCallout2" | "BorderCallout3" | "AccentBorderCallout1" | "AccentBorderCallout2" | "AccentBorderCallout3" | "WedgeRectCallout" | "WedgeRRectCallout" | "WedgeEllipseCallout" | "CloudCallout" | "Cloud" | "Ribbon" | "Ribbon2" | "EllipseRibbon" | "EllipseRibbon2" | "LeftRightRibbon" | "VerticalScroll" | "HorizontalScroll" | "Wave" | "DoubleWave" | "Plus" | "FlowChartProcess" | "FlowChartDecision" | "FlowChartInputOutput" | "FlowChartPredefinedProcess" | "FlowChartInternalStorage" | "FlowChartDocument" | "FlowChartMultidocument" | "FlowChartTerminator" | "FlowChartPreparation" | "FlowChartManualInput" | "FlowChartManualOperation" | "FlowChartConnector" | "FlowChartPunchedCard" | "FlowChartPunchedTape" | "FlowChartSummingJunction" | "FlowChartOr" | "FlowChartCollate" | "FlowChartSort" | "FlowChartExtract" | "FlowChartMerge" | "FlowChartOfflineStorage" | "FlowChartOnlineStorage" | "FlowChartMagneticTape" | "FlowChartMagneticDisk" | "FlowChartMagneticDrum" | "FlowChartDisplay" | "FlowChartDelay" | "FlowChartAlternateProcess" | "FlowChartOffpageConnector" | "ActionButtonBlank" | "ActionButtonHome" | "ActionButtonHelp" | "ActionButtonInformation" | "ActionButtonForwardNext" | "ActionButtonBackPrevious" | "ActionButtonEnd" | "ActionButtonBeginning" | "ActionButtonReturn" | "ActionButtonDocument" | "ActionButtonSound" | "ActionButtonMovie" | "Gear6" | "Gear9" | "Funnel" | "MathPlus" | "MathMinus" | "MathMultiply" | "MathDivide" | "MathEqual" | "MathNotEqual" | "CornerTabs" | "SquareTabs" | "PlaqueTabs" | "ChartX" | "ChartStar" | "ChartPlus"): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: ''
      parameters:
        - id: geometricShapeTypeString
          description: <span data-ttu-id="7d31f-112">Stellt den Typ der geometrischen Form dar.</span><span class="sxs-lookup"><span data-stu-id="7d31f-112">Represents the type of the geometric shape.</span></span> <span data-ttu-id="7d31f-113">Details finden Sie unter Excel.GeometricShapeType.</span><span class="sxs-lookup"><span data-stu-id="7d31f-113">See Excel.GeometricShapeType for details.</span></span>
          type:
            - '"LineInverse" | "Triangle" | "RightTriangle" | "Rectangle" | "Diamond" | "Parallelogram" | "Trapezoid" | "NonIsoscelesTrapezoid" | "Pentagon" | "Hexagon" | "Heptagon" | "Octagon" | "Decagon" | "Dodecagon" | "Star4" | "Star5" | "Star6" | "Star7" | "Star8" | "Star10" | "Star12" | "Star16" | "Star24" | "Star32" | "RoundRectangle" | "Round1Rectangle" | "Round2SameRectangle" | "Round2DiagonalRectangle" | "SnipRoundRectangle" | "Snip1Rectangle" | "Snip2SameRectangle" | "Snip2DiagonalRectangle" | "Plaque" | "Ellipse" | "Teardrop" | "HomePlate" | "Chevron" | "PieWedge" | "Pie" | "BlockArc" | "Donut" | "NoSmoking" | "RightArrow" | "LeftArrow" | "UpArrow" | "DownArrow" | "StripedRightArrow" | "NotchedRightArrow" | "BentUpArrow" | "LeftRightArrow" | "UpDownArrow" | "LeftUpArrow" | "LeftRightUpArrow" | "QuadArrow" | "LeftArrowCallout" | "RightArrowCallout" | "UpArrowCallout" | "DownArrowCallout" | "LeftRightArrowCallout" | "UpDownArrowCallout" | "QuadArrowCallout" | "BentArrow" | "UturnArrow" | "CircularArrow" | "LeftCircularArrow" | "LeftRightCircularArrow" | "CurvedRightArrow" | "CurvedLeftArrow" | "CurvedUpArrow" | "CurvedDownArrow" | "SwooshArrow" | "Cube" | "Can" | "LightningBolt" | "Heart" | "Sun" | "Moon" | "SmileyFace" | "IrregularSeal1" | "IrregularSeal2" | "FoldedCorner" | "Bevel" | "Frame" | "HalfFrame" | "Corner" | "DiagonalStripe" | "Chord" | "Arc" | "LeftBracket" | "RightBracket" | "LeftBrace" | "RightBrace" | "BracketPair" | "BracePair" | "Callout1" | "Callout2" | "Callout3" | "AccentCallout1" | "AccentCallout2" | "AccentCallout3" | "BorderCallout1" | "BorderCallout2" | "BorderCallout3" | "AccentBorderCallout1" | "AccentBorderCallout2" | "AccentBorderCallout3" | "WedgeRectCallout" | "WedgeRRectCallout" | "WedgeEllipseCallout" | "CloudCallout" | "Cloud" | "Ribbon" | "Ribbon2" | "EllipseRibbon" | "EllipseRibbon2" | "LeftRightRibbon" | "VerticalScroll" | "HorizontalScroll" | "Wave" | "DoubleWave" | "Plus" | "FlowChartProcess" | "FlowChartDecision" | "FlowChartInputOutput" | "FlowChartPredefinedProcess" | "FlowChartInternalStorage" | "FlowChartDocument" | "FlowChartMultidocument" | "FlowChartTerminator" | "FlowChartPreparation" | "FlowChartManualInput" | "FlowChartManualOperation" | "FlowChartConnector" | "FlowChartPunchedCard" | "FlowChartPunchedTape" | "FlowChartSummingJunction" | "FlowChartOr" | "FlowChartCollate" | "FlowChartSort" | "FlowChartExtract" | "FlowChartMerge" | "FlowChartOfflineStorage" | "FlowChartOnlineStorage" | "FlowChartMagneticTape" | "FlowChartMagneticDisk" | "FlowChartMagneticDrum" | "FlowChartDisplay" | "FlowChartDelay" | "FlowChartAlternateProcess" | "FlowChartOffpageConnector" | "ActionButtonBlank" | "ActionButtonHome" | "ActionButtonHelp" | "ActionButtonInformation" | "ActionButtonForwardNext" | "ActionButtonBackPrevious" | "ActionButtonEnd" | "ActionButtonBeginning" | "ActionButtonReturn" | "ActionButtonDocument" | "ActionButtonSound" | "ActionButtonMovie" | "Gear6" | "Gear9" | "Funnel" | "MathPlus" | "MathMinus" | "MathMultiply" | "MathDivide" | "MathEqual" | "MathNotEqual" | "CornerTabs" | "SquareTabs" | "PlaqueTabs" | "ChartX" | "ChartStar" | "ChartPlus"'
  - uid: excel.Excel.ShapeCollection.addGroup
    summary: |-
      <span data-ttu-id="7d31f-114">Gruppiert eine Teilmenge von Formen auf dem Arbeitsblatt dieser Sammlung.</span><span class="sxs-lookup"><span data-stu-id="7d31f-114">Groups a subset of shapes in this collection's worksheet.</span></span> <span data-ttu-id="7d31f-115">Gibt ein Shape-Objekt zurück, das die neue Gruppe von Formen darstellt.</span><span class="sxs-lookup"><span data-stu-id="7d31f-115">Returns a Shape object that represents the new group of shapes.</span></span>

      <span data-ttu-id="7d31f-116">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7d31f-116">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: addGroup(values)
    fullName: addGroup(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addGroup(values: Array<string | Shape>): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7d31f-117">Beispiele</span><span class="sxs-lookup"><span data-stu-id="7d31f-117">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Shapes");
              const square = sheet.shapes.getItem("Square");
              const pentagon = sheet.shapes.getItem("Pentagon");
              const octagon = sheet.shapes.getItem("Octagon");

              const shapeGroup = sheet.shapes.addGroup([square, pentagon, octagon]);
              shapeGroup.name = "Group";
              console.log("Shapes grouped");

              await context.sync();
          });
          ```
      parameters:
        - id: values
          description: <span data-ttu-id="7d31f-118">Ein Array von Shape-ID-oder Shape-Objekten.</span><span class="sxs-lookup"><span data-stu-id="7d31f-118">An array of shape ID or shape objects.</span></span>
          type:
            - Array<string | Shape>
  - uid: excel.Excel.ShapeCollection.addImage
    summary: |-
      <span data-ttu-id="7d31f-119">Erstellt ein Bild aus einer base64-codierten Zeichenfolge und fügt es dem Arbeitsblatt hinzu.</span><span class="sxs-lookup"><span data-stu-id="7d31f-119">Creates an image from a base64-encoded string and adds it to the worksheet.</span></span> <span data-ttu-id="7d31f-120">Gibt das Shape-Objekt zurück, das das neue Bild darstellt.</span><span class="sxs-lookup"><span data-stu-id="7d31f-120">Returns the Shape object that represents the new image.</span></span>

      <span data-ttu-id="7d31f-121">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7d31f-121">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: addImage(base64ImageString)
    fullName: addImage(base64ImageString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addImage(base64ImageString: string): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7d31f-122">Beispiele</span><span class="sxs-lookup"><span data-stu-id="7d31f-122">Examples</span></span>

          ```javascript
          const myFile = <HTMLInputElement>document.getElementById("selectedFile");
          const reader = new FileReader();

          reader.onload = (event) => {
              Excel.run((context) => {
                  const startIndex = (<string>(<FileReader>event.target).result).indexOf("base64,");
                  const mybase64 = (<string>(<FileReader>event.target).result).substr(startIndex + 7);
                  const sheet = context.workbook.worksheets.getItem("Shapes");
                  const image = sheet.shapes.addImage(mybase64);
                  image.name = "Image";
                  return context.sync();
              });
          };

          // Read in the image file as a data URL.
          reader.readAsDataURL(myFile.files[0]);
          ```
      parameters:
        - id: base64ImageString
          description: '<span data-ttu-id="7d31f-123">Eine Base64-codierte Zeichenfolge, die ein Bild im JPEG-oder im PNG-Format darstellt.</span><span class="sxs-lookup"><span data-stu-id="7d31f-123">A base64-encoded string representing an image in either JPEG or PNG format.</span></span>'
          type:
            - string
  - uid: excel.Excel.ShapeCollection.addLine
    summary: |-
      <span data-ttu-id="7d31f-124">Fügt einem Arbeitsblatt eine Linie hinzu.</span><span class="sxs-lookup"><span data-stu-id="7d31f-124">Adds a line to worksheet.</span></span> <span data-ttu-id="7d31f-125">Gibt ein Shape-Objekt zurück, das die neue Linie darstellt.</span><span class="sxs-lookup"><span data-stu-id="7d31f-125">Returns a Shape object that represents the new line.</span></span>

      <span data-ttu-id="7d31f-126">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7d31f-126">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'addLine(startLeft, startTop, endLeft, endTop, connectorType)'
    fullName: 'addLine(startLeft, startTop, endLeft, endTop, connectorType)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addLine(startLeft: number, startTop: number, endLeft: number, endTop: number, connectorType?: Excel.ConnectorType): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7d31f-127">Beispiele</span><span class="sxs-lookup"><span data-stu-id="7d31f-127">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const shapes = context.workbook.worksheets.getItem("Shapes").shapes;
              const line = shapes.addLine(200, 50, 300, 150, Excel.ConnectorType.straight);
              line.name = "StraightLine";
              await context.sync();
          });
          ```
      parameters:
        - id: startLeft
          description: '<span data-ttu-id="7d31f-128">Der Abstand (in Punkt) vom Anfang der Zeile zur linken Seite des Arbeitsblatts.</span><span class="sxs-lookup"><span data-stu-id="7d31f-128">The distance, in points, from the start of the line to the left side of the worksheet.</span></span>'
          type:
            - number
        - id: startTop
          description: '<span data-ttu-id="7d31f-129">Der Abstand (in Punkt) vom Anfang der Zeile zum oberen Rand des Arbeitsblatts.</span><span class="sxs-lookup"><span data-stu-id="7d31f-129">The distance, in points, from the start of the line to the top of the worksheet.</span></span>'
          type:
            - number
        - id: endLeft
          description: '<span data-ttu-id="7d31f-130">Der Abstand (in Punkt) vom Ende der Linie zum linken Rand des Arbeitsblatts.</span><span class="sxs-lookup"><span data-stu-id="7d31f-130">The distance, in points, from the end of the line to the left of the worksheet.</span></span>'
          type:
            - number
        - id: endTop
          description: '<span data-ttu-id="7d31f-131">Der Abstand (in Punkt) vom Ende der Linie zum oberen Rand des Arbeitsblatts.</span><span class="sxs-lookup"><span data-stu-id="7d31f-131">The distance, in points, from the end of the line to the top of the worksheet.</span></span>'
          type:
            - number
        - id: connectorType
          description: <span data-ttu-id="7d31f-132">Stellt den Verbindertyp dar.</span><span class="sxs-lookup"><span data-stu-id="7d31f-132">Represents the connector type.</span></span> <span data-ttu-id="7d31f-133">Weitere Informationen finden Sie unter Excel. ConnectorType.</span><span class="sxs-lookup"><span data-stu-id="7d31f-133">See Excel.ConnectorType for details.</span></span>
          type:
            - excel.Excel.ConnectorType
  - uid: excel.Excel.ShapeCollection.addLine_1
    summary: |-
      <span data-ttu-id="7d31f-134">Fügt einem Arbeitsblatt eine Linie hinzu.</span><span class="sxs-lookup"><span data-stu-id="7d31f-134">Adds a line to worksheet.</span></span> <span data-ttu-id="7d31f-135">Gibt ein Shape-Objekt zurück, das die neue Linie darstellt.</span><span class="sxs-lookup"><span data-stu-id="7d31f-135">Returns a Shape object that represents the new line.</span></span>

      <span data-ttu-id="7d31f-136">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7d31f-136">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'addLine(startLeft, startTop, endLeft, endTop, connectorTypeString)'
    fullName: 'addLine(startLeft, startTop, endLeft, endTop, connectorTypeString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addLine(startLeft: number, startTop: number, endLeft: number, endTop: number, connectorTypeString?: "Straight" | "Elbow" | "Curve"): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: ''
      parameters:
        - id: startLeft
          description: '<span data-ttu-id="7d31f-137">Der Abstand (in Punkt) vom Anfang der Zeile zur linken Seite des Arbeitsblatts.</span><span class="sxs-lookup"><span data-stu-id="7d31f-137">The distance, in points, from the start of the line to the left side of the worksheet.</span></span>'
          type:
            - number
        - id: startTop
          description: '<span data-ttu-id="7d31f-138">Der Abstand (in Punkt) vom Anfang der Zeile zum oberen Rand des Arbeitsblatts.</span><span class="sxs-lookup"><span data-stu-id="7d31f-138">The distance, in points, from the start of the line to the top of the worksheet.</span></span>'
          type:
            - number
        - id: endLeft
          description: '<span data-ttu-id="7d31f-139">Der Abstand (in Punkt) vom Ende der Linie zum linken Rand des Arbeitsblatts.</span><span class="sxs-lookup"><span data-stu-id="7d31f-139">The distance, in points, from the end of the line to the left of the worksheet.</span></span>'
          type:
            - number
        - id: endTop
          description: '<span data-ttu-id="7d31f-140">Der Abstand (in Punkt) vom Ende der Linie zum oberen Rand des Arbeitsblatts.</span><span class="sxs-lookup"><span data-stu-id="7d31f-140">The distance, in points, from the end of the line to the top of the worksheet.</span></span>'
          type:
            - number
        - id: connectorTypeString
          description: <span data-ttu-id="7d31f-141">Stellt den Verbindertyp dar.</span><span class="sxs-lookup"><span data-stu-id="7d31f-141">Represents the connector type.</span></span> <span data-ttu-id="7d31f-142">Weitere Informationen finden Sie unter Excel. ConnectorType.</span><span class="sxs-lookup"><span data-stu-id="7d31f-142">See Excel.ConnectorType for details.</span></span>
          type:
            - '"Straight" | "Elbow" | "Curve"'
  - uid: excel.Excel.ShapeCollection.addSvg
    summary: |-
      <span data-ttu-id="7d31f-143">Erstellt eine skalierbare Vektorgrafik (SVG) aus einer XML-Zeichenfolge und fügt sie dem Arbeitsblatt hinzu.</span><span class="sxs-lookup"><span data-stu-id="7d31f-143">Creates a scalable vector graphic (SVG) from an XML string and adds it to the worksheet.</span></span> <span data-ttu-id="7d31f-144">Gibt ein Shape-Objekt zurück, das das neue Bild darstellt.</span><span class="sxs-lookup"><span data-stu-id="7d31f-144">Returns a Shape object that represents the new image.</span></span>

      <span data-ttu-id="7d31f-145">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7d31f-145">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: addSvg(xml)
    fullName: addSvg(xml)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addSvg(xml: string): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: ''
      parameters:
        - id: xml
          description: '<span data-ttu-id="7d31f-146">Eine XML-Zeichenfolge, die den SVG darstellt.</span><span class="sxs-lookup"><span data-stu-id="7d31f-146">An XML string that represents the SVG.</span></span>'
          type:
            - string
  - uid: excel.Excel.ShapeCollection.addTextBox
    summary: |-
      <span data-ttu-id="7d31f-147">Fügt dem Arbeitsblatt ein Textfeld mit dem angegebenen Text als Inhalt hinzu.</span><span class="sxs-lookup"><span data-stu-id="7d31f-147">Adds a text box to the worksheet with the provided text as the content.</span></span> <span data-ttu-id="7d31f-148">Gibt ein Shape-Objekt zurück, das das neue Textfeld darstellt.</span><span class="sxs-lookup"><span data-stu-id="7d31f-148">Returns a Shape object that represents the new text box.</span></span>

      <span data-ttu-id="7d31f-149">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7d31f-149">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: addTextBox(text)
    fullName: addTextBox(text)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addTextBox(text?: string): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: |-


          #### <a name="examples"></a><span data-ttu-id="7d31f-150">Beispiele</span><span class="sxs-lookup"><span data-stu-id="7d31f-150">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const shapes = context.workbook.worksheets.getItem("Shapes").shapes;
              const textbox = shapes.addTextBox("A box with text");
              textbox.left = 100;
              textbox.top = 100;
              textbox.height = 20;
              textbox.width = 175;
              textbox.name = "Textbox";
              await context.sync();
          });
          ```
      parameters:
        - id: text
          description: '<span data-ttu-id="7d31f-151">Stellt den Text dar, der im erstellten Textfeld angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="7d31f-151">Represents the text that will be shown in the created text box.</span></span>'
          type:
            - string
  - uid: excel.Excel.ShapeCollection.context
    summary: <span data-ttu-id="7d31f-152">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="7d31f-152">The request context associated with the object.</span></span> <span data-ttu-id="7d31f-153">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="7d31f-153">This connects the add-in's process to the Office host application's process.</span></span>
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.ShapeCollection.getCount
    summary: |-
      <span data-ttu-id="7d31f-154">Gibt die Anzahl der Formen auf dem Arbeitsblatt zurück.</span><span class="sxs-lookup"><span data-stu-id="7d31f-154">Returns the number of shapes in the worksheet.</span></span> <span data-ttu-id="7d31f-155">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="7d31f-155">Read-only.</span></span>

      <span data-ttu-id="7d31f-156">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7d31f-156">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.ShapeCollection.getItem
    summary: |-
      <span data-ttu-id="7d31f-157">Ruft eine Form anhand ihres Namens ab.</span><span class="sxs-lookup"><span data-stu-id="7d31f-157">Gets a shape using its name.</span></span>

      <span data-ttu-id="7d31f-158">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7d31f-158">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: ''
      parameters:
        - id: name
          description: <span data-ttu-id="7d31f-159">Der Name des abzurufenden Shapes.</span><span class="sxs-lookup"><span data-stu-id="7d31f-159">Name of the shape to be retrieved.</span></span>
          type:
            - string
  - uid: excel.Excel.ShapeCollection.getItemAt
    summary: |-
      <span data-ttu-id="7d31f-160">Ruft eine Form anhand ihrer Position in der Sammlung ab.</span><span class="sxs-lookup"><span data-stu-id="7d31f-160">Gets a shape using its position in the collection.</span></span>

      <span data-ttu-id="7d31f-161">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="7d31f-161">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Shape;'
      return:
        type:
          - excel.Excel.Shape
        description: ''
      parameters:
        - id: index
          description: <span data-ttu-id="7d31f-162">Der nullbasierte Index des abzurufenden Shapes.</span><span class="sxs-lookup"><span data-stu-id="7d31f-162">The zero-based index of the shape to be retrieved.</span></span>
          type:
            - number
  - uid: excel.Excel.ShapeCollection.items
    summary: <span data-ttu-id="7d31f-163">Ruft die geladenen untergeordneten Elemente in dieser Sammlung ab.</span><span class="sxs-lookup"><span data-stu-id="7d31f-163">Gets the loaded child items in this collection.</span></span>
    isPreview: true
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Shape[];'
      return:
        type:
          - 'Excel.Shape[]'
  - uid: excel.Excel.ShapeCollection.load
    summary: <span data-ttu-id="7d31f-164">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="7d31f-164">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7d31f-165">Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.</span><span class="sxs-lookup"><span data-stu-id="7d31f-165">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="7d31f-166">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="7d31f-166">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="7d31f-167">`load(option?: string | string[]): Excel.ShapeCollection`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="7d31f-167">`load(option?: string | string[]): Excel.ShapeCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="7d31f-168">`load(option?: { select?: string; expand?: string; }): Excel.ShapeCollection`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="7d31f-168">`load(option?: { select?: string; expand?: string; }): Excel.ShapeCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="7d31f-169">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ShapeCollection`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="7d31f-169">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ShapeCollection` - Only available on collection types.</span></span> <span data-ttu-id="7d31f-170">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="7d31f-170">It is similar to the preceding signature.</span></span> <span data-ttu-id="7d31f-171">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="7d31f-171">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="7d31f-172">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="7d31f-172">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="7d31f-173">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="7d31f-173">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ShapeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.ShapeCollection;'
      return:
        type:
          - excel.Excel.ShapeCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.ShapeCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.ShapeCollection.load_1
    summary: <span data-ttu-id="7d31f-174">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="7d31f-174">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7d31f-175">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="7d31f-175">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ShapeCollection;'
      return:
        type:
          - excel.Excel.ShapeCollection
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="7d31f-176">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="7d31f-176">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.ShapeCollection.load_2
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.ShapeCollection;'
      return:
        type:
          - excel.Excel.ShapeCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: excel.Excel.ShapeCollection.toJSON
    summary: '<span data-ttu-id="7d31f-177">ÜberSchreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API-Objekt an`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="7d31f-177">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="7d31f-178">.</span><span class="sxs-lookup"><span data-stu-id="7d31f-178"></span></span> <span data-ttu-id="7d31f-179">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="7d31f-179"></span></span><!-- --><span data-ttu-id="7d31f-180">Ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche `Excel.ShapeCollection` Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`Excel.Interfaces.ShapeCollectionData`</span><span class="sxs-lookup"><span data-stu-id="7d31f-180">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.ShapeCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ShapeCollectionData`</span></span><!-- --><span data-ttu-id="7d31f-181">), die ein Array "Items" mit flachen Kopien aller geladenen Eigenschaften aus den Elementen der Auflistung enthält.</span><span class="sxs-lookup"><span data-stu-id="7d31f-181">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ShapeCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.ShapeCollectionData
        description: ''