### YamlMime:UniversalReference
items:
  - uid: excel.Excel.ConditionalCellValueRule
    summary: |-
      <span data-ttu-id="12aaa-101">Stellt eine bedingte Formatierungsregel f√ºr Zellenwerte dar.</span><span class="sxs-lookup"><span data-stu-id="12aaa-101">Represents a cell value conditional format rule.</span></span>

      <span data-ttu-id="12aaa-102">\[[API-Satz: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="12aaa-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ConditionalCellValueRule
    fullName: Excel.ConditionalCellValueRule
    langs:
      - typeScript
    type: interface
    package: excel
    children:
      - excel.Excel.ConditionalCellValueRule.formula1
      - excel.Excel.ConditionalCellValueRule.formula2
      - excel.Excel.ConditionalCellValueRule.operator
  - uid: excel.Excel.ConditionalCellValueRule.formula1
    summary: |-
      <span data-ttu-id="12aaa-103">Die Formel, sofern erforderlich, nach der die bedingte Formatregel ausgewertet werden soll.</span><span class="sxs-lookup"><span data-stu-id="12aaa-103">The formula, if required, to evaluate the conditional format rule on.</span></span>

      <span data-ttu-id="12aaa-104">\[[API-Satz: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="12aaa-104">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: formula1
    fullName: formula1
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formula1: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="12aaa-105">Beispiele</span><span class="sxs-lookup"><span data-stu-id="12aaa-105">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B21:E23");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.cellValue);
              conditionalFormat.cellValue.format.font.color = "red";
              conditionalFormat.cellValue.rule = { formula1: "=0", operator: "LessThan" };

              await context.sync();
          });
          ```
  - uid: excel.Excel.ConditionalCellValueRule.formula2
    summary: |-
      <span data-ttu-id="12aaa-106">Die Formel, sofern erforderlich, nach der die bedingte Formatregel ausgewertet werden soll.</span><span class="sxs-lookup"><span data-stu-id="12aaa-106">The formula, if required, to evaluate the conditional format rule on.</span></span>

      <span data-ttu-id="12aaa-107">\[[API-Satz: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="12aaa-107">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: formula2
    fullName: formula2
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formula2?: string;'
      return:
        type:
          - string
  - uid: excel.Excel.ConditionalCellValueRule.operator
    summary: |-
      <span data-ttu-id="12aaa-108">Der Operator des bedingten Textformats.</span><span class="sxs-lookup"><span data-stu-id="12aaa-108">The operator of the text conditional format.</span></span>

      <span data-ttu-id="12aaa-109">\[[API-Satz: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="12aaa-109">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: operator
    fullName: operator
    langs:
      - typeScript
    type: property
    syntax:
      content: 'operator: Excel.ConditionalCellValueOperator | "Invalid" | "Between" | "NotBetween" | "EqualTo" | "NotEqualTo" | "GreaterThan" | "LessThan" | "GreaterThanOrEqual" | "LessThanOrEqual";'
      return:
        type:
          - Excel.ConditionalCellValueOperator | "Invalid" | "Between" | "NotBetween" | "EqualTo" | "NotEqualTo" | "GreaterThan" | "LessThan" | "GreaterThanOrEqual" | "LessThanOrEqual"
        description: |-


          #### <a name="examples"></a><span data-ttu-id="12aaa-110">Beispiele</span><span class="sxs-lookup"><span data-stu-id="12aaa-110">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const range = sheet.getRange("B21:E23");
              const conditionalFormat = range.conditionalFormats
                  .add(Excel.ConditionalFormatType.cellValue);
              conditionalFormat.cellValue.format.font.color = "red";
              conditionalFormat.cellValue.rule = { formula1: "=0", operator: "LessThan" };

              await context.sync();
          });
          ```