### YamlMime:UniversalReference
ms.openlocfilehash: 156142752005a80d29c7ba9a3e61dc9f8a548e7d
ms.sourcegitcommit: 2ef4b6e6f2f27ecb9abf01fefa4cffd9498ad5dc
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 03/16/2019
ms.locfileid: "30656794"
items:
- uid: excel.Excel.CommentCollection
  summary: >-
    <span data-ttu-id="b51d4-101">Stellt eine Auflistung von comment-Objekten dar, die Teil der Arbeitsmappe sind.</span><span class="sxs-lookup"><span data-stu-id="b51d4-101">Represents a collection of comment objects that are part of the workbook.</span></span>


    <span data-ttu-id="b51d4-102">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b51d4-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: Excel.CommentCollection
  fullName: Excel.CommentCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.CommentCollection.add
  - excel.Excel.CommentCollection.add_1
  - excel.Excel.CommentCollection.context
  - excel.Excel.CommentCollection.getCount
  - excel.Excel.CommentCollection.getItem
  - excel.Excel.CommentCollection.getItemAt
  - excel.Excel.CommentCollection.getItemByCell
  - excel.Excel.CommentCollection.getItemByReplyId
  - excel.Excel.CommentCollection.items
  - excel.Excel.CommentCollection.load
  - excel.Excel.CommentCollection.load_1
  - excel.Excel.CommentCollection.load_2
  - excel.Excel.CommentCollection.toJSON
- uid: excel.Excel.CommentCollection.add
  summary: >-
    <span data-ttu-id="b51d4-103">Erstellt ausgehend von der Zellenposition und dem Inhalt einen neuen Kommentar (Kommentarthread).</span><span class="sxs-lookup"><span data-stu-id="b51d4-103">Creates a new comment(comment thread) based on the cell location and content.</span></span> <span data-ttu-id="b51d4-104">Eine Ausnahme wegen ungültigen Arguments wird ausgelöst, wenn die Position mehr als eine Zelle umfasst.</span><span class="sxs-lookup"><span data-stu-id="b51d4-104">Invalid argument will be thrown if the location is larger than one cell.</span></span>


    <span data-ttu-id="b51d4-105">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b51d4-105">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: add(content, cellAddress, contentType)
  fullName: add(content, cellAddress, contentType)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(content: string, cellAddress: Range | string, contentType?: Excel.ContentType): Excel.Comment;'
    return:
      type:
      - excel.Excel.Comment
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"b51d4-106\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"b51d4-106\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Comments\");\n    sheet.comments.add(\"TODO: add data.\", \"A2\");\n    await context.sync();\n});\n```"
    parameters:
    - id: content
      description: <span data-ttu-id="b51d4-107">Der Kommentar Inhalt.</span><span class="sxs-lookup"><span data-stu-id="b51d4-107">The comment content.</span></span>
      type:
      - string
    - id: cellAddress
      description: <span data-ttu-id="b51d4-108">Zelle, in die der Kommentar eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="b51d4-108">Cell to insert comment to.</span></span> <span data-ttu-id="b51d4-109">Kann ein Excel-Range-Objekt oder eine Zeichenfolge sein.</span><span class="sxs-lookup"><span data-stu-id="b51d4-109">May be an Excel Range object, or a string.</span></span> <span data-ttu-id="b51d4-110">Eine Zeichenfolge muss die vollständige Adresse einschließlich des Blattnamens enthalten.</span><span class="sxs-lookup"><span data-stu-id="b51d4-110">If string, must contain the full address, including the sheet name</span></span>
      type:
      - Range | string
    - id: contentType
      description: <span data-ttu-id="b51d4-111">Optional.</span><span class="sxs-lookup"><span data-stu-id="b51d4-111">Optional.</span></span> <span data-ttu-id="b51d4-112">Kommentartyp</span><span class="sxs-lookup"><span data-stu-id="b51d4-112">Type of the comment content</span></span>
      type:
      - excel.Excel.ContentType
- uid: excel.Excel.CommentCollection.add_1
  summary: >-
    <span data-ttu-id="b51d4-113">Erstellt ausgehend von der Zellenposition und dem Inhalt einen neuen Kommentar (Kommentarthread).</span><span class="sxs-lookup"><span data-stu-id="b51d4-113">Creates a new comment(comment thread) based on the cell location and content.</span></span> <span data-ttu-id="b51d4-114">Eine Ausnahme wegen ungültigen Arguments wird ausgelöst, wenn die Position mehr als eine Zelle umfasst.</span><span class="sxs-lookup"><span data-stu-id="b51d4-114">Invalid argument will be thrown if the location is larger than one cell.</span></span>


    <span data-ttu-id="b51d4-115">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b51d4-115">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: add(content, cellAddress, contentTypeString)
  fullName: add(content, cellAddress, contentTypeString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'add(content: string, cellAddress: Range | string, contentTypeString?: "Plain"): Excel.Comment;'
    return:
      type:
      - excel.Excel.Comment
      description: ''
    parameters:
    - id: content
      description: <span data-ttu-id="b51d4-116">Der Kommentar Inhalt.</span><span class="sxs-lookup"><span data-stu-id="b51d4-116">The comment content.</span></span>
      type:
      - string
    - id: cellAddress
      description: <span data-ttu-id="b51d4-117">Zelle, in die der Kommentar eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="b51d4-117">Cell to insert comment to.</span></span> <span data-ttu-id="b51d4-118">Kann ein Excel-Range-Objekt oder eine Zeichenfolge sein.</span><span class="sxs-lookup"><span data-stu-id="b51d4-118">May be an Excel Range object, or a string.</span></span> <span data-ttu-id="b51d4-119">Eine Zeichenfolge muss die vollständige Adresse einschließlich des Blattnamens enthalten.</span><span class="sxs-lookup"><span data-stu-id="b51d4-119">If string, must contain the full address, including the sheet name</span></span>
      type:
      - Range | string
    - id: contentTypeString
      description: <span data-ttu-id="b51d4-120">Optional.</span><span class="sxs-lookup"><span data-stu-id="b51d4-120">Optional.</span></span> <span data-ttu-id="b51d4-121">Kommentartyp</span><span class="sxs-lookup"><span data-stu-id="b51d4-121">Type of the comment content</span></span>
      type:
      - "\"Plain\""
- uid: excel.Excel.CommentCollection.context
  summary: <span data-ttu-id="b51d4-122">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="b51d4-122">The request context associated with the object.</span></span> <span data-ttu-id="b51d4-123">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="b51d4-123">This connects the add-in's process to the Office host application's process.</span></span>
  isPreview: true
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.CommentCollection.getCount
  summary: >-
    <span data-ttu-id="b51d4-124">Ruft die Anzahl der Kommentare in der Sammlung ab.</span><span class="sxs-lookup"><span data-stu-id="b51d4-124">Gets the number of comments in the collection.</span></span>


    <span data-ttu-id="b51d4-125">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b51d4-125">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.CommentCollection.getItem
  summary: >-
    <span data-ttu-id="b51d4-126">Gibt einen Kommentar zurück, der durch seine ID angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="b51d4-126">Returns a comment identified by its ID.</span></span> <span data-ttu-id="b51d4-127">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b51d4-127">Read-only.</span></span>


    <span data-ttu-id="b51d4-128">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b51d4-128">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getItem(commentId)
  fullName: getItem(commentId)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(commentId: string): Excel.Comment;'
    return:
      type:
      - excel.Excel.Comment
      description: ''
    parameters:
    - id: commentId
      description: <span data-ttu-id="b51d4-129">Der Bezeichner für den Kommentar.</span><span class="sxs-lookup"><span data-stu-id="b51d4-129">The identifier for the comment.</span></span>
      type:
      - string
- uid: excel.Excel.CommentCollection.getItemAt
  summary: >-
    <span data-ttu-id="b51d4-130">Ruft einen Kommentar basierend auf seiner Position in der Sammlung ab.</span><span class="sxs-lookup"><span data-stu-id="b51d4-130">Gets a comment based on its position in the collection.</span></span>


    <span data-ttu-id="b51d4-131">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b51d4-131">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getItemAt(index)
  fullName: getItemAt(index)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.Comment;'
    return:
      type:
      - excel.Excel.Comment
      description: ''
    parameters:
    - id: index
      description: <span data-ttu-id="b51d4-132">Index-Wert des abzurufenden Objekts.</span><span class="sxs-lookup"><span data-stu-id="b51d4-132">Index value of the object to be retrieved.</span></span> <span data-ttu-id="b51d4-133">Nullindiziert.</span><span class="sxs-lookup"><span data-stu-id="b51d4-133">Zero-indexed.</span></span>
      type:
      - number
- uid: excel.Excel.CommentCollection.getItemByCell
  summary: >-
    <span data-ttu-id="b51d4-134">Ruft einen Kommentar für die bestimmte Zelle in der Sammlung ab.</span><span class="sxs-lookup"><span data-stu-id="b51d4-134">Gets a comment on the specific cell in the collection.</span></span>


    <span data-ttu-id="b51d4-135">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b51d4-135">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getItemByCell(cellAddress)
  fullName: getItemByCell(cellAddress)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemByCell(cellAddress: Range | string): Excel.Comment;'
    return:
      type:
      - excel.Excel.Comment
      description: ''
    parameters:
    - id: cellAddress
      description: <span data-ttu-id="b51d4-136">Zelle, in der sich der Kommentar befindet.</span><span class="sxs-lookup"><span data-stu-id="b51d4-136">Cell which the comment is on.</span></span> <span data-ttu-id="b51d4-137">Kann ein Excel-Range-Objekt oder eine Zeichenfolge sein.</span><span class="sxs-lookup"><span data-stu-id="b51d4-137">May be an Excel Range object, or a string.</span></span> <span data-ttu-id="b51d4-138">Eine Zeichenfolge muss die vollständige Adresse einschließlich des Blattnamens enthalten.</span><span class="sxs-lookup"><span data-stu-id="b51d4-138">If string, must contain the full address, including the sheet name</span></span>
      type:
      - Range | string
- uid: excel.Excel.CommentCollection.getItemByReplyId
  summary: >-
    <span data-ttu-id="b51d4-139">Ruft einen Kommentar bezogen auf seine Antwort-ID in der Sammlung ab.</span><span class="sxs-lookup"><span data-stu-id="b51d4-139">Gets a comment related to its reply ID in the collection.</span></span>


    <span data-ttu-id="b51d4-140">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b51d4-140">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getItemByReplyId(replyId)
  fullName: getItemByReplyId(replyId)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemByReplyId(replyId: string): Excel.Comment;'
    return:
      type:
      - excel.Excel.Comment
      description: ''
    parameters:
    - id: replyId
      description: <span data-ttu-id="b51d4-141">Der Bezeichner der Kommentar Antwort.</span><span class="sxs-lookup"><span data-stu-id="b51d4-141">The identifier of comment reply.</span></span>
      type:
      - string
- uid: excel.Excel.CommentCollection.items
  summary: <span data-ttu-id="b51d4-142">Ruft die geladenen untergeordneten Elemente in dieser Sammlung ab.</span><span class="sxs-lookup"><span data-stu-id="b51d4-142">Gets the loaded child items in this collection.</span></span>
  isPreview: true
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.Comment[];'
    return:
      type:
      - Excel.Comment[]
- uid: excel.Excel.CommentCollection.load
  summary: <span data-ttu-id="b51d4-143">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="b51d4-143">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b51d4-144">Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.</span><span class="sxs-lookup"><span data-stu-id="b51d4-144">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="b51d4-145">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="b51d4-145">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="b51d4-146">`load(option?: string | string[]): Excel.CommentCollection`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="b51d4-146">`load(option?: string | string[]): Excel.CommentCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="b51d4-147">`load(option?: { select?: string; expand?: string; }): Excel.CommentCollection`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="b51d4-147">`load(option?: { select?: string; expand?: string; }): Excel.CommentCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="b51d4-148">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.CommentCollection`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="b51d4-148">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.CommentCollection` - Only available on collection types.</span></span> <span data-ttu-id="b51d4-149">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="b51d4-149">It is similar to the preceding signature.</span></span> <span data-ttu-id="b51d4-150">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="b51d4-150">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="b51d4-151">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="b51d4-151">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="b51d4-152">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="b51d4-152">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.CommentCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.CommentCollection;'
    return:
      type:
      - excel.Excel.CommentCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.CommentCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.CommentCollection.load_1
  summary: <span data-ttu-id="b51d4-153">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="b51d4-153">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b51d4-154">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="b51d4-154">You must call `context.sync()` before reading the properties.</span></span>
  isPreview: true
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.CommentCollection;'
    return:
      type:
      - excel.Excel.CommentCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="b51d4-155">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="b51d4-155">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.CommentCollection.load_2
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.CommentCollection;'
    return:
      type:
      - excel.Excel.CommentCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.CommentCollection.toJSON
  summary: <span data-ttu-id="b51d4-156">ÜberSchreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API-Objekt an`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="b51d4-156">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="b51d4-157">.</span><span class="sxs-lookup"><span data-stu-id="b51d4-157"></span></span> <span data-ttu-id="b51d4-158">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="b51d4-158"></span></span><!-- --><span data-ttu-id="b51d4-159">Ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche `Excel.CommentCollection` Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`Excel.Interfaces.CommentCollectionData`</span><span class="sxs-lookup"><span data-stu-id="b51d4-159">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.CommentCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.CommentCollectionData`</span></span><!-- --><span data-ttu-id="b51d4-160">), die ein Array "Items" mit flachen Kopien aller geladenen Eigenschaften aus den Elementen der Auflistung enthält.</span><span class="sxs-lookup"><span data-stu-id="b51d4-160">) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  isPreview: true
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.CommentCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.CommentCollectionData
      description: ''
