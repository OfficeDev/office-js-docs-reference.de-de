### YamlMime:UniversalReference
ms.openlocfilehash: d51731c0c79607574a66c115e69f3b78f1cbbf95
ms.sourcegitcommit: 5e31602ed9cbddfcff2768b7ed69dd4821440b90
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 03/14/2019
ms.locfileid: "30575662"
items:
- uid: excel.Excel.Line
  summary: >-
    Stellt eine Leitung innerhalb eines Arbeitsblatts dar. Wenn Sie das entsprechende Shape-Objekt abrufen möchten, verwenden Sie`Line.shape`<!-- -->.


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: Excel.Line
  fullName: Excel.Line
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Line.beginArrowheadLength
  - excel.Excel.Line.beginArrowheadStyle
  - excel.Excel.Line.beginArrowheadWidth
  - excel.Excel.Line.beginConnectedShape
  - excel.Excel.Line.beginConnectedSite
  - excel.Excel.Line.connectBeginShape
  - excel.Excel.Line.connectEndShape
  - excel.Excel.Line.connectorType
  - excel.Excel.Line.context
  - excel.Excel.Line.disconnectBeginShape
  - excel.Excel.Line.disconnectEndShape
  - excel.Excel.Line.endArrowheadLength
  - excel.Excel.Line.endArrowheadStyle
  - excel.Excel.Line.endArrowheadWidth
  - excel.Excel.Line.endConnectedShape
  - excel.Excel.Line.endConnectedSite
  - excel.Excel.Line.id
  - excel.Excel.Line.isBeginConnected
  - excel.Excel.Line.isEndConnected
  - excel.Excel.Line.load
  - excel.Excel.Line.load_1
  - excel.Excel.Line.load_2
  - excel.Excel.Line.set
  - excel.Excel.Line.set_1
  - excel.Excel.Line.shape
  - excel.Excel.Line.toJSON
- uid: excel.Excel.Line.beginArrowheadLength
  summary: >-
    Stellt die Länge der Pfeilspitze am Anfang der angegebenen Reihe dar.


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: beginArrowheadLength
  fullName: beginArrowheadLength
  langs:
  - typeScript
  type: property
  syntax:
    content: 'beginArrowheadLength: Excel.ArrowheadLength | "Short" | "Medium" | "Long";'
    return:
      type:
      - Excel.ArrowheadLength | "Short" | "Medium" | "Long"
- uid: excel.Excel.Line.beginArrowheadStyle
  summary: >-
    Stellt die Art der Pfeilspitze am Anfang der angegebenen Reihe dar.


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: beginArrowheadStyle
  fullName: beginArrowheadStyle
  langs:
  - typeScript
  type: property
  syntax:
    content: 'beginArrowheadStyle: Excel.ArrowheadStyle | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" | "Open";'
    return:
      type:
      - Excel.ArrowheadStyle | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" | "Open"
- uid: excel.Excel.Line.beginArrowheadWidth
  summary: >-
    Stellt die Breite der Pfeilspitze am Anfang der angegebenen Reihe dar.


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: beginArrowheadWidth
  fullName: beginArrowheadWidth
  langs:
  - typeScript
  type: property
  syntax:
    content: 'beginArrowheadWidth: Excel.ArrowheadWidth | "Narrow" | "Medium" | "Wide";'
    return:
      type:
      - Excel.ArrowheadWidth | "Narrow" | "Medium" | "Wide"
- uid: excel.Excel.Line.beginConnectedShape
  summary: >-
    Stellt die Form dar, an die der Anfang der angegebenen Leitung angefügt ist. Schreibgeschützt.


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: beginConnectedShape
  fullName: beginConnectedShape
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly beginConnectedShape: Excel.Shape;'
    return:
      type:
      - excel.Excel.Shape
- uid: excel.Excel.Line.beginConnectedSite
  summary: >-
    Stellt den Verbindungs Standort dar, mit dem der Anfang einer Verbindung verbunden ist. Schreibgeschützt. Gibt NULL zurück, wenn der Anfang der Leitung nicht mit einer Form verbunden ist.


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: beginConnectedSite
  fullName: beginConnectedSite
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly beginConnectedSite: number;'
    return:
      type:
      - number
- uid: excel.Excel.Line.connectBeginShape
  summary: >-
    Ordnet einer angegebenen Form den Anfang der angegebenen Verbindung zu.


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: connectBeginShape(shape, connectionSite)
  fullName: connectBeginShape(shape, connectionSite)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'connectBeginShape(shape: Excel.Shape, connectionSite: number): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\nawait Excel.run(async (context) => {\n    const shapes = context.workbook.worksheets.getItem(\"Shapes\").shapes;\n    const line = shapes.getItem(\"StraightLine\").line;\n    line.connectBeginShape(shapes.getItem(\"Left\"), 2);\n    line.connectEndShape(shapes.getItem(\"Right\"), 0);\n    await context.sync();\n});\n```"
    parameters:
    - id: shape
      description: Das Shape, mit dem eine Verbindung hergestellt werden soll.
      type:
      - excel.Excel.Shape
    - id: connectionSite
      description: Der Verbindungs Standort des Shapes, an das der Anfang der Verbindung angefügt ist. Muss eine ganze Zahl zwischen 0 (einschließlich) und der Anzahl der Connection-site der angegebenen Form (exklusiv) sein.
      type:
      - number
- uid: excel.Excel.Line.connectEndShape
  summary: >-
    Verknüpft das Ende der angegebenen Verbindung mit einer angegebenen Form.


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: connectEndShape(shape, connectionSite)
  fullName: connectEndShape(shape, connectionSite)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'connectEndShape(shape: Excel.Shape, connectionSite: number): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\nawait Excel.run(async (context) => {\n    const shapes = context.workbook.worksheets.getItem(\"Shapes\").shapes;\n    const line = shapes.getItem(\"StraightLine\").line;\n    line.connectBeginShape(shapes.getItem(\"Left\"), 2);\n    line.connectEndShape(shapes.getItem(\"Right\"), 0);\n    await context.sync();\n});\n```"
    parameters:
    - id: shape
      description: Das Shape, mit dem eine Verbindung hergestellt werden soll.
      type:
      - excel.Excel.Shape
    - id: connectionSite
      description: Der Verbindungs Standort des Shapes, an das das Ende der Verbindung angefügt ist. Muss eine ganze Zahl zwischen 0 (einschließlich) und der Anzahl der Connection-site der angegebenen Form (exklusiv) sein.
      type:
      - number
- uid: excel.Excel.Line.connectorType
  summary: >-
    Stellt den Verbindertyp für die Linie dar.


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: connectorType
  fullName: connectorType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'connectorType: Excel.ConnectorType | "Straight" | "Elbow" | "Curve";'
    return:
      type:
      - Excel.ConnectorType | "Straight" | "Elbow" | "Curve"
- uid: excel.Excel.Line.context
  summary: Der dem Objekt zugeordnete Anforderungskontext. Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.
  isPreview: true
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.Line.disconnectBeginShape
  summary: >-
    Trennt den Anfang der angegebenen Verbindung von einem Shape.


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: disconnectBeginShape()
  fullName: disconnectBeginShape()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'disconnectBeginShape(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\nawait Excel.run(async (context) => {\n    const shapes = context.workbook.worksheets.getItem(\"Shapes\").shapes;\n    const line = shapes.getItem(\"StraightLine\").line;\n    line.disconnectBeginShape();\n    line.disconnectEndShape();\n    await context.sync();\n});\n```"
- uid: excel.Excel.Line.disconnectEndShape
  summary: >-
    Trennt das Ende der angegebenen Verbindung von einem Shape.


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: disconnectEndShape()
  fullName: disconnectEndShape()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'disconnectEndShape(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\nawait Excel.run(async (context) => {\n    const shapes = context.workbook.worksheets.getItem(\"Shapes\").shapes;\n    const line = shapes.getItem(\"StraightLine\").line;\n    line.disconnectBeginShape();\n    line.disconnectEndShape();\n    await context.sync();\n});\n```"
- uid: excel.Excel.Line.endArrowheadLength
  summary: >-
    Stellt die Länge der Pfeilspitze am Ende der angegebenen Position dar.


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: endArrowheadLength
  fullName: endArrowheadLength
  langs:
  - typeScript
  type: property
  syntax:
    content: 'endArrowheadLength: Excel.ArrowheadLength | "Short" | "Medium" | "Long";'
    return:
      type:
      - Excel.ArrowheadLength | "Short" | "Medium" | "Long"
- uid: excel.Excel.Line.endArrowheadStyle
  summary: >-
    Stellt die Art der Pfeilspitze am Ende der angegebenen Position dar.


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: endArrowheadStyle
  fullName: endArrowheadStyle
  langs:
  - typeScript
  type: property
  syntax:
    content: 'endArrowheadStyle: Excel.ArrowheadStyle | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" | "Open";'
    return:
      type:
      - Excel.ArrowheadStyle | "None" | "Triangle" | "Stealth" | "Diamond" | "Oval" | "Open"
- uid: excel.Excel.Line.endArrowheadWidth
  summary: >-
    Stellt die Breite der Pfeilspitze am Ende der angegebenen Position dar.


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: endArrowheadWidth
  fullName: endArrowheadWidth
  langs:
  - typeScript
  type: property
  syntax:
    content: 'endArrowheadWidth: Excel.ArrowheadWidth | "Narrow" | "Medium" | "Wide";'
    return:
      type:
      - Excel.ArrowheadWidth | "Narrow" | "Medium" | "Wide"
- uid: excel.Excel.Line.endConnectedShape
  summary: >-
    Stellt die Form dar, an die das Ende der angegebenen Leitung angefügt ist. Schreibgeschützt.


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: endConnectedShape
  fullName: endConnectedShape
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly endConnectedShape: Excel.Shape;'
    return:
      type:
      - excel.Excel.Shape
- uid: excel.Excel.Line.endConnectedSite
  summary: >-
    Stellt den Verbindungs Standort dar, mit dem das Ende einer Verbindung verbunden ist. Schreibgeschützt. Gibt NULL zurück, wenn das Ende der Leitung keiner Form zugeordnet ist.


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: endConnectedSite
  fullName: endConnectedSite
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly endConnectedSite: number;'
    return:
      type:
      - number
- uid: excel.Excel.Line.id
  summary: >-
    Stellt die ID der Form dar. Schreibgeschützt.


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel.Excel.Line.isBeginConnected
  summary: >-
    Gibt an, ob der Anfang der angegebenen Leitung mit einer Form verbunden ist. Schreibgeschützt.


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: isBeginConnected
  fullName: isBeginConnected
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly isBeginConnected: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Line.isEndConnected
  summary: >-
    Gibt an, ob das Ende der angegebenen Leitung mit einer Form verbunden ist. Schreibgeschützt.


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: isEndConnected
  fullName: isEndConnected
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly isEndConnected: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Line.load
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.
  remarks: >-
    Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:


    `load(option?: string | string[]): Excel.Line`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.


    `load(option?: { select?: string; expand?: string; }): Excel.Line`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Line`-Nur verfügbar für Sammlungstypen. Sie ähnelt der vorherigen Signatur. Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können. Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind. Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.LineLoadOptions): Excel.Line;'
    return:
      type:
      - excel.Excel.Line
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.LineLoadOptions
- uid: excel.Excel.Line.load_1
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.
  isPreview: true
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Line;'
    return:
      type:
      - excel.Excel.Line
      description: ''
    parameters:
    - id: propertyNames
      description: Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.
      type:
      - string | string[]
- uid: excel.Excel.Line.load_2
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.
  isPreview: true
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Line;'
    return:
      type:
      - excel.Excel.Line
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: Wobei propertyNamesAndPaths. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Navigationseigenschaften angibt.
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.Line.set
  summary: Legt mehrere Eigenschaften eines Objekts gleichzeitig fest. Sie können entweder ein plain-Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs weitergeben.
  remarks: >-
    Diese Methode hat die folgende zusätzliche Signatur:


    `set(properties: Excel.Line): void`
  isPreview: true
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.LineUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: Ein JavaScript-Objekt mit Eigenschaften, die isomorphically strukturiert sind, um die Eigenschaften des Objekts, für das die Methode aufgerufen wird.
      type:
      - Interfaces.LineUpdateData
    - id: options
      description: Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.Line.set_1
  summary: Legt mehrere Eigenschaften für das Objekt auf der Grundlage eines vorhandenen geladenen Objekts zur gleichen Zeit fest.
  isPreview: true
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.Line): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.Line
- uid: excel.Excel.Line.shape
  summary: >-
    Gibt das Shape-Objekt zurück, das der Leitung zugeordnet ist. Schreibgeschützt.


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: shape
  fullName: shape
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly shape: Excel.Shape;'
    return:
      type:
      - excel.Excel.Shape
- uid: excel.Excel.Line.toJSON
  summary: ÜberSchreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API-Objekt an`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->Ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche Excel. Linien-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt zurück (typisiert als`Excel.Interfaces.LineData`<!-- -->), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.
  isPreview: true
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.LineData;'
    return:
      type:
      - excel.Excel.Interfaces.LineData
      description: ''
