### YamlMime:UniversalReference
ms.openlocfilehash: b56b193c85e9117364d0355daf706d7742edab69
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/20/2019
ms.locfileid: "30104926"
items:
- uid: excel.Excel.WorksheetFreezePanes
  summary: '<span data-ttu-id="be12e-101">\[[API-Satz: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be12e-101">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>'
  name: Excel.WorksheetFreezePanes
  fullName: Excel.WorksheetFreezePanes
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.WorksheetFreezePanes.context
  - excel.Excel.WorksheetFreezePanes.freezeAt
  - excel.Excel.WorksheetFreezePanes.freezeColumns
  - excel.Excel.WorksheetFreezePanes.freezeRows
  - excel.Excel.WorksheetFreezePanes.getLocation
  - excel.Excel.WorksheetFreezePanes.getLocationOrNullObject
  - excel.Excel.WorksheetFreezePanes.toJSON
  - excel.Excel.WorksheetFreezePanes.unfreeze
- uid: excel.Excel.WorksheetFreezePanes.context
  summary: <span data-ttu-id="be12e-102">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="be12e-102">The request context associated with the object.</span></span> <span data-ttu-id="be12e-103">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="be12e-103">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.WorksheetFreezePanes.freezeAt
  summary: >-
    <span data-ttu-id="be12e-104">Legt die fixierten Zellen in der Ansicht des aktiven Arbeitsblatts fest.</span><span class="sxs-lookup"><span data-stu-id="be12e-104">Sets the frozen cells in the active worksheet view.</span></span> <span data-ttu-id="be12e-105">Der bereitgestellte Bereich entspricht Zellen, die im oberen und linken Bereich eingefroren werden.</span><span class="sxs-lookup"><span data-stu-id="be12e-105">The range provided corresponds to cells that will be frozen in the top- and left-most pane.</span></span>


    <span data-ttu-id="be12e-106">\[[API-Satz: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be12e-106">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: freezeAt(frozenRange)
  fullName: freezeAt(frozenRange)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'freezeAt(frozenRange: Range | string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"be12e-107\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"be12e-107\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Freeze the specified range in top-and-left-most pane of the worksheet.\n    sheet.freezePanes.freezeAt(sheet.getRange(\"H2:K5\"));\n\n    await context.sync();\n});\n```"
    parameters:
    - id: frozenRange
      description: <span data-ttu-id="be12e-108">Ein Bereich, der die einzufrierenden Zellen darstellt, oder NULL, um alle fixierten Bereiche zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="be12e-108">A range that represents the cells to be frozen, or null to remove all frozen panes.</span></span>
      type:
      - Range | string
- uid: excel.Excel.WorksheetFreezePanes.freezeColumns
  summary: >-
    <span data-ttu-id="be12e-109">Fixieren der ersten Spalte(n) des Arbeitsblatts an einem Ort.</span><span class="sxs-lookup"><span data-stu-id="be12e-109">Freeze the first column(s) of the worksheet in place.</span></span>


    <span data-ttu-id="be12e-110">\[[API-Satz: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be12e-110">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: freezeColumns(count)
  fullName: freezeColumns(count)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'freezeColumns(count?: number): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"be12e-111\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"be12e-111\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Freeze the first two columns in the worksheet.\n    sheet.freezePanes.freezeColumns(2);\n\n    await context.sync();\n});\n```"
    parameters:
    - id: count
      description: <span data-ttu-id="be12e-112">Optionale Anzahl von Spalten, die fixiert werden sollen, oder NULL, um die Fixierung aller Spalten aufzuheben</span><span class="sxs-lookup"><span data-stu-id="be12e-112">Optional number of columns to freeze, or zero to unfreeze all columns</span></span>
      type:
      - number
- uid: excel.Excel.WorksheetFreezePanes.freezeRows
  summary: >-
    <span data-ttu-id="be12e-113">Fixiert die ersten Spalte(n) des Arbeitsblatts an einem Ort.</span><span class="sxs-lookup"><span data-stu-id="be12e-113">Freeze the top row(s) of the worksheet in place.</span></span>


    <span data-ttu-id="be12e-114">\[[API-Satz: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be12e-114">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: freezeRows(count)
  fullName: freezeRows(count)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'freezeRows(count?: number): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"be12e-115\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"be12e-115\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Freeze the top two rows in the worksheet.\n    sheet.freezePanes.freezeRows(2);\n\n    await context.sync();\n});\n```"
    parameters:
    - id: count
      description: <span data-ttu-id="be12e-116">Optionale Anzahl von Zeilen, die fixiert werden sollen, oder NULL, um die Fixierung aller Zeilen aufzuheben</span><span class="sxs-lookup"><span data-stu-id="be12e-116">Optional number of rows to freeze, or zero to unfreeze all rows</span></span>
      type:
      - number
- uid: excel.Excel.WorksheetFreezePanes.getLocation
  summary: >-
    <span data-ttu-id="be12e-117">Ruft den Bereich ab, der die fixierten Zellen in der aktiven Ansicht des Arbeitsblatts beschreibt.</span><span class="sxs-lookup"><span data-stu-id="be12e-117">Gets a range that describes the frozen cells in the active worksheet view.</span></span> <span data-ttu-id="be12e-118">Der eingefrorene Bereich entspricht Zellen, die im oberen und linken Bereich fixiert sind.</span><span class="sxs-lookup"><span data-stu-id="be12e-118">The frozen range is corresponds to cells that are frozen in the top- and left-most pane.</span></span>


    <span data-ttu-id="be12e-119">\[[API-Satz: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be12e-119">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getLocation()
  fullName: getLocation()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getLocation(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.WorksheetFreezePanes.getLocationOrNullObject
  summary: >-
    <span data-ttu-id="be12e-120">Ruft den Bereich ab, der die fixierten Zellen in der aktiven Ansicht des Arbeitsblatts beschreibt.</span><span class="sxs-lookup"><span data-stu-id="be12e-120">Gets a range that describes the frozen cells in the active worksheet view.</span></span> <span data-ttu-id="be12e-121">Der eingefrorene Bereich entspricht Zellen, die im oberen und linken Bereich fixiert sind.</span><span class="sxs-lookup"><span data-stu-id="be12e-121">The frozen range is corresponds to cells that are frozen in the top- and left-most pane.</span></span> <span data-ttu-id="be12e-122">Wenn kein fixierter Bereich vorhanden ist, wird ein NULL-Objekt zur√ºckgegeben.</span><span class="sxs-lookup"><span data-stu-id="be12e-122">If there is no frozen pane, returns a null object.</span></span>


    <span data-ttu-id="be12e-123">\[[API-Satz: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be12e-123">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getLocationOrNullObject()
  fullName: getLocationOrNullObject()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getLocationOrNullObject(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"be12e-124\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"be12e-124\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const frozenRange = sheet.freezePanes.getLocationOrNullObject();\n    frozenRange.load(\"address\");\n\n    await context.sync();\n\n    if (frozenRange.isNullObject) {\n        console.log(`The worksheet does not contain a frozen pane.`);\n    } else {\n        console.log(`The address of the frozen range (cells that are frozen in the top-and-left-most pane) is \"${frozenRange.address}\"`);\n    }\n});\n```"
- uid: excel.Excel.WorksheetFreezePanes.toJSON
  summary: <span data-ttu-id="be12e-125">√úberSchreibt die `toJSON()` JavaScript-Methode, um eine n√ºtzlichere Ausgabe bereitzustellen, wenn ein API `JSON.stringify()` <!-- -->-Objekt an √ºbergeben wird.</span><span class="sxs-lookup"><span data-stu-id="be12e-125">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="be12e-126">(`JSON.stringify`<!-- -->ruft wiederum die `toJSON` Methode des Objekts auf, das √ºbergeben wird.) W√§hrend das urspr√ºngliche Excel. WorksheetFreezePanes-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt `Excel.Interfaces.WorksheetFreezePanesData` <!-- -->(typisiert als) zur√ºck, das flache Kopien aller geladenen untergeordneten Eigenschaften aus dem urspr√ºnglichen Objekt enth√§lt.</span><span class="sxs-lookup"><span data-stu-id="be12e-126">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.WorksheetFreezePanes object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorksheetFreezePanesData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: >-
      toJSON(): {
                  [key: string]: string;
              };
    return:
      type:
      - >-
        {
                    [key: string]: string;
                }
      description: ''
- uid: excel.Excel.WorksheetFreezePanes.unfreeze
  summary: >-
    <span data-ttu-id="be12e-127">Entfernt alle fixierten Bereiche auf dem Arbeitsblatt.</span><span class="sxs-lookup"><span data-stu-id="be12e-127">Removes all frozen panes in the worksheet.</span></span>


    <span data-ttu-id="be12e-128">\[[API-Satz: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be12e-128">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: unfreeze()
  fullName: unfreeze()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'unfreeze(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"be12e-129\">Examples</span><span class=\"sxs-lookup\"><span data-stu-id=\"be12e-129\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    sheet.freezePanes.unfreeze();\n\n    await context.sync();\n});\n```"
