### YamlMime:UniversalReference
ms.openlocfilehash: 2a15d0b3b0e5368a3dfed462a0404a3dab6d1d26
ms.sourcegitcommit: 262b7c417245b7b61a57d53eee33a477a722ca6e
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 09/28/2018
ms.locfileid: "24046801"
items:
- uid: excel.Excel.ChartFill
  summary: >-
    <span data-ttu-id="c40a6-101">Die Füllung für ein Diagrammelement.</span><span class="sxs-lookup"><span data-stu-id="c40a6-101">Represents the fill formatting for a chart element.</span></span>


    <span data-ttu-id="c40a6-102">\[[API-Satz: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c40a6-102">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ChartFill
  fullName: excel.Excel.ChartFill
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ChartFill.clear
  - excel.Excel.ChartFill.load
  - excel.Excel.ChartFill.setSolidColor
  - excel.Excel.ChartFill.toJSON
- uid: excel.Excel.ChartFill.clear
  summary: >-
    <span data-ttu-id="c40a6-103">Dient zum Löschen der Füllfarbe eines Diagrammelements.</span><span class="sxs-lookup"><span data-stu-id="c40a6-103">Clear the fill color of a chart element.</span></span>


    <span data-ttu-id="c40a6-104">\[[API-Satz: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c40a6-104">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: clear()
  fullName: excel.Excel.ChartFill.clear
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"c40a6-105\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"c40a6-105\">Examples</span></span>\n\n```javascript\n// Clear the line format of the major Gridlines on value axis of the Chart named \"Chart1\"\nExcel.run(function (ctx) { \n    var gridlines = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\").axes.valueAxis.majorGridlines;\n    gridlines.format.line.clear();\n    return ctx.sync().then(function() {\n            console.log(\"Chart Major Gridlines Format Cleared\");\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.ChartFill.load
  summary: <span data-ttu-id="c40a6-106">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="c40a6-106">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c40a6-107">Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="c40a6-107">You must call "context.sync()" before reading the properties.</span></span>
  name: load(option)
  fullName: excel.Excel.ChartFill.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[] | OfficeExtension.LoadOption): Excel.ChartFill;'
    return:
      type:
      - excel.Excel.ChartFill
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - string | string[] | OfficeExtension.LoadOption
- uid: excel.Excel.ChartFill.setSolidColor
  summary: >-
    <span data-ttu-id="c40a6-108">Legt die Füllung eines Diagrammelements auf einfarbige Füllung fest.</span><span class="sxs-lookup"><span data-stu-id="c40a6-108">Sets the fill formatting of a chart element to a uniform color.</span></span>


    <span data-ttu-id="c40a6-109">\[[API-Satz: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c40a6-109">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: setSolidColor(color)
  fullName: excel.Excel.ChartFill.setSolidColor
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setSolidColor(color: string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"c40a6-110\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"c40a6-110\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n\n    chart.format.fill.setSolidColor(\"#FF0000\");\n\n    return ctx.sync().then(function() {\n            console.log(\"Chart1 Background Color Changed.\");\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    let pointsCollection = sheet.charts.getItemAt(0).series.getItemAt(0).points;\n    let point = pointsCollection.getItemAt(2);\n\n    // Set color for chart point.\n    point.format.fill.setSolidColor('red');\n\n    await context.sync();\n\n    OfficeHelpers.UI.notify(\"Successfully set chart point color to red (for the third item in series 1).\");            \n});\n```"
    parameters:
    - id: color
      description: <span data-ttu-id="c40a6-111">HTML-Farbcode, der die Farbe der Rahmenlinie des Formulars \#RRGGBB (z. B. "FFA500") oder als eine benannte HTML-Farbe (z. B. "orange").</span><span class="sxs-lookup"><span data-stu-id="c40a6-111">HTML color code representing the color of the border line, of the form \#RRGGBB (e.g. "FFA500") or as a named HTML color (e.g. "orange").</span></span>
      type:
      - string
- uid: excel.Excel.ChartFill.toJSON
  name: toJSON()
  fullName: excel.Excel.ChartFill.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON:'
    return:
      type:
      - >-
        {
                    [key: string]: string;
                }
      description: ''
