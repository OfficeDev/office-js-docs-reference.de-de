### YamlMime:UniversalReference
ms.openlocfilehash: 13600556218527e51c89500fa365f0b32e93c771
ms.sourcegitcommit: 06eebee5e68d349f78e6bc3bb0ef099fe063cf04
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 01/17/2019
ms.locfileid: "28725053"
items:
- uid: excel.Excel.NamedItem
  summary: >-
    <span data-ttu-id="f18a9-101">Stellt einen definierten Namen für einen Bereich von Zellen oder Wert dar.</span><span class="sxs-lookup"><span data-stu-id="f18a9-101">Represents a defined name for a range of cells or value.</span></span> <span data-ttu-id="f18a9-102">Namen primitiven benannte Objekte (wie in der folgenden Typ dargestellt), range-Objekt oder ein Bezug auf einen Bereich.</span><span class="sxs-lookup"><span data-stu-id="f18a9-102">Names can be primitive named objects (as seen in the type below), range object, or a reference to a range.</span></span> <span data-ttu-id="f18a9-103">Dieses Objekt kann verwendet werden, um Range-Objekt zugeordneten Namen abzurufen.</span><span class="sxs-lookup"><span data-stu-id="f18a9-103">This object can be used to obtain range object associated with names.</span></span>


    <span data-ttu-id="f18a9-104">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f18a9-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.NamedItem
  fullName: Excel.NamedItem
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.NamedItem.arrayValues
  - excel.Excel.NamedItem.comment
  - excel.Excel.NamedItem.context
  - excel.Excel.NamedItem.delete
  - excel.Excel.NamedItem.formula
  - excel.Excel.NamedItem.getRange
  - excel.Excel.NamedItem.getRangeOrNullObject
  - excel.Excel.NamedItem.load
  - excel.Excel.NamedItem.name
  - excel.Excel.NamedItem.scope
  - excel.Excel.NamedItem.toJSON
  - excel.Excel.NamedItem.type
  - excel.Excel.NamedItem.value
  - excel.Excel.NamedItem.visible
  - excel.Excel.NamedItem.worksheet
  - excel.Excel.NamedItem.worksheetOrNullObject
- uid: excel.Excel.NamedItem.arrayValues
  summary: >-
    <span data-ttu-id="f18a9-105">Gibt ein Objekt mit Werten und Typen des benannten Elements zurück.</span><span class="sxs-lookup"><span data-stu-id="f18a9-105">Returns an object containing values and types of the named item.</span></span> <span data-ttu-id="f18a9-106">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="f18a9-106">Read-only.</span></span>


    <span data-ttu-id="f18a9-107">\[[API-Satz: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f18a9-107">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: arrayValues
  fullName: arrayValues
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly arrayValues: Excel.NamedItemArrayValues;'
    return:
      type:
      - excel.Excel.NamedItemArrayValues
- uid: excel.Excel.NamedItem.comment
  summary: >-
    <span data-ttu-id="f18a9-108">Stellt den Kommentar dar, der mit diesem Namen verknüpft ist</span><span class="sxs-lookup"><span data-stu-id="f18a9-108">Represents the comment associated with this name.</span></span>


    <span data-ttu-id="f18a9-109">\[[API-Satz: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f18a9-109">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: comment
  fullName: comment
  langs:
  - typeScript
  type: property
  syntax:
    content: 'comment: string;'
    return:
      type:
      - string
- uid: excel.Excel.NamedItem.context
  summary: <span data-ttu-id="f18a9-110">Der Anforderungskontext-zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="f18a9-110">The request context associated with the object.</span></span> <span data-ttu-id="f18a9-111">Dadurch wird das Add-in Prozess mit der Office-hostanwendung Prozess verbunden.</span><span class="sxs-lookup"><span data-stu-id="f18a9-111">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.NamedItem.delete
  summary: >-
    <span data-ttu-id="f18a9-112">Löscht den angegebenen Namen.</span><span class="sxs-lookup"><span data-stu-id="f18a9-112">Deletes the given name.</span></span>


    <span data-ttu-id="f18a9-113">\[[API-Satz: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f18a9-113">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"f18a9-114\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"f18a9-114\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const totalName = sheet.names.getItemOrNullObject(\"TotalAmount\");\n    totalName.load();\n    await context.sync();\n\n    if (totalName.value) {\n        totalName.delete();\n\n        // Replace the named item (TotalAmount) with the actual formula for TotalAmount to avoid displaying #NAME in the cell.\n        sheet.getRange(\"D11\").values = [[\"=SUM(ExpensesTable[AMOUNT])\"]];\n    } else {\n        console.log(\"No named item created for the formula.\");\n    }\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.NamedItem.formula
  summary: >-
    <span data-ttu-id="f18a9-115">Ruft die Formel des benannten Elements ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="f18a9-115">Gets or sets the formula of the named item.</span></span> <span data-ttu-id="f18a9-116">Formel beginnt immer mit einem "=".</span><span class="sxs-lookup"><span data-stu-id="f18a9-116">Formula always starts with a '=' sign.</span></span>


    <span data-ttu-id="f18a9-117">\[[API-Satz: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f18a9-117">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: formula
  fullName: formula
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formula: any;'
    return:
      type:
      - any
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"f18a9-118\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"f18a9-118\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Get the named item\n    const myNamedItem = sheet.names.getItemOrNullObject(\"MyRange\");\n    myNamedItem.load(\"name, formula\");\n    await context.sync();\n\n    if (myNamedItem.isNullObject) {\n        OfficeHelpers.UI.notify(`There is no named item. Create it with \"Add named item for a range\" first.`);\n    } else {                    \n        // Update named item to point to the second range\n        myNamedItem.formula = \"=Sample!$B$10:$D$14\";\n        sheet.getRange(\"B10:D14\").select();\n        await context.sync();\n\n        console.log(`Just updated the named item \"${myNamedItem.name}\" -- it's now located here: ${myNamedItem.formula}`);\n    }\n});\n```"
- uid: excel.Excel.NamedItem.getRange
  summary: >-
    <span data-ttu-id="f18a9-p105">Ruft das Bereichsobjekt ab, das mit dem Namen verknüpft ist. Gibt einen Fehler zurück, wenn der Typ des benannten Elements kein Bereich ist.</span><span class="sxs-lookup"><span data-stu-id="f18a9-p105">Returns the range object that is associated with the name. Throws an error if the named item's type is not a range.</span></span>


    <span data-ttu-id="f18a9-121">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f18a9-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRange()
  fullName: getRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"f18a9-122\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"f18a9-122\">Examples</span></span>\n\n```javascript\n// Returns the Range object that is associated with the name. \n// null if the name is not of the type Range.\n// Note: This API currently supports only the Workbook scoped items.\nExcel.run(function (ctx) { \n    var names = ctx.workbook.names;\n    var range = names.getItem('MyRange').getRange();\n    range.load('address');\n    return ctx.sync().then(function() {\n        console.log(range.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.NamedItem.getRangeOrNullObject
  summary: >-
    <span data-ttu-id="f18a9-p106">Ruft das Bereichsobjekt ab, das mit dem Namen verknüpft ist. Gibt ein NULL-Objekt zurück, wenn der Typ des benannten Elements kein Bereich ist.</span><span class="sxs-lookup"><span data-stu-id="f18a9-p106">Returns the range object that is associated with the name. Returns a null object if the named item's type is not a range.</span></span>


    <span data-ttu-id="f18a9-125">\[[API-Satz: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f18a9-125">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRangeOrNullObject()
  fullName: getRangeOrNullObject
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRangeOrNullObject(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.NamedItem.load
  summary: <span data-ttu-id="f18a9-126">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="f18a9-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="f18a9-127">Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="f18a9-127">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"f18a9-128\">Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:</span><span class=\"sxs-lookup\"><span data-stu-id=\"f18a9-128\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"f18a9-129\">`load(option?: { select?: string; expand?: string; }): Excel.NamedItem`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f18a9-129\">`load(option?: { select?: string; expand?: string; }): Excel.NamedItem` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"f18a9-130\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItem`-Nur auf Auflistungstypen verfügbar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f18a9-130\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItem` - Only available on collection types.</span></span> <span data-ttu-id=\"f18a9-131\">Es ist ähnlich wie die jeweils vorhergehende Signatur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f18a9-131\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"f18a9-132\">Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f18a9-132\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"f18a9-133\">Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f18a9-133\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"f18a9-134\">Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.</span><span class=\"sxs-lookup\"><span data-stu-id=\"f18a9-134\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"f18a9-135\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"f18a9-135\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var names = ctx.workbook.names;\n    var namedItem = names.getItem('MyRange');\n    namedItem.load('type');\n    return ctx.sync().then(function() {\n            console.log(namedItem.type);\n    });\n}).catch(function(error) {\n        console.log(\"Error: \" + error);\n        if (error instanceof OfficeExtension.Error) {\n            console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n        }\n});\n```"
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="f18a9-136">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="f18a9-136">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.NamedItem.name
  summary: >-
    <span data-ttu-id="f18a9-p109">Der Name des Objekts. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="f18a9-p109">The name of the object. Read-only.</span></span>


    <span data-ttu-id="f18a9-139">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f18a9-139">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly name: string;'
    return:
      type:
      - string
- uid: excel.Excel.NamedItem.scope
  summary: >-
    <span data-ttu-id="f18a9-140">Gibt an, ob der Name der Arbeitsmappe oder auf ein bestimmtes Arbeitsblatt ausgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="f18a9-140">Indicates whether the name is scoped to the workbook or to a specific worksheet.</span></span> <span data-ttu-id="f18a9-141">Mögliche Werte sind: Arbeitsblatt, Arbeitsmappe.</span><span class="sxs-lookup"><span data-stu-id="f18a9-141">Possible values are: Worksheet, Workbook.</span></span> <span data-ttu-id="f18a9-142">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="f18a9-142">Read-only.</span></span>


    <span data-ttu-id="f18a9-143">\[[API-Satz: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f18a9-143">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: scope
  fullName: scope
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly scope: Excel.NamedItemScope | "Worksheet" | "Workbook";'
    return:
      type:
      - Excel.NamedItemScope | "Worksheet" | "Workbook"
- uid: excel.Excel.NamedItem.toJSON
  summary: <span data-ttu-id="f18a9-144">Überschreibt das JavaScript `toJSON()` Methode, um nützliche Ausgabe zu gewährleisten, wenn ein API-Objekt zu übergeben ist `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="f18a9-144">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="f18a9-145">(`JSON.stringify`<!-- -->, wiederum die `toJSON` -Methode des Objekts, das es übergeben wird.) Das ursprüngliche Excel.NamedItem-Objekt ist ein API-Objekt der `toJSON` -Methode gibt eine einfache JavaScript-Objekt zurück (als `Excel.Interfaces.NamedItemData` <!-- -->), die flache Kopien der geladene untergeordnete Eigenschaften aus dem ursprünglichen-Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="f18a9-145">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.NamedItem object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.NamedItemData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.NamedItemData;'
    return:
      type:
      - excel.Excel.Interfaces.NamedItemData
      description: ''
- uid: excel.Excel.NamedItem.type
  summary: >-
    <span data-ttu-id="f18a9-146">Gibt den Typ des Rückgabewerts nach den Namen Formel.</span><span class="sxs-lookup"><span data-stu-id="f18a9-146">Indicates the type of the value returned by the name's formula.</span></span> <span data-ttu-id="f18a9-147">Einzelheiten finden Sie unter Excel.NamedItemType.</span><span class="sxs-lookup"><span data-stu-id="f18a9-147">See Excel.NamedItemType for details.</span></span> <span data-ttu-id="f18a9-148">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="f18a9-148">Read-only.</span></span>


    <span data-ttu-id="f18a9-149">\[[API-Satz: ExcelApi 1.1 für String, Integer, Double, Boolean, Bereich, Fehler; 1.7 für Array](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f18a9-149">\[ [API set: ExcelApi 1.1 for String,Integer,Double,Boolean,Range,Error; 1.7 for Array](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array";'
    return:
      type:
      - Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array"
- uid: excel.Excel.NamedItem.value
  summary: >-
    <span data-ttu-id="f18a9-p113">Stellt den Wert dar, der von der Formel des Namens berechnet wurde. Für einen benannten Bereich wird die Bereichsadresse zurückgegeben. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="f18a9-p113">Represents the value computed by the name's formula. For a named range, will return the range address. Read-only.</span></span>


    <span data-ttu-id="f18a9-153">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f18a9-153">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: value
  fullName: value
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly value: any;'
    return:
      type:
      - any
- uid: excel.Excel.NamedItem.visible
  summary: >-
    <span data-ttu-id="f18a9-154">Gibt an, ob das Objekt sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="f18a9-154">Specifies whether the object is visible or not.</span></span>


    <span data-ttu-id="f18a9-155">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f18a9-155">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: visible
  fullName: visible
  langs:
  - typeScript
  type: property
  syntax:
    content: 'visible: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.NamedItem.worksheet
  summary: >-
    <span data-ttu-id="f18a9-156">Gibt das Arbeitsblatt, auf dem das benannte Element zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="f18a9-156">Returns the worksheet on which the named item is scoped to.</span></span> <span data-ttu-id="f18a9-157">Löst einen Fehler aus, wenn das Element an der Arbeitsmappe stattdessen ausgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="f18a9-157">Throws an error if the item is scoped to the workbook instead.</span></span>


    <span data-ttu-id="f18a9-158">\[[API-Satz: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f18a9-158">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheet
  fullName: worksheet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheet: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
- uid: excel.Excel.NamedItem.worksheetOrNullObject
  summary: >-
    <span data-ttu-id="f18a9-159">Gibt das Arbeitsblatt, auf dem das benannte Element zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="f18a9-159">Returns the worksheet on which the named item is scoped to.</span></span> <span data-ttu-id="f18a9-160">Gibt ein null-Objekt zurück, wenn das Element an der Arbeitsmappe stattdessen ausgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="f18a9-160">Returns a null object if the item is scoped to the workbook instead.</span></span>


    <span data-ttu-id="f18a9-161">\[[API-Satz: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="f18a9-161">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheetOrNullObject
  fullName: worksheetOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheetOrNullObject: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
