### YamlMime:UniversalReference
ms.openlocfilehash: e47efcf12653c512d436e01dbb745a779aaf8a24
ms.sourcegitcommit: beffe9455dace422e85b92f0105c54ff7b594cbf
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 09/20/2018
ms.locfileid: "24046024"
items:
- uid: excel.Excel.NamedItem
  summary: >-
    <span data-ttu-id="588a7-101">Stellt einen definierten Namen für einen Bereich von Zellen oder Wert dar.</span><span class="sxs-lookup"><span data-stu-id="588a7-101">Represents a defined name for a range of cells or value.</span></span> <span data-ttu-id="588a7-102">Namen primitiven benannte Objekte (wie in der folgenden Typ dargestellt), range-Objekt oder ein Bezug auf einen Bereich.</span><span class="sxs-lookup"><span data-stu-id="588a7-102">Names can be primitive named objects (as seen in the type below), range object, or a reference to a range.</span></span> <span data-ttu-id="588a7-103">Dieses Objekt kann verwendet werden, um Range-Objekt zugeordneten Namen abzurufen.</span><span class="sxs-lookup"><span data-stu-id="588a7-103">This object can be used to obtain range object associated with names.</span></span>


    <span data-ttu-id="588a7-104">\[[API-Satz: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="588a7-104">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.NamedItem
  fullName: excel.Excel.NamedItem
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.NamedItem.arrayValues
  - excel.Excel.NamedItem.comment
  - excel.Excel.NamedItem.delete
  - excel.Excel.NamedItem.formula
  - excel.Excel.NamedItem.getRange
  - excel.Excel.NamedItem.getRangeOrNullObject
  - excel.Excel.NamedItem.load
  - excel.Excel.NamedItem.name
  - excel.Excel.NamedItem.scope
  - excel.Excel.NamedItem.toJSON
  - excel.Excel.NamedItem.type
  - excel.Excel.NamedItem.value
  - excel.Excel.NamedItem.visible
  - excel.Excel.NamedItem.worksheet
  - excel.Excel.NamedItem.worksheetOrNullObject
- uid: excel.Excel.NamedItem.arrayValues
  summary: >-
    <span data-ttu-id="588a7-105">Gibt ein Objekt, das Werte und Typen des benannten Elements enthält.</span><span class="sxs-lookup"><span data-stu-id="588a7-105">Returns an object containing values and types of the named item.</span></span> <span data-ttu-id="588a7-106">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="588a7-106">Read-only.</span></span>


    <span data-ttu-id="588a7-107">\[[API-Satz: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="588a7-107">\[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: arrayValues
  fullName: excel.Excel.NamedItem.arrayValues
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly arrayValues: Excel.NamedItemArrayValues;'
    return:
      type:
      - excel.Excel.NamedItemArrayValues
- uid: excel.Excel.NamedItem.comment
  summary: >-
    <span data-ttu-id="588a7-108">Stellt den Kommentar dar, der mit diesem Namen verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="588a7-108">Represents the comment associated with this name.</span></span>


    <span data-ttu-id="588a7-109">\[[API-Satz: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="588a7-109">\[ [API set: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: comment
  fullName: excel.Excel.NamedItem.comment
  langs:
  - typeScript
  type: property
  syntax:
    content: 'comment: string;'
    return:
      type:
      - string
- uid: excel.Excel.NamedItem.delete
  summary: >-
    <span data-ttu-id="588a7-110">Löscht den angegebenen Namen.</span><span class="sxs-lookup"><span data-stu-id="588a7-110">Deletes the given name.</span></span>


    <span data-ttu-id="588a7-111">\[[API-Satz: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="588a7-111">\[ [API set: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: excel.Excel.NamedItem.delete
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"588a7-112\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"588a7-112\">Examples</span></span>\n\n```typescript\ntry {\n    await Excel.run(async (context) => {\n\n        const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n        sheet.names.getItem(\"TotalAmount\").delete();\n\n        // Replace the named item (TotalAmount) with the actual formula for TotalAmount to avoid displaying #NAME in the cell.\n        sheet.getRange(\"D11\").values = [[\"=SUM(ExpensesTable[AMOUNT])\"]];\n\n        await context.sync();\n\n    });\n}\ncatch (error) {\n    OfficeHelpers.UI.notify(error);\n    OfficeHelpers.Utilities.log(error);\n}\n```"
- uid: excel.Excel.NamedItem.formula
  summary: >-
    <span data-ttu-id="588a7-113">Ruft ab oder legt die Formel für das benannte Element.</span><span class="sxs-lookup"><span data-stu-id="588a7-113">Gets or sets the formula of the named item.</span></span> <span data-ttu-id="588a7-114">Formel beginnt immer mit einem "=" anmelden.</span><span class="sxs-lookup"><span data-stu-id="588a7-114">Formula always starts with a '=' sign.</span></span>


    <span data-ttu-id="588a7-115">\[[API-Satz: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="588a7-115">\[ [API set: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: formula
  fullName: excel.Excel.NamedItem.formula
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formula: any;'
    return:
      type:
      - any
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"588a7-116\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"588a7-116\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n    // Get the named item\n    const myNamedItem = sheet.names.getItemOrNullObject(\"MyRange\");\n    myNamedItem.load(\"name, formula\");\n\n    await context.sync();\n\n    if (myNamedItem.isNullObject) {\n        OfficeHelpers.UI.notify(`There is no named item with the name \"MyRange\".`);\n    } else {\n        \n        // Update named item to point to the second range\n        myNamedItem.formula = \"=Sample!$B$10:$D$14\";\n\n        sheet.getRange(\"B10:D14\").select();\n\n        await context.sync();\n\n        OfficeHelpers.UI.notify(`Just updated the named item \"${myNamedItem.name}\" -- it's now located here: ${myNamedItem.formula}`);\n    }\n});\n```"
- uid: excel.Excel.NamedItem.getRange
  summary: >-
    <span data-ttu-id="588a7-p104">Ruft das Bereichsobjekt ab, das mit dem Namen verknüpft ist. Gibt einen Fehler zurück, wenn der Typ des benannten Elements kein Bereich ist.</span><span class="sxs-lookup"><span data-stu-id="588a7-p104">Returns the range object that is associated with the name. Throws an error if the named item's type is not a range.</span></span>


    <span data-ttu-id="588a7-119">\[[API-Satz: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="588a7-119">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRange()
  fullName: excel.Excel.NamedItem.getRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"588a7-120\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"588a7-120\">Examples</span></span>\n\n```javascript\n// Returns the Range object that is associated with the name. \n// null if the name is not of the type Range.\n// Note: This API currently supports only the Workbook scoped items.\nExcel.run(function (ctx) { \n    var names = ctx.workbook.names;\n    var range = names.getItem('MyRange').getRange();\n    range.load('address');\n    return ctx.sync().then(function() {\n        console.log(range.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.NamedItem.getRangeOrNullObject
  summary: >-
    <span data-ttu-id="588a7-p105">Ruft das Bereichsobjekt ab, das mit dem Namen verknüpft ist. Gibt ein NULL-Objekt zurück, wenn der Typ des benannten Elements kein Bereich ist.</span><span class="sxs-lookup"><span data-stu-id="588a7-p105">Returns the range object that is associated with the name. Returns a null object if the named item's type is not a range.</span></span>


    <span data-ttu-id="588a7-123">\[[API-Satz: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="588a7-123">\[ [API set: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRangeOrNullObject()
  fullName: excel.Excel.NamedItem.getRangeOrNullObject
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRangeOrNullObject(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.NamedItem.load
  summary: <span data-ttu-id="588a7-124">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="588a7-124">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="588a7-125">Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="588a7-125">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"588a7-126\">Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:</span><span class=\"sxs-lookup\"><span data-stu-id=\"588a7-126\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"588a7-127\">`load(option?: { select?: string; expand?: string; }): Excel.NamedItem`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"588a7-127\">`load(option?: { select?: string; expand?: string; }): Excel.NamedItem` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"588a7-128\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItem`-Nur auf Auflistungstypen verfügbar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"588a7-128\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItem` - Only available on collection types.</span></span> <span data-ttu-id=\"588a7-129\">Es ist ähnlich wie die jeweils vorhergehende Signatur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"588a7-129\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"588a7-130\">Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können.</span><span class=\"sxs-lookup\"><span data-stu-id=\"588a7-130\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"588a7-131\">Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"588a7-131\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"588a7-132\">Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.</span><span class=\"sxs-lookup\"><span data-stu-id=\"588a7-132\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"588a7-133\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"588a7-133\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var names = ctx.workbook.names;\n    var namedItem = names.getItem('MyRange');\n    namedItem.load('type');\n    return ctx.sync().then(function() {\n            console.log(namedItem.type);\n    });\n}).catch(function(error) {\n        console.log(\"Error: \" + error);\n        if (error instanceof OfficeExtension.Error) {\n            console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n        }\n});\n```"
  name: load(option)
  fullName: excel.Excel.NamedItem.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.NamedItem;'
    return:
      type:
      - excel.Excel.NamedItem
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="588a7-134">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="588a7-134">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.NamedItem.name
  summary: >-
    <span data-ttu-id="588a7-p108">Der Name des Objekts. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="588a7-p108">The name of the object. Read-only.</span></span>


    <span data-ttu-id="588a7-137">\[[API-Satz: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="588a7-137">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: name
  fullName: excel.Excel.NamedItem.name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly name: string;'
    return:
      type:
      - string
- uid: excel.Excel.NamedItem.scope
  summary: >-
    <span data-ttu-id="588a7-138">Gibt an, ob der Name der Arbeitsmappe oder auf ein bestimmtes Arbeitsblatt ausgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="588a7-138">Indicates whether the name is scoped to the workbook or to a specific worksheet.</span></span> <span data-ttu-id="588a7-139">Mögliche Werte sind: Arbeitsblatt, Arbeitsmappe.</span><span class="sxs-lookup"><span data-stu-id="588a7-139">Possible values are: Worksheet, Workbook.</span></span> <span data-ttu-id="588a7-140">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="588a7-140">Read-only.</span></span>


    <span data-ttu-id="588a7-141">\[[API-Satz: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="588a7-141">\[ [API set: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: scope
  fullName: excel.Excel.NamedItem.scope
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly scope: Excel.NamedItemScope | "Worksheet" | "Workbook";'
    return:
      type:
      - Excel.NamedItemScope | "Worksheet" | "Workbook"
- uid: excel.Excel.NamedItem.toJSON
  name: toJSON()
  fullName: excel.Excel.NamedItem.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.NamedItemData;'
    return:
      type:
      - excel.Excel.Interfaces.NamedItemData
      description: ''
- uid: excel.Excel.NamedItem.type
  summary: >-
    <span data-ttu-id="588a7-142">Gibt den Typ des Rückgabewerts nach den Namen Formel.</span><span class="sxs-lookup"><span data-stu-id="588a7-142">Indicates the type of the value returned by the name's formula.</span></span> <span data-ttu-id="588a7-143">Einzelheiten finden Sie unter Excel.NamedItemType.</span><span class="sxs-lookup"><span data-stu-id="588a7-143">See Excel.NamedItemType for details.</span></span> <span data-ttu-id="588a7-144">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="588a7-144">Read-only.</span></span>


    <span data-ttu-id="588a7-145">\[[API-Satz: ExcelApi 1.1 für String, Integer, Double, Boolean, Bereich, Fehler; 1.7 für Array](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="588a7-145">\[ [API set: ExcelApi 1.1 for String,Integer,Double,Boolean,Range,Error; 1.7 for Array](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: type
  fullName: excel.Excel.NamedItem.type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array";'
    return:
      type:
      - Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array"
- uid: excel.Excel.NamedItem.value
  summary: >-
    <span data-ttu-id="588a7-p111">Stellt den Wert dar, der von der Formel des Namens berechnet wurde. Für einen benannten Bereich wird die Bereichsadresse zurückgegeben. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="588a7-p111">Represents the value computed by the name's formula. For a named range, will return the range address. Read-only.</span></span>


    <span data-ttu-id="588a7-149">\[[API-Satz: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="588a7-149">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: value
  fullName: excel.Excel.NamedItem.value
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly value: any;'
    return:
      type:
      - any
- uid: excel.Excel.NamedItem.visible
  summary: >-
    <span data-ttu-id="588a7-150">Gibt an, ob das Objekt sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="588a7-150">Specifies whether the object is visible or not.</span></span>


    <span data-ttu-id="588a7-151">\[[API-Satz: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="588a7-151">\[ [API set: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: visible
  fullName: excel.Excel.NamedItem.visible
  langs:
  - typeScript
  type: property
  syntax:
    content: 'visible: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.NamedItem.worksheet
  summary: >-
    <span data-ttu-id="588a7-152">Gibt das Arbeitsblatt, auf dem das benannte Element zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="588a7-152">Returns the worksheet on which the named item is scoped to.</span></span> <span data-ttu-id="588a7-153">Löst einen Fehler aus, wenn das Element an der Arbeitsmappe stattdessen ausgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="588a7-153">Throws an error if the item is scoped to the workbook instead.</span></span>


    <span data-ttu-id="588a7-154">\[[API-Satz: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="588a7-154">\[ [API set: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheet
  fullName: excel.Excel.NamedItem.worksheet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheet: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
- uid: excel.Excel.NamedItem.worksheetOrNullObject
  summary: >-
    <span data-ttu-id="588a7-155">Gibt das Arbeitsblatt, auf dem das benannte Element zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="588a7-155">Returns the worksheet on which the named item is scoped to.</span></span> <span data-ttu-id="588a7-156">Gibt ein null-Objekt zurück, wenn das Element an der Arbeitsmappe stattdessen ausgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="588a7-156">Returns a null object if the item is scoped to the workbook instead.</span></span>


    <span data-ttu-id="588a7-157">\[[API-Satz: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="588a7-157">\[ [API set: ExcelApi 1.4](/javascript/office/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheetOrNullObject
  fullName: excel.Excel.NamedItem.worksheetOrNullObject
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheetOrNullObject: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
