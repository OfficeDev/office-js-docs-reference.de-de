### YamlMime:UniversalReference
items:
  - uid: excel.Excel.AutoFilter
    summary: |-
      <span data-ttu-id="921bf-101">Stellt das AutoFilter-Objekt dar.</span><span class="sxs-lookup"><span data-stu-id="921bf-101">Represents the AutoFilter object.</span></span>

      <span data-ttu-id="921bf-102">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="921bf-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: Excel.AutoFilter
    fullName: Excel.AutoFilter
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.AutoFilter.apply
      - excel.Excel.AutoFilter.clearCriteria
      - excel.Excel.AutoFilter.context
      - excel.Excel.AutoFilter.criteria
      - excel.Excel.AutoFilter.enabled
      - excel.Excel.AutoFilter.getRange
      - excel.Excel.AutoFilter.getRangeOrNullObject
      - excel.Excel.AutoFilter.isDataFiltered
      - excel.Excel.AutoFilter.load
      - excel.Excel.AutoFilter.load_1
      - excel.Excel.AutoFilter.load_2
      - excel.Excel.AutoFilter.reapply
      - excel.Excel.AutoFilter.remove
      - excel.Excel.AutoFilter.toJSON
  - uid: excel.Excel.AutoFilter.apply
    summary: |-
      <span data-ttu-id="921bf-103">Wendet AutoFilter auf einen Bereich an und filtert die Spalte, wenn Spaltenindex und Filterkriterien angegeben sind.</span><span class="sxs-lookup"><span data-stu-id="921bf-103">Applies AutoFilter on a range and filters the column if column index and filter criteria are specified.</span></span>

      <span data-ttu-id="921bf-104">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="921bf-104">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'apply(range, columnIndex, criteria)'
    fullName: 'apply(range, columnIndex, criteria)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'apply(range: Range | string, columnIndex?: number, criteria?: Excel.FilterCriteria): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="921bf-105">Beispiele</span><span class="sxs-lookup"><span data-stu-id="921bf-105">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getActiveWorksheet();
              const farmData = sheet.getUsedRange();

              // This filter will only show the rows with the top 25% of values in column 3.
              sheet.autoFilter.apply(farmData, 3, { criterion1: "25", filterOn: Excel.FilterOn.topPercent });
              await context.sync();
          });
          ```
      parameters:
        - id: range
          description: '<span data-ttu-id="921bf-106">Der Zeitraum, für den der AutoFilter angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="921bf-106">The range where the AutoFilter will apply on.</span></span>'
          type:
            - Range | string
        - id: columnIndex
          description: '<span data-ttu-id="921bf-107">Der Spaltenindex, auf den der AutoFilter angewendet wird, beginnt bei 0.</span><span class="sxs-lookup"><span data-stu-id="921bf-107">The column index which the AutoFilter will apply on, start from 0.</span></span>'
          type:
            - number
        - id: criteria
          description: <span data-ttu-id="921bf-108">Die Filterkriterien.</span><span class="sxs-lookup"><span data-stu-id="921bf-108">The filter criteria.</span></span>
          type:
            - excel.Excel.FilterCriteria
  - uid: excel.Excel.AutoFilter.clearCriteria
    summary: |-
      <span data-ttu-id="921bf-109">Löscht die Kriterien, wenn AutoFilter über Filter verfügt</span><span class="sxs-lookup"><span data-stu-id="921bf-109">Clears the criteria if AutoFilter has filters</span></span>

      <span data-ttu-id="921bf-110">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="921bf-110">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: clearCriteria()
    fullName: clearCriteria()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearCriteria(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.AutoFilter.context
    summary: <span data-ttu-id="921bf-111">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="921bf-111">The request context associated with the object.</span></span> <span data-ttu-id="921bf-112">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="921bf-112">This connects the add-in's process to the Office host application's process.</span></span>
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.AutoFilter.criteria
    summary: |-
      <span data-ttu-id="921bf-113">Array, das alle Filterkriterien in einem per AutoFilter gefilterten Bereich enthält.</span><span class="sxs-lookup"><span data-stu-id="921bf-113">Array that holds all filter criterias in an autofiltered range.</span></span> <span data-ttu-id="921bf-114">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="921bf-114">Read-Only.</span></span>

      <span data-ttu-id="921bf-115">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="921bf-115">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: criteria
    fullName: criteria
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly criteria: Excel.FilterCriteria[];'
      return:
        type:
          - 'Excel.FilterCriteria[]'
  - uid: excel.Excel.AutoFilter.enabled
    summary: |-
      <span data-ttu-id="921bf-116">Zeigt an, ob der AutoFilter aktiviert ist oder nicht.</span><span class="sxs-lookup"><span data-stu-id="921bf-116">Indicates if the AutoFilter is enabled or not.</span></span> <span data-ttu-id="921bf-117">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="921bf-117">Read-Only.</span></span>

      <span data-ttu-id="921bf-118">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="921bf-118">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: enabled
    fullName: enabled
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly enabled: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.AutoFilter.getRange
    summary: |-
      <span data-ttu-id="921bf-119">Gibt das Range-Objekt zurück, das den Bereich darstellt, auf den der AutoFilter angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="921bf-119">Returns the Range object that represents the range to which the AutoFilter applies.</span></span>

      <span data-ttu-id="921bf-120">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="921bf-120">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel.Excel.AutoFilter.getRangeOrNullObject
    summary: |-
      <span data-ttu-id="921bf-121">Wenn diesem AutoFilter ein Range-Objekt zugeordnet ist, wird es von dieser Methode zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="921bf-121">If there is Range object associated with the AutoFilter, this method returns it.</span></span> <span data-ttu-id="921bf-122">Andernfalls gibt diese Methode ein NULL-Objekt zurück.</span><span class="sxs-lookup"><span data-stu-id="921bf-122">Otherwise, this method returns a null object.</span></span>

      <span data-ttu-id="921bf-123">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="921bf-123">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getRangeOrNullObject()
    fullName: getRangeOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRangeOrNullObject(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel.Excel.AutoFilter.isDataFiltered
    summary: |-
      <span data-ttu-id="921bf-124">Zeigt an, ob der AutoFilter über Filterkriterien verfügt.</span><span class="sxs-lookup"><span data-stu-id="921bf-124">Indicates if the AutoFilter has filter criteria.</span></span> <span data-ttu-id="921bf-125">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="921bf-125">Read-Only.</span></span>

      <span data-ttu-id="921bf-126">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="921bf-126">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: isDataFiltered
    fullName: isDataFiltered
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isDataFiltered: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.AutoFilter.load
    summary: <span data-ttu-id="921bf-127">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="921bf-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="921bf-128">Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.</span><span class="sxs-lookup"><span data-stu-id="921bf-128">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="921bf-129">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="921bf-129">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="921bf-130">`load(option?: string | string[]): Excel.AutoFilter`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="921bf-130">`load(option?: string | string[]): Excel.AutoFilter` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="921bf-131">`load(option?: { select?: string; expand?: string; }): Excel.AutoFilter`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="921bf-131">`load(option?: { select?: string; expand?: string; }): Excel.AutoFilter` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="921bf-132">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.AutoFilter`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="921bf-132">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.AutoFilter` - Only available on collection types.</span></span> <span data-ttu-id="921bf-133">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="921bf-133">It is similar to the preceding signature.</span></span> <span data-ttu-id="921bf-134">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="921bf-134">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="921bf-135">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="921bf-135">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="921bf-136">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="921bf-136">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.AutoFilterLoadOptions): Excel.AutoFilter;'
      return:
        type:
          - excel.Excel.AutoFilter
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.AutoFilterLoadOptions
  - uid: excel.Excel.AutoFilter.load_1
    summary: <span data-ttu-id="921bf-137">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="921bf-137">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="921bf-138">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="921bf-138">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.AutoFilter;'
      return:
        type:
          - excel.Excel.AutoFilter
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="921bf-139">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="921bf-139">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.AutoFilter.load_2
    summary: <span data-ttu-id="921bf-140">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="921bf-140">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="921bf-141">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="921bf-141">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.AutoFilter;'
      return:
        type:
          - excel.Excel.AutoFilter
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="921bf-142">Wobei propertyNamesAndPaths. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="921bf-142">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.AutoFilter.reapply
    summary: |-
      <span data-ttu-id="921bf-143">Wendet das angegebene Autofilter-Objekt an, das aktuell für den Bereich aktiv ist.</span><span class="sxs-lookup"><span data-stu-id="921bf-143">Applies the specified Autofilter object currently on the range.</span></span>

      <span data-ttu-id="921bf-144">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="921bf-144">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: reapply()
    fullName: reapply()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'reapply(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.AutoFilter.remove
    summary: |-
      <span data-ttu-id="921bf-145">Entfernt den AutoFilter für den Bereich.</span><span class="sxs-lookup"><span data-stu-id="921bf-145">Removes the AutoFilter for the range.</span></span>

      <span data-ttu-id="921bf-146">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="921bf-146">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: remove()
    fullName: remove()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'remove(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.AutoFilter.toJSON
    summary: '<span data-ttu-id="921bf-147">ÜberSchreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API-Objekt an`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="921bf-147">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="921bf-148">.</span><span class="sxs-lookup"><span data-stu-id="921bf-148"></span></span> <span data-ttu-id="921bf-149">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="921bf-149"></span></span><!-- --><span data-ttu-id="921bf-150">Ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche Excel. AutoFilter-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt zurück (typisiert als`Excel.Interfaces.AutoFilterData`</span><span class="sxs-lookup"><span data-stu-id="921bf-150">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.AutoFilter object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.AutoFilterData`</span></span><!-- --><span data-ttu-id="921bf-151">), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="921bf-151">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.AutoFilterData;'
      return:
        type:
          - excel.Excel.Interfaces.AutoFilterData
        description: ''