### YamlMime:UniversalReference
ms.openlocfilehash: 6f3504f7d2037553a2e55027e2ac729370c91de2
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/20/2019
ms.locfileid: "30110256"
items:
- uid: excel.Excel.AutoFilter
  summary: >-
    Stellt das AutoFilter-Objekt dar.


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: Excel.AutoFilter
  fullName: Excel.AutoFilter
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.AutoFilter.apply
  - excel.Excel.AutoFilter.clearCriteria
  - excel.Excel.AutoFilter.context
  - excel.Excel.AutoFilter.criteria
  - excel.Excel.AutoFilter.enabled
  - excel.Excel.AutoFilter.getRange
  - excel.Excel.AutoFilter.getRangeOrNullObject
  - excel.Excel.AutoFilter.isDataFiltered
  - excel.Excel.AutoFilter.load
  - excel.Excel.AutoFilter.load_1
  - excel.Excel.AutoFilter.load_2
  - excel.Excel.AutoFilter.reapply
  - excel.Excel.AutoFilter.remove
  - excel.Excel.AutoFilter.toJSON
- uid: excel.Excel.AutoFilter.apply
  summary: >-
    Wendet autoFilter für einen Range an und filtert die Spalte, wenn Spaltenindex-und Filterkriterien angegeben werden.


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: apply(range, columnIndex, criteria)
  fullName: apply(range, columnIndex, criteria)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'apply(range: Range | string, columnIndex?: number, criteria?: Excel.FilterCriteria): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: range
      description: Der Zeitraum, für den der AutoFilter angewendet wird.
      type:
      - Range | string
    - id: columnIndex
      description: Der Spaltenindex, auf den der AutoFilter angewendet wird, beginnt bei 0.
      type:
      - number
    - id: criteria
      description: Die Filterkriterien.
      type:
      - excel.Excel.FilterCriteria
- uid: excel.Excel.AutoFilter.clearCriteria
  summary: >-
    Löscht die Kriterien, wenn AutoFilter Filter enthält


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: clearCriteria()
  fullName: clearCriteria()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clearCriteria(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.AutoFilter.context
  summary: Der dem Objekt zugeordnete Anforderungskontext. Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.
  isPreview: true
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.AutoFilter.criteria
  summary: >-
    Array, das alle Filterkriterien in einem Auto filterten Bereich enthält. Schreibgeschützt.


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: criteria
  fullName: criteria
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly criteria: Excel.FilterCriteria[];'
    return:
      type:
      - Excel.FilterCriteria[]
- uid: excel.Excel.AutoFilter.enabled
  summary: >-
    Gibt an, ob der AutoFilter aktiviert ist oder nicht. Schreibgeschützt.


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: enabled
  fullName: enabled
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly enabled: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.AutoFilter.getRange
  summary: >-
    Gibt das Range-Objekt zurück, das den Range darstellt, auf den der AutoFilter angewendet wird.


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: getRange()
  fullName: getRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.AutoFilter.getRangeOrNullObject
  summary: >-
    Wenn dem AutoFilter ein Range-Objekt zugeordnet ist, gibt diese Methode es zurück. Andernfalls gibt diese Methode ein NULL-Objekt zurück.


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: getRangeOrNullObject()
  fullName: getRangeOrNullObject()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRangeOrNullObject(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.AutoFilter.isDataFiltered
  summary: >-
    Gibt an, ob der autoFilter Filterkriterien aufweist. Schreibgeschützt.


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: isDataFiltered
  fullName: isDataFiltered
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly isDataFiltered: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.AutoFilter.load
  summary: Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts. Sie müssen "context. Sync ()" aufrufen, bevor Sie die Eigenschaften lesen.
  remarks: >-
    Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:


    `load(option?: string | string[]): Excel.AutoFilter`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.


    `load(option?: { select?: string; expand?: string; }): Excel.AutoFilter`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.AutoFilter`-Nur verfügbar für Sammlungstypen. Sie ähnelt der vorherigen Signatur. Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können. Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind. Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.AutoFilterLoadOptions): Excel.AutoFilter;'
    return:
      type:
      - excel.Excel.AutoFilter
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.AutoFilterLoadOptions
- uid: excel.Excel.AutoFilter.load_1
  summary: Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts. Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.
  isPreview: true
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.AutoFilter;'
    return:
      type:
      - excel.Excel.AutoFilter
      description: ''
    parameters:
    - id: propertyNames
      description: Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.
      type:
      - string | string[]
- uid: excel.Excel.AutoFilter.load_2
  summary: Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts. Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.
  isPreview: true
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.AutoFilter;'
    return:
      type:
      - excel.Excel.AutoFilter
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: Wobei propertyNamesAndPaths. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Navigationseigenschaften angibt.
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.AutoFilter.reapply
  summary: >-
    Wendet das angegebene AutoFilter-Objekt an, das derzeit auf dem Range liegt.


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: reapply()
  fullName: reapply()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'reapply(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.AutoFilter.remove
  summary: >-
    Entfernt den AutoFilter für den Range.


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: remove()
  fullName: remove()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'remove(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.AutoFilter.toJSON
  summary: ÜberSchreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API `JSON.stringify()` <!-- -->-Objekt an übergeben wird. (`JSON.stringify`<!-- -->ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche Excel. AutoFilter-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt `Excel.Interfaces.AutoFilterData` <!-- -->(typisiert als) zurück, das flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.
  isPreview: true
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.AutoFilterData;'
    return:
      type:
      - excel.Excel.Interfaces.AutoFilterData
      description: ''
