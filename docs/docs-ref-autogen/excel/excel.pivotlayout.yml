### YamlMime:UniversalReference
ms.openlocfilehash: f75ef1f55d423ee130694bf500e9b6c2127b6b44
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/20/2019
ms.locfileid: "30095730"
items:
- uid: excel.Excel.PivotLayout
  summary: >-
    <span data-ttu-id="d3cf5-101">Stellt das visuelle Layout der PivotTable dar.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-101">Represents the visual layout of the PivotTable.</span></span>


    <span data-ttu-id="d3cf5-102">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d3cf5-102">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.PivotLayout
  fullName: Excel.PivotLayout
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.PivotLayout.autoFormat
  - excel.Excel.PivotLayout.context
  - excel.Excel.PivotLayout.enableFieldList
  - excel.Excel.PivotLayout.getCell
  - excel.Excel.PivotLayout.getColumnLabelRange
  - excel.Excel.PivotLayout.getDataBodyRange
  - excel.Excel.PivotLayout.getDataHierarchy
  - excel.Excel.PivotLayout.getFilterAxisRange
  - excel.Excel.PivotLayout.getPivotItems
  - excel.Excel.PivotLayout.getPivotItems_1
  - excel.Excel.PivotLayout.getRange
  - excel.Excel.PivotLayout.getRowLabelRange
  - excel.Excel.PivotLayout.layoutType
  - excel.Excel.PivotLayout.load
  - excel.Excel.PivotLayout.load_1
  - excel.Excel.PivotLayout.load_2
  - excel.Excel.PivotLayout.preserveFormatting
  - excel.Excel.PivotLayout.set
  - excel.Excel.PivotLayout.set_1
  - excel.Excel.PivotLayout.setAutosortOnCell
  - excel.Excel.PivotLayout.setAutosortOnCell_1
  - excel.Excel.PivotLayout.showColumnGrandTotals
  - excel.Excel.PivotLayout.showRowGrandTotals
  - excel.Excel.PivotLayout.subtotalLocation
  - excel.Excel.PivotLayout.toJSON
- uid: excel.Excel.PivotLayout.autoFormat
  summary: >-
    <span data-ttu-id="d3cf5-103">True, wenn die Formatierung automatisch formatiert wird, wenn Sie aktualisiert wird oder wenn Felder verschoben werden</span><span class="sxs-lookup"><span data-stu-id="d3cf5-103">True if formatting will be automatically formatted when it’s refreshed or when fields are moved</span></span>


    <span data-ttu-id="d3cf5-104">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d3cf5-104">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: autoFormat
  fullName: autoFormat
  langs:
  - typeScript
  type: property
  syntax:
    content: 'autoFormat: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.PivotLayout.context
  summary: <span data-ttu-id="d3cf5-105">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-105">The request context associated with the object.</span></span> <span data-ttu-id="d3cf5-106">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-106">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.PivotLayout.enableFieldList
  summary: >-
    <span data-ttu-id="d3cf5-107">True, wenn die Feldliste auf der Benutzeroberfläche angezeigt oder ausgeblendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-107">True if the field list should be shown or hidden from the UI.</span></span>


    <span data-ttu-id="d3cf5-108">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d3cf5-108">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: enableFieldList
  fullName: enableFieldList
  langs:
  - typeScript
  type: property
  syntax:
    content: 'enableFieldList: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.PivotLayout.getCell
  summary: >-
    <span data-ttu-id="d3cf5-109">Ruft die Zelle im Daten Text der PivotTable ab, die den Wert für den Schnittpunkt der angegebenen dataHierarchy, rowItems und columnItems enthält.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-109">Gets the cell in the PivotTable's data body that contains the value for the intersection of the specified dataHierarchy, rowItems, and columnItems.</span></span>


    <span data-ttu-id="d3cf5-110">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d3cf5-110">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getCell(dataHierarchy, rowItems, columnItems)
  fullName: getCell(dataHierarchy, rowItems, columnItems)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCell(dataHierarchy: DataPivotHierarchy | string, rowItems: Array<PivotItem | string>, columnItems: Array<PivotItem | string>): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: <span data-ttu-id="d3cf5-111">Ein Range, der eine einzelne Zelle angibt, die den angegebenen Wert enthält.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-111">A range specifying a single cell that contains the value specified.</span></span>
    parameters:
    - id: dataHierarchy
      description: <span data-ttu-id="d3cf5-112">Die Datenhierarchie, die das zu findende Data-Element bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-112">The dataHierarchy that provides the data item to find.</span></span>
      type:
      - DataPivotHierarchy | string
    - id: rowItems
      description: <span data-ttu-id="d3cf5-113">Die PivotItems aus der Zeilenachse, die den zu findenden Wert bilden.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-113">The PivotItems from the row axis that make up the value to find.</span></span>
      type:
      - Array<PivotItem | string>
    - id: columnItems
      description: <span data-ttu-id="d3cf5-114">Die PivotItems aus der Spaltenachse, die den zu findenden Wert bilden.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-114">The PivotItems from the column axis that make up the value to find.</span></span>
      type:
      - Array<PivotItem | string>
- uid: excel.Excel.PivotLayout.getColumnLabelRange
  summary: >-
    <span data-ttu-id="d3cf5-115">Gibt den Bereich zurück, in dem sich die Spaltenbeschriftungen in PivotTable befinden.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-115">Returns the range where the PivotTable's column labels reside.</span></span>


    <span data-ttu-id="d3cf5-116">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d3cf5-116">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getColumnLabelRange()
  fullName: getColumnLabelRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getColumnLabelRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.PivotLayout.getDataBodyRange
  summary: >-
    <span data-ttu-id="d3cf5-117">Gibt den Bereich zurück, in dem sich die Datenwerte in PivotTable befinden.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-117">Returns the range where the PivotTable's data values reside.</span></span>


    <span data-ttu-id="d3cf5-118">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d3cf5-118">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getDataBodyRange()
  fullName: getDataBodyRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getDataBodyRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"d3cf5-119\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"d3cf5-119\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem(\"Farm Sales\");\n\n    // the layout controls the ranges used by the PivotTable\n    const range = pivotTable.layout.getDataBodyRange();\n\n    // get all the data hierarchy totals\n    const grandTotalRange = range.getLastRow();\n    grandTotalRange.load(\"address\");\n    await context.sync();\n    \n    // use the wholesale and farm sale totals to make a final sum\n    const masterTotalRange = context.workbook.worksheets.getActiveWorksheet().getRange(\"B27:C27\");\n    masterTotalRange.formulas = [[\"All Crates\", \"=SUM(\" + grandTotalRange.address + \")\"]];\n    await context.sync();\n});\n```"
- uid: excel.Excel.PivotLayout.getDataHierarchy
  summary: >-
    <span data-ttu-id="d3cf5-120">Ruft die datenHierarchie ab, die zum Berechnen des Werts in einem angegebenen Bereich innerhalb der PivotTable verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-120">Gets the DataHierarchy that is used to calculate the value in a specified range within the PivotTable.</span></span>


    <span data-ttu-id="d3cf5-121">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d3cf5-121">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getDataHierarchy(cell)
  fullName: getDataHierarchy(cell)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getDataHierarchy(cell: Range | string): Excel.DataPivotHierarchy;'
    return:
      type:
      - excel.Excel.DataPivotHierarchy
      description: <span data-ttu-id="d3cf5-122">Das DataPivotHierarchy-Objekt, mit dem der Wert in der angegebenen Zelle berechnet wird.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-122">The DataPivotHierarchy object used to calculate the value in the specified cell.</span></span>
    parameters:
    - id: cell
      description: <span data-ttu-id="d3cf5-123">Eine einzelne Zelle innerhalb des PivotTable-Daten Texts, für die die Daten hieararchy abgerufen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-123">A single cell within the PivotTable data body to get the data hieararchy for.</span></span>
      type:
      - Range | string
- uid: excel.Excel.PivotLayout.getFilterAxisRange
  summary: >-
    <span data-ttu-id="d3cf5-124">Gibt den Bereich des Filterbereichs von PivotTable zurück.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-124">Returns the range of the PivotTable's filter area.</span></span>


    <span data-ttu-id="d3cf5-125">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d3cf5-125">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getFilterAxisRange()
  fullName: getFilterAxisRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getFilterAxisRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.PivotLayout.getPivotItems
  summary: >-
    <span data-ttu-id="d3cf5-126">Ruft die PivotItems aus einer Achse ab, die den Wert in einem angegebenen Bereich innerhalb der PivotTable ausmacht.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-126">Gets the PivotItems from an axis that make up the value in a specified range within the PivotTable.</span></span>


    <span data-ttu-id="d3cf5-127">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d3cf5-127">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getPivotItems(axis, cell)
  fullName: getPivotItems(axis, cell)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getPivotItems(axis: Excel.PivotAxis, cell: Range | string): OfficeExtension.ClientResult<Excel.PivotItem[]>;'
    return:
      type:
      - OfficeExtension.ClientResult<Excel.PivotItem[]>
      description: <span data-ttu-id="d3cf5-128">Eine Auflistung von PivotItems, die zum Berechnen der Werte in der angegebenen Zeile verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-128">A collection of PivotItems that are used to calculate the values in the specified row.</span></span>
    parameters:
    - id: axis
      description: <span data-ttu-id="d3cf5-129">Die Achse, von der die PivotItems abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-129">The axis to get the PivotItems from.</span></span> <span data-ttu-id="d3cf5-130">Muss entweder "Row" oder "Column" lauten.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-130">Must be either "row" or "column."</span></span>
      type:
      - excel.Excel.PivotAxis
    - id: cell
      description: <span data-ttu-id="d3cf5-131">Eine einzelne Zelle innerhalb des Daten Texts der PivotTable, für die die PivotItems abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-131">A single cell within the PivotTable's data body to get the PivotItems for.</span></span>
      type:
      - Range | string
- uid: excel.Excel.PivotLayout.getPivotItems_1
  summary: >-
    <span data-ttu-id="d3cf5-132">Ruft die PivotItems aus einer Achse ab, die den Wert in einem angegebenen Bereich innerhalb der PivotTable ausmacht.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-132">Gets the PivotItems from an axis that make up the value in a specified range within the PivotTable.</span></span>


    <span data-ttu-id="d3cf5-133">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d3cf5-133">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getPivotItems(axisString, cell)
  fullName: getPivotItems(axisString, cell)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getPivotItems(axisString: "Unknown" | "Row" | "Column" | "Data" | "Filter", cell: Range | string): OfficeExtension.ClientResult<Excel.PivotItem[]>;'
    return:
      type:
      - OfficeExtension.ClientResult<Excel.PivotItem[]>
      description: <span data-ttu-id="d3cf5-134">Eine Auflistung von PivotItems, die zum Berechnen der Werte in der angegebenen Zeile verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-134">A collection of PivotItems that are used to calculate the values in the specified row.</span></span>
    parameters:
    - id: axisString
      description: <span data-ttu-id="d3cf5-135">Die Achse, von der die PivotItems abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-135">The axis to get the PivotItems from.</span></span> <span data-ttu-id="d3cf5-136">Muss entweder "Row" oder "Column" lauten.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-136">Must be either "row" or "column."</span></span>
      type:
      - "\"Unknown\" | \"Row\" | \"Column\" | \"Data\" | \"Filter\""
    - id: cell
      description: <span data-ttu-id="d3cf5-137">Eine einzelne Zelle innerhalb des Daten Texts der PivotTable, für die die PivotItems abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-137">A single cell within the PivotTable's data body to get the PivotItems for.</span></span>
      type:
      - Range | string
- uid: excel.Excel.PivotLayout.getRange
  summary: >-
    <span data-ttu-id="d3cf5-138">Gibt den Bereich an, in dem PivotTable vorhanden ist, mit Ausnahme des Filterbereichs.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-138">Returns the range the PivotTable exists on, excluding the filter area.</span></span>


    <span data-ttu-id="d3cf5-139">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d3cf5-139">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRange()
  fullName: getRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.PivotLayout.getRowLabelRange
  summary: >-
    <span data-ttu-id="d3cf5-140">Gibt den Bereich zurück, in dem sich die Zeilenbeschriftungen in PivotTable befinden.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-140">Returns the range where the PivotTable's row labels reside.</span></span>


    <span data-ttu-id="d3cf5-141">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d3cf5-141">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRowLabelRange()
  fullName: getRowLabelRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRowLabelRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.PivotLayout.layoutType
  summary: >-
    <span data-ttu-id="d3cf5-142">Diese Eigenschaft gibt das PivotLayoutType-Objekt aller Felder in PivotTable an.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-142">This property indicates the PivotLayoutType of all fields on the PivotTable.</span></span> <span data-ttu-id="d3cf5-143">Wenn Felder verschiedenen Status aufweisen, lautet dies NULL.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-143">If fields have different states, this will be null.</span></span>


    <span data-ttu-id="d3cf5-144">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d3cf5-144">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: layoutType
  fullName: layoutType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'layoutType: Excel.PivotLayoutType | "Compact" | "Tabular" | "Outline";'
    return:
      type:
      - Excel.PivotLayoutType | "Compact" | "Tabular" | "Outline"
- uid: excel.Excel.PivotLayout.load
  summary: <span data-ttu-id="d3cf5-145">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-145">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d3cf5-146">Sie müssen "context. Sync ()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-146">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="d3cf5-147">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="d3cf5-147">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="d3cf5-148">`load(option?: string | string[]): Excel.PivotLayout`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-148">`load(option?: string | string[]): Excel.PivotLayout` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="d3cf5-149">`load(option?: { select?: string; expand?: string; }): Excel.PivotLayout`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-149">`load(option?: { select?: string; expand?: string; }): Excel.PivotLayout` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="d3cf5-150">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotLayout`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-150">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotLayout` - Only available on collection types.</span></span> <span data-ttu-id="d3cf5-151">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-151">It is similar to the preceding signature.</span></span> <span data-ttu-id="d3cf5-152">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-152">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="d3cf5-153">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-153">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="d3cf5-154">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-154">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.PivotLayoutLoadOptions): Excel.PivotLayout;'
    return:
      type:
      - excel.Excel.PivotLayout
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.PivotLayoutLoadOptions
- uid: excel.Excel.PivotLayout.load_1
  summary: <span data-ttu-id="d3cf5-155">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-155">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d3cf5-156">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-156">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.PivotLayout;'
    return:
      type:
      - excel.Excel.PivotLayout
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="d3cf5-157">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-157">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.PivotLayout.load_2
  summary: <span data-ttu-id="d3cf5-158">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-158">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d3cf5-159">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-159">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.PivotLayout;'
    return:
      type:
      - excel.Excel.PivotLayout
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="d3cf5-160">Wobei propertyNamesAndPaths. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-160">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.PivotLayout.preserveFormatting
  summary: >-
    <span data-ttu-id="d3cf5-161">True, wenn die Formatierung beibehalten wird, wenn der Bericht durch Vorgänge wie Pivotieren, Sortieren oder Ändern von Seitenfeldelementen aktualisiert oder neu berechnet wird.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-161">True if formatting is preserved when the report is refreshed or recalculated by operations such as pivoting, sorting, or changing page field items.</span></span>


    <span data-ttu-id="d3cf5-162">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d3cf5-162">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: preserveFormatting
  fullName: preserveFormatting
  langs:
  - typeScript
  type: property
  syntax:
    content: 'preserveFormatting: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.PivotLayout.set
  summary: <span data-ttu-id="d3cf5-163">Legt mehrere Eigenschaften eines Objekts gleichzeitig fest.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-163">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="d3cf5-164">Sie können entweder ein plain-Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs weitergeben.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-164">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="d3cf5-165">Diese Methode hat die folgende zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="d3cf5-165">This method has the following additional signature:</span></span>


    `set(properties: Excel.PivotLayout): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.PivotLayoutUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="d3cf5-166">Ein JavaScript-Objekt mit Eigenschaften, die isomorphically strukturiert sind, um die Eigenschaften des Objekts, für das die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-166">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.PivotLayoutUpdateData
    - id: options
      description: <span data-ttu-id="d3cf5-167">Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-167">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.PivotLayout.set_1
  summary: <span data-ttu-id="d3cf5-168">Legt mehrere Eigenschaften für das Objekt auf der Grundlage eines vorhandenen geladenen Objekts zur gleichen Zeit fest.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-168">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.PivotLayout): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.PivotLayout
- uid: excel.Excel.PivotLayout.setAutosortOnCell
  summary: >-
    <span data-ttu-id="d3cf5-169">Legt eine automatische Sortierung mithilfe der angegebenen Zelle fest, um automatisch alle Kriterien und Kontext für die Sortierung auszuwählen.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-169">Sets an autosort using the specified cell to automatically select all criteria and context for the sort.</span></span>


    <span data-ttu-id="d3cf5-170">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d3cf5-170">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: setAutosortOnCell(cell, sortby)
  fullName: setAutosortOnCell(cell, sortby)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setAutosortOnCell(cell: Range | string, sortby: Excel.SortBy): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: cell
      description: <span data-ttu-id="d3cf5-171">Eine einzelne zu verwendende Zelle Abrufen der Kriterien für die Anwendung der AutoSortieren.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-171">A single cell to use get the criteria from for applying the autosort.</span></span>
      type:
      - Range | string
    - id: sortby
      description: <span data-ttu-id="d3cf5-172">Die Richtung der Sortierung.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-172">The direction of the sort.</span></span>
      type:
      - excel.Excel.SortBy
- uid: excel.Excel.PivotLayout.setAutosortOnCell_1
  summary: >-
    <span data-ttu-id="d3cf5-173">Legt eine automatische Sortierung mithilfe der angegebenen Zelle fest, um automatisch alle Kriterien und Kontext für die Sortierung auszuwählen.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-173">Sets an autosort using the specified cell to automatically select all criteria and context for the sort.</span></span>


    <span data-ttu-id="d3cf5-174">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d3cf5-174">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: setAutosortOnCell(cell, sortbyString)
  fullName: setAutosortOnCell(cell, sortbyString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setAutosortOnCell(cell: Range | string, sortbyString: "Ascending" | "Descending"): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: cell
      description: <span data-ttu-id="d3cf5-175">Eine einzelne zu verwendende Zelle Abrufen der Kriterien für die Anwendung der AutoSortieren.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-175">A single cell to use get the criteria from for applying the autosort.</span></span>
      type:
      - Range | string
    - id: sortbyString
      description: <span data-ttu-id="d3cf5-176">Die Richtung der Sortierung.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-176">The direction of the sort.</span></span>
      type:
      - "\"Ascending\" | \"Descending\""
- uid: excel.Excel.PivotLayout.showColumnGrandTotals
  summary: >-
    <span data-ttu-id="d3cf5-177">True, wenn der PivotTable-Bericht die Gesamtsumme für Spalten anzeigt.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-177">True if the PivotTable report shows grand totals for columns.</span></span>


    <span data-ttu-id="d3cf5-178">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d3cf5-178">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showColumnGrandTotals
  fullName: showColumnGrandTotals
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showColumnGrandTotals: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.PivotLayout.showRowGrandTotals
  summary: >-
    <span data-ttu-id="d3cf5-179">True, wenn der PivotTable-Bericht die Gesamtsumme für Zeilen anzeigt.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-179">True if the PivotTable report shows grand totals for rows.</span></span>


    <span data-ttu-id="d3cf5-180">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d3cf5-180">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showRowGrandTotals
  fullName: showRowGrandTotals
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showRowGrandTotals: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.PivotLayout.subtotalLocation
  summary: >-
    <span data-ttu-id="d3cf5-181">Diese Eigenschaft gibt das SubtotalLocationType-Objekt aller Felder in PivotTable an.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-181">This property indicates the SubtotalLocationType of all fields on the PivotTable.</span></span> <span data-ttu-id="d3cf5-182">Wenn Felder verschiedenen Status aufweisen, lautet dies NULL.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-182">If fields have different states, this will be null.</span></span>


    <span data-ttu-id="d3cf5-183">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d3cf5-183">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: subtotalLocation
  fullName: subtotalLocation
  langs:
  - typeScript
  type: property
  syntax:
    content: 'subtotalLocation: Excel.SubtotalLocationType | "AtTop" | "AtBottom" | "Off";'
    return:
      type:
      - Excel.SubtotalLocationType | "AtTop" | "AtBottom" | "Off"
- uid: excel.Excel.PivotLayout.toJSON
  summary: <span data-ttu-id="d3cf5-184">ÜberSchreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API `JSON.stringify()` <!-- -->-Objekt an übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-184">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="d3cf5-185">(`JSON.stringify`<!-- -->ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche Excel. PivotLayout-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt `Excel.Interfaces.PivotLayoutData` <!-- -->(typisiert als) zurück, das flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="d3cf5-185">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.PivotLayout object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotLayoutData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.PivotLayoutData;'
    return:
      type:
      - excel.Excel.Interfaces.PivotLayoutData
      description: ''
