### YamlMime:UniversalReference
items:
  - uid: excel.Excel.PivotLayout
    summary: |-
      <span data-ttu-id="524ba-101">Stellt das visuelle Layout der PivotTable dar.</span><span class="sxs-lookup"><span data-stu-id="524ba-101">Represents the visual layout of the PivotTable.</span></span>

      <span data-ttu-id="524ba-102">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="524ba-102">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.PivotLayout
    fullName: Excel.PivotLayout
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.PivotLayout.autoFormat
      - excel.Excel.PivotLayout.context
      - excel.Excel.PivotLayout.enableFieldList
      - excel.Excel.PivotLayout.getCell
      - excel.Excel.PivotLayout.getColumnLabelRange
      - excel.Excel.PivotLayout.getDataBodyRange
      - excel.Excel.PivotLayout.getDataHierarchy
      - excel.Excel.PivotLayout.getFilterAxisRange
      - excel.Excel.PivotLayout.getPivotItems
      - excel.Excel.PivotLayout.getPivotItems_1
      - excel.Excel.PivotLayout.getRange
      - excel.Excel.PivotLayout.getRowLabelRange
      - excel.Excel.PivotLayout.layoutType
      - excel.Excel.PivotLayout.load
      - excel.Excel.PivotLayout.load_1
      - excel.Excel.PivotLayout.load_2
      - excel.Excel.PivotLayout.preserveFormatting
      - excel.Excel.PivotLayout.set
      - excel.Excel.PivotLayout.set_1
      - excel.Excel.PivotLayout.setAutoSortOnCell
      - excel.Excel.PivotLayout.setAutoSortOnCell_1
      - excel.Excel.PivotLayout.showColumnGrandTotals
      - excel.Excel.PivotLayout.showRowGrandTotals
      - excel.Excel.PivotLayout.subtotalLocation
      - excel.Excel.PivotLayout.toJSON
  - uid: excel.Excel.PivotLayout.autoFormat
    summary: |-
      <span data-ttu-id="524ba-103">Gibt an, ob die Formatierung automatisch formatiert wird, wenn Sie aktualisiert wird, oder wenn Felder verschoben werden.</span><span class="sxs-lookup"><span data-stu-id="524ba-103">Specifies whether formatting will be automatically formatted when it’s refreshed or when fields are moved</span></span>

      <span data-ttu-id="524ba-104">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="524ba-104">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: autoFormat
    fullName: autoFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'autoFormat: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.PivotLayout.context
    summary: <span data-ttu-id="524ba-105">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="524ba-105">The request context associated with the object.</span></span> <span data-ttu-id="524ba-106">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="524ba-106">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.PivotLayout.enableFieldList
    summary: |-
      <span data-ttu-id="524ba-107">Gibt an, ob die Feldliste auf der Benutzeroberfläche angezeigt werden kann.</span><span class="sxs-lookup"><span data-stu-id="524ba-107">Specifies whether the field list can be shown in the UI.</span></span>

      <span data-ttu-id="524ba-108">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="524ba-108">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: enableFieldList
    fullName: enableFieldList
    langs:
      - typeScript
    type: property
    syntax:
      content: 'enableFieldList: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.PivotLayout.getCell
    summary: |-
      <span data-ttu-id="524ba-109">Ruft eine eindeutige Zelle in der PivotTable auf der Grundlage einer Datenhierarchie und der Zeilen-und Spaltenelemente ihrer jeweiligen Hierarchien ab.</span><span class="sxs-lookup"><span data-stu-id="524ba-109">Gets a unique cell in the PivotTable based on a data hierarchy and the row and column items of their respective hierarchies.</span></span> <span data-ttu-id="524ba-110">Die zurückgegebene Zelle ist der Schnittpunkt der angegebenen Zeile und Spalte, die die Daten aus der angegebenen Hierarchie enthält.</span><span class="sxs-lookup"><span data-stu-id="524ba-110">The returned cell is the intersection of the given row and column that contains the data from the given hierarchy.</span></span> <span data-ttu-id="524ba-111">Diese Methode entspricht dem Aufrufen von getPivotItems und getDataHierarchy für eine bestimmte Zelle.</span><span class="sxs-lookup"><span data-stu-id="524ba-111">This method is the inverse of calling getPivotItems and getDataHierarchy on a particular cell.</span></span>

      <span data-ttu-id="524ba-112">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="524ba-112">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'getCell(dataHierarchy, rowItems, columnItems)'
    fullName: 'getCell(dataHierarchy, rowItems, columnItems)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCell(dataHierarchy: DataPivotHierarchy | string, rowItems: Array<PivotItem | string>, columnItems: Array<PivotItem | string>): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: '<span data-ttu-id="524ba-113">Ein Range, der eine einzelne Zelle angibt, die den angegebenen Wert enthält.</span><span class="sxs-lookup"><span data-stu-id="524ba-113">A range specifying a single cell that contains the value specified.</span></span>'
      parameters:
        - id: dataHierarchy
          description: '<span data-ttu-id="524ba-114">Die Datenhierarchie, die das zu findende Data-Element bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="524ba-114">The dataHierarchy that provides the data item to find.</span></span>'
          type:
            - DataPivotHierarchy | string
        - id: rowItems
          description: '<span data-ttu-id="524ba-115">Die PivotItems aus der Zeilenachse, die den zu findenden Wert bilden.</span><span class="sxs-lookup"><span data-stu-id="524ba-115">The PivotItems from the row axis that make up the value to find.</span></span>'
          type:
            - Array<PivotItem | string>
        - id: columnItems
          description: '<span data-ttu-id="524ba-116">Die PivotItems aus der Spaltenachse, die den zu findenden Wert bilden.</span><span class="sxs-lookup"><span data-stu-id="524ba-116">The PivotItems from the column axis that make up the value to find.</span></span>'
          type:
            - Array<PivotItem | string>
  - uid: excel.Excel.PivotLayout.getColumnLabelRange
    summary: |-
      <span data-ttu-id="524ba-117">Gibt den Bereich zurück, in dem sich die Spaltenbeschriftungen in PivotTable befinden.</span><span class="sxs-lookup"><span data-stu-id="524ba-117">Returns the range where the PivotTable's column labels reside.</span></span>

      <span data-ttu-id="524ba-118">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="524ba-118">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getColumnLabelRange()
    fullName: getColumnLabelRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getColumnLabelRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel.Excel.PivotLayout.getDataBodyRange
    summary: |-
      <span data-ttu-id="524ba-119">Gibt den Bereich zurück, in dem sich die Datenwerte in PivotTable befinden.</span><span class="sxs-lookup"><span data-stu-id="524ba-119">Returns the range where the PivotTable's data values reside.</span></span>

      <span data-ttu-id="524ba-120">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="524ba-120">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getDataBodyRange()
    fullName: getDataBodyRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataBodyRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="524ba-121">Beispiele</span><span class="sxs-lookup"><span data-stu-id="524ba-121">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");

              // the layout controls the ranges used by the PivotTable
              const range = pivotTable.layout.getDataBodyRange();

              // get all the data hierarchy totals
              const grandTotalRange = range.getLastRow();
              grandTotalRange.load("address");
              await context.sync();
              
              // use the wholesale and farm sale totals to make a final sum
              const masterTotalRange = context.workbook.worksheets.getActiveWorksheet().getRange("B27:C27");
              masterTotalRange.formulas = [["All Crates", "=SUM(" + grandTotalRange.address + ")"]];
              await context.sync();
          });
          ```
  - uid: excel.Excel.PivotLayout.getDataHierarchy
    summary: |-
      <span data-ttu-id="524ba-122">Ruft die DataHierarchy ab, die zum Berechnen des Werts in einem angegebenen Bereich innerhalb der PivotTable verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="524ba-122">Gets the DataHierarchy that is used to calculate the value in a specified range within the PivotTable.</span></span>

      <span data-ttu-id="524ba-123">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="524ba-123">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getDataHierarchy(cell)
    fullName: getDataHierarchy(cell)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataHierarchy(cell: Range | string): Excel.DataPivotHierarchy;'
      return:
        type:
          - excel.Excel.DataPivotHierarchy
        description: '<span data-ttu-id="524ba-124">Das DataPivotHierarchy-Objekt, mit dem der Wert in der angegebenen Zelle berechnet wird.</span><span class="sxs-lookup"><span data-stu-id="524ba-124">The DataPivotHierarchy object used to calculate the value in the specified cell.</span></span>'
      parameters:
        - id: cell
          description: <span data-ttu-id="524ba-125">Eine einzelne Zelle innerhalb des PivotTable-Daten Texts.</span><span class="sxs-lookup"><span data-stu-id="524ba-125">A single cell within the PivotTable data body.</span></span>
          type:
            - Range | string
  - uid: excel.Excel.PivotLayout.getFilterAxisRange
    summary: |-
      <span data-ttu-id="524ba-126">Gibt den Bereich des Filterbereichs von PivotTable zurück.</span><span class="sxs-lookup"><span data-stu-id="524ba-126">Returns the range of the PivotTable's filter area.</span></span>

      <span data-ttu-id="524ba-127">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="524ba-127">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getFilterAxisRange()
    fullName: getFilterAxisRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFilterAxisRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel.Excel.PivotLayout.getPivotItems
    summary: |-
      <span data-ttu-id="524ba-128">Ruft die PivotItems von einer Achse ab, die den Wert in einem angegebenen Bereich innerhalb der PivotTable bilden.</span><span class="sxs-lookup"><span data-stu-id="524ba-128">Gets the PivotItems from an axis that make up the value in a specified range within the PivotTable.</span></span>

      <span data-ttu-id="524ba-129">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="524ba-129">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'getPivotItems(axis, cell)'
    fullName: 'getPivotItems(axis, cell)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPivotItems(axis: Excel.PivotAxis, cell: Range | string): OfficeExtension.ClientResult<Excel.PivotItem[]>;'
      return:
        type:
          - 'OfficeExtension.ClientResult<Excel.PivotItem[]>'
        description: '<span data-ttu-id="524ba-130">Eine Auflistung von PivotItems, die zum Berechnen der Werte in der angegebenen Zeile verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="524ba-130">A collection of PivotItems that are used to calculate the values in the specified row.</span></span>'
      parameters:
        - id: axis
          description: '<span data-ttu-id="524ba-131">Die Achse, von der die PivotItems abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="524ba-131">The axis from which to get the PivotItems.</span></span> <span data-ttu-id="524ba-132">Muss entweder "Row" oder "Column" lauten.</span><span class="sxs-lookup"><span data-stu-id="524ba-132">Must be either "row" or "column."</span></span>'
          type:
            - excel.Excel.PivotAxis
        - id: cell
          description: <span data-ttu-id="524ba-133">Eine einzelne Zelle innerhalb des Daten Texts der PivotTable.</span><span class="sxs-lookup"><span data-stu-id="524ba-133">A single cell within the PivotTable's data body.</span></span>
          type:
            - Range | string
  - uid: excel.Excel.PivotLayout.getPivotItems_1
    summary: |-
      <span data-ttu-id="524ba-134">Ruft die PivotItems von einer Achse ab, die den Wert in einem angegebenen Bereich innerhalb der PivotTable bilden.</span><span class="sxs-lookup"><span data-stu-id="524ba-134">Gets the PivotItems from an axis that make up the value in a specified range within the PivotTable.</span></span>

      <span data-ttu-id="524ba-135">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="524ba-135">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'getPivotItems(axisString, cell)'
    fullName: 'getPivotItems(axisString, cell)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPivotItems(axisString: "Unknown" | "Row" | "Column" | "Data" | "Filter", cell: Range | string): OfficeExtension.ClientResult<Excel.PivotItem[]>;'
      return:
        type:
          - 'OfficeExtension.ClientResult<Excel.PivotItem[]>'
        description: '<span data-ttu-id="524ba-136">Eine Auflistung von PivotItems, die zum Berechnen der Werte in der angegebenen Zeile verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="524ba-136">A collection of PivotItems that are used to calculate the values in the specified row.</span></span>'
      parameters:
        - id: axisString
          description: '<span data-ttu-id="524ba-137">Die Achse, von der die PivotItems abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="524ba-137">The axis from which to get the PivotItems.</span></span> <span data-ttu-id="524ba-138">Muss entweder "Row" oder "Column" lauten.</span><span class="sxs-lookup"><span data-stu-id="524ba-138">Must be either "row" or "column."</span></span>'
          type:
            - '"Unknown" | "Row" | "Column" | "Data" | "Filter"'
        - id: cell
          description: <span data-ttu-id="524ba-139">Eine einzelne Zelle innerhalb des Daten Texts der PivotTable.</span><span class="sxs-lookup"><span data-stu-id="524ba-139">A single cell within the PivotTable's data body.</span></span>
          type:
            - Range | string
  - uid: excel.Excel.PivotLayout.getRange
    summary: |-
      <span data-ttu-id="524ba-140">Gibt den Bereich an, in dem PivotTable vorhanden ist, mit Ausnahme des Filterbereichs.</span><span class="sxs-lookup"><span data-stu-id="524ba-140">Returns the range the PivotTable exists on, excluding the filter area.</span></span>

      <span data-ttu-id="524ba-141">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="524ba-141">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel.Excel.PivotLayout.getRowLabelRange
    summary: |-
      <span data-ttu-id="524ba-142">Gibt den Bereich zurück, in dem sich die Zeilenbeschriftungen in PivotTable befinden.</span><span class="sxs-lookup"><span data-stu-id="524ba-142">Returns the range where the PivotTable's row labels reside.</span></span>

      <span data-ttu-id="524ba-143">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="524ba-143">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRowLabelRange()
    fullName: getRowLabelRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRowLabelRange(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel.Excel.PivotLayout.layoutType
    summary: |-
      <span data-ttu-id="524ba-144">Diese Eigenschaft gibt das PivotLayoutType-Objekt aller Felder in PivotTable an.</span><span class="sxs-lookup"><span data-stu-id="524ba-144">This property indicates the PivotLayoutType of all fields on the PivotTable.</span></span> <span data-ttu-id="524ba-145">Wenn Felder verschiedenen Status aufweisen, lautet dies NULL.</span><span class="sxs-lookup"><span data-stu-id="524ba-145">If fields have different states, this will be null.</span></span>

      <span data-ttu-id="524ba-146">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="524ba-146">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: layoutType
    fullName: layoutType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'layoutType: Excel.PivotLayoutType | "Compact" | "Tabular" | "Outline";'
      return:
        type:
          - Excel.PivotLayoutType | "Compact" | "Tabular" | "Outline"
  - uid: excel.Excel.PivotLayout.load
    summary: <span data-ttu-id="524ba-147">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="524ba-147">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="524ba-148">Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.</span><span class="sxs-lookup"><span data-stu-id="524ba-148">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="524ba-149">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="524ba-149">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="524ba-150">`load(option?: string | string[]): Excel.PivotLayout`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="524ba-150">`load(option?: string | string[]): Excel.PivotLayout` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="524ba-151">`load(option?: { select?: string; expand?: string; }): Excel.PivotLayout`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="524ba-151">`load(option?: { select?: string; expand?: string; }): Excel.PivotLayout` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="524ba-152">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotLayout`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="524ba-152">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotLayout` - Only available on collection types.</span></span> <span data-ttu-id="524ba-153">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="524ba-153">It is similar to the preceding signature.</span></span> <span data-ttu-id="524ba-154">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="524ba-154">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="524ba-155">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="524ba-155">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="524ba-156">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="524ba-156">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.PivotLayoutLoadOptions): Excel.PivotLayout;'
      return:
        type:
          - excel.Excel.PivotLayout
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.PivotLayoutLoadOptions
  - uid: excel.Excel.PivotLayout.load_1
    summary: <span data-ttu-id="524ba-157">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="524ba-157">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="524ba-158">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="524ba-158">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotLayout;'
      return:
        type:
          - excel.Excel.PivotLayout
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="524ba-159">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="524ba-159">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.PivotLayout.load_2
    summary: <span data-ttu-id="524ba-160">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="524ba-160">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="524ba-161">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="524ba-161">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.PivotLayout;'
      return:
        type:
          - excel.Excel.PivotLayout
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="524ba-162">Wobei propertyNamesAndPaths. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="524ba-162">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.PivotLayout.preserveFormatting
    summary: |-
      <span data-ttu-id="524ba-163">Gibt an, ob die Formatierung beibehalten wird, wenn der Bericht durch Vorgänge wie Pivotieren, Sortieren oder Ändern von Seitenfeldelementen aktualisiert oder neu berechnet wird.</span><span class="sxs-lookup"><span data-stu-id="524ba-163">Specifies whether formatting is preserved when the report is refreshed or recalculated by operations such as pivoting, sorting, or changing page field items.</span></span>

      <span data-ttu-id="524ba-164">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="524ba-164">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: preserveFormatting
    fullName: preserveFormatting
    langs:
      - typeScript
    type: property
    syntax:
      content: 'preserveFormatting: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.PivotLayout.set
    summary: '<span data-ttu-id="524ba-165">Legt mehrere Eigenschaften eines Objekts gleichzeitig fest.</span><span class="sxs-lookup"><span data-stu-id="524ba-165">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="524ba-166">Sie können entweder ein plain-Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs weitergeben.</span><span class="sxs-lookup"><span data-stu-id="524ba-166">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="524ba-167">Diese Methode hat die folgende zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="524ba-167">This method has the following additional signature:</span></span>

      `set(properties: Excel.PivotLayout): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.PivotLayoutUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="524ba-168">Ein JavaScript-Objekt mit Eigenschaften, die isomorphically strukturiert sind, um die Eigenschaften des Objekts, für das die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="524ba-168">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.PivotLayoutUpdateData
        - id: options
          description: '<span data-ttu-id="524ba-169">Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.</span><span class="sxs-lookup"><span data-stu-id="524ba-169">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel.Excel.PivotLayout.set_1
    summary: '<span data-ttu-id="524ba-170">Legt mehrere Eigenschaften für das Objekt auf der Grundlage eines vorhandenen geladenen Objekts zur gleichen Zeit fest.</span><span class="sxs-lookup"><span data-stu-id="524ba-170">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.PivotLayout): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.PivotLayout
  - uid: excel.Excel.PivotLayout.setAutoSortOnCell
    summary: |-
      <span data-ttu-id="524ba-171">Legt fest, dass die PivotTable automatisch mithilfe der angegebenen Zelle sortiert wird, um automatisch alle erforderlichen Kriterien und Kontexte auszuwählen.</span><span class="sxs-lookup"><span data-stu-id="524ba-171">Sets the PivotTable to automatically sort using the specified cell to automatically select all necessary criteria and context.</span></span> <span data-ttu-id="524ba-172">Dies verhält sich identisch mit dem Anwenden einer AutoSortieren von der Benutzeroberfläche.</span><span class="sxs-lookup"><span data-stu-id="524ba-172">This behaves identically to applying an autosort from the UI.</span></span>

      <span data-ttu-id="524ba-173">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="524ba-173">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'setAutoSortOnCell(cell, sortBy)'
    fullName: 'setAutoSortOnCell(cell, sortBy)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAutoSortOnCell(cell: Range | string, sortBy: Excel.SortBy): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cell
          description: <span data-ttu-id="524ba-174">Eine einzelne zu verwendende Zelle Abrufen der Kriterien für die Anwendung der AutoSortieren.</span><span class="sxs-lookup"><span data-stu-id="524ba-174">A single cell to use get the criteria from for applying the autosort.</span></span>
          type:
            - Range | string
        - id: sortBy
          description: <span data-ttu-id="524ba-175">Die Richtung der Sortierung.</span><span class="sxs-lookup"><span data-stu-id="524ba-175">The direction of the sort.</span></span>
          type:
            - excel.Excel.SortBy
  - uid: excel.Excel.PivotLayout.setAutoSortOnCell_1
    summary: |-
      <span data-ttu-id="524ba-176">Legt fest, dass die PivotTable automatisch mithilfe der angegebenen Zelle sortiert wird, um automatisch alle erforderlichen Kriterien und Kontexte auszuwählen.</span><span class="sxs-lookup"><span data-stu-id="524ba-176">Sets the PivotTable to automatically sort using the specified cell to automatically select all necessary criteria and context.</span></span> <span data-ttu-id="524ba-177">Dies verhält sich identisch mit dem Anwenden einer AutoSortieren von der Benutzeroberfläche.</span><span class="sxs-lookup"><span data-stu-id="524ba-177">This behaves identically to applying an autosort from the UI.</span></span>

      <span data-ttu-id="524ba-178">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="524ba-178">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'setAutoSortOnCell(cell, sortByString)'
    fullName: 'setAutoSortOnCell(cell, sortByString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAutoSortOnCell(cell: Range | string, sortByString: "Ascending" | "Descending"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cell
          description: <span data-ttu-id="524ba-179">Eine einzelne zu verwendende Zelle Abrufen der Kriterien für die Anwendung der AutoSortieren.</span><span class="sxs-lookup"><span data-stu-id="524ba-179">A single cell to use get the criteria from for applying the autosort.</span></span>
          type:
            - Range | string
        - id: sortByString
          description: <span data-ttu-id="524ba-180">Die Richtung der Sortierung.</span><span class="sxs-lookup"><span data-stu-id="524ba-180">The direction of the sort.</span></span>
          type:
            - '"Ascending" | "Descending"'
  - uid: excel.Excel.PivotLayout.showColumnGrandTotals
    summary: |-
      <span data-ttu-id="524ba-181">Gibt an, ob im PivotTable-Bericht Gesamtergebnisse für Spalten angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="524ba-181">Specifies whether the PivotTable report shows grand totals for columns.</span></span>

      <span data-ttu-id="524ba-182">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="524ba-182">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showColumnGrandTotals
    fullName: showColumnGrandTotals
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showColumnGrandTotals: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.PivotLayout.showRowGrandTotals
    summary: |-
      <span data-ttu-id="524ba-183">Gibt an, ob im PivotTable-Bericht Gesamtergebnisse für Zeilen angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="524ba-183">Specifies whether the PivotTable report shows grand totals for rows.</span></span>

      <span data-ttu-id="524ba-184">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="524ba-184">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showRowGrandTotals
    fullName: showRowGrandTotals
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showRowGrandTotals: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.PivotLayout.subtotalLocation
    summary: |-
      <span data-ttu-id="524ba-185">Diese Eigenschaft gibt das SubtotalLocationType-Objekt aller Felder in PivotTable an.</span><span class="sxs-lookup"><span data-stu-id="524ba-185">This property indicates the SubtotalLocationType of all fields on the PivotTable.</span></span> <span data-ttu-id="524ba-186">Wenn Felder verschiedenen Status aufweisen, lautet dies NULL.</span><span class="sxs-lookup"><span data-stu-id="524ba-186">If fields have different states, this will be null.</span></span>

      <span data-ttu-id="524ba-187">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="524ba-187">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: subtotalLocation
    fullName: subtotalLocation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subtotalLocation: Excel.SubtotalLocationType | "AtTop" | "AtBottom" | "Off";'
      return:
        type:
          - Excel.SubtotalLocationType | "AtTop" | "AtBottom" | "Off"
  - uid: excel.Excel.PivotLayout.toJSON
    summary: '<span data-ttu-id="524ba-188">ÜberSchreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API-Objekt an`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="524ba-188">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="524ba-189">.</span><span class="sxs-lookup"><span data-stu-id="524ba-189"></span></span> <span data-ttu-id="524ba-190">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="524ba-190"></span></span><!-- --><span data-ttu-id="524ba-191">Ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche Excel. PivotLayout-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt zurück (typisiert als`Excel.Interfaces.PivotLayoutData`</span><span class="sxs-lookup"><span data-stu-id="524ba-191">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.PivotLayout object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotLayoutData`</span></span><!-- --><span data-ttu-id="524ba-192">), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="524ba-192">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotLayoutData;'
      return:
        type:
          - excel.Excel.Interfaces.PivotLayoutData
        description: ''