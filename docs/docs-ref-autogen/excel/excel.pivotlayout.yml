### YamlMime:UniversalReference
ms.openlocfilehash: 35bb424fa2e4b8dec06909acbf51952c8701a94e
ms.sourcegitcommit: 016e17422cf62dc9f1de1809666e9244e41cc1a9
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 11/09/2018
ms.locfileid: "26231195"
items:
- uid: excel.Excel.PivotLayout
  summary: >-
    Das visuelle Layout der PivotTable darstellt.


    \[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.PivotLayout
  fullName: Excel.PivotLayout
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.PivotLayout.getColumnLabelRange
  - excel.Excel.PivotLayout.getDataBodyRange
  - excel.Excel.PivotLayout.getFilterAxisRange
  - excel.Excel.PivotLayout.getRange
  - excel.Excel.PivotLayout.getRowLabelRange
  - excel.Excel.PivotLayout.layoutType
  - excel.Excel.PivotLayout.load
  - excel.Excel.PivotLayout.showColumnGrandTotals
  - excel.Excel.PivotLayout.showRowGrandTotals
  - excel.Excel.PivotLayout.subtotalLocation
  - excel.Excel.PivotLayout.toJSON
- uid: excel.Excel.PivotLayout.getColumnLabelRange
  summary: >-
    Gibt den Bereich, in denen die PivotTable Spaltenüberschriften befinden.


    \[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getColumnLabelRange()
  fullName: getColumnLabelRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getColumnLabelRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.PivotLayout.getDataBodyRange
  summary: >-
    Gibt den Bereich, in denen die PivotTable Datenwerte befinden.


    \[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getDataBodyRange()
  fullName: getDataBodyRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getDataBodyRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\nawait Excel.run(async (context) => {\n    const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem(\"Farm Sales\");\n\n    // the layout controls the ranges used by the PivotTable\n    const range = pivotTable.layout.getDataBodyRange();\n\n    // get all the data hierarchy totals\n    const grandTotalRange = range.getLastRow();\n    grandTotalRange.load(\"address\");\n    await context.sync();\n    \n    // use the wholesale and farm sale totals to make a final sum\n    const masterTotalRange = context.workbook.worksheets.getActiveWorksheet().getRange(\"B27:C27\");\n    masterTotalRange.formulas = [[\"All Crates\", \"=SUM(\" + grandTotalRange.address + \")\"]];\n    await context.sync();\n});\n```"
- uid: excel.Excel.PivotLayout.getFilterAxisRange
  summary: >-
    Gibt den Bereich der Filterbereich der PivotTable zurück.


    \[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getFilterAxisRange()
  fullName: getFilterAxisRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getFilterAxisRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.PivotLayout.getRange
  summary: >-
    Gibt den Bereich die PivotTable, vorhanden ist, ausgenommen Filterbereich zurück.


    \[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getRange()
  fullName: getRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.PivotLayout.getRowLabelRange
  summary: >-
    Gibt den Bereich, in denen die PivotTable zeilenbeschriftungen befinden.


    \[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: getRowLabelRange()
  fullName: getRowLabelRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRowLabelRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: ''
- uid: excel.Excel.PivotLayout.layoutType
  summary: >-
    Diese Eigenschaft gibt die PivotLayoutType aller Felder in der PivotTable an. Wenn Felder unterschiedlichen Zustände haben, wird dieser null sein.


    \[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: layoutType
  fullName: layoutType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'layoutType: Excel.PivotLayoutType | "Compact" | "Tabular" | "Outline";'
    return:
      type:
      - Excel.PivotLayoutType | "Compact" | "Tabular" | "Outline"
- uid: excel.Excel.PivotLayout.load
  summary: Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts. Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.
  remarks: >-
    Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:


    `load(option?: { select?: string; expand?: string; }): Excel.PivotLayout`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotLayout`-Nur auf Auflistungstypen verfügbar. Es ist ähnlich wie die jeweils vorhergehende Signatur. Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können. Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen. Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.PivotLayout;'
    return:
      type:
      - excel.Excel.PivotLayout
      description: ''
    parameters:
    - id: option
      description: Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.
      type:
      - string | string[]
- uid: excel.Excel.PivotLayout.showColumnGrandTotals
  summary: >-
    True, wenn der PivotTable-Bericht Gesamtergebnisse für Spalten summiert.


    \[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: showColumnGrandTotals
  fullName: showColumnGrandTotals
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showColumnGrandTotals: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.PivotLayout.showRowGrandTotals
  summary: >-
    True, wenn der PivotTable-Bericht Gesamtergebnisse für Zeilen angezeigt.


    \[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: showRowGrandTotals
  fullName: showRowGrandTotals
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showRowGrandTotals: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.PivotLayout.subtotalLocation
  summary: >-
    Diese Eigenschaft gibt die SubtotalLocationType aller Felder in der PivotTable an. Wenn Felder unterschiedlichen Zustände haben, wird dieser null sein.


    \[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: subtotalLocation
  fullName: subtotalLocation
  langs:
  - typeScript
  type: property
  syntax:
    content: 'subtotalLocation: Excel.SubtotalLocationType | "AtTop" | "AtBottom" | "Off";'
    return:
      type:
      - Excel.SubtotalLocationType | "AtTop" | "AtBottom" | "Off"
- uid: excel.Excel.PivotLayout.toJSON
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.PivotLayoutData;'
    return:
      type:
      - excel.Excel.Interfaces.PivotLayoutData
      description: ''
