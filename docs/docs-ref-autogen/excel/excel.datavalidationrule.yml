### YamlMime:UniversalReference
ms.openlocfilehash: 6712e4c5006c9284312b16d55686c9b17c103a91
ms.sourcegitcommit: 016e17422cf62dc9f1de1809666e9244e41cc1a9
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 11/09/2018
ms.locfileid: "26220895"
items:
- uid: excel.Excel.DataValidationRule
  summary: >-
    <span data-ttu-id="a5199-101">Daten Überprüfungsregel enthält verschiedene Arten von datenüberprüfung.</span><span class="sxs-lookup"><span data-stu-id="a5199-101">Data validation rule contains different types of data validation.</span></span> <span data-ttu-id="a5199-102">Sie können nur eine der Adressen zu einem Zeitpunkt entsprechend der Excel.DataValidationType verwenden.</span><span class="sxs-lookup"><span data-stu-id="a5199-102">You can only use one of them at a time according the Excel.DataValidationType.</span></span>


    <span data-ttu-id="a5199-103">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a5199-103">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.DataValidationRule
  fullName: Excel.DataValidationRule
  langs:
  - typeScript
  type: interface
  package: excel
  children:
  - excel.Excel.DataValidationRule.custom
  - excel.Excel.DataValidationRule.date
  - excel.Excel.DataValidationRule.decimal
  - excel.Excel.DataValidationRule.list
  - excel.Excel.DataValidationRule.textLength
  - excel.Excel.DataValidationRule.time
  - excel.Excel.DataValidationRule.wholeNumber
- uid: excel.Excel.DataValidationRule.custom
  summary: >-
    <span data-ttu-id="a5199-104">Benutzerdefinierte datenüberprüfungskriterien.</span><span class="sxs-lookup"><span data-stu-id="a5199-104">Custom data validation criteria.</span></span>


    <span data-ttu-id="a5199-105">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a5199-105">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: custom
  fullName: custom
  langs:
  - typeScript
  type: property
  syntax:
    content: 'custom?: Excel.CustomDataValidation;'
    return:
      type:
      - excel.Excel.CustomDataValidation
- uid: excel.Excel.DataValidationRule.date
  summary: >-
    <span data-ttu-id="a5199-106">Datum datenüberprüfungskriterien.</span><span class="sxs-lookup"><span data-stu-id="a5199-106">Date data validation criteria.</span></span>


    <span data-ttu-id="a5199-107">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a5199-107">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: date
  fullName: date
  langs:
  - typeScript
  type: property
  syntax:
    content: 'date?: Excel.DateTimeDataValidation;'
    return:
      type:
      - excel.Excel.DateTimeDataValidation
- uid: excel.Excel.DataValidationRule.decimal
  summary: >-
    <span data-ttu-id="a5199-108">Gültigkeitskriterien Decimal-Datentyp.</span><span class="sxs-lookup"><span data-stu-id="a5199-108">Decimal data validation criteria.</span></span>


    <span data-ttu-id="a5199-109">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a5199-109">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: decimal
  fullName: decimal
  langs:
  - typeScript
  type: property
  syntax:
    content: 'decimal?: Excel.BasicDataValidation;'
    return:
      type:
      - excel.Excel.BasicDataValidation
- uid: excel.Excel.DataValidationRule.list
  summary: >-
    <span data-ttu-id="a5199-110">Liste datenüberprüfungskriterien.</span><span class="sxs-lookup"><span data-stu-id="a5199-110">List data validation criteria.</span></span>


    <span data-ttu-id="a5199-111">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a5199-111">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: list
  fullName: list
  langs:
  - typeScript
  type: property
  syntax:
    content: 'list?: Excel.ListDataValidation;'
    return:
      type:
      - excel.Excel.ListDataValidation
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"a5199-112\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5199-112\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Decision\");\n    const nameRange = \n        sheet.tables.getItem(\"NameOptionsTable\").columns.getItem(\"Baby Name\").getDataBodyRange();\n\n    // When you are developing, it is a good practice to\n    // clear the dataValidation object with each run of your code.\n    nameRange.dataValidation.clear();\n\n    const nameSourceRange = context.workbook.worksheets.getItem(\"Names\").getRange(\"A1:A3\");\n\n    let approvedListRule = {\n        list: {\n            inCellDropDown: true,\n            source: '=Names!$A$1:$A$3'\n        }\n    };\n    nameRange.dataValidation.rule = approvedListRule;\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.DataValidationRule.textLength
  summary: >-
    <span data-ttu-id="a5199-113">TextLength datenüberprüfungskriterien.</span><span class="sxs-lookup"><span data-stu-id="a5199-113">TextLength data validation criteria.</span></span>


    <span data-ttu-id="a5199-114">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a5199-114">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: textLength
  fullName: textLength
  langs:
  - typeScript
  type: property
  syntax:
    content: 'textLength?: Excel.BasicDataValidation;'
    return:
      type:
      - excel.Excel.BasicDataValidation
- uid: excel.Excel.DataValidationRule.time
  summary: >-
    <span data-ttu-id="a5199-115">Zeit datenüberprüfungskriterien.</span><span class="sxs-lookup"><span data-stu-id="a5199-115">Time data validation criteria.</span></span>


    <span data-ttu-id="a5199-116">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a5199-116">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: time
  fullName: time
  langs:
  - typeScript
  type: property
  syntax:
    content: 'time?: Excel.DateTimeDataValidation;'
    return:
      type:
      - excel.Excel.DateTimeDataValidation
- uid: excel.Excel.DataValidationRule.wholeNumber
  summary: >-
    <span data-ttu-id="a5199-117">WholeNumber datenüberprüfungskriterien.</span><span class="sxs-lookup"><span data-stu-id="a5199-117">WholeNumber data validation criteria.</span></span>


    <span data-ttu-id="a5199-118">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a5199-118">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: wholeNumber
  fullName: wholeNumber
  langs:
  - typeScript
  type: property
  syntax:
    content: 'wholeNumber?: Excel.BasicDataValidation;'
    return:
      type:
      - excel.Excel.BasicDataValidation
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"a5199-119\">Examples</span><span class=\"sxs-lookup\"><span data-stu-id=\"a5199-119\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Decision\");\n    const rankingRange = sheet.tables.getItem(\"NameOptionsTable\").columns.getItem(\"Ranking\").getDataBodyRange();\n\n    // When you are developing, it is a good practice to\n    // clear the dataValidation object with each run of your code.\n    rankingRange.dataValidation.clear();\n\n    let greaterThanZeroRule = {\n        wholeNumber: {\n            formula1: 0,\n            operator: Excel.DataValidationOperator.greaterThan\n        }\n    };\n    rankingRange.dataValidation.rule = greaterThanZeroRule;\n\n    rankingRange.dataValidation.prompt = {\n        message: \"Please enter a positive number.\",\n        showPrompt: true,\n        title: \"Positive numbers only.\"\n    };\n\n    rankingRange.dataValidation.errorAlert = {\n        message: \"Sorry, only positive numbers are allowed\",\n        showAlert: true,\n        style: \"Stop\",\n        title: \"Negative Number Entered\"\n    };\n\n    await context.sync();\n});\n```"
