### YamlMime:UniversalReference
ms.openlocfilehash: 86c46a0227d1029e4b8d878d5badf331a8d437a5
ms.sourcegitcommit: 3f4a320fa860d05d348c8bdec2295e046a45a34f
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/07/2019
ms.locfileid: "29770009"
items:
- uid: excel.Excel.CustomConditionalFormat
  summary: >-
    <span data-ttu-id="b6d83-101">Stellt einen benutzerdefinierten bedingten Formattyp dar.</span><span class="sxs-lookup"><span data-stu-id="b6d83-101">Represents a custom conditional format type.</span></span>


    <span data-ttu-id="b6d83-102">\[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b6d83-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.CustomConditionalFormat
  fullName: Excel.CustomConditionalFormat
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.CustomConditionalFormat.context
  - excel.Excel.CustomConditionalFormat.format
  - excel.Excel.CustomConditionalFormat.load
  - excel.Excel.CustomConditionalFormat.rule
  - excel.Excel.CustomConditionalFormat.set
  - excel.Excel.CustomConditionalFormat.toJSON
- uid: excel.Excel.CustomConditionalFormat.context
  summary: <span data-ttu-id="b6d83-103">Der Anforderungskontext-zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="b6d83-103">The request context associated with the object.</span></span> <span data-ttu-id="b6d83-104">Dadurch wird das Add-in Prozess mit der Office-hostanwendung Prozess verbunden.</span><span class="sxs-lookup"><span data-stu-id="b6d83-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.CustomConditionalFormat.format
  summary: >-
    <span data-ttu-id="b6d83-p102">Gibt ein Formatobjekt zurück, das die Schriftart, die Füllung, den Rahmen und andere Eigenschaften bedingter Formate kapselt. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b6d83-p102">Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties. Read-only.</span></span>


    <span data-ttu-id="b6d83-107">\[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b6d83-107">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: format
  fullName: format
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly format: Excel.ConditionalRangeFormat;'
    return:
      type:
      - excel.Excel.ConditionalRangeFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"b6d83-108\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"b6d83-108\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats.add(Excel.ConditionalFormatType.custom);\n    conditionalFormat.custom.rule.formula = '=IF(B8>INDIRECT(\"RC[-1]\",0),TRUE)';\n    conditionalFormat.custom.format.font.color = \"green\";\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.CustomConditionalFormat.load
  summary: <span data-ttu-id="b6d83-109">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="b6d83-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b6d83-110">Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="b6d83-110">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="b6d83-111">Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="b6d83-111">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="b6d83-112">`load(option?: { select?: string; expand?: string; }): Excel.CustomConditionalFormat`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class="sxs-lookup"><span data-stu-id="b6d83-112">`load(option?: { select?: string; expand?: string; }): Excel.CustomConditionalFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="b6d83-113">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.CustomConditionalFormat`-Nur auf Auflistungstypen verfügbar.</span><span class="sxs-lookup"><span data-stu-id="b6d83-113">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.CustomConditionalFormat` - Only available on collection types.</span></span> <span data-ttu-id="b6d83-114">Es ist ähnlich wie die jeweils vorhergehende Signatur.</span><span class="sxs-lookup"><span data-stu-id="b6d83-114">It is similar to the preceding signature.</span></span> <span data-ttu-id="b6d83-115">Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können.</span><span class="sxs-lookup"><span data-stu-id="b6d83-115">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="b6d83-116">Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="b6d83-116">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="b6d83-117">Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.</span><span class="sxs-lookup"><span data-stu-id="b6d83-117">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.CustomConditionalFormat;'
    return:
      type:
      - excel.Excel.CustomConditionalFormat
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="b6d83-118">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="b6d83-118">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.CustomConditionalFormat.rule
  summary: >-
    <span data-ttu-id="b6d83-p105">Stellt das Regelobjekt in diesem bedingten Format dar. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b6d83-p105">Represents the Rule object on this conditional format. Read-only.</span></span>


    <span data-ttu-id="b6d83-121">\[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b6d83-121">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: rule
  fullName: rule
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly rule: Excel.ConditionalFormatRule;'
    return:
      type:
      - excel.Excel.ConditionalFormatRule
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"b6d83-122\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"b6d83-122\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) {\n    var sheet = ctx.workbook.worksheets.getActiveWorksheet();\n    var range = sheet.getRange(\"A1:A5\");\n    range.values = [[1], [20], [\"\"], [5], [\"test\"]];\n    var cf = range.conditionalFormats.add(Excel.ConditionalFormatType.custom);\n    var cfCustom = cf.customOrNullObject;\n    cfCustom.rule.formula = \"=ISBLANK(A1)\";\n    cfCustom.format.fill.color = \"#00FF00\";\n    return ctx.sync().then(function () {\n        console.log(\"Added new custom conditional format highlighting all blank cells.\");\n    });\n}).catch(function (error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.CustomConditionalFormat.set
  summary: <span data-ttu-id="b6d83-123">Legt mehrere Eigenschaften eines Objekts zur selben Zeit fest.</span><span class="sxs-lookup"><span data-stu-id="b6d83-123">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="b6d83-124">Sie können entweder eine einfache-Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt des gleichen Typs übergeben.</span><span class="sxs-lookup"><span data-stu-id="b6d83-124">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="b6d83-125">Diese Methode hat die folgenden zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="b6d83-125">This method has the following additional signature:</span></span>


    `set(properties: Excel.CustomConditionalFormat): void`
  name: set(properties, options)
  fullName: set
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.CustomConditionalFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="b6d83-126">Ein JavaScript-Objekt mit Eigenschaften, die an die Eigenschaften des Objekts isomorphically strukturiert werden, auf denen die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="b6d83-126">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.CustomConditionalFormatUpdateData
    - id: options
      description: <span data-ttu-id="b6d83-127">Bietet eine Option, um Fehler zu unterdrücken, wenn schreibgeschützte Eigenschaften festgelegt werden, versucht das Properties-Objekt.</span><span class="sxs-lookup"><span data-stu-id="b6d83-127">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.CustomConditionalFormat.toJSON
  summary: <span data-ttu-id="b6d83-128">Überschreibt das JavaScript `toJSON()` Methode, um nützliche Ausgabe zu gewährleisten, wenn ein API-Objekt zu übergeben ist `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="b6d83-128">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="b6d83-129">(`JSON.stringify`<!-- -->, wiederum die `toJSON` -Methode des Objekts, das es übergeben wird.) Das ursprüngliche Excel.CustomConditionalFormat-Objekt ist ein API-Objekt der `toJSON` -Methode gibt eine einfache JavaScript-Objekt zurück (als `Excel.Interfaces.CustomConditionalFormatData` <!-- -->), die flache Kopien der geladene untergeordnete Eigenschaften aus dem ursprünglichen-Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="b6d83-129">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.CustomConditionalFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.CustomConditionalFormatData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.CustomConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.CustomConditionalFormatData
      description: ''
