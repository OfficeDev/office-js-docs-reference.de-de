### YamlMime:UniversalReference
ms.openlocfilehash: a41edc965ba9c851c79e52642a5a024a7f37eed5
ms.sourcegitcommit: 06eebee5e68d349f78e6bc3bb0ef099fe063cf04
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 01/17/2019
ms.locfileid: "28725487"
items:
- uid: excel.Excel.TableColumn
  summary: >-
    <span data-ttu-id="44191-101">Stellt eine Spalte in einer Tabelle dar.</span><span class="sxs-lookup"><span data-stu-id="44191-101">Represents a column in a table.</span></span>


    <span data-ttu-id="44191-102">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="44191-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.TableColumn
  fullName: Excel.TableColumn
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.TableColumn.context
  - excel.Excel.TableColumn.delete
  - excel.Excel.TableColumn.filter
  - excel.Excel.TableColumn.getDataBodyRange
  - excel.Excel.TableColumn.getHeaderRowRange
  - excel.Excel.TableColumn.getRange
  - excel.Excel.TableColumn.getTotalRowRange
  - excel.Excel.TableColumn.id
  - excel.Excel.TableColumn.index
  - excel.Excel.TableColumn.load
  - excel.Excel.TableColumn.name
  - excel.Excel.TableColumn.toJSON
  - excel.Excel.TableColumn.values
- uid: excel.Excel.TableColumn.context
  summary: <span data-ttu-id="44191-103">Der Anforderungskontext-zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="44191-103">The request context associated with the object.</span></span> <span data-ttu-id="44191-104">Dadurch wird das Add-in Prozess mit der Office-hostanwendung Prozess verbunden.</span><span class="sxs-lookup"><span data-stu-id="44191-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.TableColumn.delete
  summary: >-
    <span data-ttu-id="44191-105">Löscht die Spalte aus der Tabelle.</span><span class="sxs-lookup"><span data-stu-id="44191-105">Deletes the column from the table.</span></span>


    <span data-ttu-id="44191-106">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="44191-106">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"44191-107\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"44191-107\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(2);\n    column.delete();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.TableColumn.filter
  summary: >-
    <span data-ttu-id="44191-p102">Ruft den auf die Salte angewendeten Filter ab. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="44191-p102">Retrieve the filter applied to the column. Read-only.</span></span>


    <span data-ttu-id="44191-110">\[[API-Satz: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="44191-110">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: filter
  fullName: filter
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly filter: Excel.Filter;'
    return:
      type:
      - excel.Excel.Filter
- uid: excel.Excel.TableColumn.getDataBodyRange
  summary: >-
    <span data-ttu-id="44191-111">Ruft das Bereichsobjekt ab, das mit dem Datenteil der Spalte verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="44191-111">Gets the range object associated with the data body of the column.</span></span>


    <span data-ttu-id="44191-112">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="44191-112">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getDataBodyRange()
  fullName: getDataBodyRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getDataBodyRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"44191-113\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"44191-113\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);\n    var dataBodyRange = column.getDataBodyRange();\n    dataBodyRange.load('address');\n    return ctx.sync().then(function() {\n        console.log(dataBodyRange.address);\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.TableColumn.getHeaderRowRange
  summary: >-
    <span data-ttu-id="44191-114">Ruft das Bereichsobjekt ab, das mit der Überschriftenzeile der Spalte verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="44191-114">Gets the range object associated with the header row of the column.</span></span>


    <span data-ttu-id="44191-115">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="44191-115">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getHeaderRowRange()
  fullName: getHeaderRowRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getHeaderRowRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"44191-116\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"44191-116\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);\n    var headerRowRange = columns.getHeaderRowRange();\n    headerRowRange.load('address');\n    return ctx.sync().then(function() {\n        console.log(headerRowRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.TableColumn.getRange
  summary: >-
    <span data-ttu-id="44191-117">Ruft das Bereichsobjekt ab, das mit der gesamten Spalte verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="44191-117">Gets the range object associated with the entire column.</span></span>


    <span data-ttu-id="44191-118">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="44191-118">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRange()
  fullName: getRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"44191-119\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"44191-119\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);\n    var columnRange = columns.getRange();\n    columnRange.load('address');\n    return ctx.sync().then(function() {\n        console.log(columnRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.TableColumn.getTotalRowRange
  summary: >-
    <span data-ttu-id="44191-120">Ruft das Bereichsobjekt ab, das mit der Ergebniszeile der Spalte verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="44191-120">Gets the range object associated with the totals row of the column.</span></span>


    <span data-ttu-id="44191-121">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="44191-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getTotalRowRange()
  fullName: getTotalRowRange
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTotalRowRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"44191-122\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"44191-122\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);\n    var totalRowRange = columns.getTotalRowRange();\n    totalRowRange.load('address');\n    return ctx.sync().then(function() {\n        console.log(totalRowRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.TableColumn.id
  summary: >-
    <span data-ttu-id="44191-p103">Gibt einen eindeutigen Schlüssel an, der die Spalte in der Tabelle angibt. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="44191-p103">Returns a unique key that identifies the column within the table. Read-only.</span></span>


    <span data-ttu-id="44191-125">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="44191-125">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: number;'
    return:
      type:
      - number
- uid: excel.Excel.TableColumn.index
  summary: >-
    <span data-ttu-id="44191-p104">Gibt die Indexnummer der Spalte in der Spaltenauflistung der Tabelle zurück. Nullindiziert. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="44191-p104">Returns the index number of the column within the columns collection of the table. Zero-indexed. Read-only.</span></span>


    <span data-ttu-id="44191-129">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="44191-129">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: index
  fullName: index
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly index: number;'
    return:
      type:
      - number
- uid: excel.Excel.TableColumn.load
  summary: <span data-ttu-id="44191-130">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="44191-130">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="44191-131">Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="44191-131">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"44191-132\">Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:</span><span class=\"sxs-lookup\"><span data-stu-id=\"44191-132\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"44191-133\">`load(option?: { select?: string; expand?: string; }): Excel.TableColumn`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"44191-133\">`load(option?: { select?: string; expand?: string; }): Excel.TableColumn` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"44191-134\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumn`-Nur auf Auflistungstypen verfügbar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"44191-134\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumn` - Only available on collection types.</span></span> <span data-ttu-id=\"44191-135\">Es ist ähnlich wie die jeweils vorhergehende Signatur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"44191-135\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"44191-136\">Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können.</span><span class=\"sxs-lookup\"><span data-stu-id=\"44191-136\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"44191-137\">Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"44191-137\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"44191-138\">Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.</span><span class=\"sxs-lookup\"><span data-stu-id=\"44191-138\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"44191-139\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"44191-139\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var column = ctx.workbook.tables.getItem(tableName).columns.getItem(0);\n    column.load('index');\n    return ctx.sync().then(function() {\n        console.log(column.index);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var tables = ctx.workbook.tables;\n    var newValues = [[\"New\"], [\"Values\"], [\"For\"], [\"New\"], [\"Column\"]];\n    var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(2);\n    column.values = newValues;\n    column.load('values');\n    return ctx.sync().then(function() {\n        console.log(column.values);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.TableColumn;'
    return:
      type:
      - excel.Excel.TableColumn
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="44191-140">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="44191-140">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.TableColumn.name
  summary: >-
    <span data-ttu-id="44191-141">Gibt den Namen der Tabellenspalte zurück.</span><span class="sxs-lookup"><span data-stu-id="44191-141">Represents the name of the table column.</span></span>


    <span data-ttu-id="44191-142">\[[API-Satz: ExcelApi 1.1 zum Abrufen des Namens; 1.4 zum Festlegen von darauf verweisen](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span><span class="sxs-lookup"><span data-stu-id="44191-142">\[ [API set: ExcelApi 1.1 for getting the name; 1.4 for setting it.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id="44191-143">\]</span><span class="sxs-lookup"><span data-stu-id="44191-143"></span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
- uid: excel.Excel.TableColumn.toJSON
  summary: <span data-ttu-id="44191-144">Überschreibt das JavaScript `toJSON()` Methode, um nützliche Ausgabe zu gewährleisten, wenn ein API-Objekt zu übergeben ist `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="44191-144">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="44191-145">(`JSON.stringify`<!-- -->, wiederum die `toJSON` -Methode des Objekts, das es übergeben wird.) Das ursprüngliche Excel.TableColumn-Objekt ist ein API-Objekt der `toJSON` -Methode gibt eine einfache JavaScript-Objekt zurück (als `Excel.Interfaces.TableColumnData` <!-- -->), die flache Kopien der geladene untergeordnete Eigenschaften aus dem ursprünglichen-Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="44191-145">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.TableColumn object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableColumnData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableColumnData;'
    return:
      type:
      - excel.Excel.Interfaces.TableColumnData
      description: ''
- uid: excel.Excel.TableColumn.values
  summary: >-
    <span data-ttu-id="44191-146">Die unformatierten Werte des angegebenen Bereichs darstellt.</span><span class="sxs-lookup"><span data-stu-id="44191-146">Represents the raw values of the specified range.</span></span> <span data-ttu-id="44191-147">Die zurückgegebenen Daten konnte vom Typ String, Nummer oder ein boolescher Wert sein.</span><span class="sxs-lookup"><span data-stu-id="44191-147">The data returned could be of type string, number, or a boolean.</span></span> <span data-ttu-id="44191-148">Zellen, die Fehler enthalten, gibt die Fehlerzeichenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="44191-148">Cells that contain an error will return the error string.</span></span>


    <span data-ttu-id="44191-149">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="44191-149">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: values
  fullName: values
  langs:
  - typeScript
  type: property
  syntax:
    content: 'values: any[][];'
    return:
      type:
      - any[][]
