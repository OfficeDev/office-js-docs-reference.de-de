### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Slicer
    summary: |-
      <span data-ttu-id="15519-101">Stellt ein Slicer-Objekt in der Arbeitsmappe dar.</span><span class="sxs-lookup"><span data-stu-id="15519-101">Represents a slicer object in the workbook.</span></span>

      <span data-ttu-id="15519-102">\[[API-Gruppe: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="15519-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: Excel.Slicer
    fullName: Excel.Slicer
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.Slicer.caption
      - excel.Excel.Slicer.clearFilters
      - excel.Excel.Slicer.context
      - excel.Excel.Slicer.delete
      - excel.Excel.Slicer.getSelectedItems
      - excel.Excel.Slicer.height
      - excel.Excel.Slicer.id
      - excel.Excel.Slicer.isFilterCleared
      - excel.Excel.Slicer.left
      - excel.Excel.Slicer.load
      - excel.Excel.Slicer.load_1
      - excel.Excel.Slicer.load_2
      - excel.Excel.Slicer.name
      - excel.Excel.Slicer.nameInFormula
      - excel.Excel.Slicer.selectItems
      - excel.Excel.Slicer.set
      - excel.Excel.Slicer.set_1
      - excel.Excel.Slicer.slicerItems
      - excel.Excel.Slicer.sortBy
      - excel.Excel.Slicer.style
      - excel.Excel.Slicer.toJSON
      - excel.Excel.Slicer.top
      - excel.Excel.Slicer.width
      - excel.Excel.Slicer.worksheet
  - uid: excel.Excel.Slicer.caption
    summary: |-
      <span data-ttu-id="15519-103">Stellt die Beschriftung eines Datenschnitts dar.</span><span class="sxs-lookup"><span data-stu-id="15519-103">Represents the caption of slicer.</span></span>

      <span data-ttu-id="15519-104">\[[API-Gruppe: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="15519-104">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: caption
    fullName: caption
    langs:
      - typeScript
    type: property
    syntax:
      content: 'caption: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Slicer.clearFilters
    summary: |-
      <span data-ttu-id="15519-105">Löscht alle Filter, die derzeit für den Datenschnitt verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="15519-105">Clears all the filters currently applied on the slicer.</span></span>

      <span data-ttu-id="15519-106">\[[API-Gruppe: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="15519-106">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: clearFilters()
    fullName: clearFilters()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearFilters(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="15519-107">Beispiele</span><span class="sxs-lookup"><span data-stu-id="15519-107">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const slicer = context.workbook.slicers.getItem("Fruit Slicer");
              slicer.clearFilters();
              await context.sync();
          });
          ```
  - uid: excel.Excel.Slicer.context
    summary: '<span data-ttu-id="15519-108">Der Anforderungskontext, der mit dem Objekt verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="15519-108">The request context associated with the object.</span></span> <span data-ttu-id="15519-109">Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="15519-109">This connects the add-in''s process to the Office host application''s process.</span></span>'
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.Slicer.delete
    summary: |-
      <span data-ttu-id="15519-110">Löscht den Datenschnitt.</span><span class="sxs-lookup"><span data-stu-id="15519-110">Deletes the slicer.</span></span>

      <span data-ttu-id="15519-111">\[[API-Gruppe: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="15519-111">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="15519-112">Beispiele</span><span class="sxs-lookup"><span data-stu-id="15519-112">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getActiveWorksheet();
              sheet.slicers.getItemAt(0).delete();
              await context.sync();
          });
          ```
  - uid: excel.Excel.Slicer.getSelectedItems
    summary: |-
      <span data-ttu-id="15519-113">Gibt ein Array mit den Schlüsseln der ausgewählten Elemente zurück.</span><span class="sxs-lookup"><span data-stu-id="15519-113">Returns an array of selected items' keys.</span></span> <span data-ttu-id="15519-114">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="15519-114">Read-only.</span></span>

      <span data-ttu-id="15519-115">\[[API-Gruppe: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="15519-115">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getSelectedItems()
    fullName: getSelectedItems()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedItems(): OfficeExtension.ClientResult<string[]>;'
      return:
        type:
          - 'OfficeExtension.ClientResult<string[]>'
        description: ''
  - uid: excel.Excel.Slicer.height
    summary: |-
      <span data-ttu-id="15519-116">Stellt die Höhe des Datenschnitts in typografischen Punkten dar.</span><span class="sxs-lookup"><span data-stu-id="15519-116">Represents the height, in points, of the slicer.</span></span> <span data-ttu-id="15519-117">Löst eine ungültige Argumentausnahme bei Festlegung mit negativem Wert oder 0 (null) als Eingabe aus.</span><span class="sxs-lookup"><span data-stu-id="15519-117">Throws an invalid argument exception when set with negative value or zero as input.</span></span>

      <span data-ttu-id="15519-118">\[[API-Gruppe: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="15519-118">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: height
    fullName: height
    langs:
      - typeScript
    type: property
    syntax:
      content: 'height: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Slicer.id
    summary: |-
      <span data-ttu-id="15519-119">Stellt die eindeutige ID des Datenschnitts dar.</span><span class="sxs-lookup"><span data-stu-id="15519-119">Represents the unique id of slicer.</span></span> <span data-ttu-id="15519-120">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="15519-120">Read-only.</span></span>

      <span data-ttu-id="15519-121">\[[API-Gruppe: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="15519-121">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Slicer.isFilterCleared
    summary: |-
      <span data-ttu-id="15519-122">True, wenn alle derzeit auf den Datenschnitt angewendeten Filter gelöscht sind.</span><span class="sxs-lookup"><span data-stu-id="15519-122">True if all filters currently applied on the slicer are cleared.</span></span>

      <span data-ttu-id="15519-123">\[[API-Gruppe: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="15519-123">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: isFilterCleared
    fullName: isFilterCleared
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isFilterCleared: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Slicer.left
    summary: |-
      <span data-ttu-id="15519-124">Stellt den Abstand in Punkt von der linken Seite des Datenschnitts zur linken Seite des Arbeitsblatts dar.</span><span class="sxs-lookup"><span data-stu-id="15519-124">Represents the distance, in points, from the left side of the slicer to the left of the worksheet.</span></span> <span data-ttu-id="15519-125">Löst eine ungültige Argumentausnahme bei Festlegung mit negativem Wert als Eingabe aus.</span><span class="sxs-lookup"><span data-stu-id="15519-125">Throws an invalid argument exception when set with negative value as input.</span></span>

      <span data-ttu-id="15519-126">\[[API-Gruppe: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="15519-126">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: left
    fullName: left
    langs:
      - typeScript
    type: property
    syntax:
      content: 'left: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Slicer.load
    summary: <span data-ttu-id="15519-127">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="15519-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="15519-128">Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.</span><span class="sxs-lookup"><span data-stu-id="15519-128">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="15519-129">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="15519-129">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="15519-130">`load(option?: string | string[]): Excel.Slicer`-Wobei Option eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="15519-130">`load(option?: string | string[]): Excel.Slicer` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="15519-131">`load(option?: { select?: string; expand?: string; }): Excel.Slicer`-Bei Option. Select handelt es sich um eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="15519-131">`load(option?: { select?: string; expand?: string; }): Excel.Slicer` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="15519-132">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Slicer`Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="15519-132">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Slicer` - Only available on collection types.</span></span> <span data-ttu-id="15519-133">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="15519-133">It is similar to the preceding signature.</span></span> <span data-ttu-id="15519-134">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis einbezogen werden können.</span><span class="sxs-lookup"><span data-stu-id="15519-134">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="15519-135">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="15519-135">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="15519-136">Wenn Option. Top angegeben ist, wird das Resultset gestartet, nachdem die angegebene Anzahl von Elementen übersprungen wurde.</span><span class="sxs-lookup"><span data-stu-id="15519-136">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.SlicerLoadOptions): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.SlicerLoadOptions
  - uid: excel.Excel.Slicer.load_1
    summary: <span data-ttu-id="15519-137">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="15519-137">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="15519-138">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="15519-138">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="15519-139">Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="15519-139">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.Slicer.load_2
    summary: <span data-ttu-id="15519-140">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="15519-140">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="15519-141">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="15519-141">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="15519-142">Dabei ist propertyNamesAndPaths. Select eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="15519-142">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.Slicer.name
    summary: |-
      <span data-ttu-id="15519-143">Stellt den Namen des Datenschnitts dar.</span><span class="sxs-lookup"><span data-stu-id="15519-143">Represents the name of slicer.</span></span>

      <span data-ttu-id="15519-144">\[[API-Gruppe: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="15519-144">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Slicer.nameInFormula
    summary: |-
      <span data-ttu-id="15519-145">Stellt den in der Formel verwendeten Namen des Datenschnitts dar.</span><span class="sxs-lookup"><span data-stu-id="15519-145">Represents the slicer name used in the formula.</span></span>

      <span data-ttu-id="15519-146">\[[API-Gruppe: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="15519-146">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: nameInFormula
    fullName: nameInFormula
    langs:
      - typeScript
    type: property
    syntax:
      content: 'nameInFormula: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Slicer.selectItems
    summary: |-
      <span data-ttu-id="15519-147">Wählt Datenschnittelemente anhand ihrer Schlüssel aus.</span><span class="sxs-lookup"><span data-stu-id="15519-147">Select slicer items based on their keys.</span></span> <span data-ttu-id="15519-148">Die vorherige Auswahl wird gelöscht.</span><span class="sxs-lookup"><span data-stu-id="15519-148">Previous selection will be cleared.</span></span> <span data-ttu-id="15519-149">Alle Elemente werden standardmäßig ausgewählt, wenn das Array leer ist.</span><span class="sxs-lookup"><span data-stu-id="15519-149">All items will be selected by default if the array is empty.</span></span>

      <span data-ttu-id="15519-150">\[[API-Gruppe: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="15519-150">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: selectItems(items)
    fullName: selectItems(items)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'selectItems(items?: string[]): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="15519-151">Beispiele</span><span class="sxs-lookup"><span data-stu-id="15519-151">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const slicer = context.workbook.slicers.getItem("Fruit Slicer");
              slicer.selectItems(["Lemon", "Lime", "Orange"]);
              await context.sync();
          });
          ```
      parameters:
        - id: items
          description: '<span data-ttu-id="15519-152">Optional.</span><span class="sxs-lookup"><span data-stu-id="15519-152">Optional.</span></span> <span data-ttu-id="15519-153">Die angegebenen datenschnitt Elementnamen, die ausgewählt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="15519-153">The specified slicer item names to be selected.</span></span>'
          type:
            - 'string[]'
  - uid: excel.Excel.Slicer.set
    summary: '<span data-ttu-id="15519-154">Legt mehrere Eigenschaften eines Objekts gleichzeitig fest.</span><span class="sxs-lookup"><span data-stu-id="15519-154">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="15519-155">Sie können entweder ein einfaches Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs übergeben.</span><span class="sxs-lookup"><span data-stu-id="15519-155">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="15519-156">Diese Methode hat die folgende zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="15519-156">This method has the following additional signature:</span></span>

      `set(properties: Excel.Slicer): void`
    isPreview: true
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.SlicerUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="15519-157">Ein JavaScript-Objekt mit Eigenschaften, die isomorphically für die Eigenschaften des Objekts strukturiert sind, für das die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="15519-157">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.SlicerUpdateData
        - id: options
          description: '<span data-ttu-id="15519-158">Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.</span><span class="sxs-lookup"><span data-stu-id="15519-158">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel.Excel.Slicer.set_1
    summary: '<span data-ttu-id="15519-159">Legt mehrere Eigenschaften für das Objekt gleichzeitig basierend auf einem vorhandenen geladenen Objekt fest.</span><span class="sxs-lookup"><span data-stu-id="15519-159">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    isPreview: true
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Slicer): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.Slicer
  - uid: excel.Excel.Slicer.slicerItems
    summary: |-
      <span data-ttu-id="15519-160">Stellt die Sammlung von SlicerItems dar, die Teil des Datenschnitts sind.</span><span class="sxs-lookup"><span data-stu-id="15519-160">Represents the collection of SlicerItems that are part of the slicer.</span></span> <span data-ttu-id="15519-161">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="15519-161">Read-only.</span></span>

      <span data-ttu-id="15519-162">\[[API-Gruppe: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="15519-162">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: slicerItems
    fullName: slicerItems
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly slicerItems: Excel.SlicerItemCollection;'
      return:
        type:
          - excel.Excel.SlicerItemCollection
  - uid: excel.Excel.Slicer.sortBy
    summary: |-
      <span data-ttu-id="15519-163">Stellt die Sortierreihenfolge der Elemente im Datenschnitt dar.</span><span class="sxs-lookup"><span data-stu-id="15519-163">Represents the sort order of the items in the slicer.</span></span> <span data-ttu-id="15519-164">Die möglichen Werte sind: DataSourceOrder, aufsteigend, absteigend.</span><span class="sxs-lookup"><span data-stu-id="15519-164">Possible values are: DataSourceOrder, Ascending, Descending.</span></span>

      <span data-ttu-id="15519-165">\[[API-Gruppe: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="15519-165">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: sortBy
    fullName: sortBy
    langs:
      - typeScript
    type: property
    syntax:
      content: 'sortBy: Excel.SlicerSortType | "DataSourceOrder" | "Ascending" | "Descending";'
      return:
        type:
          - Excel.SlicerSortType | "DataSourceOrder" | "Ascending" | "Descending"
  - uid: excel.Excel.Slicer.style
    summary: |-
      <span data-ttu-id="15519-166">Konstanter Wert, der das Format des Datenschnitts darstellt.</span><span class="sxs-lookup"><span data-stu-id="15519-166">Constant value that represents the Slicer style.</span></span> <span data-ttu-id="15519-167">Mögliche Werte sind: "SlicerStyleLight1" bis "SlicerStyleLight6", "TableStyleOther1" bis "TableStyleOther2", "SlicerStyleDark1" bis "SlicerStyleDark6".</span><span class="sxs-lookup"><span data-stu-id="15519-167">Possible values are: "SlicerStyleLight1" through "SlicerStyleLight6", "TableStyleOther1" through "TableStyleOther2", "SlicerStyleDark1" through "SlicerStyleDark6".</span></span> <span data-ttu-id="15519-168">Es kann ebenfalls eine in der Arbeitsmappe vorhandene benutzerdefinierte Formatierung angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="15519-168">A custom user-defined style present in the workbook can also be specified.</span></span>

      <span data-ttu-id="15519-169">\[[API-Gruppe: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="15519-169">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="15519-170">Beispiele</span><span class="sxs-lookup"><span data-stu-id="15519-170">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const slicer = context.workbook.slicers.getItem("Fruit Slicer");
              slicer.style = "SlicerStyleLight6";
              await context.sync();
          });
          ```
  - uid: excel.Excel.Slicer.toJSON
    summary: '<span data-ttu-id="15519-171">Überschreibt die `toJSON()` JavaScript-Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird.`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="15519-171">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="15519-172">.</span><span class="sxs-lookup"><span data-stu-id="15519-172"></span></span> <span data-ttu-id="15519-173">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="15519-173"></span></span><!-- --><span data-ttu-id="15519-174">wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche Excel. Slicer-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`Excel.Interfaces.SlicerData`</span><span class="sxs-lookup"><span data-stu-id="15519-174">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Slicer object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SlicerData`</span></span><!-- --><span data-ttu-id="15519-175">), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="15519-175">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SlicerData;'
      return:
        type:
          - excel.Excel.Interfaces.SlicerData
        description: ''
  - uid: excel.Excel.Slicer.top
    summary: |-
      <span data-ttu-id="15519-176">Stellt den Abstand in Punkt von der Oberkante des Datenschnitts zur Oberkante des Arbeitsblatts dar.</span><span class="sxs-lookup"><span data-stu-id="15519-176">Represents the distance, in points, from the top edge of the slicer to the top of the worksheet.</span></span> <span data-ttu-id="15519-177">Löst eine ungültige Argumentausnahme bei Festlegung mit negativem Wert als Eingabe aus.</span><span class="sxs-lookup"><span data-stu-id="15519-177">Throws an invalid argument exception when set with negative value as input.</span></span>

      <span data-ttu-id="15519-178">\[[API-Gruppe: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="15519-178">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: top
    fullName: top
    langs:
      - typeScript
    type: property
    syntax:
      content: 'top: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Slicer.width
    summary: |-
      <span data-ttu-id="15519-179">Die Breite des Datenschnitts in Punkten.</span><span class="sxs-lookup"><span data-stu-id="15519-179">Represents the width, in points, of the slicer.</span></span> <span data-ttu-id="15519-180">Löst eine ungültige Argumentausnahme bei Festlegung mit negativem Wert oder 0 (null) als Eingabe aus.</span><span class="sxs-lookup"><span data-stu-id="15519-180">Throws an invalid argument exception when set with negative value or zero as input.</span></span>

      <span data-ttu-id="15519-181">\[[API-Gruppe: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="15519-181">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: width
    fullName: width
    langs:
      - typeScript
    type: property
    syntax:
      content: 'width: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Slicer.worksheet
    summary: |-
      <span data-ttu-id="15519-182">Stellt das Arbeitsblatt dar, das den Datenschnitt enthält.</span><span class="sxs-lookup"><span data-stu-id="15519-182">Represents the worksheet containing the slicer.</span></span> <span data-ttu-id="15519-183">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="15519-183">Read-only.</span></span>

      <span data-ttu-id="15519-184">\[[API-Gruppe: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="15519-184">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet