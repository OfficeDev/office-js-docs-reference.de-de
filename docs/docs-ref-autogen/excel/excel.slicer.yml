### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Slicer
    summary: |-
      <span data-ttu-id="d20cb-101">Stellt ein Slicer-Objekt in der Arbeitsmappe dar.</span><span class="sxs-lookup"><span data-stu-id="d20cb-101">Represents a slicer object in the workbook.</span></span>

      <span data-ttu-id="d20cb-102">\[[API-Satz: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d20cb-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: Excel.Slicer
    fullName: Excel.Slicer
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.Slicer.caption
      - excel.Excel.Slicer.clearFilters
      - excel.Excel.Slicer.context
      - excel.Excel.Slicer.delete
      - excel.Excel.Slicer.getSelectedItems
      - excel.Excel.Slicer.height
      - excel.Excel.Slicer.id
      - excel.Excel.Slicer.isFilterCleared
      - excel.Excel.Slicer.left
      - excel.Excel.Slicer.load
      - excel.Excel.Slicer.load_1
      - excel.Excel.Slicer.load_2
      - excel.Excel.Slicer.name
      - excel.Excel.Slicer.nameInFormula
      - excel.Excel.Slicer.selectItems
      - excel.Excel.Slicer.set
      - excel.Excel.Slicer.set_1
      - excel.Excel.Slicer.slicerItems
      - excel.Excel.Slicer.sortBy
      - excel.Excel.Slicer.style
      - excel.Excel.Slicer.toJSON
      - excel.Excel.Slicer.top
      - excel.Excel.Slicer.width
      - excel.Excel.Slicer.worksheet
  - uid: excel.Excel.Slicer.caption
    summary: |-
      <span data-ttu-id="d20cb-103">Stellt die Beschriftung eines Datenschnitts dar.</span><span class="sxs-lookup"><span data-stu-id="d20cb-103">Represents the caption of slicer.</span></span>

      <span data-ttu-id="d20cb-104">\[[API-Satz: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d20cb-104">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: caption
    fullName: caption
    langs:
      - typeScript
    type: property
    syntax:
      content: 'caption: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Slicer.clearFilters
    summary: |-
      <span data-ttu-id="d20cb-105">Löscht alle Filter, die derzeit für den Datenschnitt verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="d20cb-105">Clears all the filters currently applied on the slicer.</span></span>

      <span data-ttu-id="d20cb-106">\[[API-Satz: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d20cb-106">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: clearFilters()
    fullName: clearFilters()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearFilters(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d20cb-107">Beispiele</span><span class="sxs-lookup"><span data-stu-id="d20cb-107">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const slicer = context.workbook.slicers.getItem("Fruit Slicer");
              slicer.clearFilters();
              await context.sync();
          });
          ```
  - uid: excel.Excel.Slicer.context
    summary: <span data-ttu-id="d20cb-108">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="d20cb-108">The request context associated with the object.</span></span> <span data-ttu-id="d20cb-109">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="d20cb-109">This connects the add-in's process to the Office host application's process.</span></span>
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.Slicer.delete
    summary: |-
      <span data-ttu-id="d20cb-110">Löscht den Datenschnitt.</span><span class="sxs-lookup"><span data-stu-id="d20cb-110">Deletes the slicer.</span></span>

      <span data-ttu-id="d20cb-111">\[[API-Satz: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d20cb-111">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d20cb-112">Beispiele</span><span class="sxs-lookup"><span data-stu-id="d20cb-112">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getActiveWorksheet();
              sheet.slicers.getItemAt(0).delete();
              await context.sync();
          });
          ```
  - uid: excel.Excel.Slicer.getSelectedItems
    summary: |-
      <span data-ttu-id="d20cb-113">Gibt ein Array mit den Schlüsseln der ausgewählten Elemente zurück.</span><span class="sxs-lookup"><span data-stu-id="d20cb-113">Returns an array of selected items' keys.</span></span> <span data-ttu-id="d20cb-114">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="d20cb-114">Read-only.</span></span>

      <span data-ttu-id="d20cb-115">\[[API-Satz: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d20cb-115">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getSelectedItems()
    fullName: getSelectedItems()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedItems(): OfficeExtension.ClientResult<string[]>;'
      return:
        type:
          - 'OfficeExtension.ClientResult<string[]>'
        description: ''
  - uid: excel.Excel.Slicer.height
    summary: |-
      <span data-ttu-id="d20cb-116">Stellt die Höhe des Datenschnitts in typografischen Punkten dar.</span><span class="sxs-lookup"><span data-stu-id="d20cb-116">Represents the height, in points, of the slicer.</span></span> <span data-ttu-id="d20cb-117">Löst eine ungültige Argumentausnahme bei Festlegung mit negativem Wert oder 0 als Eingabe aus.</span><span class="sxs-lookup"><span data-stu-id="d20cb-117">Throws an invalid argument exception when set with negative value or zero as input.</span></span>

      <span data-ttu-id="d20cb-118">\[[API-Satz: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d20cb-118">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: height
    fullName: height
    langs:
      - typeScript
    type: property
    syntax:
      content: 'height: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Slicer.id
    summary: |-
      <span data-ttu-id="d20cb-119">Stellt die eindeutige ID des Datenschnitts dar.</span><span class="sxs-lookup"><span data-stu-id="d20cb-119">Represents the unique id of slicer.</span></span> <span data-ttu-id="d20cb-120">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="d20cb-120">Read-only.</span></span>

      <span data-ttu-id="d20cb-121">\[[API-Satz: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d20cb-121">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Slicer.isFilterCleared
    summary: |-
      <span data-ttu-id="d20cb-122">True, wenn alle derzeit auf den Datenschnitt angewendeten Filter gelöscht sind.</span><span class="sxs-lookup"><span data-stu-id="d20cb-122">True if all filters currently applied on the slicer is cleared.</span></span>

      <span data-ttu-id="d20cb-123">\[[API-Satz: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d20cb-123">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: isFilterCleared
    fullName: isFilterCleared
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isFilterCleared: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.Slicer.left
    summary: |-
      <span data-ttu-id="d20cb-124">Stellt den Abstand in Punkt von der linken Seite des Datenschnitts zur linken Seite des Arbeitsblatts dar.</span><span class="sxs-lookup"><span data-stu-id="d20cb-124">Represents the distance, in points, from the left side of the slicer to the left of the worksheet.</span></span> <span data-ttu-id="d20cb-125">Löst eine ungültige Argumentausnahme aus, wenn Sie mit negativem Wert als Eingabe festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="d20cb-125">Throws an invalid argument exception when set with negative value as input.</span></span>

      <span data-ttu-id="d20cb-126">\[[API-Satz: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d20cb-126">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: left
    fullName: left
    langs:
      - typeScript
    type: property
    syntax:
      content: 'left: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Slicer.load
    summary: <span data-ttu-id="d20cb-127">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="d20cb-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d20cb-128">Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.</span><span class="sxs-lookup"><span data-stu-id="d20cb-128">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="d20cb-129">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="d20cb-129">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="d20cb-130">`load(option?: string | string[]): Excel.Slicer`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="d20cb-130">`load(option?: string | string[]): Excel.Slicer` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="d20cb-131">`load(option?: { select?: string; expand?: string; }): Excel.Slicer`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="d20cb-131">`load(option?: { select?: string; expand?: string; }): Excel.Slicer` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="d20cb-132">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Slicer`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="d20cb-132">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Slicer` - Only available on collection types.</span></span> <span data-ttu-id="d20cb-133">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="d20cb-133">It is similar to the preceding signature.</span></span> <span data-ttu-id="d20cb-134">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="d20cb-134">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="d20cb-135">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="d20cb-135">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="d20cb-136">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="d20cb-136">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.SlicerLoadOptions): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.SlicerLoadOptions
  - uid: excel.Excel.Slicer.load_1
    summary: <span data-ttu-id="d20cb-137">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="d20cb-137">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d20cb-138">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="d20cb-138">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="d20cb-139">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="d20cb-139">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.Slicer.load_2
    summary: <span data-ttu-id="d20cb-140">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="d20cb-140">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d20cb-141">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="d20cb-141">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="d20cb-142">Wobei propertyNamesAndPaths. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="d20cb-142">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.Slicer.name
    summary: |-
      <span data-ttu-id="d20cb-143">Stellt den Namen des Datenschnitts dar.</span><span class="sxs-lookup"><span data-stu-id="d20cb-143">Represents the name of slicer.</span></span>

      <span data-ttu-id="d20cb-144">\[[API-Satz: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d20cb-144">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Slicer.nameInFormula
    summary: |-
      <span data-ttu-id="d20cb-145">Stellt den in der Formel verwendeten Namen dar.</span><span class="sxs-lookup"><span data-stu-id="d20cb-145">Represents the name used in the formula.</span></span>

      <span data-ttu-id="d20cb-146">\[[API-Satz: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d20cb-146">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: nameInFormula
    fullName: nameInFormula
    langs:
      - typeScript
    type: property
    syntax:
      content: 'nameInFormula: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Slicer.selectItems
    summary: |-
      <span data-ttu-id="d20cb-147">Wählt Datenschnittelemente anhand ihrer Schlüssel aus.</span><span class="sxs-lookup"><span data-stu-id="d20cb-147">Select slicer items based on their keys.</span></span> <span data-ttu-id="d20cb-148">Die vorherige Auswahl wird gelöscht.</span><span class="sxs-lookup"><span data-stu-id="d20cb-148">Previous selection will be cleared.</span></span> <span data-ttu-id="d20cb-149">Alle Elemente werden standardmäßig ausgewählt, wenn das Array leer ist.</span><span class="sxs-lookup"><span data-stu-id="d20cb-149">All items will be selected by default if the array is empty.</span></span>

      <span data-ttu-id="d20cb-150">\[[API-Satz: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d20cb-150">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: selectItems(items)
    fullName: selectItems(items)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'selectItems(items?: string[]): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d20cb-151">Beispiele</span><span class="sxs-lookup"><span data-stu-id="d20cb-151">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const slicer = context.workbook.slicers.getItem("Fruit Slicer");
              slicer.selectItems(["Lemon", "Lime", "Orange"]);
              await context.sync();
          });
          ```
      parameters:
        - id: items
          description: '<span data-ttu-id="d20cb-152">Optional.</span><span class="sxs-lookup"><span data-stu-id="d20cb-152">Optional.</span></span> <span data-ttu-id="d20cb-153">Die angegebenen Slicer-Elementnamen, die ausgewählt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="d20cb-153">The specified slicer item names to be selected.</span></span>'
          type:
            - 'string[]'
  - uid: excel.Excel.Slicer.set
    summary: '<span data-ttu-id="d20cb-154">Legt mehrere Eigenschaften eines Objekts gleichzeitig fest.</span><span class="sxs-lookup"><span data-stu-id="d20cb-154">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="d20cb-155">Sie können entweder ein plain-Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs weitergeben.</span><span class="sxs-lookup"><span data-stu-id="d20cb-155">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="d20cb-156">Diese Methode hat die folgende zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="d20cb-156">This method has the following additional signature:</span></span>

      `set(properties: Excel.Slicer): void`
    isPreview: true
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.SlicerUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="d20cb-157">Ein JavaScript-Objekt mit Eigenschaften, die isomorphically strukturiert sind, um die Eigenschaften des Objekts, für das die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="d20cb-157">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.SlicerUpdateData
        - id: options
          description: '<span data-ttu-id="d20cb-158">Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.</span><span class="sxs-lookup"><span data-stu-id="d20cb-158">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel.Excel.Slicer.set_1
    summary: '<span data-ttu-id="d20cb-159">Legt mehrere Eigenschaften für das Objekt auf der Grundlage eines vorhandenen geladenen Objekts zur gleichen Zeit fest.</span><span class="sxs-lookup"><span data-stu-id="d20cb-159">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    isPreview: true
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Slicer): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.Slicer
  - uid: excel.Excel.Slicer.slicerItems
    summary: |-
      <span data-ttu-id="d20cb-160">Stellt die Sammlung von SlicerItems dar, die Teil des Datenschnitts sind.</span><span class="sxs-lookup"><span data-stu-id="d20cb-160">Represents the collection of SlicerItems that are part of the slicer.</span></span> <span data-ttu-id="d20cb-161">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="d20cb-161">Read-only.</span></span>

      <span data-ttu-id="d20cb-162">\[[API-Satz: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d20cb-162">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: slicerItems
    fullName: slicerItems
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly slicerItems: Excel.SlicerItemCollection;'
      return:
        type:
          - excel.Excel.SlicerItemCollection
  - uid: excel.Excel.Slicer.sortBy
    summary: |-
      <span data-ttu-id="d20cb-163">Stellt die Sortierreihenfolge der Elemente im Datenschnitt dar.</span><span class="sxs-lookup"><span data-stu-id="d20cb-163">Represents the sort order of the items in the slicer.</span></span> <span data-ttu-id="d20cb-164">Die möglichen Werte sind: DataSourceOrder, aufsteigend, absteigend.</span><span class="sxs-lookup"><span data-stu-id="d20cb-164">Possible values are: DataSourceOrder, Ascending, Descending.</span></span>

      <span data-ttu-id="d20cb-165">\[[API-Satz: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d20cb-165">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: sortBy
    fullName: sortBy
    langs:
      - typeScript
    type: property
    syntax:
      content: 'sortBy: Excel.SlicerSortType | "DataSourceOrder" | "Ascending" | "Descending";'
      return:
        type:
          - Excel.SlicerSortType | "DataSourceOrder" | "Ascending" | "Descending"
  - uid: excel.Excel.Slicer.style
    summary: |-
      <span data-ttu-id="d20cb-166">Konstanter Wert, der das Format des Datenschnitts darstellt.</span><span class="sxs-lookup"><span data-stu-id="d20cb-166">Constant value that represents the Slicer style.</span></span> <span data-ttu-id="d20cb-167">Die möglichen Werte sind : SlicerStyleLight1 bis SlicerStyleLight6, TableStyleOther1 bis TableStyleOther2, SlicerStyleDark1 bis SlicerStyleDark6.</span><span class="sxs-lookup"><span data-stu-id="d20cb-167">Possible values are: SlicerStyleLight1 thru SlicerStyleLight6, TableStyleOther1 thru TableStyleOther2, SlicerStyleDark1 thru SlicerStyleDark6.</span></span> <span data-ttu-id="d20cb-168">Es kann ebenfalls eine in der Arbeitsmappe vorhandene benutzerdefinierte Formatierung angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="d20cb-168">A custom user-defined style present in the workbook can also be specified.</span></span>

      <span data-ttu-id="d20cb-169">\[[API-Satz: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d20cb-169">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="d20cb-170">Beispiele</span><span class="sxs-lookup"><span data-stu-id="d20cb-170">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const slicer = context.workbook.slicers.getItem("Fruit Slicer");
              slicer.style = "SlicerStyleLight6";
              await context.sync();
          });
          ```
  - uid: excel.Excel.Slicer.toJSON
    summary: '<span data-ttu-id="d20cb-171">Überschreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API-Objekt an`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="d20cb-171">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="d20cb-172">.</span><span class="sxs-lookup"><span data-stu-id="d20cb-172"></span></span> <span data-ttu-id="d20cb-173">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="d20cb-173"></span></span><!-- --><span data-ttu-id="d20cb-174">Ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche Excel. Slicer-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt zurück (typisiert als`Excel.Interfaces.SlicerData`</span><span class="sxs-lookup"><span data-stu-id="d20cb-174">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Slicer object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SlicerData`</span></span><!-- --><span data-ttu-id="d20cb-175">), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="d20cb-175">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SlicerData;'
      return:
        type:
          - excel.Excel.Interfaces.SlicerData
        description: ''
  - uid: excel.Excel.Slicer.top
    summary: |-
      <span data-ttu-id="d20cb-176">Stellt den Abstand in Punkt von der Oberkante des Datenschnitts zur Oberkante des Arbeitsblatts dar.</span><span class="sxs-lookup"><span data-stu-id="d20cb-176">Represents the distance, in points, from the top edge of the slicer to the top of the worksheet.</span></span> <span data-ttu-id="d20cb-177">Löst eine ungültige Argumentausnahme aus, wenn Sie mit negativem Wert als Eingabe festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="d20cb-177">Throws an invalid argument exception when set with negative value as input.</span></span>

      <span data-ttu-id="d20cb-178">\[[API-Satz: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d20cb-178">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: top
    fullName: top
    langs:
      - typeScript
    type: property
    syntax:
      content: 'top: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Slicer.width
    summary: |-
      <span data-ttu-id="d20cb-179">Die Breite des Datenschnitts in Punkten.</span><span class="sxs-lookup"><span data-stu-id="d20cb-179">Represents the width, in points, of the slicer.</span></span> <span data-ttu-id="d20cb-180">Löst eine ungültige Argumentausnahme bei Festlegung mit negativem Wert oder 0 als Eingabe aus.</span><span class="sxs-lookup"><span data-stu-id="d20cb-180">Throws an invalid argument exception when set with negative value or zero as input.</span></span>

      <span data-ttu-id="d20cb-181">\[[API-Satz: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d20cb-181">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: width
    fullName: width
    langs:
      - typeScript
    type: property
    syntax:
      content: 'width: number;'
      return:
        type:
          - number
  - uid: excel.Excel.Slicer.worksheet
    summary: |-
      <span data-ttu-id="d20cb-182">Stellt das Arbeitsblatt dar, das den Datenschnitt enthält.</span><span class="sxs-lookup"><span data-stu-id="d20cb-182">Represents the worksheet containing the slicer.</span></span> <span data-ttu-id="d20cb-183">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="d20cb-183">Read-only.</span></span>

      <span data-ttu-id="d20cb-184">\[[API-Satz: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d20cb-184">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - excel.Excel.Worksheet