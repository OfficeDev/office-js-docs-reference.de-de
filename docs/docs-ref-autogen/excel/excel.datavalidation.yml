### YamlMime:UniversalReference
items:
  - uid: excel.Excel.DataValidation
    summary: |-
      <span data-ttu-id="e1e84-101">Stellt die Datenüberprüfung dar, die auf den aktuellen Zeitraum angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="e1e84-101">Represents the data validation applied to the current range.</span></span>

      <span data-ttu-id="e1e84-102">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1e84-102">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.DataValidation
    fullName: Excel.DataValidation
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.DataValidation.clear
      - excel.Excel.DataValidation.context
      - excel.Excel.DataValidation.errorAlert
      - excel.Excel.DataValidation.getInvalidCells
      - excel.Excel.DataValidation.getInvalidCellsOrNullObject
      - excel.Excel.DataValidation.ignoreBlanks
      - excel.Excel.DataValidation.load
      - excel.Excel.DataValidation.load_1
      - excel.Excel.DataValidation.load_2
      - excel.Excel.DataValidation.prompt
      - excel.Excel.DataValidation.rule
      - excel.Excel.DataValidation.set
      - excel.Excel.DataValidation.set_1
      - excel.Excel.DataValidation.toJSON
      - excel.Excel.DataValidation.type
      - excel.Excel.DataValidation.valid
  - uid: excel.Excel.DataValidation.clear
    summary: |-
      <span data-ttu-id="e1e84-103">Löscht die Datenüberprüfung aus dem aktuellen Bereich.</span><span class="sxs-lookup"><span data-stu-id="e1e84-103">Clears the data validation from the current range.</span></span>

      <span data-ttu-id="e1e84-104">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1e84-104">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.DataValidation.context
    summary: <span data-ttu-id="e1e84-105">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="e1e84-105">The request context associated with the object.</span></span> <span data-ttu-id="e1e84-106">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="e1e84-106">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.DataValidation.errorAlert
    summary: |-
      <span data-ttu-id="e1e84-107">Fehlermeldung, wenn Benutzer ungültige Daten eingibt.</span><span class="sxs-lookup"><span data-stu-id="e1e84-107">Error alert when user enters invalid data.</span></span>

      <span data-ttu-id="e1e84-108">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1e84-108">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: errorAlert
    fullName: errorAlert
    langs:
      - typeScript
    type: property
    syntax:
      content: 'errorAlert: Excel.DataValidationErrorAlert;'
      return:
        type:
          - excel.Excel.DataValidationErrorAlert
        description: |-


          #### <a name="examples"></a><span data-ttu-id="e1e84-109">Beispiele</span><span class="sxs-lookup"><span data-stu-id="e1e84-109">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Decision");
              const commentsRange = 
                  sheet.tables.getItem("NameOptionsTable").columns.getItem("Comments").getDataBodyRange();

              // When you are developing, it is a good practice to
              // clear the dataValidation object with each run of your code.
              commentsRange.dataValidation.clear();   

              // If the value of A2 is contained in the value of C2, then 
              // SEARCH(A2,C2) returns the number where it begins. Otherwise,
              // it does not return a number.
              let redundantStringRule = {
                  custom: {
                      formula: "=NOT(ISNUMBER(SEARCH(A2,C2)))"
                  }
              };
              commentsRange.dataValidation.rule = redundantStringRule;
              commentsRange.dataValidation.errorAlert = {
                  message: "It is redundant to include the baby name in the comment.",
                  showAlert: true,
                  style: "Information",
                  title: "Baby Name in Comment"
              };

              await context.sync();
          });
          ```
  - uid: excel.Excel.DataValidation.getInvalidCells
    summary: |-
      <span data-ttu-id="e1e84-110">Gibt ein RangeAreas-Objekt, das einen oder mehrere rechteckige Bereiche umfasst, mit ungültigen Zellwerten zurück.</span><span class="sxs-lookup"><span data-stu-id="e1e84-110">Returns a RangeAreas, comprising one or more rectangular ranges, with invalid cell values.</span></span> <span data-ttu-id="e1e84-111">Wenn alle Zellwerte gültig sind, löst diese Funktion einen ItemNotFound Fehler aus.</span><span class="sxs-lookup"><span data-stu-id="e1e84-111">If all cell values are valid, this function will throw an ItemNotFound error.</span></span>

      <span data-ttu-id="e1e84-112">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1e84-112">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getInvalidCells()
    fullName: getInvalidCells()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getInvalidCells(): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
  - uid: excel.Excel.DataValidation.getInvalidCellsOrNullObject
    summary: |-
      <span data-ttu-id="e1e84-113">Gibt ein RangeAreas-Objekt, das einen oder mehrere rechteckige Bereiche umfasst, mit ungültigen Zellwerten zurück.</span><span class="sxs-lookup"><span data-stu-id="e1e84-113">Returns a RangeAreas, comprising one or more rectangular ranges, with invalid cell values.</span></span> <span data-ttu-id="e1e84-114">Wenn alle Zellwerte gültig sind, gibt diese Funktion NULL zurück.</span><span class="sxs-lookup"><span data-stu-id="e1e84-114">If all cell values are valid, this function will return null.</span></span>

      <span data-ttu-id="e1e84-115">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1e84-115">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getInvalidCellsOrNullObject()
    fullName: getInvalidCellsOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getInvalidCellsOrNullObject(): Excel.RangeAreas;'
      return:
        type:
          - excel.Excel.RangeAreas
        description: ''
  - uid: excel.Excel.DataValidation.ignoreBlanks
    summary: |-
      <span data-ttu-id="e1e84-116">Leere Zellen ignorieren: Es wird keine Datenüberprüfung für leere Zellen durchgeführt. Die Eigenschaft ist standardmäßig auf „true“ festgelegt.</span><span class="sxs-lookup"><span data-stu-id="e1e84-116">Ignore blanks: no data validation will be performed on blank cells, it defaults to true.</span></span>

      <span data-ttu-id="e1e84-117">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1e84-117">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: ignoreBlanks
    fullName: ignoreBlanks
    langs:
      - typeScript
    type: property
    syntax:
      content: 'ignoreBlanks: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.DataValidation.load
    summary: <span data-ttu-id="e1e84-118">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="e1e84-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e1e84-119">Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.</span><span class="sxs-lookup"><span data-stu-id="e1e84-119">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="e1e84-120">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="e1e84-120">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="e1e84-121">`load(option?: string | string[]): Excel.DataValidation`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="e1e84-121">`load(option?: string | string[]): Excel.DataValidation` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="e1e84-122">`load(option?: { select?: string; expand?: string; }): Excel.DataValidation`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="e1e84-122">`load(option?: { select?: string; expand?: string; }): Excel.DataValidation` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="e1e84-123">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.DataValidation`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="e1e84-123">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.DataValidation` - Only available on collection types.</span></span> <span data-ttu-id="e1e84-124">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="e1e84-124">It is similar to the preceding signature.</span></span> <span data-ttu-id="e1e84-125">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="e1e84-125">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="e1e84-126">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="e1e84-126">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="e1e84-127">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="e1e84-127">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.DataValidationLoadOptions): Excel.DataValidation;'
      return:
        type:
          - excel.Excel.DataValidation
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.DataValidationLoadOptions
  - uid: excel.Excel.DataValidation.load_1
    summary: <span data-ttu-id="e1e84-128">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="e1e84-128">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e1e84-129">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="e1e84-129">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.DataValidation;'
      return:
        type:
          - excel.Excel.DataValidation
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="e1e84-130">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="e1e84-130">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.DataValidation.load_2
    summary: <span data-ttu-id="e1e84-131">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="e1e84-131">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="e1e84-132">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="e1e84-132">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.DataValidation;'
      return:
        type:
          - excel.Excel.DataValidation
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="e1e84-133">Wobei propertyNamesAndPaths. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="e1e84-133">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.DataValidation.prompt
    summary: |-
      <span data-ttu-id="e1e84-134">AufFordern, wenn Benutzer eine Zelle auswählen.</span><span class="sxs-lookup"><span data-stu-id="e1e84-134">Prompt when users select a cell.</span></span>

      <span data-ttu-id="e1e84-135">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1e84-135">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: prompt
    fullName: prompt
    langs:
      - typeScript
    type: property
    syntax:
      content: 'prompt: Excel.DataValidationPrompt;'
      return:
        type:
          - excel.Excel.DataValidationPrompt
  - uid: excel.Excel.DataValidation.rule
    summary: |-
      <span data-ttu-id="e1e84-136">Daten Überprüfungsregel, die unterschiedliche Arten von Daten Überprüfungskriterien enthält.</span><span class="sxs-lookup"><span data-stu-id="e1e84-136">Data validation rule that contains different type of data validation criteria.</span></span>

      <span data-ttu-id="e1e84-137">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1e84-137">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: rule
    fullName: rule
    langs:
      - typeScript
    type: property
    syntax:
      content: 'rule: Excel.DataValidationRule;'
      return:
        type:
          - excel.Excel.DataValidationRule
  - uid: excel.Excel.DataValidation.set
    summary: '<span data-ttu-id="e1e84-138">Legt mehrere Eigenschaften eines Objekts gleichzeitig fest.</span><span class="sxs-lookup"><span data-stu-id="e1e84-138">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="e1e84-139">Sie können entweder ein plain-Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs weitergeben.</span><span class="sxs-lookup"><span data-stu-id="e1e84-139">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="e1e84-140">Diese Methode hat die folgende zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="e1e84-140">This method has the following additional signature:</span></span>

      `set(properties: Excel.DataValidation): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.DataValidationUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="e1e84-141">Ein JavaScript-Objekt mit Eigenschaften, die isomorphically strukturiert sind, um die Eigenschaften des Objekts, für das die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="e1e84-141">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.DataValidationUpdateData
        - id: options
          description: '<span data-ttu-id="e1e84-142">Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.</span><span class="sxs-lookup"><span data-stu-id="e1e84-142">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel.Excel.DataValidation.set_1
    summary: '<span data-ttu-id="e1e84-143">Legt mehrere Eigenschaften für das Objekt auf der Grundlage eines vorhandenen geladenen Objekts zur gleichen Zeit fest.</span><span class="sxs-lookup"><span data-stu-id="e1e84-143">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.DataValidation): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.DataValidation
  - uid: excel.Excel.DataValidation.toJSON
    summary: '<span data-ttu-id="e1e84-144">ÜberSchreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API-Objekt an`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="e1e84-144">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="e1e84-145">.</span><span class="sxs-lookup"><span data-stu-id="e1e84-145"></span></span> <span data-ttu-id="e1e84-146">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="e1e84-146"></span></span><!-- --><span data-ttu-id="e1e84-147">Ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche Excel. dataValidate-Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt zurück (typisiert als`Excel.Interfaces.DataValidationData`</span><span class="sxs-lookup"><span data-stu-id="e1e84-147">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.DataValidation object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.DataValidationData`</span></span><!-- --><span data-ttu-id="e1e84-148">), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="e1e84-148">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.DataValidationData;'
      return:
        type:
          - excel.Excel.Interfaces.DataValidationData
        description: ''
  - uid: excel.Excel.DataValidation.type
    summary: |-
      <span data-ttu-id="e1e84-149">Informationen zum Typ der Datenüberprüfung finden Sie unter Excel.DataValidationType.</span><span class="sxs-lookup"><span data-stu-id="e1e84-149">Type of the data validation, see Excel.DataValidationType for details.</span></span>

      <span data-ttu-id="e1e84-150">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1e84-150">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: Excel.DataValidationType | "None" | "WholeNumber" | "Decimal" | "List" | "Date" | "Time" | "TextLength" | "Custom" | "Inconsistent" | "MixedCriteria";'
      return:
        type:
          - Excel.DataValidationType | "None" | "WholeNumber" | "Decimal" | "List" | "Date" | "Time" | "TextLength" | "Custom" | "Inconsistent" | "MixedCriteria"
  - uid: excel.Excel.DataValidation.valid
    summary: |-
      <span data-ttu-id="e1e84-151">Gibt an, ob alle Zellwerte entsprechend den Datenüberprüfungsregeln gültig sind.</span><span class="sxs-lookup"><span data-stu-id="e1e84-151">Represents if all cell values are valid according to the data validation rules.</span></span> <span data-ttu-id="e1e84-152">Gibt true zurück, wenn alle Zellwerte gültig sind, oder false, wenn alle Zellwerte ungültig sind.</span><span class="sxs-lookup"><span data-stu-id="e1e84-152">Returns true if all cell values are valid, or false if all cell values are invalid.</span></span> <span data-ttu-id="e1e84-153">Gibt NULL zurück, wenn gültige und ungültige Zellwerte innerhalb des Bereiches vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="e1e84-153">Returns null if there are both valid and invalid cell values within the range.</span></span>

      <span data-ttu-id="e1e84-154">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e1e84-154">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: valid
    fullName: valid
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly valid: boolean;'
      return:
        type:
          - boolean