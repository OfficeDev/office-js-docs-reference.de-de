### YamlMime:UniversalReference
ms.openlocfilehash: c1e79f8060a2a13892185357fe51cd29e3a2a692
ms.sourcegitcommit: 06eebee5e68d349f78e6bc3bb0ef099fe063cf04
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 01/17/2019
ms.locfileid: "28724745"
items:
- uid: excel.Excel.DataValidation
  summary: >-
    <span data-ttu-id="a90cf-101">Stellt die Überprüfung auf den aktuellen Bereich angewendet.</span><span class="sxs-lookup"><span data-stu-id="a90cf-101">Represents the data validation applied to the current range.</span></span>


    <span data-ttu-id="a90cf-102">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a90cf-102">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.DataValidation
  fullName: Excel.DataValidation
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.DataValidation.clear
  - excel.Excel.DataValidation.context
  - excel.Excel.DataValidation.errorAlert
  - excel.Excel.DataValidation.ignoreBlanks
  - excel.Excel.DataValidation.load
  - excel.Excel.DataValidation.prompt
  - excel.Excel.DataValidation.rule
  - excel.Excel.DataValidation.toJSON
  - excel.Excel.DataValidation.type
  - excel.Excel.DataValidation.valid
- uid: excel.Excel.DataValidation.clear
  summary: >-
    <span data-ttu-id="a90cf-103">Löscht die Datenüberprüfung aus dem aktuellen Bereich.</span><span class="sxs-lookup"><span data-stu-id="a90cf-103">Clears the data validation from the current range.</span></span>


    <span data-ttu-id="a90cf-104">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a90cf-104">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: clear()
  fullName: clear
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.DataValidation.context
  summary: <span data-ttu-id="a90cf-105">Der Anforderungskontext-zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="a90cf-105">The request context associated with the object.</span></span> <span data-ttu-id="a90cf-106">Dadurch wird das Add-in Prozess mit der Office-hostanwendung Prozess verbunden.</span><span class="sxs-lookup"><span data-stu-id="a90cf-106">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.DataValidation.errorAlert
  summary: >-
    <span data-ttu-id="a90cf-107">Fehlermeldung, wenn Benutzer ungültige Daten eingibt.</span><span class="sxs-lookup"><span data-stu-id="a90cf-107">Error alert when user enters invalid data.</span></span>


    <span data-ttu-id="a90cf-108">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a90cf-108">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: errorAlert
  fullName: errorAlert
  langs:
  - typeScript
  type: property
  syntax:
    content: 'errorAlert: Excel.DataValidationErrorAlert;'
    return:
      type:
      - excel.Excel.DataValidationErrorAlert
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"a90cf-109\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"a90cf-109\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Decision\");\n    const commentsRange = \n        sheet.tables.getItem(\"NameOptionsTable\").columns.getItem(\"Comments\").getDataBodyRange();\n\n    // When you are developing, it is a good practice to\n    // clear the dataValidation object with each run of your code.\n    commentsRange.dataValidation.clear();   \n\n    // If the value of A2 is contained in the value of C2, then \n    // SEARCH(A2,C2) returns the number where it begins. Otherwise,\n    // it does not return a number.\n    let redundantStringRule = {\n        custom: {\n            formula: \"=NOT(ISNUMBER(SEARCH(A2,C2)))\"\n        }\n    };\n    commentsRange.dataValidation.rule = redundantStringRule;\n    commentsRange.dataValidation.errorAlert = {\n        message: \"It is redundant to include the baby name in the comment.\",\n        showAlert: true,\n        style: \"Information\",\n        title: \"Baby Name in Comment\"\n    };\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.DataValidation.ignoreBlanks
  summary: >-
    <span data-ttu-id="a90cf-110">Leere Zellen ignorieren: Es wird keine Datenüberprüfung für leere Zellen durchgeführt. Die Eigenschaft ist standardmäßig auf „true“ festgelegt.</span><span class="sxs-lookup"><span data-stu-id="a90cf-110">Ignore blanks: no data validation will be performed on blank cells, it defaults to true.</span></span>


    <span data-ttu-id="a90cf-111">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a90cf-111">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: ignoreBlanks
  fullName: ignoreBlanks
  langs:
  - typeScript
  type: property
  syntax:
    content: 'ignoreBlanks: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.DataValidation.load
  summary: <span data-ttu-id="a90cf-112">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="a90cf-112">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a90cf-113">Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="a90cf-113">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="a90cf-114">Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="a90cf-114">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="a90cf-115">`load(option?: { select?: string; expand?: string; }): Excel.DataValidation`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class="sxs-lookup"><span data-stu-id="a90cf-115">`load(option?: { select?: string; expand?: string; }): Excel.DataValidation` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="a90cf-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.DataValidation`-Nur auf Auflistungstypen verfügbar.</span><span class="sxs-lookup"><span data-stu-id="a90cf-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.DataValidation` - Only available on collection types.</span></span> <span data-ttu-id="a90cf-117">Es ist ähnlich wie die jeweils vorhergehende Signatur.</span><span class="sxs-lookup"><span data-stu-id="a90cf-117">It is similar to the preceding signature.</span></span> <span data-ttu-id="a90cf-118">Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können.</span><span class="sxs-lookup"><span data-stu-id="a90cf-118">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="a90cf-119">Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="a90cf-119">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="a90cf-120">Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.</span><span class="sxs-lookup"><span data-stu-id="a90cf-120">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.DataValidation;'
    return:
      type:
      - excel.Excel.DataValidation
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="a90cf-121">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="a90cf-121">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.DataValidation.prompt
  summary: >-
    <span data-ttu-id="a90cf-122">Auffordern Sie, wenn Benutzer eine Zelle auswählen.</span><span class="sxs-lookup"><span data-stu-id="a90cf-122">Prompt when users select a cell.</span></span>


    <span data-ttu-id="a90cf-123">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a90cf-123">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: prompt
  fullName: prompt
  langs:
  - typeScript
  type: property
  syntax:
    content: 'prompt: Excel.DataValidationPrompt;'
    return:
      type:
      - excel.Excel.DataValidationPrompt
- uid: excel.Excel.DataValidation.rule
  summary: >-
    <span data-ttu-id="a90cf-124">Daten Überprüfungsregel, die andere Art von datenüberprüfungskriterien enthält.</span><span class="sxs-lookup"><span data-stu-id="a90cf-124">Data Validation rule that contains different type of data validation criteria.</span></span>


    <span data-ttu-id="a90cf-125">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a90cf-125">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: rule
  fullName: rule
  langs:
  - typeScript
  type: property
  syntax:
    content: 'rule: Excel.DataValidationRule;'
    return:
      type:
      - excel.Excel.DataValidationRule
- uid: excel.Excel.DataValidation.toJSON
  summary: <span data-ttu-id="a90cf-126">Überschreibt das JavaScript `toJSON()` Methode, um nützliche Ausgabe zu gewährleisten, wenn ein API-Objekt zu übergeben ist `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="a90cf-126">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="a90cf-127">(`JSON.stringify`<!-- -->, wiederum die `toJSON` -Methode des Objekts, das es übergeben wird.) Das ursprüngliche Excel.DataValidation-Objekt ist ein API-Objekt der `toJSON` -Methode gibt eine einfache JavaScript-Objekt zurück (als `Excel.Interfaces.DataValidationData` <!-- -->), die flache Kopien der geladene untergeordnete Eigenschaften aus dem ursprünglichen-Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="a90cf-127">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.DataValidation object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.DataValidationData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.DataValidationData;'
    return:
      type:
      - excel.Excel.Interfaces.DataValidationData
      description: ''
- uid: excel.Excel.DataValidation.type
  summary: >-
    <span data-ttu-id="a90cf-128">Informationen zum Typ der Datenüberprüfung finden Sie unter Excel.DataValidationType.</span><span class="sxs-lookup"><span data-stu-id="a90cf-128">Type of the data validation, see Excel.DataValidationType for details.</span></span>


    <span data-ttu-id="a90cf-129">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a90cf-129">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: type
  fullName: type
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly type: Excel.DataValidationType | "None" | "WholeNumber" | "Decimal" | "List" | "Date" | "Time" | "TextLength" | "Custom" | "Inconsistent" | "MixedCriteria";'
    return:
      type:
      - Excel.DataValidationType | "None" | "WholeNumber" | "Decimal" | "List" | "Date" | "Time" | "TextLength" | "Custom" | "Inconsistent" | "MixedCriteria"
- uid: excel.Excel.DataValidation.valid
  summary: >-
    <span data-ttu-id="a90cf-130">Gibt an, ob alle Zellwerte entsprechend den Datenüberprüfungsregeln gültig sind.</span><span class="sxs-lookup"><span data-stu-id="a90cf-130">Represents if all cell values are valid according to the data validation rules.</span></span> <span data-ttu-id="a90cf-131">Gibt true zurück, wenn alle Zellwerte sind ungültig, oder false, wenn alle Zellwerte ungültig sind.</span><span class="sxs-lookup"><span data-stu-id="a90cf-131">Returns true if all cell values are valid, or false if all cell values are invalid.</span></span> <span data-ttu-id="a90cf-132">Gibt null zurück, wenn beide Zellenwerte gültige und ungültige innerhalb des Bereichs vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="a90cf-132">Returns null if there are both valid and invalid cell values within the range.</span></span>


    <span data-ttu-id="a90cf-133">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="a90cf-133">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: valid
  fullName: valid
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly valid: boolean;'
    return:
      type:
      - boolean
