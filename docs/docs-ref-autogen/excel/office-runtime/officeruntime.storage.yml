### YamlMime:UniversalReference
items:
  - uid: 'office-runtime!OfficeRuntime.Storage:interface'
    summary: |-
      Asynchroner, globaler und dauerhafter Schlüsselwert Speicher.

      \[[API-Gruppe: SharedRuntime 1,1](/office/dev/add-ins/reference/javascript-api-for-office)\]
    remarks: 'Speichergrenzwert von 10 MB pro Domäne, die von mehreren Add-Ins gemeinsam verwendet werden kann.'
    name: OfficeRuntime.Storage
    fullName: OfficeRuntime.Storage
    langs:
      - typeScript
    type: interface
    package: office-runtime!
    children:
      - 'office-runtime!OfficeRuntime.Storage#getItem:member(1)'
      - 'office-runtime!OfficeRuntime.Storage#getItems:member(1)'
      - 'office-runtime!OfficeRuntime.Storage#getKeys:member(1)'
      - 'office-runtime!OfficeRuntime.Storage#removeItem:member(1)'
      - 'office-runtime!OfficeRuntime.Storage#removeItems:member(1)'
      - 'office-runtime!OfficeRuntime.Storage#setItem:member(1)'
      - 'office-runtime!OfficeRuntime.Storage#setItems:member(1)'
  - uid: 'office-runtime!OfficeRuntime.Storage#getItem:member(1)'
    summary: |-
      Ruft ein Element aus dem Speicher basierend auf seinem Schlüssel ab. Gibt eine Zusage zurück. Für den Fall, dass die Zusage nicht aufgelöst wird, wird NULL zurückgegeben.

      \[[API-Gruppe: SharedRuntime 1,1](/office/dev/add-ins/reference/javascript-api-for-office)\]
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Promise<string | null>;'
      return:
        type:
          - 'office-runtime!OfficeRuntime.Storage#getItem~0:complex'
        description: ''
      parameters:
        - id: key
          description: 'Der Schlüssel des Elements, das abgerufen werden soll. Muss eine Zeichenfolge sein.'
          type:
            - string
  - uid: 'office-runtime!OfficeRuntime.Storage#getItems:member(1)'
    summary: |-
      Ruft basierend auf dem Schlüssel mehrere Elemente aus dem Speicher ab. Gibt eine Zusage zurück. Für den Fall, dass die Zusage nicht aufgelöst wird, wird NULL zurückgegeben.

      \[[API-Gruppe: SharedRuntime 1,1](/office/dev/add-ins/reference/javascript-api-for-office)\]
    name: getItems(keys)
    fullName: getItems(keys)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItems(keys: string[]): Promise<{ [key: string]: string | null }>;'
      return:
        type:
          - 'office-runtime!OfficeRuntime.Storage#getItems~0:complex'
        description: ''
      parameters:
        - id: keys
          description: Schlüssel der zu entfernenden Elemente. Es muss sich um ein Array von Zeichenfolgen handeln.
          type:
            - 'string[]'
  - uid: 'office-runtime!OfficeRuntime.Storage#getKeys:member(1)'
    summary: |-
      Ruft ein Array aller Schlüssel aus dem Speicher ab. Gibt eine Zusage zurück.

      \[[API-Gruppe: SharedRuntime 1,1](/office/dev/add-ins/reference/javascript-api-for-office)\]
    name: getKeys()
    fullName: getKeys()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getKeys(): Promise<string[]>;'
      return:
        type:
          - 'office-runtime!OfficeRuntime.Storage#getKeys~0:complex'
        description: ''
  - uid: 'office-runtime!OfficeRuntime.Storage#removeItem:member(1)'
    summary: |-
      Entfernt ein Element aus dem Speicher basierend auf seinem Schlüssel. Gibt eine Zusage zurück.

      \[[API-Gruppe: SharedRuntime 1,1](/office/dev/add-ins/reference/javascript-api-for-office)\]
    name: removeItem(key)
    fullName: removeItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeItem(key: string): Promise<void>;'
      return:
        type:
          - 'office-runtime!OfficeRuntime.Storage#removeItem~0:complex'
        description: ''
      parameters:
        - id: key
          description: Der Schlüssel des zu entfernenden Elements. Muss eine Zeichenfolge sein.
          type:
            - string
  - uid: 'office-runtime!OfficeRuntime.Storage#removeItems:member(1)'
    summary: |-
      Entfernt mehrere Elemente aus dem Speicher. Gibt eine Zusage zurück.

      \[[API-Gruppe: SharedRuntime 1,1](/office/dev/add-ins/reference/javascript-api-for-office)\]
    name: removeItems(keys)
    fullName: removeItems(keys)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeItems(keys: string[]): Promise<void>;'
      return:
        type:
          - 'office-runtime!OfficeRuntime.Storage#removeItems~0:complex'
        description: ''
      parameters:
        - id: keys
          description: Schlüssel der zu entfernenden Elemente. Es muss sich um ein Array von Zeichenfolgen handeln.
          type:
            - 'string[]'
  - uid: 'office-runtime!OfficeRuntime.Storage#setItem:member(1)'
    summary: |-
      Legt ein Schlüssel-Wert-Paar auf Speicher fest oder aktualisiert ein vorhandenes Schlüssel-Wert-Paar. Gibt eine Zusage zurück.

      \[[API-Gruppe: SharedRuntime 1,1](/office/dev/add-ins/reference/javascript-api-for-office)\]
    name: 'setItem(key, value)'
    fullName: 'setItem(key, value)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setItem(key: string, value: string): Promise<void>;'
      return:
        type:
          - 'office-runtime!OfficeRuntime.Storage#setItem~0:complex'
        description: ''
      parameters:
        - id: key
          description: Der Schlüssel des festzulegenden Elements. Muss eine Zeichenfolge sein.
          type:
            - string
        - id: value
          description: Muss eine Zeichenfolge sein.
          type:
            - string
  - uid: 'office-runtime!OfficeRuntime.Storage#setItems:member(1)'
    summary: |-
      Legt mehrere Elemente in den Speicher oder aktualisiert mehrere Elemente im Speicher. Gibt eine Zusage zurück.

      \[[API-Gruppe: SharedRuntime 1,1](/office/dev/add-ins/reference/javascript-api-for-office)\]
    name: setItems(keyValues)
    fullName: setItems(keyValues)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setItems(keyValues: { [key: string]: string }): Promise<void>;'
      return:
        type:
          - 'office-runtime!OfficeRuntime.Storage#setItems~0:complex'
        description: ''
      parameters:
        - id: keyValues
          description: 'Schlüssel-Wert-Paare, die festgelegt werden sollen. Es muss sich um Zeichenfolgen handeln.'
          type:
            - '{ [key: string]: string }'
references:
  - uid: 'office-runtime!OfficeRuntime.Storage#getItem~0:complex'
    name: Promise<string | null>
    fullName: Promise<string | null>
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <string | null>
        fullName: <string | null>
  - uid: 'office-runtime!OfficeRuntime.Storage#getItems~0:complex'
    name: 'Promise<{ [key: string]: string | null }>'
    fullName: 'Promise<{ [key: string]: string | null }>'
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: '<{ [key: string]: string | null }>'
        fullName: '<{ [key: string]: string | null }>'
  - uid: 'office-runtime!OfficeRuntime.Storage#getKeys~0:complex'
    name: 'Promise<string[]>'
    fullName: 'Promise<string[]>'
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: '<string[]>'
        fullName: '<string[]>'
  - uid: 'office-runtime!OfficeRuntime.Storage#removeItem~0:complex'
    name: Promise<void>
    fullName: Promise<void>
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <void>
        fullName: <void>
  - uid: 'office-runtime!OfficeRuntime.Storage#removeItems~0:complex'
    name: Promise<void>
    fullName: Promise<void>
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <void>
        fullName: <void>
  - uid: 'office-runtime!OfficeRuntime.Storage#setItem~0:complex'
    name: Promise<void>
    fullName: Promise<void>
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <void>
        fullName: <void>
  - uid: 'office-runtime!OfficeRuntime.Storage#setItems~0:complex'
    name: Promise<void>
    fullName: Promise<void>
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <void>
        fullName: <void>