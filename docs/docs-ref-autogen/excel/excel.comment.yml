### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Comment
    summary: |-
      <span data-ttu-id="289cd-101">Stellt ein Cell Comment-Objekt in der Arbeitsmappe dar.</span><span class="sxs-lookup"><span data-stu-id="289cd-101">Represents a cell comment object in the workbook.</span></span>

      <span data-ttu-id="289cd-102">\[[API-Satz: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="289cd-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: Excel.Comment
    fullName: Excel.Comment
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.Comment.authorEmail
      - excel.Excel.Comment.authorName
      - excel.Excel.Comment.content
      - excel.Excel.Comment.context
      - excel.Excel.Comment.creationDate
      - excel.Excel.Comment.delete
      - excel.Excel.Comment.getLocation
      - excel.Excel.Comment.id
      - excel.Excel.Comment.load
      - excel.Excel.Comment.load_1
      - excel.Excel.Comment.load_2
      - excel.Excel.Comment.replies
      - excel.Excel.Comment.set
      - excel.Excel.Comment.set_1
      - excel.Excel.Comment.toJSON
  - uid: excel.Excel.Comment.authorEmail
    summary: |-
      <span data-ttu-id="289cd-103">Ruft die E-Mail-Adresse des Kommentarautors ab.</span><span class="sxs-lookup"><span data-stu-id="289cd-103">Get author email of the comment.</span></span>

      <span data-ttu-id="289cd-104">\[[API-Satz: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="289cd-104">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: authorEmail
    fullName: authorEmail
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly authorEmail: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Comment.authorName
    summary: |-
      <span data-ttu-id="289cd-105">Ruft den Namen des Kommentarautors ab.</span><span class="sxs-lookup"><span data-stu-id="289cd-105">Get author name of the comment.</span></span>

      <span data-ttu-id="289cd-106">\[[API-Satz: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="289cd-106">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: authorName
    fullName: authorName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly authorName: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Comment.content
    summary: |-
      <span data-ttu-id="289cd-107">Inhalt abrufen oder festlegen.</span><span class="sxs-lookup"><span data-stu-id="289cd-107">Get or set the content.</span></span>

      <span data-ttu-id="289cd-108">\[[API-Satz: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="289cd-108">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: content
    fullName: content
    langs:
      - typeScript
    type: property
    syntax:
      content: 'content: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="289cd-109">Beispiele</span><span class="sxs-lookup"><span data-stu-id="289cd-109">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const comment = context.workbook.comments.getItemAt(0);
              comment.content = "PLEASE add headers here.";
              await context.sync();
          });
          ```
  - uid: excel.Excel.Comment.context
    summary: <span data-ttu-id="289cd-110">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="289cd-110">The request context associated with the object.</span></span> <span data-ttu-id="289cd-111">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="289cd-111">This connects the add-in's process to the Office host application's process.</span></span>
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.Comment.creationDate
    summary: |-
      <span data-ttu-id="289cd-112">Ruft den Erstellungszeitpunkt des Kommentars ab.</span><span class="sxs-lookup"><span data-stu-id="289cd-112">Get creation time of the comment.</span></span> <span data-ttu-id="289cd-113">Gibt NULL zurück, wenn der Kommentar aus einer Notiz konvertiert wurde, wie in diesem Fall, dann weist der Kommentar kein Erstellungsdatum auf.</span><span class="sxs-lookup"><span data-stu-id="289cd-113">Will return null if the comment is converted from note, as in this case, the comment will not has created date.</span></span>

      <span data-ttu-id="289cd-114">\[[API-Satz: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="289cd-114">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: creationDate
    fullName: creationDate
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly creationDate: Date;'
      return:
        type:
          - Date
  - uid: excel.Excel.Comment.delete
    summary: |-
      <span data-ttu-id="289cd-115">Löscht den Kommentarthread.</span><span class="sxs-lookup"><span data-stu-id="289cd-115">Deletes the comment thread.</span></span>

      <span data-ttu-id="289cd-116">\[[API-Satz: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="289cd-116">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="289cd-117">Beispiele</span><span class="sxs-lookup"><span data-stu-id="289cd-117">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              context.workbook.comments.getItemByCell("Comments!A2").delete();
              await context.sync();
          });
          ```
  - uid: excel.Excel.Comment.getLocation
    summary: |-
      <span data-ttu-id="289cd-118">Ruft den Speicherort des Kommentars ab.</span><span class="sxs-lookup"><span data-stu-id="289cd-118">Get location of the comment.</span></span>

      <span data-ttu-id="289cd-119">\[[API-Satz: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="289cd-119">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getLocation()
    fullName: getLocation()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLocation(): Excel.Range;'
      return:
        type:
          - excel.Excel.Range
        description: ''
  - uid: excel.Excel.Comment.id
    summary: |-
      <span data-ttu-id="289cd-120">Stellt die Kommentar-ID dar.</span><span class="sxs-lookup"><span data-stu-id="289cd-120">Represents the comment identifier.</span></span> <span data-ttu-id="289cd-121">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="289cd-121">Read-only.</span></span>

      <span data-ttu-id="289cd-122">\[[API-Satz: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="289cd-122">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: excel.Excel.Comment.load
    summary: <span data-ttu-id="289cd-123">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="289cd-123">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="289cd-124">Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.</span><span class="sxs-lookup"><span data-stu-id="289cd-124">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="289cd-125">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="289cd-125">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="289cd-126">`load(option?: string | string[]): Excel.Comment`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="289cd-126">`load(option?: string | string[]): Excel.Comment` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="289cd-127">`load(option?: { select?: string; expand?: string; }): Excel.Comment`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="289cd-127">`load(option?: { select?: string; expand?: string; }): Excel.Comment` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="289cd-128">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Comment`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="289cd-128">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Comment` - Only available on collection types.</span></span> <span data-ttu-id="289cd-129">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="289cd-129">It is similar to the preceding signature.</span></span> <span data-ttu-id="289cd-130">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="289cd-130">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="289cd-131">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="289cd-131">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="289cd-132">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="289cd-132">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.CommentLoadOptions): Excel.Comment;'
      return:
        type:
          - excel.Excel.Comment
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.CommentLoadOptions
  - uid: excel.Excel.Comment.load_1
    summary: <span data-ttu-id="289cd-133">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="289cd-133">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="289cd-134">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="289cd-134">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Comment;'
      return:
        type:
          - excel.Excel.Comment
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="289cd-135">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="289cd-135">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.Comment.load_2
    summary: <span data-ttu-id="289cd-136">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="289cd-136">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="289cd-137">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="289cd-137">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Comment;'
      return:
        type:
          - excel.Excel.Comment
        description: |-


          #### <a name="examples"></a><span data-ttu-id="289cd-138">Beispiele</span><span class="sxs-lookup"><span data-stu-id="289cd-138">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const comment = context.workbook.comments.getItemByCell("Comments!A2");
              comment.load(["authorEmail", "authorName", "creationDate"]);
              await context.sync();

              console.log(`${comment.creationDate.toDateString()}: ${comment.authorName} (${comment.authorEmail})`);
              await context.sync();
          });
          ```
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="289cd-139">Wobei propertyNamesAndPaths. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="289cd-139">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.Comment.replies
    summary: |-
      <span data-ttu-id="289cd-140">Stellt eine Sammlung der Antwortobjekte dar, die dem Kommentar zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="289cd-140">Represents a collection of reply objects associated with the comment.</span></span> <span data-ttu-id="289cd-141">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="289cd-141">Read-only.</span></span>

      <span data-ttu-id="289cd-142">\[[API-Satz: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="289cd-142">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: replies
    fullName: replies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly replies: Excel.CommentReplyCollection;'
      return:
        type:
          - excel.Excel.CommentReplyCollection
  - uid: excel.Excel.Comment.set
    summary: '<span data-ttu-id="289cd-143">Legt mehrere Eigenschaften eines Objekts gleichzeitig fest.</span><span class="sxs-lookup"><span data-stu-id="289cd-143">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="289cd-144">Sie können entweder ein plain-Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs weitergeben.</span><span class="sxs-lookup"><span data-stu-id="289cd-144">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="289cd-145">Diese Methode hat die folgende zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="289cd-145">This method has the following additional signature:</span></span>

      `set(properties: Excel.Comment): void`
    isPreview: true
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.CommentUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="289cd-146">Ein JavaScript-Objekt mit Eigenschaften, die isomorphically strukturiert sind, um die Eigenschaften des Objekts, für das die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="289cd-146">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.CommentUpdateData
        - id: options
          description: '<span data-ttu-id="289cd-147">Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.</span><span class="sxs-lookup"><span data-stu-id="289cd-147">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: excel.Excel.Comment.set_1
    summary: '<span data-ttu-id="289cd-148">Legt mehrere Eigenschaften für das Objekt auf der Grundlage eines vorhandenen geladenen Objekts zur gleichen Zeit fest.</span><span class="sxs-lookup"><span data-stu-id="289cd-148">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    isPreview: true
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Comment): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.Comment
  - uid: excel.Excel.Comment.toJSON
    summary: '<span data-ttu-id="289cd-149">Überschreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API-Objekt an`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="289cd-149">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="289cd-150">.</span><span class="sxs-lookup"><span data-stu-id="289cd-150"></span></span> <span data-ttu-id="289cd-151">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="289cd-151"></span></span><!-- --><span data-ttu-id="289cd-152">Ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche Excel. Comment-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt zurück (typisiert als`Excel.Interfaces.CommentData`</span><span class="sxs-lookup"><span data-stu-id="289cd-152">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Comment object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.CommentData`</span></span><!-- --><span data-ttu-id="289cd-153">), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="289cd-153">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.CommentData;'
      return:
        type:
          - excel.Excel.Interfaces.CommentData
        description: ''