### YamlMime:UniversalReference
ms.openlocfilehash: 785d5848eb390d36b23d5ba13636e8396f249c07
ms.sourcegitcommit: 06eebee5e68d349f78e6bc3bb0ef099fe063cf04
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 01/17/2019
ms.locfileid: "28724332"
items:
- uid: excel.Excel.ChartLegendEntryCollection
  summary: >-
    <span data-ttu-id="456d0-101">Stellt eine Auflistung von LegendEntries dar.</span><span class="sxs-lookup"><span data-stu-id="456d0-101">Represents a collection of legendEntries.</span></span>


    <span data-ttu-id="456d0-102">\[[API-Satz: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="456d0-102">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.ChartLegendEntryCollection
  fullName: Excel.ChartLegendEntryCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.ChartLegendEntryCollection.context
  - excel.Excel.ChartLegendEntryCollection.getCount
  - excel.Excel.ChartLegendEntryCollection.getItemAt
  - excel.Excel.ChartLegendEntryCollection.items
  - excel.Excel.ChartLegendEntryCollection.load
  - excel.Excel.ChartLegendEntryCollection.toJSON
- uid: excel.Excel.ChartLegendEntryCollection.context
  summary: <span data-ttu-id="456d0-103">Der Anforderungskontext-zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="456d0-103">The request context associated with the object.</span></span> <span data-ttu-id="456d0-104">Dadurch wird das Add-in Prozess mit der Office-hostanwendung Prozess verbunden.</span><span class="sxs-lookup"><span data-stu-id="456d0-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.ChartLegendEntryCollection.getCount
  summary: >-
    <span data-ttu-id="456d0-105">Gibt die Anzahl der legendEntry-Objekte in der Sammlung zurück.</span><span class="sxs-lookup"><span data-stu-id="456d0-105">Returns the number of legendEntry in the collection.</span></span>


    <span data-ttu-id="456d0-106">\[[API-Satz: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="456d0-106">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getCount()
  fullName: getCount
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.ChartLegendEntryCollection.getItemAt
  summary: >-
    <span data-ttu-id="456d0-107">Gibt einen LegendEntry im angegebenen Index zurück.</span><span class="sxs-lookup"><span data-stu-id="456d0-107">Returns a legendEntry at the given index.</span></span>


    <span data-ttu-id="456d0-108">\[[API-Satz: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="456d0-108">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: getItemAt
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): Excel.ChartLegendEntry;'
    return:
      type:
      - excel.Excel.ChartLegendEntry
      description: ''
    parameters:
    - id: index
      description: <span data-ttu-id="456d0-109">Index der der LegendEntry abgerufen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="456d0-109">Index of the legendEntry to be retrieved.</span></span>
      type:
      - number
- uid: excel.Excel.ChartLegendEntryCollection.items
  summary: <span data-ttu-id="456d0-110">Ruft die geladene untergeordnete Elemente in dieser Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="456d0-110">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.ChartLegendEntry[];'
    return:
      type:
      - Excel.ChartLegendEntry[]
- uid: excel.Excel.ChartLegendEntryCollection.load
  summary: <span data-ttu-id="456d0-111">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="456d0-111">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="456d0-112">Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="456d0-112">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="456d0-113">Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="456d0-113">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="456d0-114">`load(option?: { select?: string; expand?: string; }): Excel.ChartLegendEntryCollection`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class="sxs-lookup"><span data-stu-id="456d0-114">`load(option?: { select?: string; expand?: string; }): Excel.ChartLegendEntryCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="456d0-115">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartLegendEntryCollection`-Nur auf Auflistungstypen verfügbar.</span><span class="sxs-lookup"><span data-stu-id="456d0-115">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ChartLegendEntryCollection` - Only available on collection types.</span></span> <span data-ttu-id="456d0-116">Es ist ähnlich wie die jeweils vorhergehende Signatur.</span><span class="sxs-lookup"><span data-stu-id="456d0-116">It is similar to the preceding signature.</span></span> <span data-ttu-id="456d0-117">Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können.</span><span class="sxs-lookup"><span data-stu-id="456d0-117">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="456d0-118">Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="456d0-118">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="456d0-119">Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.</span><span class="sxs-lookup"><span data-stu-id="456d0-119">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.ChartLegendEntryCollection;'
    return:
      type:
      - excel.Excel.ChartLegendEntryCollection
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="456d0-120">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="456d0-120">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.ChartLegendEntryCollection.toJSON
  summary: <span data-ttu-id="456d0-121">Überschreibt das JavaScript `toJSON()` Methode, um nützliche Ausgabe zu gewährleisten, wenn ein API-Objekt zu übergeben ist `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="456d0-121">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="456d0-122">(`JSON.stringify`<!-- -->, wiederum die `toJSON` -Methode des Objekts, das es übergeben wird.) Während der ursprünglichen `Excel.ChartLegendEntryCollection` Objekt ist ein API-Objekt der `toJSON` -Methode gibt eine einfache JavaScript-Objekt zurück (als `Excel.Interfaces.ChartLegendEntryCollectionData` <!-- -->), die ein Array "Elemente" mit flache Kopien der geladenen Eigenschaften aus der Auflistung von Elementen enthält.</span><span class="sxs-lookup"><span data-stu-id="456d0-122">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.ChartLegendEntryCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartLegendEntryCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ChartLegendEntryCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.ChartLegendEntryCollectionData
      description: ''
