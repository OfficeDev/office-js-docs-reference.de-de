### YamlMime:UniversalReference
items:
  - uid: excel.Excel.SettingCollection
    summary: |-
      <span data-ttu-id="20812-101">Stellt eine Auflistung von Schlüssel-Wert-Paar-Einstellungs Objekten dar, die Teil der Arbeitsmappe sind.</span><span class="sxs-lookup"><span data-stu-id="20812-101">Represents a collection of key-value pair setting objects that are part of the workbook.</span></span> <span data-ttu-id="20812-102">Der Bereich ist auf pro Datei und Add-in (Aufgabenbereich oder Inhalts-Kombination) beschränkt.</span><span class="sxs-lookup"><span data-stu-id="20812-102">The scope is limited to per file and add-in (task-pane or content) combination.</span></span>

      <span data-ttu-id="20812-103">\[[API-Gruppe: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="20812-103">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.SettingCollection
    fullName: Excel.SettingCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.SettingCollection.add
      - excel.Excel.SettingCollection.context
      - excel.Excel.SettingCollection.getCount
      - excel.Excel.SettingCollection.getItem
      - excel.Excel.SettingCollection.getItemOrNullObject
      - excel.Excel.SettingCollection.items
      - excel.Excel.SettingCollection.load
      - excel.Excel.SettingCollection.load_1
      - excel.Excel.SettingCollection.load_2
      - excel.Excel.SettingCollection.onSettingsChanged
      - excel.Excel.SettingCollection.toJSON
  - uid: excel.Excel.SettingCollection.add
    summary: |-
      <span data-ttu-id="20812-104">Legt die angegebene Einstellung fest oder fügt sie zur Arbeitsmappe hinzu.</span><span class="sxs-lookup"><span data-stu-id="20812-104">Sets or adds the specified setting to the workbook.</span></span>

      <span data-ttu-id="20812-105">\[[API-Gruppe: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="20812-105">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'add(key, value)'
    fullName: 'add(key, value)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(key: string, value: string | number | boolean | Date | Array<any> | any): Excel.Setting;'
      return:
        type:
          - excel.Excel.Setting
        description: |-


          #### <a name="examples"></a><span data-ttu-id="20812-106">Beispiele</span><span class="sxs-lookup"><span data-stu-id="20812-106">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const settings = context.workbook.settings; 
              settings.onSettingsChanged.add(onChangedSetting);

              await context.sync();
              console.log("Settings changed handler registered.");
          });
          ```
      parameters:
        - id: key
          description: <span data-ttu-id="20812-107">Der Schlüssel der neuen Einstellung.</span><span class="sxs-lookup"><span data-stu-id="20812-107">The Key of the new setting.</span></span>
          type:
            - string
        - id: value
          description: <span data-ttu-id="20812-108">Der Wert der neuen Einstellung.</span><span class="sxs-lookup"><span data-stu-id="20812-108">The Value for the new setting.</span></span>
          type:
            - string | number | boolean | Date | Array<any> | any
  - uid: excel.Excel.SettingCollection.context
    summary: '<span data-ttu-id="20812-109">Der Anforderungskontext, der mit dem Objekt verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="20812-109">The request context associated with the object.</span></span> <span data-ttu-id="20812-110">Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="20812-110">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.SettingCollection.getCount
    summary: |-
      <span data-ttu-id="20812-111">Ruft die Anzahl der Einstellungen in der Sammlung ab.</span><span class="sxs-lookup"><span data-stu-id="20812-111">Gets the number of Settings in the collection.</span></span>

      <span data-ttu-id="20812-112">\[[API-Gruppe: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="20812-112">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.SettingCollection.getItem
    summary: |-
      <span data-ttu-id="20812-113">Ruft einen Setting-Eintrag über den Schlüssel ab.</span><span class="sxs-lookup"><span data-stu-id="20812-113">Gets a Setting entry via the key.</span></span>

      <span data-ttu-id="20812-114">\[[API-Gruppe: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="20812-114">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Setting;'
      return:
        type:
          - excel.Excel.Setting
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="20812-115">Schlüssel der Einstellung.</span><span class="sxs-lookup"><span data-stu-id="20812-115">Key of the setting.</span></span>
          type:
            - string
  - uid: excel.Excel.SettingCollection.getItemOrNullObject
    summary: |-
      <span data-ttu-id="20812-116">Ruft einen Setting-Eintrag über den Schlüssel ab.</span><span class="sxs-lookup"><span data-stu-id="20812-116">Gets a Setting entry via the key.</span></span> <span data-ttu-id="20812-117">Wenn das Setting-Objekt nicht vorhanden ist, wird ein NULL-Objekt zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="20812-117">If the Setting does not exist, will return a null object.</span></span>

      <span data-ttu-id="20812-118">\[[API-Gruppe: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="20812-118">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemOrNullObject(key)
    fullName: getItemOrNullObject(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: string): Excel.Setting;'
      return:
        type:
          - excel.Excel.Setting
        description: |-


          #### <a name="examples"></a><span data-ttu-id="20812-119">Beispiele</span><span class="sxs-lookup"><span data-stu-id="20812-119">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const settings = context.workbook.settings;
              let needsReview = settings.getItem("NeedsReview");
              needsReview.delete();
              needsReview = settings.getItemOrNullObject("NeedsReview");

              await context.sync();

              if (needsReview.isNullObject) {
                  console.log("The setting has been deleted");
              } else {
                  console.log("The setting was not deleted");
              }

              await context.sync();
          });
          ```
      parameters:
        - id: key
          description: <span data-ttu-id="20812-120">Der Schlüssel der Einstellung.</span><span class="sxs-lookup"><span data-stu-id="20812-120">The key of the setting.</span></span>
          type:
            - string
  - uid: excel.Excel.SettingCollection.items
    summary: <span data-ttu-id="20812-121">Ruft die geladenen untergeordneten Elemente in dieser Sammlung ab.</span><span class="sxs-lookup"><span data-stu-id="20812-121">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Setting[];'
      return:
        type:
          - 'Excel.Setting[]'
  - uid: excel.Excel.SettingCollection.load
    summary: <span data-ttu-id="20812-122">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="20812-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="20812-123">Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.</span><span class="sxs-lookup"><span data-stu-id="20812-123">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="20812-124">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="20812-124">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="20812-125">`load(option?: string | string[]): Excel.SettingCollection`-Wobei Option eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="20812-125">`load(option?: string | string[]): Excel.SettingCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="20812-126">`load(option?: { select?: string; expand?: string; }): Excel.SettingCollection`-Bei Option. Select handelt es sich um eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="20812-126">`load(option?: { select?: string; expand?: string; }): Excel.SettingCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="20812-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SettingCollection`Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="20812-127">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SettingCollection` - Only available on collection types.</span></span> <span data-ttu-id="20812-128">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="20812-128">It is similar to the preceding signature.</span></span> <span data-ttu-id="20812-129">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis einbezogen werden können.</span><span class="sxs-lookup"><span data-stu-id="20812-129">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="20812-130">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="20812-130">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="20812-131">Wenn Option. Top angegeben ist, wird das Resultset gestartet, nachdem die angegebene Anzahl von Elementen übersprungen wurde.</span><span class="sxs-lookup"><span data-stu-id="20812-131">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.SettingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.SettingCollection;'
      return:
        type:
          - excel.Excel.SettingCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.SettingCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.SettingCollection.load_1
    summary: <span data-ttu-id="20812-132">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="20812-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="20812-133">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="20812-133">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.SettingCollection;'
      return:
        type:
          - excel.Excel.SettingCollection
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="20812-134">Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="20812-134">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.SettingCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.SettingCollection;'
      return:
        type:
          - excel.Excel.SettingCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - OfficeExtension.LoadOption
  - uid: excel.Excel.SettingCollection.onSettingsChanged
    summary: |-
      <span data-ttu-id="20812-135">Tritt ein, wenn die Einstellungen im Dokument geändert werden.</span><span class="sxs-lookup"><span data-stu-id="20812-135">Occurs when the Settings in the document are changed.</span></span>

      <span data-ttu-id="20812-136">\[[API-Gruppe: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="20812-136">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onSettingsChanged
    fullName: onSettingsChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSettingsChanged: OfficeExtension.EventHandlers<Excel.SettingsChangedEventArgs>;'
      return:
        type:
          - OfficeExtension.EventHandlers<Excel.SettingsChangedEventArgs>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="20812-137">Beispiele</span><span class="sxs-lookup"><span data-stu-id="20812-137">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const settings = context.workbook.settings; 
              settings.onSettingsChanged.add(onChangedSetting);

              await context.sync();
              console.log("Settings changed handler registered.");
          });
          ```
  - uid: excel.Excel.SettingCollection.toJSON
    summary: '<span data-ttu-id="20812-138">Überschreibt die `toJSON()` JavaScript-Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird.`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="20812-138">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="20812-139">.</span><span class="sxs-lookup"><span data-stu-id="20812-139"></span></span> <span data-ttu-id="20812-140">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="20812-140"></span></span><!-- --><span data-ttu-id="20812-141">wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche `Excel.SettingCollection` Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`Excel.Interfaces.SettingCollectionData`</span><span class="sxs-lookup"><span data-stu-id="20812-141">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.SettingCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SettingCollectionData`</span></span><!-- --><span data-ttu-id="20812-142">), die ein "Items"-Array mit flachen Kopien aller geladenen Eigenschaften aus den Elementen der Auflistung enthält.</span><span class="sxs-lookup"><span data-stu-id="20812-142">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SettingCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.SettingCollectionData
        description: ''