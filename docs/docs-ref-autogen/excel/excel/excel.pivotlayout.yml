### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.PivotLayout:class'
    summary: |-
      <span data-ttu-id="9a6e5-101">Stellt das visuelle Layout der PivotTable dar.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-101">Represents the visual layout of the PivotTable.</span></span>

      <span data-ttu-id="9a6e5-102">\[[API-Gruppe: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a6e5-102">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.PivotLayout
    fullName: Excel.PivotLayout
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.PivotLayout#autoFormat:member'
      - 'excel!Excel.PivotLayout#context:member'
      - 'excel!Excel.PivotLayout#enableFieldList:member'
      - 'excel!Excel.PivotLayout#getCell:member(1)'
      - 'excel!Excel.PivotLayout#getColumnLabelRange:member(1)'
      - 'excel!Excel.PivotLayout#getDataBodyRange:member(1)'
      - 'excel!Excel.PivotLayout#getDataHierarchy:member(1)'
      - 'excel!Excel.PivotLayout#getFilterAxisRange:member(1)'
      - 'excel!Excel.PivotLayout#getPivotItems:member(1)'
      - 'excel!Excel.PivotLayout#getPivotItems:member(2)'
      - 'excel!Excel.PivotLayout#getRange:member(1)'
      - 'excel!Excel.PivotLayout#getRowLabelRange:member(1)'
      - 'excel!Excel.PivotLayout#layoutType:member'
      - 'excel!Excel.PivotLayout#load:member(1)'
      - 'excel!Excel.PivotLayout#load:member(2)'
      - 'excel!Excel.PivotLayout#load:member(3)'
      - 'excel!Excel.PivotLayout#preserveFormatting:member'
      - 'excel!Excel.PivotLayout#set:member(1)'
      - 'excel!Excel.PivotLayout#set:member(2)'
      - 'excel!Excel.PivotLayout#setAutoSortOnCell:member(1)'
      - 'excel!Excel.PivotLayout#setAutoSortOnCell:member(2)'
      - 'excel!Excel.PivotLayout#showColumnGrandTotals:member'
      - 'excel!Excel.PivotLayout#showRowGrandTotals:member'
      - 'excel!Excel.PivotLayout#subtotalLocation:member'
      - 'excel!Excel.PivotLayout#toJSON:member(1)'
  - uid: 'excel!Excel.PivotLayout#autoFormat:member'
    summary: |-
      <span data-ttu-id="9a6e5-103">Gibt an, ob die Formatierung bei Aktualisierung oder beim Entfernen von Feldern automatisch angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-103">Specifies whether formatting will be automatically formatted when it’s refreshed or when fields are moved</span></span>

      <span data-ttu-id="9a6e5-104">\[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a6e5-104">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: autoFormat
    fullName: autoFormat
    langs:
      - typeScript
    type: property
    syntax:
      content: 'autoFormat: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PivotLayout#context:member'
    summary: '<span data-ttu-id="9a6e5-105">Der Anforderungskontext, der mit dem Objekt verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-105">The request context associated with the object.</span></span> <span data-ttu-id="9a6e5-106">Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-106">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.PivotLayout#enableFieldList:member'
    summary: |-
      <span data-ttu-id="9a6e5-107">Gibt an, ob die Feldliste auf der Benutzeroberfläche angezeigt werden kann.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-107">Specifies whether the field list can be shown in the UI.</span></span>

      <span data-ttu-id="9a6e5-108">\[[API-Gruppe: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a6e5-108">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: enableFieldList
    fullName: enableFieldList
    langs:
      - typeScript
    type: property
    syntax:
      content: 'enableFieldList: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PivotLayout#getCell:member(1)'
    summary: |-
      <span data-ttu-id="9a6e5-109">Ruft eine eindeutige Zelle in der PivotTable ab, die auf einer Datenhierarchie und den Zeilen- und Spaltenelementen ihrer jeweiligen Hierarchie basiert.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-109">Gets a unique cell in the PivotTable based on a data hierarchy and the row and column items of their respective hierarchies.</span></span> <span data-ttu-id="9a6e5-110">Die zurückgegebene Zelle ist der Schnittpunkt der angegebenen Zeile und Spalte, welche die Daten aus der angegebenen Hierarchie enthält.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-110">The returned cell is the intersection of the given row and column that contains the data from the given hierarchy.</span></span> <span data-ttu-id="9a6e5-111">Diese Methode ist die Umkehrung des Aufrufs von getPivotItems und getDataHierarchy auf einer bestimmten Zelle.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-111">This method is the inverse of calling getPivotItems and getDataHierarchy on a particular cell.</span></span>

      <span data-ttu-id="9a6e5-112">\[[API-Gruppe: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a6e5-112">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'getCell(dataHierarchy, rowItems, columnItems)'
    fullName: 'getCell(dataHierarchy, rowItems, columnItems)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCell(dataHierarchy: DataPivotHierarchy | string, rowItems: Array<PivotItem | string>, columnItems: Array<PivotItem | string>): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: '<span data-ttu-id="9a6e5-113">Ein Bereich, der eine einzelne Zelle angibt, die den angegebenen Wert enthält.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-113">A range specifying a single cell that contains the value specified.</span></span>'
      parameters:
        - id: dataHierarchy
          description: '<span data-ttu-id="9a6e5-114">Die datahierarchy, die das zu findende Datenelement bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-114">The dataHierarchy that provides the data item to find.</span></span>'
          type:
            - 'excel!Excel.PivotLayout#getCell~0:complex'
        - id: rowItems
          description: '<span data-ttu-id="9a6e5-115">Das PivotItems-Argument von der Zeilenachse, aus der sich der zu findende Wert zusammensetzen soll.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-115">The PivotItems from the row axis that make up the value to find.</span></span>'
          type:
            - 'excel!Excel.PivotLayout#getCell~1:complex'
        - id: columnItems
          description: '<span data-ttu-id="9a6e5-116">Das PivotItems-Argument von der Spaltenachse, aus dem sich der zu findende Wert zusammensetzen soll.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-116">The PivotItems from the column axis that make up the value to find.</span></span>'
          type:
            - 'excel!Excel.PivotLayout#getCell~2:complex'
  - uid: 'excel!Excel.PivotLayout#getColumnLabelRange:member(1)'
    summary: |-
      <span data-ttu-id="9a6e5-117">Gibt den Bereich zurück, in dem sich die Spaltenbeschriftungen in PivotTable befinden.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-117">Returns the range where the PivotTable's column labels reside.</span></span>

      <span data-ttu-id="9a6e5-118">\[[API-Gruppe: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a6e5-118">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getColumnLabelRange()
    fullName: getColumnLabelRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getColumnLabelRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
  - uid: 'excel!Excel.PivotLayout#getDataBodyRange:member(1)'
    summary: |-
      <span data-ttu-id="9a6e5-119">Gibt den Bereich zurück, in dem sich die Datenwerte in PivotTable befinden.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-119">Returns the range where the PivotTable's data values reside.</span></span>

      <span data-ttu-id="9a6e5-120">\[[API-Gruppe: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a6e5-120">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getDataBodyRange()
    fullName: getDataBodyRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataBodyRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="9a6e5-121">Beispiele</span><span class="sxs-lookup"><span data-stu-id="9a6e5-121">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");

              // the layout controls the ranges used by the PivotTable
              const range = pivotTable.layout.getDataBodyRange();

              // get all the data hierarchy totals
              const grandTotalRange = range.getLastRow();
              grandTotalRange.load("address");
              await context.sync();
              
              // use the wholesale and farm sale totals to make a final sum
              const masterTotalRange = context.workbook.worksheets.getActiveWorksheet().getRange("B27:C27");
              masterTotalRange.formulas = [["All Crates", "=SUM(" + grandTotalRange.address + ")"]];
              await context.sync();
          });
          ```
  - uid: 'excel!Excel.PivotLayout#getDataHierarchy:member(1)'
    summary: |-
      <span data-ttu-id="9a6e5-122">Ruft die DataHierarchy ab, die zum Berechnen des Werts in einem angegebenen Bereich innerhalb der PivotTable verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-122">Gets the DataHierarchy that is used to calculate the value in a specified range within the PivotTable.</span></span>

      <span data-ttu-id="9a6e5-123">\[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a6e5-123">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getDataHierarchy(cell)
    fullName: getDataHierarchy(cell)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataHierarchy(cell: Range | string): Excel.DataPivotHierarchy;'
      return:
        type:
          - 'excel!Excel.DataPivotHierarchy:class'
        description: '<span data-ttu-id="9a6e5-124">Das DataPivotHierarchy-Objekt, mit dem der Wert in der angegebenen Zelle berechnet wird.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-124">The DataPivotHierarchy object used to calculate the value in the specified cell.</span></span>'
      parameters:
        - id: cell
          description: <span data-ttu-id="9a6e5-125">Eine einzelne Zelle innerhalb des PivotTable-Daten Texts.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-125">A single cell within the PivotTable data body.</span></span>
          type:
            - 'excel!Excel.PivotLayout#getDataHierarchy~0:complex'
  - uid: 'excel!Excel.PivotLayout#getFilterAxisRange:member(1)'
    summary: |-
      <span data-ttu-id="9a6e5-126">Gibt den Bereich des Filterbereichs von PivotTable zurück.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-126">Returns the range of the PivotTable's filter area.</span></span>

      <span data-ttu-id="9a6e5-127">\[[API-Gruppe: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a6e5-127">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getFilterAxisRange()
    fullName: getFilterAxisRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFilterAxisRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
  - uid: 'excel!Excel.PivotLayout#getPivotItems:member(1)'
    summary: |-
      <span data-ttu-id="9a6e5-128">Ruft die PivotItems von einer Achse ab, die den Wert in einem angegebenen Bereich innerhalb der PivotTable bilden.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-128">Gets the PivotItems from an axis that make up the value in a specified range within the PivotTable.</span></span>

      <span data-ttu-id="9a6e5-129">\[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a6e5-129">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'getPivotItems(axis, cell)'
    fullName: 'getPivotItems(axis, cell)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPivotItems(axis: Excel.PivotAxis, cell: Range | string): OfficeExtension.ClientResult<Excel.PivotItem[]>;'
      return:
        type:
          - 'excel!Excel.PivotLayout#getPivotItems~0:complex'
        description: '<span data-ttu-id="9a6e5-130">Eine Auflistung von PivotItems, die verwendet werden, um die Werte in der angegebenen Zeile zu berechnen.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-130">A collection of PivotItems that are used to calculate the values in the specified row.</span></span>'
      parameters:
        - id: axis
          description: '<span data-ttu-id="9a6e5-131">Die Achse, aus der das PivotItems abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-131">The axis from which to get the PivotItems.</span></span> <span data-ttu-id="9a6e5-132">Muss entweder "Row" oder "Column" lauten.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-132">Must be either "row" or "column."</span></span>'
          type:
            - 'excel!Excel.PivotAxis:enum'
        - id: cell
          description: <span data-ttu-id="9a6e5-133">Eine einzelne Zelle im Daten Textkörper der PivotTable.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-133">A single cell within the PivotTable's data body.</span></span>
          type:
            - 'excel!Excel.PivotLayout#getPivotItems~1:complex'
  - uid: 'excel!Excel.PivotLayout#getPivotItems:member(2)'
    summary: |-
      <span data-ttu-id="9a6e5-134">Ruft die PivotItems von einer Achse ab, die den Wert in einem angegebenen Bereich innerhalb der PivotTable bilden.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-134">Gets the PivotItems from an axis that make up the value in a specified range within the PivotTable.</span></span>

      <span data-ttu-id="9a6e5-135">\[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a6e5-135">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'getPivotItems(axisString, cell)'
    fullName: 'getPivotItems(axisString, cell)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPivotItems(axisString: "Unknown" | "Row" | "Column" | "Data" | "Filter", cell: Range | string): OfficeExtension.ClientResult<Excel.PivotItem[]>;'
      return:
        type:
          - 'excel!Excel.PivotLayout#getPivotItems~2:complex'
        description: '<span data-ttu-id="9a6e5-136">Eine Auflistung von PivotItems, die verwendet werden, um die Werte in der angegebenen Zeile zu berechnen.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-136">A collection of PivotItems that are used to calculate the values in the specified row.</span></span>'
      parameters:
        - id: axisString
          description: '<span data-ttu-id="9a6e5-137">Die Achse, aus der das PivotItems abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-137">The axis from which to get the PivotItems.</span></span> <span data-ttu-id="9a6e5-138">Muss entweder "Row" oder "Column" lauten.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-138">Must be either "row" or "column."</span></span>'
          type:
            - '"Unknown" | "Row" | "Column" | "Data" | "Filter"'
        - id: cell
          description: <span data-ttu-id="9a6e5-139">Eine einzelne Zelle im Daten Textkörper der PivotTable.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-139">A single cell within the PivotTable's data body.</span></span>
          type:
            - 'excel!Excel.PivotLayout#getPivotItems~3:complex'
  - uid: 'excel!Excel.PivotLayout#getRange:member(1)'
    summary: |-
      <span data-ttu-id="9a6e5-140">Gibt den Bereich an, in dem PivotTable vorhanden ist, mit Ausnahme des Filterbereichs.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-140">Returns the range the PivotTable exists on, excluding the filter area.</span></span>

      <span data-ttu-id="9a6e5-141">\[[API-Gruppe: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a6e5-141">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
  - uid: 'excel!Excel.PivotLayout#getRowLabelRange:member(1)'
    summary: |-
      <span data-ttu-id="9a6e5-142">Gibt den Bereich zurück, in dem sich die Zeilenbeschriftungen in PivotTable befinden.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-142">Returns the range where the PivotTable's row labels reside.</span></span>

      <span data-ttu-id="9a6e5-143">\[[API-Gruppe: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a6e5-143">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRowLabelRange()
    fullName: getRowLabelRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRowLabelRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
  - uid: 'excel!Excel.PivotLayout#layoutType:member'
    summary: |-
      <span data-ttu-id="9a6e5-144">Diese Eigenschaft gibt das PivotLayoutType-Objekt aller Felder in PivotTable an.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-144">This property indicates the PivotLayoutType of all fields on the PivotTable.</span></span> <span data-ttu-id="9a6e5-145">Wenn Felder verschiedenen Status aufweisen, lautet dies NULL.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-145">If fields have different states, this will be null.</span></span>

      <span data-ttu-id="9a6e5-146">\[[API-Gruppe: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a6e5-146">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: layoutType
    fullName: layoutType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'layoutType: Excel.PivotLayoutType | "Compact" | "Tabular" | "Outline";'
      return:
        type:
          - 'excel!Excel.PivotLayout#layoutType~0:complex'
  - uid: 'excel!Excel.PivotLayout#load:member(1)'
    summary: <span data-ttu-id="9a6e5-147">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-147">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="9a6e5-148">Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-148">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="9a6e5-149">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="9a6e5-149">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="9a6e5-150">`load(option?: string | string[]): Excel.PivotLayout`-Wobei Option eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-150">`load(option?: string | string[]): Excel.PivotLayout` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="9a6e5-151">`load(option?: { select?: string; expand?: string; }): Excel.PivotLayout`-Bei Option. Select handelt es sich um eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-151">`load(option?: { select?: string; expand?: string; }): Excel.PivotLayout` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="9a6e5-152">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotLayout`Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-152">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotLayout` - Only available on collection types.</span></span> <span data-ttu-id="9a6e5-153">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-153">It is similar to the preceding signature.</span></span> <span data-ttu-id="9a6e5-154">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis einbezogen werden können.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-154">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="9a6e5-155">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-155">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="9a6e5-156">Wenn Option. Top angegeben ist, wird das Resultset gestartet, nachdem die angegebene Anzahl von Elementen übersprungen wurde.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-156">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.PivotLayoutLoadOptions): Excel.PivotLayout;'
      return:
        type:
          - 'excel!Excel.PivotLayout:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.PivotLayoutLoadOptions:interface'
  - uid: 'excel!Excel.PivotLayout#load:member(2)'
    summary: <span data-ttu-id="9a6e5-157">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-157">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="9a6e5-158">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-158">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotLayout;'
      return:
        type:
          - 'excel!Excel.PivotLayout:class'
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="9a6e5-159">Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-159">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.PivotLayout#load:member(3)'
    summary: <span data-ttu-id="9a6e5-160">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-160">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="9a6e5-161">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-161">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.PivotLayout;'
      return:
        type:
          - 'excel!Excel.PivotLayout:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="9a6e5-162">Dabei ist propertyNamesAndPaths. Select eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-162">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.PivotLayout#preserveFormatting:member'
    summary: |-
      <span data-ttu-id="9a6e5-163">Gibt an, ob die Formatierung beim Aktualisieren des Berichts beibehalten oder durch Vorgänge wie Pivotieren, Sortieren oder das Ändern von Feldelementen der Seite neu berechnet wird.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-163">Specifies whether formatting is preserved when the report is refreshed or recalculated by operations such as pivoting, sorting, or changing page field items.</span></span>

      <span data-ttu-id="9a6e5-164">\[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a6e5-164">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: preserveFormatting
    fullName: preserveFormatting
    langs:
      - typeScript
    type: property
    syntax:
      content: 'preserveFormatting: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PivotLayout#set:member(1)'
    summary: '<span data-ttu-id="9a6e5-165">Legt mehrere Eigenschaften eines Objekts gleichzeitig fest.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-165">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="9a6e5-166">Sie können entweder ein einfaches Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs übergeben.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-166">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="9a6e5-167">Diese Methode hat die folgende zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="9a6e5-167">This method has the following additional signature:</span></span>

      `set(properties: Excel.PivotLayout): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.PivotLayoutUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="9a6e5-168">Ein JavaScript-Objekt mit Eigenschaften, die isomorphically für die Eigenschaften des Objekts strukturiert sind, für das die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-168">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - 'excel!Excel.Interfaces.PivotLayoutUpdateData:interface'
        - id: options
          description: '<span data-ttu-id="9a6e5-169">Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-169">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.PivotLayout#set:member(2)'
    summary: '<span data-ttu-id="9a6e5-170">Legt mehrere Eigenschaften für das Objekt gleichzeitig basierend auf einem vorhandenen geladenen Objekt fest.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-170">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.PivotLayout): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.PivotLayout:class'
  - uid: 'excel!Excel.PivotLayout#setAutoSortOnCell:member(1)'
    summary: |-
      <span data-ttu-id="9a6e5-171">Legt fest, dass die PivotTable automatisch nach der angegebenen Zelle sortiert, um automatisch alle notwendigen Kriterien und den Kontext auszuwählen.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-171">Sets the PivotTable to automatically sort using the specified cell to automatically select all necessary criteria and context.</span></span> <span data-ttu-id="9a6e5-172">Dies verhält sich identisch wie das Anwenden eines Autosortes aus der Benutzeroberfläche.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-172">This behaves identically to applying an autosort from the UI.</span></span>

      <span data-ttu-id="9a6e5-173">\[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a6e5-173">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'setAutoSortOnCell(cell, sortBy)'
    fullName: 'setAutoSortOnCell(cell, sortBy)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAutoSortOnCell(cell: Range | string, sortBy: Excel.SortBy): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cell
          description: <span data-ttu-id="9a6e5-174">Eine einzelne zu verwendende Zelle Abrufen der Kriterien aus für die Anwendung der Auto Sortierung.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-174">A single cell to use get the criteria from for applying the autosort.</span></span>
          type:
            - 'excel!Excel.PivotLayout#setAutoSortOnCell~0:complex'
        - id: sortBy
          description: <span data-ttu-id="9a6e5-175">Die Richtung der Sortierung.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-175">The direction of the sort.</span></span>
          type:
            - 'excel!Excel.SortBy:enum'
  - uid: 'excel!Excel.PivotLayout#setAutoSortOnCell:member(2)'
    summary: |-
      <span data-ttu-id="9a6e5-176">Legt fest, dass die PivotTable automatisch nach der angegebenen Zelle sortiert, um automatisch alle notwendigen Kriterien und den Kontext auszuwählen.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-176">Sets the PivotTable to automatically sort using the specified cell to automatically select all necessary criteria and context.</span></span> <span data-ttu-id="9a6e5-177">Dies verhält sich identisch wie das Anwenden eines Autosortes aus der Benutzeroberfläche.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-177">This behaves identically to applying an autosort from the UI.</span></span>

      <span data-ttu-id="9a6e5-178">\[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a6e5-178">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'setAutoSortOnCell(cell, sortByString)'
    fullName: 'setAutoSortOnCell(cell, sortByString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAutoSortOnCell(cell: Range | string, sortByString: "Ascending" | "Descending"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: cell
          description: <span data-ttu-id="9a6e5-179">Eine einzelne zu verwendende Zelle Abrufen der Kriterien aus für die Anwendung der Auto Sortierung.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-179">A single cell to use get the criteria from for applying the autosort.</span></span>
          type:
            - 'excel!Excel.PivotLayout#setAutoSortOnCell~1:complex'
        - id: sortByString
          description: <span data-ttu-id="9a6e5-180">Die Richtung der Sortierung.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-180">The direction of the sort.</span></span>
          type:
            - '"Ascending" | "Descending"'
  - uid: 'excel!Excel.PivotLayout#showColumnGrandTotals:member'
    summary: |-
      <span data-ttu-id="9a6e5-181">Gibt an, ob der PivotTable-Bericht Gesamtergebnisse für Spalten anzeigt.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-181">Specifies whether the PivotTable report shows grand totals for columns.</span></span>

      <span data-ttu-id="9a6e5-182">\[[API-Gruppe: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a6e5-182">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showColumnGrandTotals
    fullName: showColumnGrandTotals
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showColumnGrandTotals: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PivotLayout#showRowGrandTotals:member'
    summary: |-
      <span data-ttu-id="9a6e5-183">Gibt an, ob im PivotTable-Bericht Gesamtergebnisse für Zeilen angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-183">Specifies whether the PivotTable report shows grand totals for rows.</span></span>

      <span data-ttu-id="9a6e5-184">\[[API-Gruppe: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a6e5-184">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showRowGrandTotals
    fullName: showRowGrandTotals
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showRowGrandTotals: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.PivotLayout#subtotalLocation:member'
    summary: |-
      <span data-ttu-id="9a6e5-185">Diese Eigenschaft gibt das SubtotalLocationType-Objekt aller Felder in PivotTable an.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-185">This property indicates the SubtotalLocationType of all fields on the PivotTable.</span></span> <span data-ttu-id="9a6e5-186">Wenn Felder verschiedenen Status aufweisen, lautet dies NULL.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-186">If fields have different states, this will be null.</span></span>

      <span data-ttu-id="9a6e5-187">\[[API-Gruppe: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9a6e5-187">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: subtotalLocation
    fullName: subtotalLocation
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subtotalLocation: Excel.SubtotalLocationType | "AtTop" | "AtBottom" | "Off";'
      return:
        type:
          - 'excel!Excel.PivotLayout#subtotalLocation~0:complex'
  - uid: 'excel!Excel.PivotLayout#toJSON:member(1)'
    summary: '<span data-ttu-id="9a6e5-188">Überschreibt die `toJSON()` JavaScript-Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird.`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="9a6e5-188">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="9a6e5-189">.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-189"></span></span> <span data-ttu-id="9a6e5-190">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="9a6e5-190"></span></span><!-- --><span data-ttu-id="9a6e5-191">wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche Excel. PivotLayout-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`Excel.Interfaces.PivotLayoutData`</span><span class="sxs-lookup"><span data-stu-id="9a6e5-191">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.PivotLayout object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotLayoutData`</span></span><!-- --><span data-ttu-id="9a6e5-192">), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="9a6e5-192">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotLayoutData;'
      return:
        type:
          - 'excel!Excel.Interfaces.PivotLayoutData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Range:class'
    name: Excel.Range
  - uid: 'excel!Excel.PivotLayout#getCell~0:complex'
    name: DataPivotHierarchy | string
    fullName: Excel.DataPivotHierarchy | string
    spec.typeScript:
      - uid: 'excel!Excel.DataPivotHierarchy:class'
        name: DataPivotHierarchy
        fullName: Excel.DataPivotHierarchy
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.PivotLayout#getCell~1:complex'
    name: Array<PivotItem | string>
    fullName: Array<Excel.PivotItem | string>
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <
        fullName: <
      - uid: 'excel!Excel.PivotItem:class'
        name: PivotItem
        fullName: Excel.PivotItem
      - name: ' | string>'
        fullName: ' | string>'
  - uid: 'excel!Excel.PivotLayout#getCell~2:complex'
    name: Array<PivotItem | string>
    fullName: Array<Excel.PivotItem | string>
    spec.typeScript:
      - uid: '!Array:interface'
        name: Array
        fullName: Array
      - name: <
        fullName: <
      - uid: 'excel!Excel.PivotItem:class'
        name: PivotItem
        fullName: Excel.PivotItem
      - name: ' | string>'
        fullName: ' | string>'
  - uid: 'excel!Excel.DataPivotHierarchy:class'
    name: Excel.DataPivotHierarchy
  - uid: 'excel!Excel.PivotLayout#getDataHierarchy~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.PivotLayout#getPivotItems~0:complex'
    name: 'OfficeExtension.ClientResult<Excel.PivotItem[]>'
    fullName: 'OfficeExtension.ClientResult<Excel.PivotItem[]>'
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <
        fullName: <
      - uid: 'excel!Excel.PivotItem:class'
        name: Excel.PivotItem
        fullName: Excel.PivotItem
      - name: '[]>'
        fullName: '[]>'
  - uid: 'excel!Excel.PivotAxis:enum'
    name: Excel.PivotAxis
  - uid: 'excel!Excel.PivotLayout#getPivotItems~1:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.PivotLayout#getPivotItems~2:complex'
    name: 'OfficeExtension.ClientResult<Excel.PivotItem[]>'
    fullName: 'OfficeExtension.ClientResult<Excel.PivotItem[]>'
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <
        fullName: <
      - uid: 'excel!Excel.PivotItem:class'
        name: Excel.PivotItem
        fullName: Excel.PivotItem
      - name: '[]>'
        fullName: '[]>'
  - uid: 'excel!Excel.PivotLayout#getPivotItems~3:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.PivotLayout#layoutType~0:complex'
    name: Excel.PivotLayoutType | "Compact" | "Tabular" | "Outline"
    fullName: Excel.PivotLayoutType | "Compact" | "Tabular" | "Outline"
    spec.typeScript:
      - uid: 'excel!Excel.PivotLayoutType:enum'
        name: Excel.PivotLayoutType
        fullName: Excel.PivotLayoutType
      - name: ' | "Compact" | "Tabular" | "Outline"'
        fullName: ' | "Compact" | "Tabular" | "Outline"'
  - uid: 'excel!Excel.PivotLayout:class'
    name: Excel.PivotLayout
  - uid: 'excel!Excel.Interfaces.PivotLayoutLoadOptions:interface'
    name: Excel.Interfaces.PivotLayoutLoadOptions
  - uid: 'excel!Excel.Interfaces.PivotLayoutUpdateData:interface'
    name: Interfaces.PivotLayoutUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.PivotLayout#setAutoSortOnCell~0:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.SortBy:enum'
    name: Excel.SortBy
  - uid: 'excel!Excel.PivotLayout#setAutoSortOnCell~1:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.PivotLayout#subtotalLocation~0:complex'
    name: Excel.SubtotalLocationType | "AtTop" | "AtBottom" | "Off"
    fullName: Excel.SubtotalLocationType | "AtTop" | "AtBottom" | "Off"
    spec.typeScript:
      - uid: 'excel!Excel.SubtotalLocationType:enum'
        name: Excel.SubtotalLocationType
        fullName: Excel.SubtotalLocationType
      - name: ' | "AtTop" | "AtBottom" | "Off"'
        fullName: ' | "AtTop" | "AtBottom" | "Off"'
  - uid: 'excel!Excel.Interfaces.PivotLayoutData:interface'
    name: Excel.Interfaces.PivotLayoutData