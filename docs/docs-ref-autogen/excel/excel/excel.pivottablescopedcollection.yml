### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.PivotTableScopedCollection:class'
    summary: |-
      Stellt eine bereichsbezogene Auflistung von PivotTables dar. Die PivotTables werden basierend auf der Position der oberen linken Ecke der PivotTable sortiert. Sie werden von oben nach unten und von links nach rechts sortiert.

      \[[API-Gruppe: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.PivotTableScopedCollection
    fullName: Excel.PivotTableScopedCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.PivotTableScopedCollection#context:member'
      - 'excel!Excel.PivotTableScopedCollection#getCount:member(1)'
      - 'excel!Excel.PivotTableScopedCollection#getFirst:member(1)'
      - 'excel!Excel.PivotTableScopedCollection#getItem:member(1)'
      - 'excel!Excel.PivotTableScopedCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.PivotTableScopedCollection#items:member'
      - 'excel!Excel.PivotTableScopedCollection#load:member(1)'
      - 'excel!Excel.PivotTableScopedCollection#load:member(2)'
      - 'excel!Excel.PivotTableScopedCollection#load:member(3)'
      - 'excel!Excel.PivotTableScopedCollection#toJSON:member(1)'
  - uid: 'excel!Excel.PivotTableScopedCollection#context:member'
    summary: 'Der Anforderungskontext, der mit dem Objekt verknüpft ist. Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.PivotTableScopedCollection#getCount:member(1)'
    summary: |-
      Ruft die Anzahl der PivotTables in der Auflistung ab.

      \[[API-Gruppe: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.PivotTableScopedCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.PivotTableScopedCollection#getFirst:member(1)'
    summary: |-
      Ruft die erste PivotTable in der Auflistung ab. Die PivotTables in der Auflistung werden von oben nach unten und von links nach rechts sortiert, sodass die obere linke Tabelle die erste PivotTable in der Auflistung ist.

      \[[API-Gruppe: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getFirst()
    fullName: getFirst()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFirst(): Excel.PivotTable;'
      return:
        type:
          - 'excel!Excel.PivotTable:class'
        description: ''
  - uid: 'excel!Excel.PivotTableScopedCollection#getItem:member(1)'
    summary: |-
      Ruft eine PivotTable anhand des Namens ab.

      \[[API-Gruppe: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.PivotTable;'
      return:
        type:
          - 'excel!Excel.PivotTable:class'
        description: ''
      parameters:
        - id: key
          description: Name der abzurufenden PivotTable.
          type:
            - string
  - uid: 'excel!Excel.PivotTableScopedCollection#getItemOrNullObject:member(1)'
    summary: |-
      Ruft eine PivotTable anhand des Namens ab. Wenn die PivotTable nicht vorhanden ist, wird ein NULL-Objekt zurückgegeben.

      \[[API-Gruppe: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItemOrNullObject(name)
    fullName: getItemOrNullObject(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(name: string): Excel.PivotTable;'
      return:
        type:
          - 'excel!Excel.PivotTable:class'
        description: ''
      parameters:
        - id: name
          description: Name der abzurufenden PivotTable.
          type:
            - string
  - uid: 'excel!Excel.PivotTableScopedCollection#items:member'
    summary: Ruft die geladenen untergeordneten Elemente in dieser Sammlung ab.
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.PivotTable[];'
      return:
        type:
          - 'excel!Excel.PivotTableScopedCollection#items~0:complex'
  - uid: 'excel!Excel.PivotTableScopedCollection#load:member(1)'
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.PivotTableScopedCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.PivotTableScopedCollection;'
      return:
        type:
          - 'excel!Excel.PivotTableScopedCollection:class'
        description: ''
      parameters:
        - id: options
          description: Enthält Optionen für die Eigenschaften des zu ladenden Objekts.
          type:
            - 'excel!Excel.PivotTableScopedCollection#load~0:complex'
  - uid: 'excel!Excel.PivotTableScopedCollection#load:member(2)'
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotTableScopedCollection;'
      return:
        type:
          - 'excel!Excel.PivotTableScopedCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 'Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.PivotTableScopedCollection#load:member(3)'
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.PivotTableScopedCollection;'
      return:
        type:
          - 'excel!Excel.PivotTableScopedCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select` ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und `propertyNamesAndPaths.expand` ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.'
          type:
            - 'office!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.PivotTableScopedCollection#toJSON:member(1)'
    summary: 'Überschreibt die JavaScript `toJSON()` -Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird. `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche `Excel.PivotTableScopedCollection` Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt (typisiert als `Excel.Interfaces.PivotTableScopedCollectionData`<!-- -->), die ein "Items"-Array mit flachen Kopien aller geladenen Eigenschaften aus den Elementen der Auflistung enthält.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotTableScopedCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.PivotTableScopedCollectionData:interface'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.PivotTableScopedCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.PivotTable:class'
    name: Excel.PivotTable
  - uid: 'excel!Excel.PivotTableScopedCollection#items~0:complex'
    name: 'Excel.PivotTable[]'
    fullName: 'Excel.PivotTable[]'
    spec.typeScript:
      - uid: 'excel!Excel.PivotTable:class'
        name: Excel.PivotTable
        fullName: Excel.PivotTable
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.PivotTableScopedCollection:class'
    name: Excel.PivotTableScopedCollection
  - uid: 'excel!Excel.PivotTableScopedCollection#load~0:complex'
    name: Excel.Interfaces.PivotTableScopedCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.PivotTableScopedCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.PivotTableScopedCollectionLoadOptions:interface'
        name: Excel.Interfaces.PivotTableScopedCollectionLoadOptions
        fullName: Excel.Interfaces.PivotTableScopedCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'office!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.PivotTableScopedCollectionData:interface'
    name: Excel.Interfaces.PivotTableScopedCollectionData