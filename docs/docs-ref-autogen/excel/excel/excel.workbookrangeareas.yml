### YamlMime:TSType
name: Excel.WorkbookRangeAreas
uid: excel!Excel.WorkbookRangeAreas:class
package: excel!
fullName: Excel.WorkbookRangeAreas
summary: >-
  Stellt eine Auflistung von einem oder mehreren rechteckigen Bereichen in mehreren Arbeitsblättern dar.


  \[[API-Gruppe: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: addresses
  uid: excel!Excel.WorkbookRangeAreas#addresses:member
  package: excel!
  fullName: addresses
  summary: >-
    Gibt ein Array von Address im a1-Format zurück. Der Adresswert enthält den Namen des Arbeitsblatts für jeden rechteckigen Block von Zellen (beispielsweise "Sheet1! A1: B4, Sheet1! D1: D4 "). Schreibgeschützt.


    \[[API-Gruppe: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly addresses: string[];'
    return:
      type: string[]
- name: areas
  uid: excel!Excel.WorkbookRangeAreas#areas:member
  package: excel!
  fullName: areas
  summary: >-
    Gibt das `RangeAreasCollection` Objekt zurück. Jedes `RangeAreas` in der Auflistung stellt einen oder mehrere Rechteck Bereiche in einem Arbeitsblatt dar.


    \[[API-Gruppe: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly areas: Excel.RangeAreasCollection;'
    return:
      type: <xref uid="excel!Excel.RangeAreasCollection:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/42-range/direct-precedents.yaml\nawait Excel.run(async (context) => {\n  // Precedents are cells referenced by the formula in a cell.\n  let range = context.workbook.getActiveCell();\n  let directPrecedents = range.getDirectPrecedents();\n  range.load(\"address\");\n  directPrecedents.areas.load(\"address\");\n  await context.sync();\n\n  console.log(`Direct precedent cells of ${range.address}:`);\n\n  // Use the direct precedents API to loop through precedents of the active cell. \n  for (var i = 0; i < directPrecedents.areas.items.length; i++) {\n    // Highlight and console the address of each precedent cell.\n    directPrecedents.areas.items[i].format.fill.color = \"Yellow\";\n    console.log(`  ${directPrecedents.areas.items[i].address}`);\n  }\n  await context.sync();\n});\n```"
- name: context
  uid: excel!Excel.WorkbookRangeAreas#context:member
  package: excel!
  fullName: context
  summary: Der Anforderungskontext, der mit dem Objekt verknüpft ist. Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: ranges
  uid: excel!Excel.WorkbookRangeAreas#ranges:member
  package: excel!
  fullName: ranges
  summary: >-
    Gibt Bereiche zurück, die dieses Objekt in einem `RangeCollection` -Objekt enthalten.


    \[[API-Gruppe: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly ranges: Excel.RangeCollection;'
    return:
      type: <xref uid="excel!Excel.RangeCollection:class" />
methods:
- name: getRangeAreasBySheet(key)
  uid: excel!Excel.WorkbookRangeAreas#getRangeAreasBySheet:member(1)
  package: excel!
  fullName: getRangeAreasBySheet(key)
  summary: >-
    Gibt das `RangeAreas` auf der Arbeitsblatt-ID oder dem Namen in der Auflistung basierende Objekt zurück.


    \[[API-Gruppe: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRangeAreasBySheet(key: string): Excel.RangeAreas;'
    parameters:
    - id: key
      description: Der Name oder die ID des Arbeitsblatts.
      type: string
    return:
      type: <xref uid="excel!Excel.RangeAreas:class" />
      description: ''
- name: getRangeAreasOrNullObjectBySheet(key)
  uid: excel!Excel.WorkbookRangeAreas#getRangeAreasOrNullObjectBySheet:member(1)
  package: excel!
  fullName: getRangeAreasOrNullObjectBySheet(key)
  summary: >-
    Gibt das RangeAreas-Objekt basierend auf dem Namen oder der ID des Arbeitsblatts in der Auflistung zurück. Wenn das Arbeitsblatt nicht vorhanden ist, wird ein NULL-Objekt zurückgegeben.


    \[[API-Gruppe: ExcelApi 1,12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRangeAreasOrNullObjectBySheet(key: string): Excel.RangeAreas;'
    parameters:
    - id: key
      description: Der Name oder die ID des Arbeitsblatts.
      type: string
    return:
      type: <xref uid="excel!Excel.RangeAreas:class" />
      description: ''
- name: load(options)
  uid: excel!Excel.WorkbookRangeAreas#load:member(1)
  package: excel!
  fullName: load(options)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.WorkbookRangeAreasLoadOptions): Excel.WorkbookRangeAreas;'
    parameters:
    - id: options
      description: Enthält Optionen für die Eigenschaften des zu ladenden Objekts.
      type: <xref uid="excel!Excel.Interfaces.WorkbookRangeAreasLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.WorkbookRangeAreas:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.WorkbookRangeAreas#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.WorkbookRangeAreas;'
    parameters:
    - id: propertyNames
      description: Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.WorkbookRangeAreas:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.WorkbookRangeAreas#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Excel.WorkbookRangeAreas;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und `propertyNamesAndPaths.expand` ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="excel!Excel.WorkbookRangeAreas:class" />
      description: ''
- name: toJSON()
  uid: excel!Excel.WorkbookRangeAreas#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: Überschreibt die JavaScript `toJSON()` -Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird. `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche Excel. WorkbookRangeAreas-Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt (typisiert als `Excel.Interfaces.WorkbookRangeAreasData`<!-- -->), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.WorkbookRangeAreasData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.WorkbookRangeAreasData:interface" />
      description: ''
- name: track()
  uid: excel!Excel.WorkbookRangeAreas#track:member(1)
  package: excel!
  fullName: track()
  summary: Nachverfolgung des Objekts zwecks automatischer Anpassung auf der Grundlage der umgebenden Änderungen im Dokument. Dieser Aufruf ist eine Kurzform für `context.trackedObjects.add(thisObject)`<!-- -->. Wenn Sie dieses Objekt für `.sync` Aufrufe und außerhalb der sequenziellen Ausführung eines ". Run"-Batches verwenden und beim Festlegen einer Eigenschaft oder beim Aufrufen einer Methode für das Objekt einen "InvalidObjectPath"-Fehler erhalten, mussten Sie das Objekt der nachverfolgten Objektauflistung hinzugefügt haben, als das Objekt zum ersten Mal erstellt wurde.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'track(): Excel.WorkbookRangeAreas;'
    return:
      type: <xref uid="excel!Excel.WorkbookRangeAreas:class" />
      description: ''
- name: untrack()
  uid: excel!Excel.WorkbookRangeAreas#untrack:member(1)
  package: excel!
  fullName: untrack()
  summary: Gibt den diesem Objekt zugewiesenen Arbeitsspeicher frei, wenn das Objekt zuvor nachverfolgt wurde. Bei diesem Aufruf handelt es sich um eine Kurzform `context.trackedObjects.remove(thisObject)`<!-- -->. Viele nachverfolgte Objekte verlangsamen die Ausführung der Hostanwendung, also achten Sie darauf, alle hinzugefügten Objekte nach abgeschlossener Verwendung freizugeben. Sie müssen anrufen, `context.sync()` bevor die Speicherfreigabe wirksam wird.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'untrack(): Excel.WorkbookRangeAreas;'
    return:
      type: <xref uid="excel!Excel.WorkbookRangeAreas:class" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: ce3421aee055d27b984d55ad10e088298c1b689f
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49315823"
