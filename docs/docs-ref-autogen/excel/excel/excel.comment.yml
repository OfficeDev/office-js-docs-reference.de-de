### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Comment:class'
    summary: |-
      <span data-ttu-id="1d57e-101">Stellt einen Kommentar in der Arbeitsmappe dar.</span><span class="sxs-lookup"><span data-stu-id="1d57e-101">Represents a comment in the workbook.</span></span>

      <span data-ttu-id="1d57e-102">\[[API-Gruppe: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d57e-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: Excel.Comment
    fullName: Excel.Comment
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.Comment#authorEmail:member'
      - 'excel!Excel.Comment#authorName:member'
      - 'excel!Excel.Comment#content:member'
      - 'excel!Excel.Comment#context:member'
      - 'excel!Excel.Comment#creationDate:member'
      - 'excel!Excel.Comment#delete:member(1)'
      - 'excel!Excel.Comment#getLocation:member(1)'
      - 'excel!Excel.Comment#id:member'
      - 'excel!Excel.Comment#load:member(1)'
      - 'excel!Excel.Comment#load:member(2)'
      - 'excel!Excel.Comment#load:member(3)'
      - 'excel!Excel.Comment#mentions:member'
      - 'excel!Excel.Comment#replies:member'
      - 'excel!Excel.Comment#resolved:member'
      - 'excel!Excel.Comment#richContent:member'
      - 'excel!Excel.Comment#set:member(1)'
      - 'excel!Excel.Comment#set:member(2)'
      - 'excel!Excel.Comment#toJSON:member(1)'
      - 'excel!Excel.Comment#updateMentions:member(1)'
  - uid: 'excel!Excel.Comment#authorEmail:member'
    summary: |-
      <span data-ttu-id="1d57e-103">Ruft die E-Mail des Autors des Kommentars ab.</span><span class="sxs-lookup"><span data-stu-id="1d57e-103">Gets the email of the comment's author.</span></span>

      <span data-ttu-id="1d57e-104">\[[API-Gruppe: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d57e-104">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: authorEmail
    fullName: authorEmail
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly authorEmail: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Comment#authorName:member'
    summary: |-
      <span data-ttu-id="1d57e-105">Ruft den Namen des Autors des Kommentars ab.</span><span class="sxs-lookup"><span data-stu-id="1d57e-105">Gets the name of the comment's author.</span></span>

      <span data-ttu-id="1d57e-106">\[[API-Gruppe: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d57e-106">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: authorName
    fullName: authorName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly authorName: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Comment#content:member'
    summary: |-
      <span data-ttu-id="1d57e-107">Ruft den Inhalt des Kommentars ab oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="1d57e-107">Gets or sets the comment's content.</span></span> <span data-ttu-id="1d57e-108">Die Zeichenfolge ist nur-Text.</span><span class="sxs-lookup"><span data-stu-id="1d57e-108">The string is plain text.</span></span>

      <span data-ttu-id="1d57e-109">\[[API-Gruppe: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d57e-109">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: content
    fullName: content
    langs:
      - typeScript
    type: property
    syntax:
      content: 'content: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1d57e-110">Beispiele</span><span class="sxs-lookup"><span data-stu-id="1d57e-110">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Comments");
              const comment = sheet.comments.getItemAt(0);
              comment.content = "PLEASE add headers here.";
              await context.sync();
          });
          ```
  - uid: 'excel!Excel.Comment#context:member'
    summary: '<span data-ttu-id="1d57e-111">Der Anforderungskontext, der mit dem Objekt verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="1d57e-111">The request context associated with the object.</span></span> <span data-ttu-id="1d57e-112">Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="1d57e-112">This connects the add-in''s process to the Office host application''s process.</span></span>'
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Comment#creationDate:member'
    summary: |-
      <span data-ttu-id="1d57e-113">Ruft den Erstellungszeitpunkt des Kommentars ab.</span><span class="sxs-lookup"><span data-stu-id="1d57e-113">Gets the creation time of the comment.</span></span> <span data-ttu-id="1d57e-114">Gibt Null zurück, wenn der Kommentar aus einer Notiz konvertiert wurde, da der Kommentar kein Erstellungsdatum hat.</span><span class="sxs-lookup"><span data-stu-id="1d57e-114">Returns null if the comment was converted from a note, since the comment does not have a creation date.</span></span>

      <span data-ttu-id="1d57e-115">\[[API-Gruppe: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d57e-115">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: creationDate
    fullName: creationDate
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly creationDate: Date;'
      return:
        type:
          - '!Date:interface'
  - uid: 'excel!Excel.Comment#delete:member(1)'
    summary: |-
      <span data-ttu-id="1d57e-116">Löscht den Kommentar und alle verbundenen Antworten.</span><span class="sxs-lookup"><span data-stu-id="1d57e-116">Deletes the comment and all the connected replies.</span></span>

      <span data-ttu-id="1d57e-117">\[[API-Gruppe: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d57e-117">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1d57e-118">Beispiele</span><span class="sxs-lookup"><span data-stu-id="1d57e-118">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              context.workbook.comments.getItemByCell("Comments!A2").delete();
              await context.sync();
          });
          ```
  - uid: 'excel!Excel.Comment#getLocation:member(1)'
    summary: |-
      <span data-ttu-id="1d57e-119">Ruft die Zelle ab, in der sich dieser Kommentar befindet.</span><span class="sxs-lookup"><span data-stu-id="1d57e-119">Gets the cell where this comment is located.</span></span>

      <span data-ttu-id="1d57e-120">\[[API-Gruppe: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d57e-120">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getLocation()
    fullName: getLocation()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLocation(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
  - uid: 'excel!Excel.Comment#id:member'
    summary: |-
      <span data-ttu-id="1d57e-121">Stellt die Kommentar-ID dar.</span><span class="sxs-lookup"><span data-stu-id="1d57e-121">Represents the comment identifier.</span></span> <span data-ttu-id="1d57e-122">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1d57e-122">Read-only.</span></span>

      <span data-ttu-id="1d57e-123">\[[API-Gruppe: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d57e-123">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Comment#load:member(1)'
    summary: <span data-ttu-id="1d57e-124">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="1d57e-124">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1d57e-125">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="1d57e-125">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.CommentLoadOptions): Excel.Comment;'
      return:
        type:
          - 'excel!Excel.Comment:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="1d57e-126">Enthält Optionen für die Eigenschaften des zu ladenden Objekts.</span><span class="sxs-lookup"><span data-stu-id="1d57e-126">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.CommentLoadOptions:interface'
  - uid: 'excel!Excel.Comment#load:member(2)'
    summary: <span data-ttu-id="1d57e-127">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="1d57e-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1d57e-128">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="1d57e-128">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Comment;'
      return:
        type:
          - 'excel!Excel.Comment:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1d57e-129">Beispiele</span><span class="sxs-lookup"><span data-stu-id="1d57e-129">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const comment = context.workbook.comments.getItemByCell("Comments!A2");
              comment.load(["authorEmail", "authorName", "creationDate"]);
              await context.sync();

              console.log(`${comment.creationDate.toDateString()}: ${comment.authorName} (${comment.authorEmail})`);
              await context.sync();
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="1d57e-130">Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="1d57e-130">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Comment#load:member(3)'
    summary: <span data-ttu-id="1d57e-131">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="1d57e-131">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1d57e-132">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="1d57e-132">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.Comment;
      return:
        type:
          - 'excel!Excel.Comment:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="1d57e-133">`propertyNamesAndPaths.select`ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften `propertyNamesAndPaths.expand` angibt, und ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="1d57e-133">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.Comment#mentions:member'
    summary: |-
      <span data-ttu-id="1d57e-134">Ruft die Entitäten (z. b. Personen) ab, die in Kommentaren erwähnt werden.</span><span class="sxs-lookup"><span data-stu-id="1d57e-134">Gets the entities (e.g. people) that are mentioned in comments.</span></span>

      <span data-ttu-id="1d57e-135">\[[API-Gruppe: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d57e-135">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: mentions
    fullName: mentions
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly mentions: Excel.CommentMention[];'
      return:
        type:
          - 'excel!Excel.Comment#mentions~0:complex'
  - uid: 'excel!Excel.Comment#replies:member'
    summary: |-
      <span data-ttu-id="1d57e-136">Stellt eine Sammlung der Antwortobjekte dar, die dem Kommentar zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="1d57e-136">Represents a collection of reply objects associated with the comment.</span></span> <span data-ttu-id="1d57e-137">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1d57e-137">Read-only.</span></span>

      <span data-ttu-id="1d57e-138">\[[API-Gruppe: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d57e-138">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: replies
    fullName: replies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly replies: Excel.CommentReplyCollection;'
      return:
        type:
          - 'excel!Excel.CommentReplyCollection:class'
  - uid: 'excel!Excel.Comment#resolved:member'
    summary: |-
      <span data-ttu-id="1d57e-139">Ruft den Status des Kommentar Threads ab oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="1d57e-139">Gets or sets the comment thread status.</span></span> <span data-ttu-id="1d57e-140">Der Wert "true" bedeutet, dass sich der Kommentar Thread im Zustand "aufgelöst" befindet.</span><span class="sxs-lookup"><span data-stu-id="1d57e-140">A value of "true" means the comment thread is in the resolved state.</span></span>

      <span data-ttu-id="1d57e-141">\[[API-Gruppe: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d57e-141">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: resolved
    fullName: resolved
    langs:
      - typeScript
    type: property
    syntax:
      content: 'resolved: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1d57e-142">Beispiele</span><span class="sxs-lookup"><span data-stu-id="1d57e-142">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Comments");
              sheet.comments.getItemAt(0).resolved = true;
              await context.sync();
          });
          ```
  - uid: 'excel!Excel.Comment#richContent:member'
    summary: |-
      <span data-ttu-id="1d57e-143">Ruft den umfangreichen Kommentar Inhalt ab (beispielsweise Erwähnungen in Kommentaren).</span><span class="sxs-lookup"><span data-stu-id="1d57e-143">Gets the rich comment content (e.g. mentions in comments).</span></span> <span data-ttu-id="1d57e-144">Diese Zeichenfolge soll Endbenutzern nicht angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="1d57e-144">This string is not meant to be displayed to end-users.</span></span> <span data-ttu-id="1d57e-145">Das Add-in sollte nur dazu verwendet werden, um umfangreiche Kommentar Inhalte zu analysieren.</span><span class="sxs-lookup"><span data-stu-id="1d57e-145">Your add-in should only use this to parse rich comment content.</span></span>

      <span data-ttu-id="1d57e-146">\[[API-Gruppe: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d57e-146">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: richContent
    fullName: richContent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly richContent: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Comment#set:member(1)'
    summary: '<span data-ttu-id="1d57e-147">Legt mehrere Eigenschaften eines Objekts gleichzeitig fest.</span><span class="sxs-lookup"><span data-stu-id="1d57e-147">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="1d57e-148">Sie können entweder ein einfaches Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs übergeben.</span><span class="sxs-lookup"><span data-stu-id="1d57e-148">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="1d57e-149">Diese Methode hat die folgende zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="1d57e-149">This method has the following additional signature:</span></span>

      `set(properties: Excel.Comment): void`
    isPreview: true
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.CommentUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="1d57e-150">Ein JavaScript-Objekt mit Eigenschaften, die isomorphically für die Eigenschaften des Objekts strukturiert sind, für das die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="1d57e-150">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - 'excel!Excel.Interfaces.CommentUpdateData:interface'
        - id: options
          description: '<span data-ttu-id="1d57e-151">Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.</span><span class="sxs-lookup"><span data-stu-id="1d57e-151">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.Comment#set:member(2)'
    summary: '<span data-ttu-id="1d57e-152">Legt mehrere Eigenschaften für das Objekt gleichzeitig basierend auf einem vorhandenen geladenen Objekt fest.</span><span class="sxs-lookup"><span data-stu-id="1d57e-152">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    isPreview: true
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Comment): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.Comment:class'
  - uid: 'excel!Excel.Comment#toJSON:member(1)'
    summary: '<span data-ttu-id="1d57e-153">Überschreibt die `toJSON()` JavaScript-Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird.`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="1d57e-153">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="1d57e-154">.</span><span class="sxs-lookup"><span data-stu-id="1d57e-154"></span></span> <span data-ttu-id="1d57e-155">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="1d57e-155"></span></span><!-- --><span data-ttu-id="1d57e-156">wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche Excel. Comment-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`Excel.Interfaces.CommentData`</span><span class="sxs-lookup"><span data-stu-id="1d57e-156">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Comment object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.CommentData`</span></span><!-- --><span data-ttu-id="1d57e-157">), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="1d57e-157">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.CommentData;'
      return:
        type:
          - 'excel!Excel.Interfaces.CommentData:interface'
        description: ''
  - uid: 'excel!Excel.Comment#updateMentions:member(1)'
    summary: |-
      <span data-ttu-id="1d57e-158">Aktualisiert den Kommentar Inhalt mit einer speziell formatierten Zeichenfolge und einer Liste von Erwähnungen.</span><span class="sxs-lookup"><span data-stu-id="1d57e-158">Updates the comment content with a specially formatted string and a list of mentions.</span></span>

      <span data-ttu-id="1d57e-159">\[[API-Gruppe: ExcelApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1d57e-159">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: updateMentions(contentWithMentions)
    fullName: updateMentions(contentWithMentions)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'updateMentions(contentWithMentions: Excel.CommentRichContent): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: contentWithMentions
          description: '<span data-ttu-id="1d57e-160">Der Inhalt des Kommentars.</span><span class="sxs-lookup"><span data-stu-id="1d57e-160">The content for the comment.</span></span> <span data-ttu-id="1d57e-161">Dies enthält eine speziell formatierte Zeichenfolge und eine Liste von Erwähnungen, die in der Zeichenfolge analysiert werden, wenn Sie von Excel angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="1d57e-161">This contains a specially formatted string and a list of mentions that will be parsed into the string when displayed by Excel.</span></span>'
          type:
            - 'excel!Excel.CommentRichContent:interface'
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: '!Date:interface'
    name: Date
  - uid: 'excel!Excel.Range:class'
    name: Excel.Range
  - uid: 'excel!Excel.Comment:class'
    name: Excel.Comment
  - uid: 'excel!Excel.Interfaces.CommentLoadOptions:interface'
    name: Excel.Interfaces.CommentLoadOptions
  - uid: 'excel!Excel.Comment#mentions~0:complex'
    name: 'Excel.CommentMention[]'
    fullName: 'Excel.CommentMention[]'
    spec.typeScript:
      - uid: 'excel!Excel.CommentMention:interface'
        name: Excel.CommentMention
        fullName: Excel.CommentMention
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.CommentReplyCollection:class'
    name: Excel.CommentReplyCollection
  - uid: 'excel!Excel.Interfaces.CommentUpdateData:interface'
    name: Interfaces.CommentUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.CommentData:interface'
    name: Excel.Interfaces.CommentData
  - uid: 'excel!Excel.CommentRichContent:interface'
    name: Excel.CommentRichContent