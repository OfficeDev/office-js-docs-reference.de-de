### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ChartAxisTitle:class'
    summary: |-
      <span data-ttu-id="0ba6b-101">Stellt den Titel einer Diagrammachse dar.</span><span class="sxs-lookup"><span data-stu-id="0ba6b-101">Represents the title of a chart axis.</span></span>

      <span data-ttu-id="0ba6b-102">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0ba6b-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ChartAxisTitle
    fullName: Excel.ChartAxisTitle
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ChartAxisTitle#context:member'
      - 'excel!Excel.ChartAxisTitle#format:member'
      - 'excel!Excel.ChartAxisTitle#load:member(1)'
      - 'excel!Excel.ChartAxisTitle#load:member(2)'
      - 'excel!Excel.ChartAxisTitle#load:member(3)'
      - 'excel!Excel.ChartAxisTitle#set:member(1)'
      - 'excel!Excel.ChartAxisTitle#set:member(2)'
      - 'excel!Excel.ChartAxisTitle#setFormula:member(1)'
      - 'excel!Excel.ChartAxisTitle#text:member'
      - 'excel!Excel.ChartAxisTitle#toJSON:member(1)'
      - 'excel!Excel.ChartAxisTitle#visible:member'
  - uid: 'excel!Excel.ChartAxisTitle#context:member'
    summary: '<span data-ttu-id="0ba6b-103">Der Anforderungskontext, der mit dem Objekt verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="0ba6b-103">The request context associated with the object.</span></span> <span data-ttu-id="0ba6b-104">Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="0ba6b-104">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ChartAxisTitle#format:member'
    summary: |-
      <span data-ttu-id="0ba6b-105">Stellt die Formatierung des Diagrammachsentitels dar.</span><span class="sxs-lookup"><span data-stu-id="0ba6b-105">Represents the formatting of chart axis title.</span></span> <span data-ttu-id="0ba6b-106">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="0ba6b-106">Read-only.</span></span>

      <span data-ttu-id="0ba6b-107">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0ba6b-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: format
    fullName: format
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly format: Excel.ChartAxisTitleFormat;'
      return:
        type:
          - 'excel!Excel.ChartAxisTitleFormat:class'
  - uid: 'excel!Excel.ChartAxisTitle#load:member(1)'
    summary: <span data-ttu-id="0ba6b-108">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="0ba6b-108">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0ba6b-109">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="0ba6b-109">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.ChartAxisTitleLoadOptions): Excel.ChartAxisTitle;'
      return:
        type:
          - 'excel!Excel.ChartAxisTitle:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="0ba6b-110">Enthält Optionen für die Eigenschaften des zu ladenden Objekts.</span><span class="sxs-lookup"><span data-stu-id="0ba6b-110">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.ChartAxisTitleLoadOptions:interface'
  - uid: 'excel!Excel.ChartAxisTitle#load:member(2)'
    summary: <span data-ttu-id="0ba6b-111">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="0ba6b-111">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0ba6b-112">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="0ba6b-112">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ChartAxisTitle;'
      return:
        type:
          - 'excel!Excel.ChartAxisTitle:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0ba6b-113">Beispiele</span><span class="sxs-lookup"><span data-stu-id="0ba6b-113">Examples</span></span>

          ```javascript
          // Get the text of Chart Axis Title from the value axis of Chart1.
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1"); 
              var title = chart.axes.valueAxis.title;
              title.load('text');
              return ctx.sync().then(function() {
                      console.log(title.text);
              });
          }).catch(function(error) {
                  console.log("Error: " + error);
                  if (error instanceof OfficeExtension.Error) {
                      console.log("Debug info: " + JSON.stringify(error.debugInfo));
                  }
          });
          ```
          ```javascript
          // Add "Values" as the title for the value Axis 
          Excel.run(function (ctx) { 
              var chart = ctx.workbook.worksheets.getItem("Sheet1").charts.getItem("Chart1"); 
              chart.axes.valueAxis.title.text = "Values";
              return ctx.sync().then(function() {
                      console.log("Axis Title Added ");
              });
          }).catch(function(error) {
                  console.log("Error: " + error);
                  if (error instanceof OfficeExtension.Error) {
                      console.log("Debug info: " + JSON.stringify(error.debugInfo));
                  }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="0ba6b-114">Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="0ba6b-114">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ChartAxisTitle#load:member(3)'
    summary: <span data-ttu-id="0ba6b-115">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="0ba6b-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0ba6b-116">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="0ba6b-116">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.ChartAxisTitle;
      return:
        type:
          - 'excel!Excel.ChartAxisTitle:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="0ba6b-117">`propertyNamesAndPaths.select`ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften `propertyNamesAndPaths.expand` angibt, und ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="0ba6b-117">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.ChartAxisTitle#set:member(1)'
    summary: '<span data-ttu-id="0ba6b-118">Legt mehrere Eigenschaften eines Objekts gleichzeitig fest.</span><span class="sxs-lookup"><span data-stu-id="0ba6b-118">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="0ba6b-119">Sie können entweder ein einfaches Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs übergeben.</span><span class="sxs-lookup"><span data-stu-id="0ba6b-119">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="0ba6b-120">Diese Methode hat die folgende zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="0ba6b-120">This method has the following additional signature:</span></span>

      `set(properties: Excel.ChartAxisTitle): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ChartAxisTitleUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="0ba6b-121">Ein JavaScript-Objekt mit Eigenschaften, die isomorphically für die Eigenschaften des Objekts strukturiert sind, für das die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="0ba6b-121">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - 'excel!Excel.Interfaces.ChartAxisTitleUpdateData:interface'
        - id: options
          description: '<span data-ttu-id="0ba6b-122">Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.</span><span class="sxs-lookup"><span data-stu-id="0ba6b-122">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.ChartAxisTitle#set:member(2)'
    summary: '<span data-ttu-id="0ba6b-123">Legt mehrere Eigenschaften für das Objekt gleichzeitig basierend auf einem vorhandenen geladenen Objekt fest.</span><span class="sxs-lookup"><span data-stu-id="0ba6b-123">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ChartAxisTitle): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.ChartAxisTitle:class'
  - uid: 'excel!Excel.ChartAxisTitle#setFormula:member(1)'
    summary: |-
      <span data-ttu-id="0ba6b-124">Ein Zeichenfolgenwert, der die Formel des Diagrammachseltitels unter Verwendung der A1-Schreibweise angibt.</span><span class="sxs-lookup"><span data-stu-id="0ba6b-124">A string value that represents the formula of chart axis title using A1-style notation.</span></span>

      <span data-ttu-id="0ba6b-125">\[[API-Gruppe: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0ba6b-125">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: setFormula(formula)
    fullName: setFormula(formula)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setFormula(formula: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: formula
          description: '<span data-ttu-id="0ba6b-126">ein String-Wert, der die festzulegende Formel darstellt</span><span class="sxs-lookup"><span data-stu-id="0ba6b-126">a string that present the formula to set</span></span>'
          type:
            - string
  - uid: 'excel!Excel.ChartAxisTitle#text:member'
    summary: |-
      <span data-ttu-id="0ba6b-127">Stellt den Achsentitel dar.</span><span class="sxs-lookup"><span data-stu-id="0ba6b-127">Represents the axis title.</span></span>

      <span data-ttu-id="0ba6b-128">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0ba6b-128">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'text: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ChartAxisTitle#toJSON:member(1)'
    summary: '<span data-ttu-id="0ba6b-129">Überschreibt die `toJSON()` JavaScript-Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird.`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="0ba6b-129">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="0ba6b-130">.</span><span class="sxs-lookup"><span data-stu-id="0ba6b-130"></span></span> <span data-ttu-id="0ba6b-131">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="0ba6b-131"></span></span><!-- --><span data-ttu-id="0ba6b-132">wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche Excel. ChartAxisTitle-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`Excel.Interfaces.ChartAxisTitleData`</span><span class="sxs-lookup"><span data-stu-id="0ba6b-132">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ChartAxisTitle object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartAxisTitleData`</span></span><!-- --><span data-ttu-id="0ba6b-133">), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="0ba6b-133">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ChartAxisTitleData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ChartAxisTitleData:interface'
        description: ''
  - uid: 'excel!Excel.ChartAxisTitle#visible:member'
    summary: |-
      <span data-ttu-id="0ba6b-134">Ein boolescher Wert, der die Sichtbarkeit eines Achsentitels angibt.</span><span class="sxs-lookup"><span data-stu-id="0ba6b-134">A boolean that specifies the visibility of an axis title.</span></span>

      <span data-ttu-id="0ba6b-135">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0ba6b-135">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: visible
    fullName: visible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'visible: boolean;'
      return:
        type:
          - boolean
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ChartAxisTitleFormat:class'
    name: Excel.ChartAxisTitleFormat
  - uid: 'excel!Excel.ChartAxisTitle:class'
    name: Excel.ChartAxisTitle
  - uid: 'excel!Excel.Interfaces.ChartAxisTitleLoadOptions:interface'
    name: Excel.Interfaces.ChartAxisTitleLoadOptions
  - uid: 'excel!Excel.Interfaces.ChartAxisTitleUpdateData:interface'
    name: Interfaces.ChartAxisTitleUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.ChartAxisTitleData:interface'
    name: Excel.Interfaces.ChartAxisTitleData