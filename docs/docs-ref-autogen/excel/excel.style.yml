### YamlMime:UniversalReference
ms.openlocfilehash: 1750a1b2ba7f3a289ee44e96e2ee0c4b949b1897
ms.sourcegitcommit: 262b7c417245b7b61a57d53eee33a477a722ca6e
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 09/28/2018
ms.locfileid: "24062961"
items:
- uid: excel.Excel.Style
  summary: >-
    Ein encapsulating eine Formatvorlage Format und andere Eigenschaften-Objekt.


    \[[API-Satz: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.Style
  fullName: excel.Excel.Style
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Style.autoIndent
  - excel.Excel.Style.borders
  - excel.Excel.Style.builtIn
  - excel.Excel.Style.delete
  - excel.Excel.Style.fill
  - excel.Excel.Style.font
  - excel.Excel.Style.formulaHidden
  - excel.Excel.Style.horizontalAlignment
  - excel.Excel.Style.includeAlignment
  - excel.Excel.Style.includeBorder
  - excel.Excel.Style.includeFont
  - excel.Excel.Style.includeNumber
  - excel.Excel.Style.includePatterns
  - excel.Excel.Style.includeProtection
  - excel.Excel.Style.indentLevel
  - excel.Excel.Style.load
  - excel.Excel.Style.locked
  - excel.Excel.Style.name
  - excel.Excel.Style.numberFormat
  - excel.Excel.Style.numberFormatLocal
  - excel.Excel.Style.readingOrder
  - excel.Excel.Style.shrinkToFit
  - excel.Excel.Style.textOrientation
  - excel.Excel.Style.toJSON
  - excel.Excel.Style.verticalAlignment
  - excel.Excel.Style.wrapText
- uid: excel.Excel.Style.autoIndent
  summary: >-
    Gibt an, ob Text automatisch eingezogen wird, wenn die Ausrichtung des Texts in einer Zelle auf gleiche Verteilung festgelegt ist.


    \[[API-Satz: ExcelApi 1,8](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: autoIndent
  fullName: excel.Excel.Style.autoIndent
  langs:
  - typeScript
  type: property
  syntax:
    content: 'autoIndent: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Style.borders
  summary: >-
    Eine Auflistung der Rahmen von vier Border-Objekten, die das Format der vier Rahmen darstellen.


    \[[API-Satz: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: borders
  fullName: excel.Excel.Style.borders
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly borders: Excel.RangeBorderCollection;'
    return:
      type:
      - excel.Excel.RangeBorderCollection
- uid: excel.Excel.Style.builtIn
  summary: >-
    Gibt an, ob die Formatvorlage um eine integrierte Formatvorlage handelt.


    \[[API-Satz: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: builtIn
  fullName: excel.Excel.Style.builtIn
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly builtIn: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Style.delete
  summary: >-
    Löscht diese Formatvorlage.


    \[[API-Satz: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: delete()
  fullName: excel.Excel.Style.delete
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\nawait Excel.run(async (context) => {\n    let style = context.workbook.styles.getItem(\"Diagonal Orientation Style\");\n\n    // Delete the diagonal orientation style from the style collection.\n    // Styles are in the Home tab ribbon.\n    style.delete();\n\n    await context.sync();\n\n    OfficeHelpers.UI.notify(\"Successfully deleted the diagonal orientation style from the Home tab ribbon.\");\n});\n```"
- uid: excel.Excel.Style.fill
  summary: >-
    Die Füllung der Formatvorlage.


    \[[API-Satz: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: fill
  fullName: excel.Excel.Style.fill
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly fill: Excel.RangeFill;'
    return:
      type:
      - excel.Excel.RangeFill
- uid: excel.Excel.Style.font
  summary: >-
    Ein Font-Objekt, das die Schriftart der Formatvorlage darstellt.


    \[[API-Satz: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: font
  fullName: excel.Excel.Style.font
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly font: Excel.RangeFont;'
    return:
      type:
      - excel.Excel.RangeFont
      description: "\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\nawait Excel.run(async (context) => {\n    let style = context.workbook.styles.getItem(\"Normal\");\n    style.font.load(\"bold, color, italic, name, size\");\n    style.fill.load(\"color\");\n\n    await context.sync();\n\n    console.log(\"Bold: \" + style.font.bold);\n    console.log(\"Font color: \" + style.font.color);\n    console.log(\"Italic: \" + style.font.italic);\n    console.log(\"Name: \" + style.font.name);\n    console.log(\"Size: \" + style.font.size);\n    console.log(\"Fill color: \" + style.fill.color);\n});\n```"
- uid: excel.Excel.Style.formulaHidden
  summary: >-
    Gibt an, ob die Formel ausgeblendet ist, wenn das Arbeitsblatt geschützt ist.


    \[[API-Satz: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: formulaHidden
  fullName: excel.Excel.Style.formulaHidden
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formulaHidden: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Style.horizontalAlignment
  summary: >-
    Die horizontale Ausrichtung für die Formatvorlage repräsentiert. Einzelheiten finden Sie unter Excel.HorizontalAlignment.


    \[[API-Satz: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: horizontalAlignment
  fullName: excel.Excel.Style.horizontalAlignment
  langs:
  - typeScript
  type: property
  syntax:
    content: 'horizontalAlignment: Excel.HorizontalAlignment | "General" | "Left" | "Center" | "Right" | "Fill" | "Justify" | "CenterAcrossSelection" | "Distributed";'
    return:
      type:
      - Excel.HorizontalAlignment | "General" | "Left" | "Center" | "Right" | "Fill" | "Justify" | "CenterAcrossSelection" | "Distributed"
      description: "\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\nawait Excel.run(async (context) => {\n    let worksheet = context.workbook.worksheets.getItem(\"Sample\");\n    let range = worksheet.getRange(\"A1:E1\");\n\n    // Apply built-in style. \n    // Styles are in the Home tab ribbon.\n    range.style = Excel.BuiltInStyle.neutral;\n    range.format.horizontalAlignment = \"Right\";\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.Style.includeAlignment
  summary: >-
    Gibt an, ob die Formatvorlage die Eigenschaften AutoIndent, HorizontalAlignment, VerticalAlignment, WrapText, IndentLevel und TextOrientation enthält.


    \[[API-Satz: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: includeAlignment
  fullName: excel.Excel.Style.includeAlignment
  langs:
  - typeScript
  type: property
  syntax:
    content: 'includeAlignment: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Style.includeBorder
  summary: >-
    Gibt an, ob die Formatvorlage die Rahmeneigenschaften Color, ColorIndex, LineStyle und Weight enthält.


    \[[API-Satz: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: includeBorder
  fullName: excel.Excel.Style.includeBorder
  langs:
  - typeScript
  type: property
  syntax:
    content: 'includeBorder: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Style.includeFont
  summary: >-
    Gibt an, ob die Formatvorlage die Schriftarteigenschaften Hintergrund, fett, Farbe, ColorIndex, FontStyle, kursiv, Name, Größe, durchgestrichen, tiefgestellt, hochgestellt und Unterstreichung enthält.


    \[[API-Satz: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: includeFont
  fullName: excel.Excel.Style.includeFont
  langs:
  - typeScript
  type: property
  syntax:
    content: 'includeFont: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Style.includeNumber
  summary: >-
    Gibt an, ob die Formatvorlage die NumberFormat-Eigenschaft enthält.


    \[[API-Satz: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: includeNumber
  fullName: excel.Excel.Style.includeNumber
  langs:
  - typeScript
  type: property
  syntax:
    content: 'includeNumber: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Style.includePatterns
  summary: >-
    Gibt an, ob die Formatvorlage der Farbe, ColorIndex, InvertIfNegative, Pattern, PatternColor und PatternColorIndex einschließt.


    \[[API-Satz: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: includePatterns
  fullName: excel.Excel.Style.includePatterns
  langs:
  - typeScript
  type: property
  syntax:
    content: 'includePatterns: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Style.includeProtection
  summary: >-
    Gibt an, ob die Formatvorlage die FormulaHidden und Locked Protection-Eigenschaften enthält.


    \[[API-Satz: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: includeProtection
  fullName: excel.Excel.Style.includeProtection
  langs:
  - typeScript
  type: property
  syntax:
    content: 'includeProtection: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Style.indentLevel
  summary: >-
    Eine ganze Zahl von 0 bis zu 250, die die Einzugsebene für die Formatvorlage angibt.


    \[[API-Satz: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: indentLevel
  fullName: excel.Excel.Style.indentLevel
  langs:
  - typeScript
  type: property
  syntax:
    content: 'indentLevel: number;'
    return:
      type:
      - number
- uid: excel.Excel.Style.load
  summary: Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts. Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.
  remarks: "Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:\n\n`load(option?: { select?: string; expand?: string; }): Excel.Style`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.\n\n`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Style`-Nur auf Auflistungstypen verfügbar. Es ist ähnlich wie die jeweils vorhergehende Signatur. Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können. Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen. Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\nawait Excel.run(async (context) => {\n    let style = context.workbook.styles.getItem(\"Diagonal Orientation Style\");            \n    style.load(\"textOrientation, horizontalAlignment, autoIndent, readingOrder, wrapText, includeProtection, shrinkToFit, locked\");\n\n    await context.sync();\n\n    console.log(\"Orientation: \" + style.textOrientation);\n    console.log(\"Horizontal alignment: \" + style.horizontalAlignment);\n    console.log(\"Add indent: \" + style.autoIndent);\n    console.log(\"Reading order: \" + style.readingOrder);\n    console.log(\"Wrap text: \" + style.wrapText);\n    console.log(\"Include protection: \" + style.includeProtection);\n    console.log(\"Shrink to fit: \" + style.shrinkToFit);\n    console.log(\"Style locked: \" + style.locked);\n});\n```"
  name: load(option)
  fullName: excel.Excel.Style.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.Style;'
    return:
      type:
      - excel.Excel.Style
      description: ''
    parameters:
    - id: option
      description: Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.
      type:
      - string | string[]
- uid: excel.Excel.Style.locked
  summary: >-
    Gibt an, ob das Objekt gesperrt ist, wenn das Arbeitsblatt geschützt ist.


    \[[API-Satz: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: locked
  fullName: excel.Excel.Style.locked
  langs:
  - typeScript
  type: property
  syntax:
    content: 'locked: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Style.name
  summary: >-
    Der Name der Formatvorlage.


    \[[API-Satz: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: name
  fullName: excel.Excel.Style.name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly name: string;'
    return:
      type:
      - string
- uid: excel.Excel.Style.numberFormat
  summary: >-
    Den Formatierungscode für das Zahlenformat für die Formatvorlage.


    \[[API-Satz: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: numberFormat
  fullName: excel.Excel.Style.numberFormat
  langs:
  - typeScript
  type: property
  syntax:
    content: 'numberFormat: string;'
    return:
      type:
      - string
- uid: excel.Excel.Style.numberFormatLocal
  summary: >-
    Die lokalisierten Formatierungscode für das Zahlenformat für die Formatvorlage.


    \[[API-Satz: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: numberFormatLocal
  fullName: excel.Excel.Style.numberFormatLocal
  langs:
  - typeScript
  type: property
  syntax:
    content: 'numberFormatLocal: string;'
    return:
      type:
      - string
- uid: excel.Excel.Style.readingOrder
  summary: >-
    Die Lesereihenfolge für die Formatvorlage.


    \[[API-Satz: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: readingOrder
  fullName: excel.Excel.Style.readingOrder
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readingOrder: Excel.ReadingOrder | "Context" | "LeftToRight" | "RightToLeft";'
    return:
      type:
      - Excel.ReadingOrder | "Context" | "LeftToRight" | "RightToLeft"
- uid: excel.Excel.Style.shrinkToFit
  summary: >-
    Gibt an, ob Text automatisch an die verfügbare Spaltenbreite angepasst wird.


    \[[API-Satz: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: shrinkToFit
  fullName: excel.Excel.Style.shrinkToFit
  langs:
  - typeScript
  type: property
  syntax:
    content: 'shrinkToFit: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Style.textOrientation
  summary: >-
    Die Ausrichtung von Text für die Formatvorlage.


    \[[API-Satz: ExcelApi 1,8](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: textOrientation
  fullName: excel.Excel.Style.textOrientation
  langs:
  - typeScript
  type: property
  syntax:
    content: 'textOrientation: number;'
    return:
      type:
      - number
- uid: excel.Excel.Style.toJSON
  name: toJSON()
  fullName: excel.Excel.Style.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.StyleData;'
    return:
      type:
      - excel.Excel.Interfaces.StyleData
      description: ''
- uid: excel.Excel.Style.verticalAlignment
  summary: >-
    Die vertikale Ausrichtung für die Formatvorlage darstellt. Einzelheiten finden Sie unter Excel.VerticalAlignment.


    \[[API-Satz: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: verticalAlignment
  fullName: excel.Excel.Style.verticalAlignment
  langs:
  - typeScript
  type: property
  syntax:
    content: 'verticalAlignment: Excel.VerticalAlignment | "Top" | "Center" | "Bottom" | "Justify" | "Distributed";'
    return:
      type:
      - Excel.VerticalAlignment | "Top" | "Center" | "Bottom" | "Justify" | "Distributed"
- uid: excel.Excel.Style.wrapText
  summary: >-
    Gibt an, ob den Text im Objekt Microsoft Excel umbrochen wird.


    \[[API-Satz: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: wrapText
  fullName: excel.Excel.Style.wrapText
  langs:
  - typeScript
  type: property
  syntax:
    content: 'wrapText: boolean;'
    return:
      type:
      - boolean
