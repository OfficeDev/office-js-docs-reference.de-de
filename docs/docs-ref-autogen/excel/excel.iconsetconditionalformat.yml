### YamlMime:UniversalReference
ms.openlocfilehash: 6744708c64b03bbf343a0054bfdb2b0ef849157e
ms.sourcegitcommit: 3f4a320fa860d05d348c8bdec2295e046a45a34f
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/07/2019
ms.locfileid: "29769561"
items:
- uid: excel.Excel.IconSetConditionalFormat
  summary: >-
    <span data-ttu-id="1c3d9-101">Stellt ein IconSet-Kriterium für die bedingte Formatierung dar.</span><span class="sxs-lookup"><span data-stu-id="1c3d9-101">Represents an IconSet criteria for conditional formatting.</span></span>


    <span data-ttu-id="1c3d9-102">\[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1c3d9-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.IconSetConditionalFormat
  fullName: Excel.IconSetConditionalFormat
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.IconSetConditionalFormat.context
  - excel.Excel.IconSetConditionalFormat.criteria
  - excel.Excel.IconSetConditionalFormat.load
  - excel.Excel.IconSetConditionalFormat.reverseIconOrder
  - excel.Excel.IconSetConditionalFormat.set
  - excel.Excel.IconSetConditionalFormat.showIconOnly
  - excel.Excel.IconSetConditionalFormat.style
  - excel.Excel.IconSetConditionalFormat.toJSON
- uid: excel.Excel.IconSetConditionalFormat.context
  summary: <span data-ttu-id="1c3d9-103">Der Anforderungskontext-zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="1c3d9-103">The request context associated with the object.</span></span> <span data-ttu-id="1c3d9-104">Dadurch wird das Add-in Prozess mit der Office-hostanwendung Prozess verbunden.</span><span class="sxs-lookup"><span data-stu-id="1c3d9-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.IconSetConditionalFormat.criteria
  summary: >-
    <span data-ttu-id="1c3d9-105">Ein Array von Kriterien und IconSets für die Regeln und potenzielle benutzerdefinierter Symbole für bedingte Symbole.</span><span class="sxs-lookup"><span data-stu-id="1c3d9-105">An array of Criteria and IconSets for the rules and potential custom icons for conditional icons.</span></span> <span data-ttu-id="1c3d9-106">Beachten Sie, dass für das erste Kriterium nur das benutzerdefinierte Symbol werden, während der Eingabe, Formel geändert kann, und Operator ignoriert wird, wenn festgelegt.</span><span class="sxs-lookup"><span data-stu-id="1c3d9-106">Note that for the first criterion only the custom icon can be modified, while type, formula, and operator will be ignored when set.</span></span>


    <span data-ttu-id="1c3d9-107">\[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1c3d9-107">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: criteria
  fullName: criteria
  langs:
  - typeScript
  type: property
  syntax:
    content: 'criteria: Excel.ConditionalIconCriterion[];'
    return:
      type:
      - Excel.ConditionalIconCriterion[]
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1c3d9-108\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"1c3d9-108\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.iconSet);\n    const iconSetCF = conditionalFormat.iconSet;\n    iconSetCF.style = Excel.IconSet.threeTriangles;\n\n    /*\n        The iconSetCF.criteria array is automatically prepopulated with\n        criterion elements whose properties have been given default settings.\n        You can't write to each property of a criterion directly. Instead,\n        replace the whole criteria object.\n\n        With a \"three*\" icon set style, such as \"threeTriangles\", the third\n        element in the criteria array (criteria[2]) defines the \"top\" icon;\n        e.g., a green triangle. The second (criteria[1]) defines the \"middle\"\n        icon, The first (criteria[0]) defines the \"low\" icon, but it\n        can often be left empty as this method does below, because every\n        cell that does not match the other two criteria always gets the low\n        icon.            \n    */\n    iconSetCF.criteria = [\n        {} as any,\n        {\n            type: Excel.ConditionalFormatIconRuleType.number,\n            operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,\n            formula: \"=700\"\n        },\n        {\n            type: Excel.ConditionalFormatIconRuleType.number,\n            operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,\n            formula: \"=1000\",\n        }\n    ];\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.IconSetConditionalFormat.load
  summary: <span data-ttu-id="1c3d9-109">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="1c3d9-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1c3d9-110">Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="1c3d9-110">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="1c3d9-111">Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="1c3d9-111">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="1c3d9-112">`load(option?: { select?: string; expand?: string; }): Excel.IconSetConditionalFormat`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class="sxs-lookup"><span data-stu-id="1c3d9-112">`load(option?: { select?: string; expand?: string; }): Excel.IconSetConditionalFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="1c3d9-113">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.IconSetConditionalFormat`-Nur auf Auflistungstypen verfügbar.</span><span class="sxs-lookup"><span data-stu-id="1c3d9-113">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.IconSetConditionalFormat` - Only available on collection types.</span></span> <span data-ttu-id="1c3d9-114">Es ist ähnlich wie die jeweils vorhergehende Signatur.</span><span class="sxs-lookup"><span data-stu-id="1c3d9-114">It is similar to the preceding signature.</span></span> <span data-ttu-id="1c3d9-115">Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können.</span><span class="sxs-lookup"><span data-stu-id="1c3d9-115">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="1c3d9-116">Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="1c3d9-116">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="1c3d9-117">Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.</span><span class="sxs-lookup"><span data-stu-id="1c3d9-117">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.IconSetConditionalFormat;'
    return:
      type:
      - excel.Excel.IconSetConditionalFormat
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="1c3d9-118">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="1c3d9-118">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.IconSetConditionalFormat.reverseIconOrder
  summary: >-
    <span data-ttu-id="1c3d9-p105">Wenn „true“, wird die Symbolreihenfolge für das IconSet umgekehrt. Beachten Sie, dass dies bei Verwendung benutzerdefinierter Symbole nicht festgelegt werden kann.</span><span class="sxs-lookup"><span data-stu-id="1c3d9-p105">If true, reverses the icon orders for the IconSet. Note that this cannot be set if custom icons are used.</span></span>


    <span data-ttu-id="1c3d9-121">\[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1c3d9-121">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: reverseIconOrder
  fullName: reverseIconOrder
  langs:
  - typeScript
  type: property
  syntax:
    content: 'reverseIconOrder: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.IconSetConditionalFormat.set
  summary: <span data-ttu-id="1c3d9-122">Legt mehrere Eigenschaften eines Objekts zur selben Zeit fest.</span><span class="sxs-lookup"><span data-stu-id="1c3d9-122">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="1c3d9-123">Sie können entweder eine einfache-Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt des gleichen Typs übergeben.</span><span class="sxs-lookup"><span data-stu-id="1c3d9-123">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="1c3d9-124">Diese Methode hat die folgenden zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="1c3d9-124">This method has the following additional signature:</span></span>


    `set(properties: Excel.IconSetConditionalFormat): void`
  name: set(properties, options)
  fullName: set
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.IconSetConditionalFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="1c3d9-125">Ein JavaScript-Objekt mit Eigenschaften, die an die Eigenschaften des Objekts isomorphically strukturiert werden, auf denen die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="1c3d9-125">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.IconSetConditionalFormatUpdateData
    - id: options
      description: <span data-ttu-id="1c3d9-126">Bietet eine Option, um Fehler zu unterdrücken, wenn schreibgeschützte Eigenschaften festgelegt werden, versucht das Properties-Objekt.</span><span class="sxs-lookup"><span data-stu-id="1c3d9-126">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.IconSetConditionalFormat.showIconOnly
  summary: >-
    <span data-ttu-id="1c3d9-127">Wenn „true“, werden die Werte ausgeblendet und nur die Symbole angezeigt.</span><span class="sxs-lookup"><span data-stu-id="1c3d9-127">If true, hides the values and only shows icons.</span></span>


    <span data-ttu-id="1c3d9-128">\[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1c3d9-128">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showIconOnly
  fullName: showIconOnly
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showIconOnly: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.IconSetConditionalFormat.style
  summary: >-
    <span data-ttu-id="1c3d9-129">Wenn festgelegt ist, wird die IconSet-Option für die bedingte Formatierung angezeigt.</span><span class="sxs-lookup"><span data-stu-id="1c3d9-129">If set, displays the IconSet option for the conditional format.</span></span>


    <span data-ttu-id="1c3d9-130">\[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1c3d9-130">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: style
  fullName: style
  langs:
  - typeScript
  type: property
  syntax:
    content: 'style: Excel.IconSet | "Invalid" | "ThreeArrows" | "ThreeArrowsGray" | "ThreeFlags" | "ThreeTrafficLights1" | "ThreeTrafficLights2" | "ThreeSigns" | "ThreeSymbols" | "ThreeSymbols2" | "FourArrows" | "FourArrowsGray" | "FourRedToBlack" | "FourRating" | "FourTrafficLights" | "FiveArrows" | "FiveArrowsGray" | "FiveRating" | "FiveQuarters" | "ThreeStars" | "ThreeTriangles" | "FiveBoxes" | "LinkedEntityFinanceIcon" | "LinkedEntityMapIcon";'
    return:
      type:
      - Excel.IconSet | "Invalid" | "ThreeArrows" | "ThreeArrowsGray" | "ThreeFlags" | "ThreeTrafficLights1" | "ThreeTrafficLights2" | "ThreeSigns" | "ThreeSymbols" | "ThreeSymbols2" | "FourArrows" | "FourArrowsGray" | "FourRedToBlack" | "FourRating" | "FourTrafficLights" | "FiveArrows" | "FiveArrowsGray" | "FiveRating" | "FiveQuarters" | "ThreeStars" | "ThreeTriangles" | "FiveBoxes" | "LinkedEntityFinanceIcon" | "LinkedEntityMapIcon"
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"1c3d9-131\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"1c3d9-131\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B8:E13\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.iconSet);\n    const iconSetCF = conditionalFormat.iconSet;\n    iconSetCF.style = Excel.IconSet.threeTriangles;\n\n    /*\n        The iconSetCF.criteria array is automatically prepopulated with\n        criterion elements whose properties have been given default settings.\n        You can't write to each property of a criterion directly. Instead,\n        replace the whole criteria object.\n\n        With a \"three*\" icon set style, such as \"threeTriangles\", the third\n        element in the criteria array (criteria[2]) defines the \"top\" icon;\n        e.g., a green triangle. The second (criteria[1]) defines the \"middle\"\n        icon, The first (criteria[0]) defines the \"low\" icon, but it\n        can often be left empty as this method does below, because every\n        cell that does not match the other two criteria always gets the low\n        icon.            \n    */\n    iconSetCF.criteria = [\n        {} as any,\n        {\n            type: Excel.ConditionalFormatIconRuleType.number,\n            operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,\n            formula: \"=700\"\n        },\n        {\n            type: Excel.ConditionalFormatIconRuleType.number,\n            operator: Excel.ConditionalIconCriterionOperator.greaterThanOrEqual,\n            formula: \"=1000\",\n        }\n    ];\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.IconSetConditionalFormat.toJSON
  summary: <span data-ttu-id="1c3d9-132">Überschreibt das JavaScript `toJSON()` Methode, um nützliche Ausgabe zu gewährleisten, wenn ein API-Objekt zu übergeben ist `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="1c3d9-132">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="1c3d9-133">(`JSON.stringify`<!-- -->, wiederum die `toJSON` -Methode des Objekts, das es übergeben wird.) Das ursprüngliche Excel.IconSetConditionalFormat-Objekt ist ein API-Objekt der `toJSON` -Methode gibt eine einfache JavaScript-Objekt zurück (als `Excel.Interfaces.IconSetConditionalFormatData` <!-- -->), die flache Kopien der geladene untergeordnete Eigenschaften aus dem ursprünglichen-Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="1c3d9-133">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.IconSetConditionalFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.IconSetConditionalFormatData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.IconSetConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.IconSetConditionalFormatData
      description: ''
