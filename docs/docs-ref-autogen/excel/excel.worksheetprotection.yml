### YamlMime:UniversalReference
items:
  - uid: excel.Excel.WorksheetProtection
    summary: |-
      <span data-ttu-id="fa8db-101">Stellt den Schutz eines Arbeitsblattobjekts dar.</span><span class="sxs-lookup"><span data-stu-id="fa8db-101">Represents the protection of a sheet object.</span></span>

      <span data-ttu-id="fa8db-102">\[[API-Satz: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fa8db-102">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.WorksheetProtection
    fullName: Excel.WorksheetProtection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.WorksheetProtection.context
      - excel.Excel.WorksheetProtection.load
      - excel.Excel.WorksheetProtection.load_1
      - excel.Excel.WorksheetProtection.load_2
      - excel.Excel.WorksheetProtection.options
      - excel.Excel.WorksheetProtection.protect
      - excel.Excel.WorksheetProtection.protected
      - excel.Excel.WorksheetProtection.toJSON
      - excel.Excel.WorksheetProtection.unprotect
  - uid: excel.Excel.WorksheetProtection.context
    summary: <span data-ttu-id="fa8db-103">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="fa8db-103">The request context associated with the object.</span></span> <span data-ttu-id="fa8db-104">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="fa8db-104">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.WorksheetProtection.load
    summary: <span data-ttu-id="fa8db-105">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="fa8db-105">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="fa8db-106">Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.</span><span class="sxs-lookup"><span data-stu-id="fa8db-106">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="fa8db-107">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="fa8db-107">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="fa8db-108">`load(option?: string | string[]): Excel.WorksheetProtection`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="fa8db-108">`load(option?: string | string[]): Excel.WorksheetProtection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="fa8db-109">`load(option?: { select?: string; expand?: string; }): Excel.WorksheetProtection`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="fa8db-109">`load(option?: { select?: string; expand?: string; }): Excel.WorksheetProtection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="fa8db-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorksheetProtection`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="fa8db-110">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.WorksheetProtection` - Only available on collection types.</span></span> <span data-ttu-id="fa8db-111">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="fa8db-111">It is similar to the preceding signature.</span></span> <span data-ttu-id="fa8db-112">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="fa8db-112">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="fa8db-113">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="fa8db-113">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="fa8db-114">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="fa8db-114">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.WorksheetProtectionLoadOptions): Excel.WorksheetProtection;'
      return:
        type:
          - excel.Excel.WorksheetProtection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.WorksheetProtectionLoadOptions
  - uid: excel.Excel.WorksheetProtection.load_1
    summary: <span data-ttu-id="fa8db-115">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="fa8db-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="fa8db-116">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="fa8db-116">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.WorksheetProtection;'
      return:
        type:
          - excel.Excel.WorksheetProtection
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="fa8db-117">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="fa8db-117">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.WorksheetProtection.load_2
    summary: <span data-ttu-id="fa8db-118">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="fa8db-118">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="fa8db-119">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="fa8db-119">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.WorksheetProtection;'
      return:
        type:
          - excel.Excel.WorksheetProtection
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="fa8db-120">Wobei propertyNamesAndPaths. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="fa8db-120">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.WorksheetProtection.options
    summary: |-
      <span data-ttu-id="fa8db-121">Optionen für den Arbeitsblattschutz.</span><span class="sxs-lookup"><span data-stu-id="fa8db-121">Sheet protection options.</span></span> <span data-ttu-id="fa8db-122">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="fa8db-122">Read-only.</span></span>

      <span data-ttu-id="fa8db-123">\[[API-Satz: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fa8db-123">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: options
    fullName: options
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly options: Excel.WorksheetProtectionOptions;'
      return:
        type:
          - excel.Excel.WorksheetProtectionOptions
  - uid: excel.Excel.WorksheetProtection.protect
    summary: |-
      <span data-ttu-id="fa8db-124">Schützt ein Arbeitsblatt.</span><span class="sxs-lookup"><span data-stu-id="fa8db-124">Protects a worksheet.</span></span> <span data-ttu-id="fa8db-125">Schlägt fehl, wenn das Arbeitsblatt bereits geschützt wurde.</span><span class="sxs-lookup"><span data-stu-id="fa8db-125">Fails if the worksheet has already been protected.</span></span>

      <span data-ttu-id="fa8db-126">\[[API-Satz: ExcelApi 1,2 für Optionen; 1,7 für Kennwort](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fa8db-126">\[ [API set: ExcelApi 1.2 for options; 1.7 for password](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: 'protect(options, password)'
    fullName: 'protect(options, password)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'protect(options?: Excel.WorksheetProtectionOptions, password?: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fa8db-127">Beispiele</span><span class="sxs-lookup"><span data-stu-id="fa8db-127">Examples</span></span>

          ```javascript
          Excel.run(function(ctx) {
            // get a reference to Sheet1
            var sheet = ctx.workbook.worksheets.getItem("Sheet1");

            // Protect inserting or deleting rows in Sheet1
            sheet.protection.protect({
              allowInsertRows: false,
              allowDeleteRows: false
            });

            return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Excel.run(async (context) => {
              let activeSheet = context.workbook.worksheets.getActiveWorksheet();
              activeSheet.load("protection/protected");

              await context.sync();

              if (!activeSheet.protection.protected) {
                  activeSheet.protection.protect();
              }
          });
          ```
          ```typescript
          let password = await passwordHandler();
          passwordHelper(password);
          await Excel.run(async (context) => {
              let activeSheet = context.workbook.worksheets.getActiveWorksheet();
              activeSheet.load("protection/protected");

              await context.sync();

              if (!activeSheet.protection.protected) {
                  activeSheet.protection.protect(null, password);
              }
          });
          ```
      parameters:
        - id: options
          description: <span data-ttu-id="fa8db-128">Optional.</span><span class="sxs-lookup"><span data-stu-id="fa8db-128">Optional.</span></span> <span data-ttu-id="fa8db-129">Optionen für den Arbeitsblattschutz.</span><span class="sxs-lookup"><span data-stu-id="fa8db-129">Sheet protection options.</span></span>
          type:
            - excel.Excel.WorksheetProtectionOptions
        - id: password
          description: <span data-ttu-id="fa8db-130">Optional.</span><span class="sxs-lookup"><span data-stu-id="fa8db-130">Optional.</span></span> <span data-ttu-id="fa8db-131">Blattschutz Kennwort.</span><span class="sxs-lookup"><span data-stu-id="fa8db-131">Sheet protection password.</span></span>
          type:
            - string
  - uid: excel.Excel.WorksheetProtection.protected
    summary: |-
      <span data-ttu-id="fa8db-132">Zeigt an, ob das Arbeitsblatt geschützt ist.</span><span class="sxs-lookup"><span data-stu-id="fa8db-132">Indicates if the worksheet is protected.</span></span> <span data-ttu-id="fa8db-133">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="fa8db-133">Read-only.</span></span>

      <span data-ttu-id="fa8db-134">\[[API-Satz: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fa8db-134">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: protected
    fullName: protected
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly protected: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.WorksheetProtection.toJSON
    summary: '<span data-ttu-id="fa8db-135">ÜberSchreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API-Objekt an`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="fa8db-135">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="fa8db-136">.</span><span class="sxs-lookup"><span data-stu-id="fa8db-136"></span></span> <span data-ttu-id="fa8db-137">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="fa8db-137"></span></span><!-- --><span data-ttu-id="fa8db-138">Ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche Excel. WorksheetProtection-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt zurück (typisiert als`Excel.Interfaces.WorksheetProtectionData`</span><span class="sxs-lookup"><span data-stu-id="fa8db-138">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.WorksheetProtection object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.WorksheetProtectionData`</span></span><!-- --><span data-ttu-id="fa8db-139">), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="fa8db-139">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.WorksheetProtectionData;'
      return:
        type:
          - excel.Excel.Interfaces.WorksheetProtectionData
        description: ''
  - uid: excel.Excel.WorksheetProtection.unprotect
    summary: |-
      <span data-ttu-id="fa8db-140">Hebt den Schutz eines Arbeitsblatts auf.</span><span class="sxs-lookup"><span data-stu-id="fa8db-140">Unprotects a worksheet.</span></span>

      <span data-ttu-id="fa8db-141">\[[API-Satz: ExcelApi 1,7 für Kennwort](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fa8db-141">\[ [API set: ExcelApi 1.7 for password](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: unprotect(password)
    fullName: unprotect(password)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'unprotect(password?: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fa8db-142">Beispiele</span><span class="sxs-lookup"><span data-stu-id="fa8db-142">Examples</span></span>

          ```javascript
          Excel.run(function(ctx) {
            // get a reference to Sheet1
            var sheet = ctx.workbook.worksheets.getItem("Sheet1");

            // Remove all protects applied to Sheet1
            sheet.protection.unprotect();

            return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Unprotecting a worksheet with unprotect() will remove all 
          // WorksheetProtectionOptions options applied to a worksheet.
          // To remove only a subset of WorksheetProtectionOptions use the 
          // protect() method and set the options you wish to remove to true.
          Excel.run(function(ctx) {
            var sheet = ctx.workbook.worksheets.getItem("Sheet1");
            sheet.protection.protect({
              allowInsertRows: false, // Protect row insertion
              allowDeleteRows: true // Unprotect row deletion
            });
          });
          ```
          ```typescript
          await Excel.run(async (context) => {
              let activeSheet = context.workbook.worksheets.getActiveWorksheet();
              activeSheet.protection.unprotect();
          });
          ```
          ```typescript
          let password = await passwordHandler();
          passwordHelper(password);
          await Excel.run(async (context) => {
              let activeSheet = context.workbook.worksheets.getActiveWorksheet();
              activeSheet.protection.unprotect(password);
          });
          ```
      parameters:
        - id: password
          description: <span data-ttu-id="fa8db-143">Kennwort für den Arbeitsblattschutz.</span><span class="sxs-lookup"><span data-stu-id="fa8db-143">sheet protection password.</span></span>
          type:
            - string