### YamlMime:UniversalReference
ms.openlocfilehash: a84618023cb0faba206657143f2db2e7d94f270f
ms.sourcegitcommit: 016e17422cf62dc9f1de1809666e9244e41cc1a9
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 11/09/2018
ms.locfileid: "26235934"
items:
- uid: excel.Excel.RangeFont
  summary: >-
    Dieses Objekt stellt die Zeichenformatierung (Schriftart, Schriftgrad, Farbe usw.) für ein Objekt dar.


    \[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.RangeFont
  fullName: Excel.RangeFont
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.RangeFont.bold
  - excel.Excel.RangeFont.color
  - excel.Excel.RangeFont.italic
  - excel.Excel.RangeFont.load
  - excel.Excel.RangeFont.name
  - excel.Excel.RangeFont.size
  - excel.Excel.RangeFont.toJSON
  - excel.Excel.RangeFont.underline
- uid: excel.Excel.RangeFont.bold
  summary: >-
    Stellt den Fett-Status der Schriftart dar.


    \[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: bold
  fullName: bold
  langs:
  - typeScript
  type: property
  syntax:
    content: 'bold: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.RangeFont.color
  summary: >-
    HTML-Farbe Code Darstellung der Textfarbe. E.g. \#FF0000 für Rot.


    \[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: color
  fullName: color
  langs:
  - typeScript
  type: property
  syntax:
    content: 'color: string;'
    return:
      type:
      - string
- uid: excel.Excel.RangeFont.italic
  summary: >-
    Stellt den Kursiv-Status der Schriftart dar.


    \[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: italic
  fullName: italic
  langs:
  - typeScript
  type: property
  syntax:
    content: 'italic: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.RangeFont.load
  summary: Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts. Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.
  remarks: "Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:\n\n`load(option?: { select?: string; expand?: string; }): Excel.RangeFont`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.\n\n`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeFont`-Nur auf Auflistungstypen verfügbar. Es ist ähnlich wie die jeweils vorhergehende Signatur. Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können. Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen. Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var rangeFont = range.format.font;\n    rangeFont.load('name');\n    return ctx.sync().then(function() {\n        console.log(rangeFont.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// The example below sets font name. \nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.format.font.name = 'Times New Roman';\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.RangeFont;'
    return:
      type:
      - excel.Excel.RangeFont
      description: ''
    parameters:
    - id: option
      description: Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.
      type:
      - string | string[]
- uid: excel.Excel.RangeFont.name
  summary: >-
    Schriftartname (z. B. "Calibri")


    \[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
- uid: excel.Excel.RangeFont.size
  summary: >-
    Schriftgrad


    \[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: size
  fullName: size
  langs:
  - typeScript
  type: property
  syntax:
    content: 'size: number;'
    return:
      type:
      - number
- uid: excel.Excel.RangeFont.toJSON
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.RangeFontData;'
    return:
      type:
      - excel.Excel.Interfaces.RangeFontData
      description: ''
- uid: excel.Excel.RangeFont.underline
  summary: >-
    Typ der Unterstreichung auf die Schriftart. Einzelheiten finden Sie unter Excel.RangeUnderlineStyle.


    \[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  name: underline
  fullName: underline
  langs:
  - typeScript
  type: property
  syntax:
    content: 'underline: Excel.RangeUnderlineStyle | "None" | "Single" | "Double" | "SingleAccountant" | "DoubleAccountant";'
    return:
      type:
      - Excel.RangeUnderlineStyle | "None" | "Single" | "Double" | "SingleAccountant" | "DoubleAccountant"
