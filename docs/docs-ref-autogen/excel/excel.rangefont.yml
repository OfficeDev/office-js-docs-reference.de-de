### YamlMime:UniversalReference
ms.openlocfilehash: d140dbb25ad7595d579fe0938a93a48a60c1470e
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/20/2019
ms.locfileid: "30095415"
items:
- uid: excel.Excel.RangeFont
  summary: >-
    <span data-ttu-id="50131-101">Dieses Objekt stellt die Zeichenformatierung (Schriftart, Schriftgrad, Farbe usw.) für ein Objekt dar.</span><span class="sxs-lookup"><span data-stu-id="50131-101">This object represents the font attributes (font name, font size, color, etc.) for an object.</span></span>


    <span data-ttu-id="50131-102">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50131-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.RangeFont
  fullName: Excel.RangeFont
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.RangeFont.bold
  - excel.Excel.RangeFont.color
  - excel.Excel.RangeFont.context
  - excel.Excel.RangeFont.italic
  - excel.Excel.RangeFont.load
  - excel.Excel.RangeFont.load_1
  - excel.Excel.RangeFont.load_2
  - excel.Excel.RangeFont.name
  - excel.Excel.RangeFont.set
  - excel.Excel.RangeFont.set_1
  - excel.Excel.RangeFont.size
  - excel.Excel.RangeFont.strikethrough
  - excel.Excel.RangeFont.subscript
  - excel.Excel.RangeFont.superscript
  - excel.Excel.RangeFont.tintAndShade
  - excel.Excel.RangeFont.toJSON
  - excel.Excel.RangeFont.underline
- uid: excel.Excel.RangeFont.bold
  summary: >-
    <span data-ttu-id="50131-103">Stellt den Fett-Status der Schriftart dar.</span><span class="sxs-lookup"><span data-stu-id="50131-103">Represents the bold status of font.</span></span>


    <span data-ttu-id="50131-104">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50131-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: bold
  fullName: bold
  langs:
  - typeScript
  type: property
  syntax:
    content: 'bold: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.RangeFont.color
  summary: >-
    <span data-ttu-id="50131-105">HTML-Farb Codedarstellung der Textfarbe.</span><span class="sxs-lookup"><span data-stu-id="50131-105">HTML color code representation of the text color.</span></span> <span data-ttu-id="50131-106">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="50131-106">E.g.</span></span> <span data-ttu-id="50131-107">\#FF0000 stellt rot dar.</span><span class="sxs-lookup"><span data-stu-id="50131-107">\#FF0000 represents Red.</span></span>


    <span data-ttu-id="50131-108">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50131-108">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: color
  fullName: color
  langs:
  - typeScript
  type: property
  syntax:
    content: 'color: string;'
    return:
      type:
      - string
- uid: excel.Excel.RangeFont.context
  summary: <span data-ttu-id="50131-109">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="50131-109">The request context associated with the object.</span></span> <span data-ttu-id="50131-110">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="50131-110">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.RangeFont.italic
  summary: >-
    <span data-ttu-id="50131-111">Stellt den Kursiv-Status der Schriftart dar.</span><span class="sxs-lookup"><span data-stu-id="50131-111">Represents the italic status of the font.</span></span>


    <span data-ttu-id="50131-112">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50131-112">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: italic
  fullName: italic
  langs:
  - typeScript
  type: property
  syntax:
    content: 'italic: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.RangeFont.load
  summary: <span data-ttu-id="50131-113">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="50131-113">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="50131-114">Sie müssen "context. Sync ()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="50131-114">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="50131-115">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="50131-115">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="50131-116">`load(option?: string | string[]): Excel.RangeFont`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="50131-116">`load(option?: string | string[]): Excel.RangeFont` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="50131-117">`load(option?: { select?: string; expand?: string; }): Excel.RangeFont`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="50131-117">`load(option?: { select?: string; expand?: string; }): Excel.RangeFont` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="50131-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeFont`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="50131-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeFont` - Only available on collection types.</span></span> <span data-ttu-id="50131-119">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="50131-119">It is similar to the preceding signature.</span></span> <span data-ttu-id="50131-120">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="50131-120">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="50131-121">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="50131-121">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="50131-122">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="50131-122">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.RangeFontLoadOptions): Excel.RangeFont;'
    return:
      type:
      - excel.Excel.RangeFont
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.RangeFontLoadOptions
- uid: excel.Excel.RangeFont.load_1
  summary: <span data-ttu-id="50131-123">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="50131-123">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="50131-124">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="50131-124">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.RangeFont;'
    return:
      type:
      - excel.Excel.RangeFont
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"50131-125\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"50131-125\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var rangeFont = range.format.font;\n    rangeFont.load('name');\n    return ctx.sync().then(function() {\n        console.log(rangeFont.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// The example below sets font name. \nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.format.font.name = 'Times New Roman';\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="50131-126">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="50131-126">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.RangeFont.load_2
  summary: <span data-ttu-id="50131-127">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="50131-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="50131-128">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="50131-128">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.RangeFont;'
    return:
      type:
      - excel.Excel.RangeFont
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="50131-129">Wobei propertyNamesAndPaths. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="50131-129">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.RangeFont.name
  summary: >-
    <span data-ttu-id="50131-130">Schriftartname (z. B. "Calibri")</span><span class="sxs-lookup"><span data-stu-id="50131-130">Font name (e.g. "Calibri")</span></span>


    <span data-ttu-id="50131-131">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50131-131">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
- uid: excel.Excel.RangeFont.set
  summary: <span data-ttu-id="50131-132">Legt mehrere Eigenschaften eines Objekts gleichzeitig fest.</span><span class="sxs-lookup"><span data-stu-id="50131-132">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="50131-133">Sie können entweder ein plain-Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs weitergeben.</span><span class="sxs-lookup"><span data-stu-id="50131-133">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="50131-134">Diese Methode hat die folgende zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="50131-134">This method has the following additional signature:</span></span>


    `set(properties: Excel.RangeFont): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.RangeFontUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="50131-135">Ein JavaScript-Objekt mit Eigenschaften, die isomorphically strukturiert sind, um die Eigenschaften des Objekts, für das die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="50131-135">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.RangeFontUpdateData
    - id: options
      description: <span data-ttu-id="50131-136">Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.</span><span class="sxs-lookup"><span data-stu-id="50131-136">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.RangeFont.set_1
  summary: <span data-ttu-id="50131-137">Legt mehrere Eigenschaften für das Objekt auf der Grundlage eines vorhandenen geladenen Objekts zur gleichen Zeit fest.</span><span class="sxs-lookup"><span data-stu-id="50131-137">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.RangeFont): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.RangeFont
- uid: excel.Excel.RangeFont.size
  summary: >-
    <span data-ttu-id="50131-138">Schriftgrad</span><span class="sxs-lookup"><span data-stu-id="50131-138">Font size.</span></span>


    <span data-ttu-id="50131-139">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50131-139">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: size
  fullName: size
  langs:
  - typeScript
  type: property
  syntax:
    content: 'size: number;'
    return:
      type:
      - number
- uid: excel.Excel.RangeFont.strikethrough
  summary: >-
    <span data-ttu-id="50131-140">Stellt den durchgestrichen Status der Schriftart dar.</span><span class="sxs-lookup"><span data-stu-id="50131-140">Represents the strikethrough status of font.</span></span> <span data-ttu-id="50131-141">Ein NULL-Wert gibt an, dass der gesamte Zeitraum nicht einheitlich durchGestrichen ist.</span><span class="sxs-lookup"><span data-stu-id="50131-141">A null value indicates that the entire range doesn't have uniform Strikethrough setting.</span></span>


    <span data-ttu-id="50131-142">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50131-142">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: strikethrough
  fullName: strikethrough
  langs:
  - typeScript
  type: property
  syntax:
    content: 'strikethrough: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.RangeFont.subscript
  summary: >-
    <span data-ttu-id="50131-143">Stellt den tiefgestellte Status der Schriftart dar.</span><span class="sxs-lookup"><span data-stu-id="50131-143">Represents the Subscript status of font.</span></span> <span data-ttu-id="50131-144">Gibt true zurück, wenn alle Schriftarten des Bereiche Tiefgestellt sind.</span><span class="sxs-lookup"><span data-stu-id="50131-144">Returns True if all the fonts of the range are Subscript.</span></span> <span data-ttu-id="50131-145">Gibt false zurück, wenn alle Schriftarten des Range-Superscript oder normal (weder hochgestellt noch Tiefgestellt) sind.</span><span class="sxs-lookup"><span data-stu-id="50131-145">Returns False if all the fonts of the range are Superscript or normal (neither Superscript, nor Subscript).</span></span> <span data-ttu-id="50131-146">Andernfalls wird NULL zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="50131-146">Returns Null otherwise.</span></span>


    <span data-ttu-id="50131-147">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50131-147">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: subscript
  fullName: subscript
  langs:
  - typeScript
  type: property
  syntax:
    content: 'subscript: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.RangeFont.superscript
  summary: >-
    <span data-ttu-id="50131-148">Stellt den hoch Skript Status der Schriftart dar.</span><span class="sxs-lookup"><span data-stu-id="50131-148">Represents the Superscript status of font.</span></span> <span data-ttu-id="50131-149">Gibt true zurück, wenn alle Schriftarten des Bereiche hochgestellt sind.</span><span class="sxs-lookup"><span data-stu-id="50131-149">Returns True if all the fonts of the range are Superscript.</span></span> <span data-ttu-id="50131-150">Gibt false zurück, wenn alle Schriftarten des Range-Subscript oder normal (weder Superscript noch Subscript) sind.</span><span class="sxs-lookup"><span data-stu-id="50131-150">Returns False if all the fonts of the range are Subscript or normal (neither Superscript, nor Subscript).</span></span> <span data-ttu-id="50131-151">Andernfalls wird NULL zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="50131-151">Returns Null otherwise.</span></span>


    <span data-ttu-id="50131-152">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50131-152">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: superscript
  fullName: superscript
  langs:
  - typeScript
  type: property
  syntax:
    content: 'superscript: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.RangeFont.tintAndShade
  summary: >-
    <span data-ttu-id="50131-153">Gibt einen Double-Wert zurück, der eine Farbe für die Range-Schriftart aufhellt oder abdunkelt, oder legt ihn fest, wobei 0 für die ursprüngliche Farbe zwischen-1 (dunkelsten) und 1 (hellste) liegt.</span><span class="sxs-lookup"><span data-stu-id="50131-153">Returns or sets a double that lightens or darkens a color for Range Font, the value is between -1 (darkest) and 1 (brightest), with 0 for the original color.</span></span> <span data-ttu-id="50131-154">Ein NULL-Wert gibt an, dass der gesamte Zeitraum keine einheitliche Schriftart tintAndShade Einstellung aufweist.</span><span class="sxs-lookup"><span data-stu-id="50131-154">A null value indicates that the entire range doesn't have uniform font tintAndShade setting.</span></span>


    <span data-ttu-id="50131-155">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50131-155">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: tintAndShade
  fullName: tintAndShade
  langs:
  - typeScript
  type: property
  syntax:
    content: 'tintAndShade: number;'
    return:
      type:
      - number
- uid: excel.Excel.RangeFont.toJSON
  summary: <span data-ttu-id="50131-156">ÜberSchreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API `JSON.stringify()` <!-- -->-Objekt an übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="50131-156">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="50131-157">(`JSON.stringify`<!-- -->ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche Excel. RangeFont-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt `Excel.Interfaces.RangeFontData` <!-- -->(typisiert als) zurück, das flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="50131-157">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.RangeFont object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.RangeFontData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.RangeFontData;'
    return:
      type:
      - excel.Excel.Interfaces.RangeFontData
      description: ''
- uid: excel.Excel.RangeFont.underline
  summary: >-
    <span data-ttu-id="50131-158">Auf die Schriftart angewendeter unter Strichtyp.</span><span class="sxs-lookup"><span data-stu-id="50131-158">Type of underline applied to the font.</span></span> <span data-ttu-id="50131-159">Weitere Informationen finden Sie unter Excel. RangeUnderlineStyle.</span><span class="sxs-lookup"><span data-stu-id="50131-159">See Excel.RangeUnderlineStyle for details.</span></span>


    <span data-ttu-id="50131-160">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="50131-160">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: underline
  fullName: underline
  langs:
  - typeScript
  type: property
  syntax:
    content: 'underline: Excel.RangeUnderlineStyle | "None" | "Single" | "Double" | "SingleAccountant" | "DoubleAccountant";'
    return:
      type:
      - Excel.RangeUnderlineStyle | "None" | "Single" | "Double" | "SingleAccountant" | "DoubleAccountant"
