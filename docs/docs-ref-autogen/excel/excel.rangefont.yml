### YamlMime:UniversalReference
ms.openlocfilehash: cc4856040e3eb0219e48c9cc30e38c4412cd532e
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/13/2019
ms.locfileid: "29974745"
items:
- uid: excel.Excel.RangeFont
  summary: >-
    <span data-ttu-id="33ea6-101">Dieses Objekt stellt die Zeichenformatierung (Schriftart, Schriftgrad, Farbe usw.) für ein Objekt dar.</span><span class="sxs-lookup"><span data-stu-id="33ea6-101">This object represents the font attributes (font name, font size, color, etc.) for an object.</span></span>


    <span data-ttu-id="33ea6-102">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="33ea6-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.RangeFont
  fullName: Excel.RangeFont
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.RangeFont.bold
  - excel.Excel.RangeFont.color
  - excel.Excel.RangeFont.context
  - excel.Excel.RangeFont.italic
  - excel.Excel.RangeFont.load
  - excel.Excel.RangeFont.load_1
  - excel.Excel.RangeFont.load_2
  - excel.Excel.RangeFont.name
  - excel.Excel.RangeFont.set
  - excel.Excel.RangeFont.set_1
  - excel.Excel.RangeFont.size
  - excel.Excel.RangeFont.toJSON
  - excel.Excel.RangeFont.underline
- uid: excel.Excel.RangeFont.bold
  summary: >-
    <span data-ttu-id="33ea6-103">Stellt den Fett-Status der Schriftart dar.</span><span class="sxs-lookup"><span data-stu-id="33ea6-103">Represents the bold status of font.</span></span>


    <span data-ttu-id="33ea6-104">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="33ea6-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: bold
  fullName: bold
  langs:
  - typeScript
  type: property
  syntax:
    content: 'bold: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.RangeFont.color
  summary: >-
    <span data-ttu-id="33ea6-105">HTML-Farbe Code Darstellung der Textfarbe.</span><span class="sxs-lookup"><span data-stu-id="33ea6-105">HTML color code representation of the text color.</span></span> <span data-ttu-id="33ea6-106">Beispiel:</span><span class="sxs-lookup"><span data-stu-id="33ea6-106">E.g.</span></span> <span data-ttu-id="33ea6-107">\#FF0000 für Rot.</span><span class="sxs-lookup"><span data-stu-id="33ea6-107">\#FF0000 represents Red.</span></span>


    <span data-ttu-id="33ea6-108">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="33ea6-108">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: color
  fullName: color
  langs:
  - typeScript
  type: property
  syntax:
    content: 'color: string;'
    return:
      type:
      - string
- uid: excel.Excel.RangeFont.context
  summary: <span data-ttu-id="33ea6-109">Der Anforderungskontext-zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="33ea6-109">The request context associated with the object.</span></span> <span data-ttu-id="33ea6-110">Dadurch wird das Add-in Prozess mit der Office-hostanwendung Prozess verbunden.</span><span class="sxs-lookup"><span data-stu-id="33ea6-110">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.RangeFont.italic
  summary: >-
    <span data-ttu-id="33ea6-111">Stellt den Kursiv-Status der Schriftart dar.</span><span class="sxs-lookup"><span data-stu-id="33ea6-111">Represents the italic status of the font.</span></span>


    <span data-ttu-id="33ea6-112">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="33ea6-112">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: italic
  fullName: italic
  langs:
  - typeScript
  type: property
  syntax:
    content: 'italic: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.RangeFont.load
  summary: <span data-ttu-id="33ea6-113">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="33ea6-113">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="33ea6-114">Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="33ea6-114">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="33ea6-115">Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="33ea6-115">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="33ea6-116">`load(option?: string | string[]): Excel.RangeFont`-Wo Option ist eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="33ea6-116">`load(option?: string | string[]): Excel.RangeFont` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="33ea6-117">`load(option?: { select?: string; expand?: string; }): Excel.RangeFont`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class="sxs-lookup"><span data-stu-id="33ea6-117">`load(option?: { select?: string; expand?: string; }): Excel.RangeFont` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="33ea6-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeFont`-Nur auf Auflistungstypen verfügbar.</span><span class="sxs-lookup"><span data-stu-id="33ea6-118">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.RangeFont` - Only available on collection types.</span></span> <span data-ttu-id="33ea6-119">Es ist ähnlich wie die jeweils vorhergehende Signatur.</span><span class="sxs-lookup"><span data-stu-id="33ea6-119">It is similar to the preceding signature.</span></span> <span data-ttu-id="33ea6-120">Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können.</span><span class="sxs-lookup"><span data-stu-id="33ea6-120">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="33ea6-121">Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="33ea6-121">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="33ea6-122">Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.</span><span class="sxs-lookup"><span data-stu-id="33ea6-122">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.RangeFontLoadOptions): Excel.RangeFont;'
    return:
      type:
      - excel.Excel.RangeFont
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.RangeFontLoadOptions
- uid: excel.Excel.RangeFont.load_1
  summary: <span data-ttu-id="33ea6-123">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="33ea6-123">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="33ea6-124">Sie müssen Aufrufen `context.sync()` vor dem Lesen der Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="33ea6-124">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.RangeFont;'
    return:
      type:
      - excel.Excel.RangeFont
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"33ea6-125\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"33ea6-125\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var worksheet = ctx.workbook.worksheets.getItem(sheetName);\n    var range = worksheet.getRange(rangeAddress);\n    var rangeFont = range.format.font;\n    rangeFont.load('name');\n    return ctx.sync().then(function() {\n        console.log(rangeFont.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// The example below sets font name. \nExcel.run(function (ctx) { \n    var sheetName = \"Sheet1\";\n    var rangeAddress = \"F:G\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeAddress);\n    range.format.font.name = 'Times New Roman';\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="33ea6-126">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="33ea6-126">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.RangeFont.load_2
  summary: <span data-ttu-id="33ea6-127">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="33ea6-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="33ea6-128">Sie müssen Aufrufen `context.sync()` vor dem Lesen der Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="33ea6-128">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.RangeFont;'
    return:
      type:
      - excel.Excel.RangeFont
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="33ea6-129">Wobei propertyNamesAndPaths.select ist eine durch Kommas getrennte Zeichenfolge, die angibt, die Eigenschaften zum Laden und propertyNamesAndPaths.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class="sxs-lookup"><span data-stu-id="33ea6-129">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.RangeFont.name
  summary: >-
    <span data-ttu-id="33ea6-130">Schriftartname (z. B. "Calibri")</span><span class="sxs-lookup"><span data-stu-id="33ea6-130">Font name (e.g. "Calibri")</span></span>


    <span data-ttu-id="33ea6-131">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="33ea6-131">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
- uid: excel.Excel.RangeFont.set
  summary: <span data-ttu-id="33ea6-132">Legt mehrere Eigenschaften eines Objekts zur selben Zeit fest.</span><span class="sxs-lookup"><span data-stu-id="33ea6-132">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="33ea6-133">Sie können entweder eine einfache-Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt des gleichen Typs übergeben.</span><span class="sxs-lookup"><span data-stu-id="33ea6-133">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="33ea6-134">Diese Methode hat die folgenden zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="33ea6-134">This method has the following additional signature:</span></span>


    `set(properties: Excel.RangeFont): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.RangeFontUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="33ea6-135">Ein JavaScript-Objekt mit Eigenschaften, die an die Eigenschaften des Objekts isomorphically strukturiert werden, auf denen die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="33ea6-135">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.RangeFontUpdateData
    - id: options
      description: <span data-ttu-id="33ea6-136">Bietet eine Option, um Fehler zu unterdrücken, wenn schreibgeschützte Eigenschaften festgelegt werden, versucht das Properties-Objekt.</span><span class="sxs-lookup"><span data-stu-id="33ea6-136">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.RangeFont.set_1
  summary: <span data-ttu-id="33ea6-137">Mehrere Eigenschaften festgelegt auf das Objekt zur selben Zeit, basierend auf einem vorhandenen geladen-Objekt.</span><span class="sxs-lookup"><span data-stu-id="33ea6-137">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.RangeFont): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.RangeFont
- uid: excel.Excel.RangeFont.size
  summary: >-
    <span data-ttu-id="33ea6-138">Schriftgrad</span><span class="sxs-lookup"><span data-stu-id="33ea6-138">Font size.</span></span>


    <span data-ttu-id="33ea6-139">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="33ea6-139">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: size
  fullName: size
  langs:
  - typeScript
  type: property
  syntax:
    content: 'size: number;'
    return:
      type:
      - number
- uid: excel.Excel.RangeFont.toJSON
  summary: <span data-ttu-id="33ea6-140">Überschreibt das JavaScript `toJSON()` Methode, um nützliche Ausgabe zu gewährleisten, wenn ein API-Objekt zu übergeben ist `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="33ea6-140">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="33ea6-141">(`JSON.stringify`<!-- -->, wiederum die `toJSON` -Methode des Objekts, das es übergeben wird.) Das ursprüngliche Excel.RangeFont-Objekt ist ein API-Objekt der `toJSON` -Methode gibt eine einfache JavaScript-Objekt zurück (als `Excel.Interfaces.RangeFontData` <!-- -->), die flache Kopien der geladene untergeordnete Eigenschaften aus dem ursprünglichen-Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="33ea6-141">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.RangeFont object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.RangeFontData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.RangeFontData;'
    return:
      type:
      - excel.Excel.Interfaces.RangeFontData
      description: ''
- uid: excel.Excel.RangeFont.underline
  summary: >-
    <span data-ttu-id="33ea6-142">Typ der Unterstreichung auf die Schriftart.</span><span class="sxs-lookup"><span data-stu-id="33ea6-142">Type of underline applied to the font.</span></span> <span data-ttu-id="33ea6-143">Einzelheiten finden Sie unter Excel.RangeUnderlineStyle.</span><span class="sxs-lookup"><span data-stu-id="33ea6-143">See Excel.RangeUnderlineStyle for details.</span></span>


    <span data-ttu-id="33ea6-144">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="33ea6-144">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: underline
  fullName: underline
  langs:
  - typeScript
  type: property
  syntax:
    content: 'underline: Excel.RangeUnderlineStyle | "None" | "Single" | "Double" | "SingleAccountant" | "DoubleAccountant";'
    return:
      type:
      - Excel.RangeUnderlineStyle | "None" | "Single" | "Double" | "SingleAccountant" | "DoubleAccountant"
