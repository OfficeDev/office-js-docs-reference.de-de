### YamlMime:UniversalReference
ms.openlocfilehash: b6be0a1d89e91df438bb3f977f4ad2b2c85e4d80
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/20/2019
ms.locfileid: "30112237"
items:
- uid: excel.Excel.TableScopedCollection
  summary: >-
    <span data-ttu-id="4e280-101">Stellt eine bereichsbezogene Auflistung von Tabellen dar.</span><span class="sxs-lookup"><span data-stu-id="4e280-101">Represents a scoped collection of tables.</span></span> <span data-ttu-id="4e280-102">Für jede Tabelle wird die obere linke Ecke als Ankerposition betrachtet, und die Tabellen werden von oben nach unten und von links nach rechts sortiert.</span><span class="sxs-lookup"><span data-stu-id="4e280-102">For each table its top-left corner is considered its anchor location and the tables are sorted top to bottom and then left to right.</span></span>


    <span data-ttu-id="4e280-103">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4e280-103">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: Excel.TableScopedCollection
  fullName: Excel.TableScopedCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.TableScopedCollection.context
  - excel.Excel.TableScopedCollection.getCount
  - excel.Excel.TableScopedCollection.getFirst
  - excel.Excel.TableScopedCollection.getItem
  - excel.Excel.TableScopedCollection.items
  - excel.Excel.TableScopedCollection.load
  - excel.Excel.TableScopedCollection.load_1
  - excel.Excel.TableScopedCollection.load_2
  - excel.Excel.TableScopedCollection.toJSON
- uid: excel.Excel.TableScopedCollection.context
  summary: <span data-ttu-id="4e280-104">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="4e280-104">The request context associated with the object.</span></span> <span data-ttu-id="4e280-105">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="4e280-105">This connects the add-in's process to the Office host application's process.</span></span>
  isPreview: true
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.TableScopedCollection.getCount
  summary: >-
    <span data-ttu-id="4e280-106">Ruft die Anzahl von Tabellen in der Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="4e280-106">Gets the number of tables in the collection.</span></span>


    <span data-ttu-id="4e280-107">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4e280-107">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.TableScopedCollection.getFirst
  summary: >-
    <span data-ttu-id="4e280-108">Ruft die erste Tabelle in der Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="4e280-108">Gets the first table in the collection.</span></span> <span data-ttu-id="4e280-109">Die Tabellen in der Auflistung werden von oben nach unten und von links nach rechts sortiert, sodass die oberste linke Tabelle die erste Tabelle in der Auflistung ist.</span><span class="sxs-lookup"><span data-stu-id="4e280-109">The tables in the collection are sorted top to bottom and left to right, such that top left table is the first table in the collection.</span></span>


    <span data-ttu-id="4e280-110">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4e280-110">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getFirst()
  fullName: getFirst()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getFirst(): Excel.Table;'
    return:
      type:
      - excel.Excel.Table
      description: ''
- uid: excel.Excel.TableScopedCollection.getItem
  summary: >-
    <span data-ttu-id="4e280-111">Ruft eine Tabelle anhand des Namens oder der ID ab.</span><span class="sxs-lookup"><span data-stu-id="4e280-111">Gets a table by Name or ID.</span></span>


    <span data-ttu-id="4e280-112">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4e280-112">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: getItem(key)
  fullName: getItem(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: string): Excel.Table;'
    return:
      type:
      - excel.Excel.Table
      description: ''
    parameters:
    - id: key
      description: <span data-ttu-id="4e280-113">Name oder ID der abzurufenden Tabelle.</span><span class="sxs-lookup"><span data-stu-id="4e280-113">Name or ID of the table to be retrieved.</span></span>
      type:
      - string
- uid: excel.Excel.TableScopedCollection.items
  summary: <span data-ttu-id="4e280-114">Ruft die geladenen untergeordneten Elemente in dieser Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="4e280-114">Gets the loaded child items in this collection.</span></span>
  isPreview: true
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.Table[];'
    return:
      type:
      - Excel.Table[]
- uid: excel.Excel.TableScopedCollection.load
  summary: <span data-ttu-id="4e280-115">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e280-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4e280-116">Sie müssen "context. Sync ()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="4e280-116">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="4e280-117">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="4e280-117">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="4e280-118">`load(option?: string | string[]): Excel.TableScopedCollection`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="4e280-118">`load(option?: string | string[]): Excel.TableScopedCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="4e280-119">`load(option?: { select?: string; expand?: string; }): Excel.TableScopedCollection`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="4e280-119">`load(option?: { select?: string; expand?: string; }): Excel.TableScopedCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="4e280-120">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableScopedCollection`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="4e280-120">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableScopedCollection` - Only available on collection types.</span></span> <span data-ttu-id="4e280-121">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="4e280-121">It is similar to the preceding signature.</span></span> <span data-ttu-id="4e280-122">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="4e280-122">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="4e280-123">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="4e280-123">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="4e280-124">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="4e280-124">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.TableScopedCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.TableScopedCollection;'
    return:
      type:
      - excel.Excel.TableScopedCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.TableScopedCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.TableScopedCollection.load_1
  summary: <span data-ttu-id="4e280-125">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e280-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4e280-126">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="4e280-126">You must call `context.sync()` before reading the properties.</span></span>
  isPreview: true
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.TableScopedCollection;'
    return:
      type:
      - excel.Excel.TableScopedCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="4e280-127">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="4e280-127">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.TableScopedCollection.load_2
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.TableScopedCollection;'
    return:
      type:
      - excel.Excel.TableScopedCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.TableScopedCollection.toJSON
  summary: <span data-ttu-id="4e280-128">ÜberSchreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API `JSON.stringify()` <!-- -->-Objekt an übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="4e280-128">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="4e280-129">(`JSON.stringify`<!-- -->ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche `Excel.TableScopedCollection` Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt ( `Excel.Interfaces.TableScopedCollectionData` <!-- -->typisiert als) zurück, das ein "Items"-Array mit flachen Kopien aller geladenen Eigenschaften aus den Elementen der Auflistung enthält.</span><span class="sxs-lookup"><span data-stu-id="4e280-129">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.TableScopedCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableScopedCollectionData`<!-- -->) that contains an "items" array with shallow copies of any loaded properties from the collection's items.</span></span>
  isPreview: true
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableScopedCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.TableScopedCollectionData
      description: ''
