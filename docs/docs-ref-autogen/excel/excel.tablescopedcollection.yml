### YamlMime:UniversalReference
ms.openlocfilehash: b6be0a1d89e91df438bb3f977f4ad2b2c85e4d80
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/20/2019
ms.locfileid: "30112237"
items:
- uid: excel.Excel.TableScopedCollection
  summary: >-
    Stellt eine bereichsbezogene Auflistung von Tabellen dar. Für jede Tabelle wird die obere linke Ecke als Ankerposition betrachtet, und die Tabellen werden von oben nach unten und von links nach rechts sortiert.


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: Excel.TableScopedCollection
  fullName: Excel.TableScopedCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.TableScopedCollection.context
  - excel.Excel.TableScopedCollection.getCount
  - excel.Excel.TableScopedCollection.getFirst
  - excel.Excel.TableScopedCollection.getItem
  - excel.Excel.TableScopedCollection.items
  - excel.Excel.TableScopedCollection.load
  - excel.Excel.TableScopedCollection.load_1
  - excel.Excel.TableScopedCollection.load_2
  - excel.Excel.TableScopedCollection.toJSON
- uid: excel.Excel.TableScopedCollection.context
  summary: Der dem Objekt zugeordnete Anforderungskontext. Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.
  isPreview: true
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.TableScopedCollection.getCount
  summary: >-
    Ruft die Anzahl von Tabellen in der Auflistung ab.


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: excel.Excel.TableScopedCollection.getFirst
  summary: >-
    Ruft die erste Tabelle in der Auflistung ab. Die Tabellen in der Auflistung werden von oben nach unten und von links nach rechts sortiert, sodass die oberste linke Tabelle die erste Tabelle in der Auflistung ist.


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: getFirst()
  fullName: getFirst()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getFirst(): Excel.Table;'
    return:
      type:
      - excel.Excel.Table
      description: ''
- uid: excel.Excel.TableScopedCollection.getItem
  summary: >-
    Ruft eine Tabelle anhand des Namens oder der ID ab.


    \[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  isPreview: true
  name: getItem(key)
  fullName: getItem(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: string): Excel.Table;'
    return:
      type:
      - excel.Excel.Table
      description: ''
    parameters:
    - id: key
      description: Name oder ID der abzurufenden Tabelle.
      type:
      - string
- uid: excel.Excel.TableScopedCollection.items
  summary: Ruft die geladenen untergeordneten Elemente in dieser Auflistung ab.
  isPreview: true
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Excel.Table[];'
    return:
      type:
      - Excel.Table[]
- uid: excel.Excel.TableScopedCollection.load
  summary: Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts. Sie müssen "context. Sync ()" aufrufen, bevor Sie die Eigenschaften lesen.
  remarks: >-
    Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:


    `load(option?: string | string[]): Excel.TableScopedCollection`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.


    `load(option?: { select?: string; expand?: string; }): Excel.TableScopedCollection`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableScopedCollection`-Nur verfügbar für Sammlungstypen. Sie ähnelt der vorherigen Signatur. Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können. Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind. Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.TableScopedCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.TableScopedCollection;'
    return:
      type:
      - excel.Excel.TableScopedCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Excel.Interfaces.TableScopedCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
- uid: excel.Excel.TableScopedCollection.load_1
  summary: Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts. Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.
  isPreview: true
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.TableScopedCollection;'
    return:
      type:
      - excel.Excel.TableScopedCollection
      description: ''
    parameters:
    - id: propertyNames
      description: Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.
      type:
      - string | string[]
- uid: excel.Excel.TableScopedCollection.load_2
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Excel.TableScopedCollection;'
    return:
      type:
      - excel.Excel.TableScopedCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: excel.Excel.TableScopedCollection.toJSON
  summary: ÜberSchreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API `JSON.stringify()` <!-- -->-Objekt an übergeben wird. (`JSON.stringify`<!-- -->ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche `Excel.TableScopedCollection` Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt ( `Excel.Interfaces.TableScopedCollectionData` <!-- -->typisiert als) zurück, das ein "Items"-Array mit flachen Kopien aller geladenen Eigenschaften aus den Elementen der Auflistung enthält.
  isPreview: true
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableScopedCollectionData;'
    return:
      type:
      - excel.Excel.Interfaces.TableScopedCollectionData
      description: ''
