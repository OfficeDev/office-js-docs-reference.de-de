### YamlMime:UniversalReference
ms.openlocfilehash: 74544ce41638b4fbd0d70ece2112559a625640a2
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/20/2019
ms.locfileid: "30098054"
items:
- uid: excel.Excel.Chart
  summary: >-
    <span data-ttu-id="69265-101">Steht für ein Diagrammobjekt in einer Arbeitsmappe.</span><span class="sxs-lookup"><span data-stu-id="69265-101">Represents a chart object in a workbook.</span></span>


    <span data-ttu-id="69265-102">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.Chart
  fullName: Excel.Chart
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Chart.activate
  - excel.Excel.Chart.axes
  - excel.Excel.Chart.categoryLabelLevel
  - excel.Excel.Chart.chartType
  - excel.Excel.Chart.context
  - excel.Excel.Chart.dataLabels
  - excel.Excel.Chart.delete
  - excel.Excel.Chart.displayBlanksAs
  - excel.Excel.Chart.format
  - excel.Excel.Chart.getImage
  - excel.Excel.Chart.getImage_1
  - excel.Excel.Chart.height
  - excel.Excel.Chart.id
  - excel.Excel.Chart.left
  - excel.Excel.Chart.legend
  - excel.Excel.Chart.load
  - excel.Excel.Chart.load_1
  - excel.Excel.Chart.load_2
  - excel.Excel.Chart.name
  - excel.Excel.Chart.onActivated
  - excel.Excel.Chart.onDeactivated
  - excel.Excel.Chart.pivotOptions
  - excel.Excel.Chart.plotArea
  - excel.Excel.Chart.plotBy
  - excel.Excel.Chart.plotVisibleOnly
  - excel.Excel.Chart.series
  - excel.Excel.Chart.seriesNameLevel
  - excel.Excel.Chart.set
  - excel.Excel.Chart.set_1
  - excel.Excel.Chart.setData
  - excel.Excel.Chart.setData_1
  - excel.Excel.Chart.setPosition
  - excel.Excel.Chart.showAllFieldButtons
  - excel.Excel.Chart.showDataLabelsOverMaximum
  - excel.Excel.Chart.style
  - excel.Excel.Chart.title
  - excel.Excel.Chart.toJSON
  - excel.Excel.Chart.top
  - excel.Excel.Chart.width
  - excel.Excel.Chart.worksheet
- uid: excel.Excel.Chart.activate
  summary: >-
    <span data-ttu-id="69265-103">Aktivieren Sie das Diagramm in der Excel-Benutzeroberfläche.</span><span class="sxs-lookup"><span data-stu-id="69265-103">Activate the chart in the Excel UI.</span></span>


    <span data-ttu-id="69265-104">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-104">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: activate()
  fullName: activate()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'activate(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.Chart.axes
  summary: >-
    <span data-ttu-id="69265-p101">Die Achsen des Diagramms. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="69265-p101">Represents chart axes. Read-only.</span></span>


    <span data-ttu-id="69265-107">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: axes
  fullName: axes
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly axes: Excel.ChartAxes;'
    return:
      type:
      - excel.Excel.ChartAxes
- uid: excel.Excel.Chart.categoryLabelLevel
  summary: >-
    <span data-ttu-id="69265-108">Gibt eine ChartCategoryLabelLevel-Aufzählungskonstante für die Ebene zurück, aus der die Kategoriebeschriftungen erstellt werden, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="69265-108">Returns or sets a ChartCategoryLabelLevel enumeration constant referring to the level of where the category labels are being sourced from.</span></span> <span data-ttu-id="69265-109">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="69265-109">Read/Write.</span></span>


    <span data-ttu-id="69265-110">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-110">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: categoryLabelLevel
  fullName: categoryLabelLevel
  langs:
  - typeScript
  type: property
  syntax:
    content: 'categoryLabelLevel: number;'
    return:
      type:
      - number
- uid: excel.Excel.Chart.chartType
  summary: >-
    <span data-ttu-id="69265-111">Der Typ des Diagramms.</span><span class="sxs-lookup"><span data-stu-id="69265-111">Represents the type of the chart.</span></span> <span data-ttu-id="69265-112">Weitere Informationen finden Sie unter Excel. ChartType.</span><span class="sxs-lookup"><span data-stu-id="69265-112">See Excel.ChartType for details.</span></span>


    <span data-ttu-id="69265-113">\[[API-Satz: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-113">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: chartType
  fullName: chartType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'chartType: Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel";'
    return:
      type:
      - Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"
- uid: excel.Excel.Chart.context
  summary: <span data-ttu-id="69265-114">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="69265-114">The request context associated with the object.</span></span> <span data-ttu-id="69265-115">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="69265-115">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.Chart.dataLabels
  summary: >-
    <span data-ttu-id="69265-p105">Stellt die Datenbeschriftungen im Diagramm dar. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="69265-p105">Represents the datalabels on the chart. Read-only.</span></span>


    <span data-ttu-id="69265-118">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-118">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: dataLabels
  fullName: dataLabels
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly dataLabels: Excel.ChartDataLabels;'
    return:
      type:
      - excel.Excel.ChartDataLabels
- uid: excel.Excel.Chart.delete
  summary: >-
    <span data-ttu-id="69265-119">Löscht das Diagrammobjekt.</span><span class="sxs-lookup"><span data-stu-id="69265-119">Deletes the chart object.</span></span>


    <span data-ttu-id="69265-120">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-120">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"69265-121\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"69265-121\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    chart.delete();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Chart.displayBlanksAs
  summary: >-
    <span data-ttu-id="69265-122">Gibt die Art der Darstellung für leere Zellen in einem Diagramm zurück, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="69265-122">Returns or sets the way that blank cells are plotted on a chart.</span></span> <span data-ttu-id="69265-123">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="69265-123">Read/Write.</span></span>


    <span data-ttu-id="69265-124">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-124">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: displayBlanksAs
  fullName: displayBlanksAs
  langs:
  - typeScript
  type: property
  syntax:
    content: 'displayBlanksAs: Excel.ChartDisplayBlanksAs | "NotPlotted" | "Zero" | "Interplotted";'
    return:
      type:
      - Excel.ChartDisplayBlanksAs | "NotPlotted" | "Zero" | "Interplotted"
- uid: excel.Excel.Chart.format
  summary: >-
    <span data-ttu-id="69265-p107">Kapselt die Formateigenschaften für den Diagrammbereich. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="69265-p107">Encapsulates the format properties for the chart area. Read-only.</span></span>


    <span data-ttu-id="69265-127">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-127">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: format
  fullName: format
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly format: Excel.ChartAreaFormat;'
    return:
      type:
      - excel.Excel.ChartAreaFormat
- uid: excel.Excel.Chart.getImage
  summary: >-
    <span data-ttu-id="69265-128">Rendert das Diagramm als base64-codiertes Bild durch Skalierung, um es an die angegebenen Maße anzupassen.</span><span class="sxs-lookup"><span data-stu-id="69265-128">Renders the chart as a base64-encoded image by scaling the chart to fit the specified dimensions.</span></span> <span data-ttu-id="69265-129">Das Seitenverhältnis wird im Rahmen der Größenänderung beibehalten.</span><span class="sxs-lookup"><span data-stu-id="69265-129">The aspect ratio is preserved as part of the resizing.</span></span>


    <span data-ttu-id="69265-130">\[[API-Satz: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-130">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getImage(width, height, fittingMode)
  fullName: getImage(width, height, fittingMode)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getImage(width?: number, height?: number, fittingMode?: Excel.ImageFittingMode): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"69265-131\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"69265-131\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    var image = chart.getImage();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: width
      description: <span data-ttu-id="69265-132">Optional Die gewünschte Breite des resultierenden Bilds.</span><span class="sxs-lookup"><span data-stu-id="69265-132">(Optional) The desired width of the resulting image.</span></span>
      type:
      - number
    - id: height
      description: <span data-ttu-id="69265-133">Optional Die gewünschte Höhe des resultierenden Bilds.</span><span class="sxs-lookup"><span data-stu-id="69265-133">(Optional) The desired height of the resulting image.</span></span>
      type:
      - number
    - id: fittingMode
      description: <span data-ttu-id="69265-134">Optional Die Methode zum Skalieren des Diagramms auf die angegebene Größe (wenn sowohl Höhe als auch Breite festgelegt sind).</span><span class="sxs-lookup"><span data-stu-id="69265-134">(Optional) The method used to scale the chart to the specified to the specified dimensions (if both height and width are set).</span></span>
      type:
      - excel.Excel.ImageFittingMode
- uid: excel.Excel.Chart.getImage_1
  summary: >-
    <span data-ttu-id="69265-135">Rendert das Diagramm als base64-codiertes Bild durch Skalierung, um es an die angegebenen Maße anzupassen.</span><span class="sxs-lookup"><span data-stu-id="69265-135">Renders the chart as a base64-encoded image by scaling the chart to fit the specified dimensions.</span></span> <span data-ttu-id="69265-136">Das Seitenverhältnis wird im Rahmen der Größenänderung beibehalten.</span><span class="sxs-lookup"><span data-stu-id="69265-136">The aspect ratio is preserved as part of the resizing.</span></span>


    <span data-ttu-id="69265-137">\[[API-Satz: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-137">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getImage(width, height, fittingModeString)
  fullName: getImage(width, height, fittingModeString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getImage(width?: number, height?: number, fittingModeString?: "Fit" | "FitAndCenter" | "Fill"): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: ''
    parameters:
    - id: width
      description: <span data-ttu-id="69265-138">Optional Die gewünschte Breite des resultierenden Bilds.</span><span class="sxs-lookup"><span data-stu-id="69265-138">(Optional) The desired width of the resulting image.</span></span>
      type:
      - number
    - id: height
      description: <span data-ttu-id="69265-139">Optional Die gewünschte Höhe des resultierenden Bilds.</span><span class="sxs-lookup"><span data-stu-id="69265-139">(Optional) The desired height of the resulting image.</span></span>
      type:
      - number
    - id: fittingModeString
      description: <span data-ttu-id="69265-140">Optional Die Methode zum Skalieren des Diagramms auf die angegebene Größe (wenn sowohl Höhe als auch Breite festgelegt sind).</span><span class="sxs-lookup"><span data-stu-id="69265-140">(Optional) The method used to scale the chart to the specified to the specified dimensions (if both height and width are set).</span></span>
      type:
      - "\"Fit\" | \"FitAndCenter\" | \"Fill\""
- uid: excel.Excel.Chart.height
  summary: >-
    <span data-ttu-id="69265-141">Die Höhe des Diagrammobjekts (in Punkten).</span><span class="sxs-lookup"><span data-stu-id="69265-141">Represents the height, in points, of the chart object.</span></span>


    <span data-ttu-id="69265-142">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-142">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: height
  fullName: height
  langs:
  - typeScript
  type: property
  syntax:
    content: 'height: number;'
    return:
      type:
      - number
- uid: excel.Excel.Chart.id
  summary: >-
    <span data-ttu-id="69265-143">Die eindeutige ID des Diagramms.</span><span class="sxs-lookup"><span data-stu-id="69265-143">The unique id of chart.</span></span> <span data-ttu-id="69265-144">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="69265-144">Read-only.</span></span>


    <span data-ttu-id="69265-145">\[[API-Satz: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-145">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel.Excel.Chart.left
  summary: >-
    <span data-ttu-id="69265-146">Der Abstand von der linken Seite des Diagramms zu dem Ursprung des Arbeitsblatts (in Punkten).</span><span class="sxs-lookup"><span data-stu-id="69265-146">The distance, in points, from the left side of the chart to the worksheet origin.</span></span>


    <span data-ttu-id="69265-147">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-147">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: left
  fullName: left
  langs:
  - typeScript
  type: property
  syntax:
    content: 'left: number;'
    return:
      type:
      - number
- uid: excel.Excel.Chart.legend
  summary: >-
    <span data-ttu-id="69265-p111">Die Legende für das Diagramm. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="69265-p111">Represents the legend for the chart. Read-only.</span></span>


    <span data-ttu-id="69265-150">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-150">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: legend
  fullName: legend
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly legend: Excel.ChartLegend;'
    return:
      type:
      - excel.Excel.ChartLegend
- uid: excel.Excel.Chart.load
  summary: <span data-ttu-id="69265-151">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="69265-151">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="69265-152">Sie müssen "context. Sync ()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="69265-152">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="69265-153">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="69265-153">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="69265-154">`load(option?: string | string[]): Excel.Chart`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="69265-154">`load(option?: string | string[]): Excel.Chart` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="69265-155">`load(option?: { select?: string; expand?: string; }): Excel.Chart`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="69265-155">`load(option?: { select?: string; expand?: string; }): Excel.Chart` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="69265-156">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Chart`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="69265-156">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Chart` - Only available on collection types.</span></span> <span data-ttu-id="69265-157">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="69265-157">It is similar to the preceding signature.</span></span> <span data-ttu-id="69265-158">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="69265-158">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="69265-159">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="69265-159">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="69265-160">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="69265-160">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ChartLoadOptions): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.ChartLoadOptions
- uid: excel.Excel.Chart.load_1
  summary: <span data-ttu-id="69265-161">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="69265-161">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="69265-162">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="69265-162">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"69265-163\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"69265-163\">Examples</span></span>\n\n```javascript\n// Get a chart named \"Chart1\"\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    chart.load('name');\n    return ctx.sync().then(function() {\n            console.log(chart.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="69265-164">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="69265-164">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.Chart.load_2
  summary: <span data-ttu-id="69265-165">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="69265-165">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="69265-166">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="69265-166">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="69265-167">Wobei propertyNamesAndPaths. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="69265-167">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.Chart.name
  summary: >-
    <span data-ttu-id="69265-168">Gibt den Namen eines Diagrammobjekts an.</span><span class="sxs-lookup"><span data-stu-id="69265-168">Represents the name of a chart object.</span></span>


    <span data-ttu-id="69265-169">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-169">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"69265-170\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"69265-170\">Examples</span></span>\n\n```javascript\n// Rename the chart to new name, resize the chart to 200 points in both height and weight. \n// Move Chart1 to 100 points to the top and left. \nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    chart.name = \"New Name\";\n    chart.top = 100;\n    chart.left = 100;\n    chart.height = 200;\n    chart.width = 200;\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Chart.onActivated
  summary: >-
    <span data-ttu-id="69265-171">Tritt ein, wenn das Diagramm aktiviert wird.</span><span class="sxs-lookup"><span data-stu-id="69265-171">Occurs when the chart is activated.</span></span>


    <span data-ttu-id="69265-172">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-172">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onActivated
  fullName: onActivated
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onActivated: OfficeExtension.EventHandlers<Excel.ChartActivatedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.ChartActivatedEventArgs>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"69265-173\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"69265-173\">Examples</span></span>\n\n```javascript\nExcel.run(function (context){\n    var pieChart = context.workbook.worksheets.getActiveWorksheet().charts.getItem(\"Pie\");\n    pieChart.onActivated.add(function (event) {\n        return Excel.run((context) => {\n            console.log(\"The pie chart is the active chart. ID: \" + event.chartId);\n            return context.sync();\n        });\n    });\n    return context.sync();\n});\n```"
- uid: excel.Excel.Chart.onDeactivated
  summary: >-
    <span data-ttu-id="69265-174">Tritt ein, wenn das Diagramm deaktiviert wird.</span><span class="sxs-lookup"><span data-stu-id="69265-174">Occurs when the chart is deactivated.</span></span>


    <span data-ttu-id="69265-175">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-175">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onDeactivated
  fullName: onDeactivated
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onDeactivated: OfficeExtension.EventHandlers<Excel.ChartDeactivatedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.ChartDeactivatedEventArgs>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"69265-176\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"69265-176\">Examples</span></span>\n\n```javascript\nExcel.run(function (context){\n    var pieChart = context.workbook.worksheets.getActiveWorksheet().charts.getItem(\"Pie\");\n    pieChart.onDeactivated.add(function (event) {\n        return Excel.run((context) => {\n            console.log(\"The pie chart is NOT active.\");\n            return context.sync();\n        });\n    });\n    return context.sync();\n});\n```"
- uid: excel.Excel.Chart.pivotOptions
  summary: >-
    <span data-ttu-id="69265-177">Kapselt die Optionen für das Pivot-Diagramm.</span><span class="sxs-lookup"><span data-stu-id="69265-177">Encapsulates the options for the pivot chart.</span></span> <span data-ttu-id="69265-178">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="69265-178">Read-only.</span></span>


    <span data-ttu-id="69265-179">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-179">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: pivotOptions
  fullName: pivotOptions
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly pivotOptions: Excel.ChartPivotOptions;'
    return:
      type:
      - excel.Excel.ChartPivotOptions
- uid: excel.Excel.Chart.plotArea
  summary: >-
    <span data-ttu-id="69265-180">Die plotArea-Eigenschaft für das Diagramm.</span><span class="sxs-lookup"><span data-stu-id="69265-180">Represents the plotArea for the chart.</span></span>


    <span data-ttu-id="69265-181">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-181">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: plotArea
  fullName: plotArea
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly plotArea: Excel.ChartPlotArea;'
    return:
      type:
      - excel.Excel.ChartPlotArea
- uid: excel.Excel.Chart.plotBy
  summary: >-
    <span data-ttu-id="69265-182">Gibt zurück, wie Spalten oder Zeilen als Datenreihen im Diagramm verwendet werden, oder legt dies fest.</span><span class="sxs-lookup"><span data-stu-id="69265-182">Returns or sets the way columns or rows are used as data series on the chart.</span></span> <span data-ttu-id="69265-183">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="69265-183">Read/Write.</span></span>


    <span data-ttu-id="69265-184">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-184">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: plotBy
  fullName: plotBy
  langs:
  - typeScript
  type: property
  syntax:
    content: 'plotBy: Excel.ChartPlotBy | "Rows" | "Columns";'
    return:
      type:
      - Excel.ChartPlotBy | "Rows" | "Columns"
- uid: excel.Excel.Chart.plotVisibleOnly
  summary: >-
    <span data-ttu-id="69265-185">„True“, wenn nur sichtbare Zellen dargestellt werden.</span><span class="sxs-lookup"><span data-stu-id="69265-185">True if only visible cells are plotted.</span></span> <span data-ttu-id="69265-186">„False“, wenn sowohl sichtbare als auch ausgeblendete Zellen dargestellt werden.</span><span class="sxs-lookup"><span data-stu-id="69265-186">False if both visible and hidden cells are plotted.</span></span> <span data-ttu-id="69265-187">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="69265-187">Read/Write.</span></span>


    <span data-ttu-id="69265-188">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-188">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: plotVisibleOnly
  fullName: plotVisibleOnly
  langs:
  - typeScript
  type: property
  syntax:
    content: 'plotVisibleOnly: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Chart.series
  summary: >-
    <span data-ttu-id="69265-p119">Eine einzelne Datenreihe oder eine Sammlung von Datenreihen im Diagramm. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="69265-p119">Represents either a single series or collection of series in the chart. Read-only.</span></span>


    <span data-ttu-id="69265-191">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-191">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: series
  fullName: series
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly series: Excel.ChartSeriesCollection;'
    return:
      type:
      - excel.Excel.ChartSeriesCollection
- uid: excel.Excel.Chart.seriesNameLevel
  summary: >-
    <span data-ttu-id="69265-192">Gibt eine ChartSeriesNameLevel-Aufzählungskonstante für die Ebene zurück, aus der die Datenreihennamen erstellt werden, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="69265-192">Returns or sets a ChartSeriesNameLevel enumeration constant referring to the level of where the series names are being sourced from.</span></span> <span data-ttu-id="69265-193">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="69265-193">Read/Write.</span></span>


    <span data-ttu-id="69265-194">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-194">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: seriesNameLevel
  fullName: seriesNameLevel
  langs:
  - typeScript
  type: property
  syntax:
    content: 'seriesNameLevel: number;'
    return:
      type:
      - number
- uid: excel.Excel.Chart.set
  summary: <span data-ttu-id="69265-195">Legt mehrere Eigenschaften eines Objekts gleichzeitig fest.</span><span class="sxs-lookup"><span data-stu-id="69265-195">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="69265-196">Sie können entweder ein plain-Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs weitergeben.</span><span class="sxs-lookup"><span data-stu-id="69265-196">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="69265-197">Diese Methode hat die folgende zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="69265-197">This method has the following additional signature:</span></span>


    `set(properties: Excel.Chart): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ChartUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="69265-198">Ein JavaScript-Objekt mit Eigenschaften, die isomorphically strukturiert sind, um die Eigenschaften des Objekts, für das die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="69265-198">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.ChartUpdateData
    - id: options
      description: <span data-ttu-id="69265-199">Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.</span><span class="sxs-lookup"><span data-stu-id="69265-199">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.Chart.set_1
  summary: <span data-ttu-id="69265-200">Legt mehrere Eigenschaften für das Objekt auf der Grundlage eines vorhandenen geladenen Objekts zur gleichen Zeit fest.</span><span class="sxs-lookup"><span data-stu-id="69265-200">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.Chart): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.Chart
- uid: excel.Excel.Chart.setData
  summary: >-
    <span data-ttu-id="69265-201">Setzt die Quelldaten für das Diagramm zurück.</span><span class="sxs-lookup"><span data-stu-id="69265-201">Resets the source data for the chart.</span></span>


    <span data-ttu-id="69265-202">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-202">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: setData(sourceData, seriesBy)
  fullName: setData(sourceData, seriesBy)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setData(sourceData: Range, seriesBy?: Excel.ChartSeriesBy): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: sourceData
      description: <span data-ttu-id="69265-203">Das Range-Objekt, das den Quelldaten entspricht.</span><span class="sxs-lookup"><span data-stu-id="69265-203">The range object corresponding to the source data.</span></span>
      type:
      - Range
    - id: seriesBy
      description: '<span data-ttu-id="69265-204">Gibt an, wie Spalten oder Zeilen als Datenreihen im Diagramm verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="69265-204">Specifies the way columns or rows are used as data series on the chart.</span></span> <span data-ttu-id="69265-205">Kann eine der folgenden sein: Auto (Standard), Zeilen und Spalten.</span><span class="sxs-lookup"><span data-stu-id="69265-205">Can be one of the following: Auto (default), Rows, and Columns.</span></span> <span data-ttu-id="69265-206">Weitere Informationen finden Sie unter Excel. ChartSeriesBy.</span><span class="sxs-lookup"><span data-stu-id="69265-206">See Excel.ChartSeriesBy for details.</span></span>'
      type:
      - excel.Excel.ChartSeriesBy
- uid: excel.Excel.Chart.setData_1
  summary: >-
    <span data-ttu-id="69265-207">Setzt die Quelldaten für das Diagramm zurück.</span><span class="sxs-lookup"><span data-stu-id="69265-207">Resets the source data for the chart.</span></span>


    <span data-ttu-id="69265-208">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-208">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: setData(sourceData, seriesByString)
  fullName: setData(sourceData, seriesByString)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setData(sourceData: Range, seriesByString?: "Auto" | "Columns" | "Rows"): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"69265-209\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"69265-209\">Examples</span></span>\n\n```javascript\n// Set the sourceData to be \"A1:B4\" and seriesBy to be \"Columns\"\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    var sourceData = \"A1:B4\";\n    chart.setData(sourceData, \"Columns\");\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: sourceData
      description: <span data-ttu-id="69265-210">Das Range-Objekt, das den Quelldaten entspricht.</span><span class="sxs-lookup"><span data-stu-id="69265-210">The range object corresponding to the source data.</span></span>
      type:
      - Range
    - id: seriesByString
      description: '<span data-ttu-id="69265-211">Gibt an, wie Spalten oder Zeilen als Datenreihen im Diagramm verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="69265-211">Specifies the way columns or rows are used as data series on the chart.</span></span> <span data-ttu-id="69265-212">Kann eine der folgenden sein: Auto (Standard), Zeilen und Spalten.</span><span class="sxs-lookup"><span data-stu-id="69265-212">Can be one of the following: Auto (default), Rows, and Columns.</span></span> <span data-ttu-id="69265-213">Weitere Informationen finden Sie unter Excel. ChartSeriesBy.</span><span class="sxs-lookup"><span data-stu-id="69265-213">See Excel.ChartSeriesBy for details.</span></span>'
      type:
      - "\"Auto\" | \"Columns\" | \"Rows\""
- uid: excel.Excel.Chart.setPosition
  summary: >-
    <span data-ttu-id="69265-214">Positioniert das Diagramm im Verhältnis zu den Zellen im Arbeitsblatt.</span><span class="sxs-lookup"><span data-stu-id="69265-214">Positions the chart relative to cells on the worksheet.</span></span>


    <span data-ttu-id="69265-215">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-215">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: setPosition(startCell, endCell)
  fullName: setPosition(startCell, endCell)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setPosition(startCell: Range | string, endCell?: Range | string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"69265-216\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"69265-216\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Charts\";\n    var rangeSelection = \"A1:B4\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeSelection);\n    var sourceData = sheetName + \"!\" + \"A1:B4\";\n    var chart = ctx.workbook.worksheets.getItem(sheetName).charts.add(\"pie\", range, \"auto\");\n    chart.width = 500;\n    chart.height = 300;\n    chart.setPosition(\"C2\", null);\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: startCell
      description: <span data-ttu-id="69265-p124">Die Startzelle. An diese Position wird das Diagramm verschoben. Die Startzelle ist die obere linke oder die obere rechte Zelle, abhängig davon, ob die eingestellte Textrichtung des Benutzers von links nach rechts oder von rechts nach links ist.</span><span class="sxs-lookup"><span data-stu-id="69265-p124">The start cell. This is where the chart will be moved to. The start cell is the top-left or top-right cell, depending on the user's right-to-left display settings.</span></span>
      type:
      - Range | string
    - id: endCell
      description: <span data-ttu-id="69265-220">Optional Die Endzelle.</span><span class="sxs-lookup"><span data-stu-id="69265-220">(Optional) The end cell.</span></span> <span data-ttu-id="69265-221">Wenn angegeben, werden die Breite und Höhe des Diagramms so festgelegt, dass diese Zelle/dieser Wert vollständig verdeckt wird.</span><span class="sxs-lookup"><span data-stu-id="69265-221">If specified, the chart's width and height will be set to fully cover up this cell/range.</span></span>
      type:
      - Range | string
- uid: excel.Excel.Chart.showAllFieldButtons
  summary: >-
    <span data-ttu-id="69265-222">Gibt an, ob alle Feldschaltflächen in einem PivotChart angezeigt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="69265-222">Represents whether to display all field buttons on a PivotChart.</span></span>


    <span data-ttu-id="69265-223">\[[API-Satz: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-223">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showAllFieldButtons
  fullName: showAllFieldButtons
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showAllFieldButtons: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Chart.showDataLabelsOverMaximum
  summary: >-
    <span data-ttu-id="69265-224">Gibt an, ob Datenbeschriftungen angezeigt werden, wenn der Wert größer als der Maximalwert auf der Größenachse ist.</span><span class="sxs-lookup"><span data-stu-id="69265-224">Represents whether to show the data labels when the value is greater than the maximum value on the value axis.</span></span> <span data-ttu-id="69265-225">Wenn die Größenachse kleiner als die Größe von Datenpunkten wurde, können Sie diese Eigenschaft verwenden, um festzulegen, ob die Datenbeschriftungen angezeigt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="69265-225">If value axis became smaller than the size of data points, you can use this property to set whether to show the data labels.</span></span> <span data-ttu-id="69265-226">Diese Eigenschaft kann nur auf 2D-Diagramme angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="69265-226">This property applies to 2-D charts only.</span></span>


    <span data-ttu-id="69265-227">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-227">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showDataLabelsOverMaximum
  fullName: showDataLabelsOverMaximum
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showDataLabelsOverMaximum: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Chart.style
  summary: >-
    <span data-ttu-id="69265-228">Gibt die Diagrammformatvorlage für das Diagramm zurück, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="69265-228">Returns or sets the chart style for the chart.</span></span> <span data-ttu-id="69265-229">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="69265-229">Read/Write.</span></span>


    <span data-ttu-id="69265-230">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-230">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: style
  fullName: style
  langs:
  - typeScript
  type: property
  syntax:
    content: 'style: number;'
    return:
      type:
      - number
- uid: excel.Excel.Chart.title
  summary: >-
    <span data-ttu-id="69265-p128">Der Titel des angegebenen Diagramms, einschließlich Text, Sichtbarkeit, Position und Formatierung des Titels. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="69265-p128">Represents the title of the specified chart, including the text, visibility, position, and formatting of the title. Read-only.</span></span>


    <span data-ttu-id="69265-233">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-233">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: title
  fullName: title
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly title: Excel.ChartTitle;'
    return:
      type:
      - excel.Excel.ChartTitle
- uid: excel.Excel.Chart.toJSON
  summary: <span data-ttu-id="69265-234">ÜberSchreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API `JSON.stringify()` <!-- -->-Objekt an übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="69265-234">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="69265-235">(`JSON.stringify`<!-- -->ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche Excel. Chart-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt `Excel.Interfaces.ChartData` <!-- -->(typisiert als) zurück, das flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="69265-235">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Chart object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ChartData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ChartData;'
    return:
      type:
      - excel.Excel.Interfaces.ChartData
      description: ''
- uid: excel.Excel.Chart.top
  summary: >-
    <span data-ttu-id="69265-236">Der Abstand (in Punkten) von dem oberen Rand des Objekts zum oberen Rand von Zeile 1 (auf einem Arbeitsblatt) oder zum oberen Diagrammbereich (in einem Diagramm).</span><span class="sxs-lookup"><span data-stu-id="69265-236">Represents the distance, in points, from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart).</span></span>


    <span data-ttu-id="69265-237">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-237">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: top
  fullName: top
  langs:
  - typeScript
  type: property
  syntax:
    content: 'top: number;'
    return:
      type:
      - number
- uid: excel.Excel.Chart.width
  summary: >-
    <span data-ttu-id="69265-238">Die Breite des Diagrammobjekts (in Punkten).</span><span class="sxs-lookup"><span data-stu-id="69265-238">Represents the width, in points, of the chart object.</span></span>


    <span data-ttu-id="69265-239">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-239">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: width
  fullName: width
  langs:
  - typeScript
  type: property
  syntax:
    content: 'width: number;'
    return:
      type:
      - number
- uid: excel.Excel.Chart.worksheet
  summary: >-
    <span data-ttu-id="69265-p130">Das Arbeitsblatt, das das aktuelle Diagramm enthält. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="69265-p130">The worksheet containing the current chart. Read-only.</span></span>


    <span data-ttu-id="69265-242">\[[API-Satz: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="69265-242">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheet
  fullName: worksheet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheet: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
