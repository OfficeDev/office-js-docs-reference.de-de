### YamlMime:UniversalReference
ms.openlocfilehash: cd72c139f7469e928cb3ca4335f0290f88a28a42
ms.sourcegitcommit: 3771b97cffd6e0510fd4e9c6288db696cd0c0ca9
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 11/30/2018
ms.locfileid: "26996522"
items:
- uid: excel.Excel.Chart
  summary: >-
    <span data-ttu-id="be9f6-101">Steht für ein Diagrammobjekt in einer Arbeitsmappe.</span><span class="sxs-lookup"><span data-stu-id="be9f6-101">Represents a chart object in a workbook.</span></span>


    <span data-ttu-id="be9f6-102">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be9f6-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  remarks: <span data-ttu-id="be9f6-103">Unsere [schrittweise Anleitung zum Arbeiten mit Diagrammen](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-charts) detaillierte Exemplarische Vorgehensweisen, Bilder und Codebeispiele herunter.</span><span class="sxs-lookup"><span data-stu-id="be9f6-103">Our [how-to guide on working with charts](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-charts) has detailed walkthroughs, images, and code samples.</span></span>
  name: Excel.Chart
  fullName: Excel.Chart
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Chart.axes
  - excel.Excel.Chart.categoryLabelLevel
  - excel.Excel.Chart.chartType
  - excel.Excel.Chart.dataLabels
  - excel.Excel.Chart.delete
  - excel.Excel.Chart.displayBlanksAs
  - excel.Excel.Chart.format
  - excel.Excel.Chart.getImage
  - excel.Excel.Chart.height
  - excel.Excel.Chart.id
  - excel.Excel.Chart.left
  - excel.Excel.Chart.legend
  - excel.Excel.Chart.load
  - excel.Excel.Chart.name
  - excel.Excel.Chart.onActivated
  - excel.Excel.Chart.onDeactivated
  - excel.Excel.Chart.plotArea
  - excel.Excel.Chart.plotBy
  - excel.Excel.Chart.plotVisibleOnly
  - excel.Excel.Chart.series
  - excel.Excel.Chart.seriesNameLevel
  - excel.Excel.Chart.setData
  - excel.Excel.Chart.setPosition
  - excel.Excel.Chart.showAllFieldButtons
  - excel.Excel.Chart.showDataLabelsOverMaximum
  - excel.Excel.Chart.style
  - excel.Excel.Chart.title
  - excel.Excel.Chart.toJSON
  - excel.Excel.Chart.top
  - excel.Excel.Chart.width
  - excel.Excel.Chart.worksheet
- uid: excel.Excel.Chart.axes
  summary: >-
    <span data-ttu-id="be9f6-p101">Die Achsen des Diagramms. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="be9f6-p101">Represents chart axes. Read-only.</span></span>


    <span data-ttu-id="be9f6-106">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be9f6-106">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: axes
  fullName: axes
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly axes: Excel.ChartAxes;'
    return:
      type:
      - excel.Excel.ChartAxes
- uid: excel.Excel.Chart.categoryLabelLevel
  summary: >-
    <span data-ttu-id="be9f6-107">Zurückgeben oder festlegen eine ChartCategoryLabelLevel-Enumeration-Konstante, die in Bezug auf die Ebene der, in dem die Kategorie Beschriftungen aus einer Führungslinie basieren wird sind.</span><span class="sxs-lookup"><span data-stu-id="be9f6-107">Returns or sets a ChartCategoryLabelLevel enumeration constant referring to the level of where the category labels are being sourced from.</span></span> <span data-ttu-id="be9f6-108">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="be9f6-108">Read/Write.</span></span>


    <span data-ttu-id="be9f6-109">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be9f6-109">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: categoryLabelLevel
  fullName: categoryLabelLevel
  langs:
  - typeScript
  type: property
  syntax:
    content: 'categoryLabelLevel: number;'
    return:
      type:
      - number
- uid: excel.Excel.Chart.chartType
  summary: >-
    <span data-ttu-id="be9f6-110">Stellt den Typ des Diagramms dar.</span><span class="sxs-lookup"><span data-stu-id="be9f6-110">Represents the type of the chart.</span></span> <span data-ttu-id="be9f6-111">Einzelheiten finden Sie unter Excel.ChartType.</span><span class="sxs-lookup"><span data-stu-id="be9f6-111">See Excel.ChartType for details.</span></span>


    <span data-ttu-id="be9f6-112">\[[API-Satz: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be9f6-112">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: chartType
  fullName: chartType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'chartType: Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel";'
    return:
      type:
      - Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"
- uid: excel.Excel.Chart.dataLabels
  summary: >-
    <span data-ttu-id="be9f6-p104">Stellt die Datenbeschriftungen im Diagramm dar. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="be9f6-p104">Represents the datalabels on the chart. Read-only.</span></span>


    <span data-ttu-id="be9f6-115">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be9f6-115">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: dataLabels
  fullName: dataLabels
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly dataLabels: Excel.ChartDataLabels;'
    return:
      type:
      - excel.Excel.ChartDataLabels
- uid: excel.Excel.Chart.delete
  summary: >-
    <span data-ttu-id="be9f6-116">Löscht das Diagrammobjekt.</span><span class="sxs-lookup"><span data-stu-id="be9f6-116">Deletes the chart object.</span></span>


    <span data-ttu-id="be9f6-117">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be9f6-117">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"be9f6-118\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"be9f6-118\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    chart.delete();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Chart.displayBlanksAs
  summary: >-
    <span data-ttu-id="be9f6-119">Gibt zurück oder legt fest, wie leere Zellen in einem Diagramm gezeichnet werden.</span><span class="sxs-lookup"><span data-stu-id="be9f6-119">Returns or sets the way that blank cells are plotted on a chart.</span></span> <span data-ttu-id="be9f6-120">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="be9f6-120">Read/Write.</span></span>


    <span data-ttu-id="be9f6-121">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be9f6-121">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: displayBlanksAs
  fullName: displayBlanksAs
  langs:
  - typeScript
  type: property
  syntax:
    content: 'displayBlanksAs: Excel.ChartDisplayBlanksAs | "NotPlotted" | "Zero" | "Interplotted";'
    return:
      type:
      - Excel.ChartDisplayBlanksAs | "NotPlotted" | "Zero" | "Interplotted"
- uid: excel.Excel.Chart.format
  summary: >-
    <span data-ttu-id="be9f6-p106">Kapselt die Formateigenschaften für den Diagrammbereich. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="be9f6-p106">Encapsulates the format properties for the chart area. Read-only.</span></span>


    <span data-ttu-id="be9f6-124">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be9f6-124">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: format
  fullName: format
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly format: Excel.ChartAreaFormat;'
    return:
      type:
      - excel.Excel.ChartAreaFormat
- uid: excel.Excel.Chart.getImage
  summary: >-
    <span data-ttu-id="be9f6-125">Rendert das Diagramm als base64-codiertes Bild durch Skalierung, um es an die angegebenen Maße anzupassen.</span><span class="sxs-lookup"><span data-stu-id="be9f6-125">Renders the chart as a base64-encoded image by scaling the chart to fit the specified dimensions.</span></span> <span data-ttu-id="be9f6-126">Das Seitenverhältnis wird als Teil der Größe beibehalten.</span><span class="sxs-lookup"><span data-stu-id="be9f6-126">The aspect ratio is preserved as part of the resizing.</span></span>


    <span data-ttu-id="be9f6-127">\[[API-Satz: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be9f6-127">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getImage(width, height, fittingMode)
  fullName: getImage
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getImage(width?: number, height?: number, fittingMode?: Excel.ImageFittingMode): OfficeExtension.ClientResult<string>;'
    return:
      type:
      - OfficeExtension.ClientResult<string>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"be9f6-128\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"be9f6-128\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    var image = chart.getImage();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: width
      description: <span data-ttu-id="be9f6-129">(Optional) Die gewünschte Breite des resultierenden Bildes.</span><span class="sxs-lookup"><span data-stu-id="be9f6-129">(Optional) The desired width of the resulting image.</span></span>
      type:
      - number
    - id: height
      description: <span data-ttu-id="be9f6-130">(Optional) Die gewünschte Höhe des resultierenden Bildes.</span><span class="sxs-lookup"><span data-stu-id="be9f6-130">(Optional) The desired height of the resulting image.</span></span>
      type:
      - number
    - id: fittingMode
      description: <span data-ttu-id="be9f6-131">(Optional) Die Methode verwendet, um das Diagramm auf das angegebene die angegebene Abmessung skalieren (wenn die Höhe und Breite festgelegt werden).</span><span class="sxs-lookup"><span data-stu-id="be9f6-131">(Optional) The method used to scale the chart to the specified to the specified dimensions (if both height and width are set).</span></span>
      type:
      - excel.Excel.ImageFittingMode
- uid: excel.Excel.Chart.height
  summary: >-
    <span data-ttu-id="be9f6-132">Die Höhe des Diagrammobjekts (in Punkten).</span><span class="sxs-lookup"><span data-stu-id="be9f6-132">Represents the height, in points, of the chart object.</span></span>


    <span data-ttu-id="be9f6-133">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be9f6-133">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: height
  fullName: height
  langs:
  - typeScript
  type: property
  syntax:
    content: 'height: number;'
    return:
      type:
      - number
- uid: excel.Excel.Chart.id
  summary: >-
    <span data-ttu-id="be9f6-134">Die eindeutige Id des Diagramms.</span><span class="sxs-lookup"><span data-stu-id="be9f6-134">The unique id of chart.</span></span> <span data-ttu-id="be9f6-135">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="be9f6-135">Read-only.</span></span>


    <span data-ttu-id="be9f6-136">\[[API-Satz: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be9f6-136">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel.Excel.Chart.left
  summary: >-
    <span data-ttu-id="be9f6-137">Der Abstand von der linken Seite des Diagramms zu dem Ursprung des Arbeitsblatts (in Punkten).</span><span class="sxs-lookup"><span data-stu-id="be9f6-137">The distance, in points, from the left side of the chart to the worksheet origin.</span></span>


    <span data-ttu-id="be9f6-138">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be9f6-138">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: left
  fullName: left
  langs:
  - typeScript
  type: property
  syntax:
    content: 'left: number;'
    return:
      type:
      - number
- uid: excel.Excel.Chart.legend
  summary: >-
    <span data-ttu-id="be9f6-p109">Die Legende für das Diagramm. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="be9f6-p109">Represents the legend for the chart. Read-only.</span></span>


    <span data-ttu-id="be9f6-141">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be9f6-141">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: legend
  fullName: legend
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly legend: Excel.ChartLegend;'
    return:
      type:
      - excel.Excel.ChartLegend
- uid: excel.Excel.Chart.load
  summary: <span data-ttu-id="be9f6-142">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="be9f6-142">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="be9f6-143">Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="be9f6-143">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"be9f6-144\">Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:</span><span class=\"sxs-lookup\"><span data-stu-id=\"be9f6-144\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"be9f6-145\">`load(option?: { select?: string; expand?: string; }): Excel.Chart`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"be9f6-145\">`load(option?: { select?: string; expand?: string; }): Excel.Chart` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"be9f6-146\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Chart`-Nur auf Auflistungstypen verfügbar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"be9f6-146\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Chart` - Only available on collection types.</span></span> <span data-ttu-id=\"be9f6-147\">Es ist ähnlich wie die jeweils vorhergehende Signatur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"be9f6-147\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"be9f6-148\">Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können.</span><span class=\"sxs-lookup\"><span data-stu-id=\"be9f6-148\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"be9f6-149\">Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"be9f6-149\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"be9f6-150\">Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.</span><span class=\"sxs-lookup\"><span data-stu-id=\"be9f6-150\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"be9f6-151\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"be9f6-151\">Examples</span></span>\n\n```javascript\n// Get a chart named \"Chart1\"\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    chart.load('name');\n    return ctx.sync().then(function() {\n            console.log(chart.name);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.Chart;'
    return:
      type:
      - excel.Excel.Chart
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="be9f6-152">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="be9f6-152">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.Chart.name
  summary: >-
    <span data-ttu-id="be9f6-153">Gibt den Namen eines Diagrammobjekts an.</span><span class="sxs-lookup"><span data-stu-id="be9f6-153">Represents the name of a chart object.</span></span>


    <span data-ttu-id="be9f6-154">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be9f6-154">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"be9f6-155\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"be9f6-155\">Examples</span></span>\n\n```javascript\n// Rename the chart to new name, resize the chart to 200 points in both height and weight. \n// Move Chart1 to 100 points to the top and left. \nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    chart.name = \"New Name\";\n    chart.top = 100;\n    chart.left = 100;\n    chart.height = 200;\n    chart.width = 200;\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Chart.onActivated
  summary: >-
    <span data-ttu-id="be9f6-156">Tritt auf, wenn das Diagramm aktiviert wird.</span><span class="sxs-lookup"><span data-stu-id="be9f6-156">Occurs when the chart is activated.</span></span>


    <span data-ttu-id="be9f6-157">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be9f6-157">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onActivated
  fullName: onActivated
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onActivated: OfficeExtension.EventHandlers<Excel.ChartActivatedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.ChartActivatedEventArgs>
- uid: excel.Excel.Chart.onDeactivated
  summary: >-
    <span data-ttu-id="be9f6-158">Tritt auf, wenn das Diagramm deaktiviert wird.</span><span class="sxs-lookup"><span data-stu-id="be9f6-158">Occurs when the chart is deactivated.</span></span>


    <span data-ttu-id="be9f6-159">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be9f6-159">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onDeactivated
  fullName: onDeactivated
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onDeactivated: OfficeExtension.EventHandlers<Excel.ChartDeactivatedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.ChartDeactivatedEventArgs>
- uid: excel.Excel.Chart.plotArea
  summary: >-
    <span data-ttu-id="be9f6-160">Die PlotArea für das Diagramm darstellt.</span><span class="sxs-lookup"><span data-stu-id="be9f6-160">Represents the plotArea for the chart.</span></span>


    <span data-ttu-id="be9f6-161">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be9f6-161">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: plotArea
  fullName: plotArea
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly plotArea: Excel.ChartPlotArea;'
    return:
      type:
      - excel.Excel.ChartPlotArea
- uid: excel.Excel.Chart.plotBy
  summary: >-
    <span data-ttu-id="be9f6-162">Gibt zurück oder legt fest, wie die Spalten und Zeilen als Datenreihen im Diagramm verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="be9f6-162">Returns or sets the way columns or rows are used as data series on the chart.</span></span> <span data-ttu-id="be9f6-163">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="be9f6-163">Read/Write.</span></span>


    <span data-ttu-id="be9f6-164">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be9f6-164">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: plotBy
  fullName: plotBy
  langs:
  - typeScript
  type: property
  syntax:
    content: 'plotBy: Excel.ChartPlotBy | "Rows" | "Columns";'
    return:
      type:
      - Excel.ChartPlotBy | "Rows" | "Columns"
- uid: excel.Excel.Chart.plotVisibleOnly
  summary: >-
    <span data-ttu-id="be9f6-165">True, Wenn nur sichtbare Zellen gezeichnet werden.</span><span class="sxs-lookup"><span data-stu-id="be9f6-165">True if only visible cells are plotted.</span></span> <span data-ttu-id="be9f6-166">False, Wenn sichtbare und ausgeblendete Zellen gezeichnet werden.</span><span class="sxs-lookup"><span data-stu-id="be9f6-166">False if both visible and hidden cells are plotted.</span></span> <span data-ttu-id="be9f6-167">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="be9f6-167">Read/Write.</span></span>


    <span data-ttu-id="be9f6-168">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be9f6-168">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: plotVisibleOnly
  fullName: plotVisibleOnly
  langs:
  - typeScript
  type: property
  syntax:
    content: 'plotVisibleOnly: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Chart.series
  summary: >-
    <span data-ttu-id="be9f6-p114">Eine einzelne Datenreihe oder eine Sammlung von Datenreihen im Diagramm. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="be9f6-p114">Represents either a single series or collection of series in the chart. Read-only.</span></span>


    <span data-ttu-id="be9f6-171">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be9f6-171">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: series
  fullName: series
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly series: Excel.ChartSeriesCollection;'
    return:
      type:
      - excel.Excel.ChartSeriesCollection
- uid: excel.Excel.Chart.seriesNameLevel
  summary: >-
    <span data-ttu-id="be9f6-172">Zurückgeben oder festlegen eine ChartSeriesNameLevel-Enumeration-Konstante, die in Bezug auf die Ebene der, in dem die Namen von Datenreihen aus Quelle wird werden.</span><span class="sxs-lookup"><span data-stu-id="be9f6-172">Returns or sets a ChartSeriesNameLevel enumeration constant referring to the level of where the series names are being sourced from.</span></span> <span data-ttu-id="be9f6-173">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="be9f6-173">Read/Write.</span></span>


    <span data-ttu-id="be9f6-174">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be9f6-174">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: seriesNameLevel
  fullName: seriesNameLevel
  langs:
  - typeScript
  type: property
  syntax:
    content: 'seriesNameLevel: number;'
    return:
      type:
      - number
- uid: excel.Excel.Chart.setData
  summary: >-
    <span data-ttu-id="be9f6-175">Setzt die Quelldaten für das Diagramm zurück.</span><span class="sxs-lookup"><span data-stu-id="be9f6-175">Resets the source data for the chart.</span></span>


    <span data-ttu-id="be9f6-176">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be9f6-176">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: setData(sourceData, seriesBy)
  fullName: setData
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setData(sourceData: Range, seriesBy?: Excel.ChartSeriesBy): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"be9f6-177\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"be9f6-177\">Examples</span></span>\n\n```javascript\n// Set the sourceData to be \"A1:B4\" and seriesBy to be \"Columns\"\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    var sourceData = \"A1:B4\";\n    chart.setData(sourceData, \"Columns\");\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: sourceData
      description: <span data-ttu-id="be9f6-178">Das Range-Objekt an den Quelldaten entspricht.</span><span class="sxs-lookup"><span data-stu-id="be9f6-178">The range object corresponding to the source data.</span></span>
      type:
      - Range
    - id: seriesBy
      description: '<span data-ttu-id="be9f6-179">Gibt an, dass die Möglichkeit Spalten und Zeilen als Datenreihen im Diagramm verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="be9f6-179">Specifies the way columns or rows are used as data series on the chart.</span></span> <span data-ttu-id="be9f6-180">Kann eine der folgenden sein: automatisch (Standardeinstellung), Zeilen und Spalten.</span><span class="sxs-lookup"><span data-stu-id="be9f6-180">Can be one of the following: Auto (default), Rows, and Columns.</span></span> <span data-ttu-id="be9f6-181">Einzelheiten finden Sie unter Excel.ChartSeriesBy.</span><span class="sxs-lookup"><span data-stu-id="be9f6-181">See Excel.ChartSeriesBy for details.</span></span>'
      type:
      - excel.Excel.ChartSeriesBy
- uid: excel.Excel.Chart.setPosition
  summary: >-
    <span data-ttu-id="be9f6-182">Positioniert das Diagramm im Verhältnis zu den Zellen im Arbeitsblatt.</span><span class="sxs-lookup"><span data-stu-id="be9f6-182">Positions the chart relative to cells on the worksheet.</span></span>


    <span data-ttu-id="be9f6-183">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be9f6-183">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: setPosition(startCell, endCell)
  fullName: setPosition
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setPosition(startCell: Range | string, endCell?: Range | string): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"be9f6-184\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"be9f6-184\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var sheetName = \"Charts\";\n    var rangeSelection = \"A1:B4\";\n    var range = ctx.workbook.worksheets.getItem(sheetName).getRange(rangeSelection);\n    var sourceData = sheetName + \"!\" + \"A1:B4\";\n    var chart = ctx.workbook.worksheets.getItem(sheetName).charts.add(\"pie\", range, \"auto\");\n    chart.width = 500;\n    chart.height = 300;\n    chart.setPosition(\"C2\", null);\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: startCell
      description: <span data-ttu-id="be9f6-p117">Die Startzelle. An diese Position wird das Diagramm verschoben. Die Startzelle ist die obere linke oder die obere rechte Zelle, abhängig davon, ob die eingestellte Textrichtung des Benutzers von links nach rechts oder von rechts nach links ist.</span><span class="sxs-lookup"><span data-stu-id="be9f6-p117">The start cell. This is where the chart will be moved to. The start cell is the top-left or top-right cell, depending on the user's right-to-left display settings.</span></span>
      type:
      - Range | string
    - id: endCell
      description: <span data-ttu-id="be9f6-188">(Optional) Die Endzelle.</span><span class="sxs-lookup"><span data-stu-id="be9f6-188">(Optional) The end cell.</span></span> <span data-ttu-id="be9f6-189">Wenn angegeben, werden dieser Zellbereich vollständig Abdeckung Breite und Höhe des Diagramms festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="be9f6-189">If specified, the chart's width and height will be set to fully cover up this cell/range.</span></span>
      type:
      - Range | string
- uid: excel.Excel.Chart.showAllFieldButtons
  summary: >-
    <span data-ttu-id="be9f6-190">Stellt dar, ob in einer PivotChart alle Feldschaltflächen angezeigt.</span><span class="sxs-lookup"><span data-stu-id="be9f6-190">Represents whether to display all field buttons on a PivotChart.</span></span>


    <span data-ttu-id="be9f6-191">\[[API-Satz: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be9f6-191">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showAllFieldButtons
  fullName: showAllFieldButtons
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showAllFieldButtons: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Chart.showDataLabelsOverMaximum
  summary: >-
    <span data-ttu-id="be9f6-192">Stellt dar, ob das datenbeschriftungen wird angezeigt, wenn der Wert größer als der maximale Wert für die Größenachse ist.</span><span class="sxs-lookup"><span data-stu-id="be9f6-192">Represents whether to to show the data labels when the value is greater than the maximum value on the value axis.</span></span> <span data-ttu-id="be9f6-193">Wenn Größenachse kleiner als der Bereich von Datenpunkten würden, können Sie diese Eigenschaft verwenden, um festzulegen, ob für die datenbeschriftungen angezeigt.</span><span class="sxs-lookup"><span data-stu-id="be9f6-193">If value axis became smaller than the size of data points, you can use this property to set whether to show the data labels.</span></span> <span data-ttu-id="be9f6-194">Diese Eigenschaft kann nur auf 2D-Diagramme angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="be9f6-194">This property applies to 2-D charts only.</span></span>


    <span data-ttu-id="be9f6-195">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be9f6-195">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showDataLabelsOverMaximum
  fullName: showDataLabelsOverMaximum
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showDataLabelsOverMaximum: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Chart.style
  summary: >-
    <span data-ttu-id="be9f6-196">Zurückgeben oder Festlegen des Diagrammformats für das Diagramm.</span><span class="sxs-lookup"><span data-stu-id="be9f6-196">Returns or sets the chart style for the chart.</span></span> <span data-ttu-id="be9f6-197">Lese-/Schreibzugriff.</span><span class="sxs-lookup"><span data-stu-id="be9f6-197">Read/Write.</span></span>


    <span data-ttu-id="be9f6-198">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be9f6-198">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: style
  fullName: style
  langs:
  - typeScript
  type: property
  syntax:
    content: 'style: number;'
    return:
      type:
      - number
- uid: excel.Excel.Chart.title
  summary: >-
    <span data-ttu-id="be9f6-199">Stellt den Titel des angegebenen Diagramms, einschließlich Text, Sichtbarkeit, Position und Formatierung des Titels dar.</span><span class="sxs-lookup"><span data-stu-id="be9f6-199">Represents the title of the specified chart, including the text, visibility, position, and formating of the title.</span></span> <span data-ttu-id="be9f6-200">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="be9f6-200">Read-only.</span></span>


    <span data-ttu-id="be9f6-201">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be9f6-201">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: title
  fullName: title
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly title: Excel.ChartTitle;'
    return:
      type:
      - excel.Excel.ChartTitle
- uid: excel.Excel.Chart.toJSON
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ChartData;'
    return:
      type:
      - excel.Excel.Interfaces.ChartData
      description: ''
- uid: excel.Excel.Chart.top
  summary: >-
    <span data-ttu-id="be9f6-202">Der Abstand (in Punkten) von dem oberen Rand des Objekts zum oberen Rand von Zeile 1 (auf einem Arbeitsblatt) oder zum oberen Diagrammbereich (in einem Diagramm).</span><span class="sxs-lookup"><span data-stu-id="be9f6-202">Represents the distance, in points, from the top edge of the object to the top of row 1 (on a worksheet) or the top of the chart area (on a chart).</span></span>


    <span data-ttu-id="be9f6-203">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be9f6-203">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: top
  fullName: top
  langs:
  - typeScript
  type: property
  syntax:
    content: 'top: number;'
    return:
      type:
      - number
- uid: excel.Excel.Chart.width
  summary: >-
    <span data-ttu-id="be9f6-204">Die Breite des Diagrammobjekts (in Punkten).</span><span class="sxs-lookup"><span data-stu-id="be9f6-204">Represents the width, in points, of the chart object.</span></span>


    <span data-ttu-id="be9f6-205">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be9f6-205">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: width
  fullName: width
  langs:
  - typeScript
  type: property
  syntax:
    content: 'width: number;'
    return:
      type:
      - number
- uid: excel.Excel.Chart.worksheet
  summary: >-
    <span data-ttu-id="be9f6-p122">Das Arbeitsblatt, das das aktuelle Diagramm enthält. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="be9f6-p122">The worksheet containing the current chart. Read-only.</span></span>


    <span data-ttu-id="be9f6-208">\[[API-Satz: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="be9f6-208">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheet
  fullName: worksheet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheet: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
