### YamlMime:UniversalReference
items:
  - uid: excel.Excel.SlicerCollection
    summary: |-
      <span data-ttu-id="38fdf-101">Stellt eine Auflistung aller Slicer-Objekte in der Arbeitsmappe oder einem Arbeitsblatt dar.</span><span class="sxs-lookup"><span data-stu-id="38fdf-101">Represents a collection of all the slicer objects on the workbook or a worksheet.</span></span>

      <span data-ttu-id="38fdf-102">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="38fdf-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: Excel.SlicerCollection
    fullName: Excel.SlicerCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.SlicerCollection.add
      - excel.Excel.SlicerCollection.context
      - excel.Excel.SlicerCollection.getCount
      - excel.Excel.SlicerCollection.getItem
      - excel.Excel.SlicerCollection.getItemAt
      - excel.Excel.SlicerCollection.getItemOrNullObject
      - excel.Excel.SlicerCollection.items
      - excel.Excel.SlicerCollection.load
      - excel.Excel.SlicerCollection.load_1
      - excel.Excel.SlicerCollection.load_2
      - excel.Excel.SlicerCollection.toJSON
  - uid: excel.Excel.SlicerCollection.add
    summary: |-
      <span data-ttu-id="38fdf-103">Fügt der Arbeitsmappe einen neuen Datenschnitt hinzu.</span><span class="sxs-lookup"><span data-stu-id="38fdf-103">Adds a new slicer to the workbook.</span></span>

      <span data-ttu-id="38fdf-104">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="38fdf-104">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'add(slicerSource, sourceField, slicerDestination)'
    fullName: 'add(slicerSource, sourceField, slicerDestination)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(slicerSource: string | PivotTable | Table, sourceField: string | PivotField | number | TableColumn, slicerDestination?: string | Worksheet): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: <span data-ttu-id="38fdf-105">Der neue datenschnitt.</span><span class="sxs-lookup"><span data-stu-id="38fdf-105">The new slicer.</span></span>
      parameters:
        - id: slicerSource
          description: '<span data-ttu-id="38fdf-106">Die Datenquelle, auf der der neue Slicer basiert.</span><span class="sxs-lookup"><span data-stu-id="38fdf-106">The data source that the new slicer will be based on.</span></span> <span data-ttu-id="38fdf-107">Es kann ein PivotTable-Objekt, ein Table-Objekt oder eine Zeichenfolge sein.</span><span class="sxs-lookup"><span data-stu-id="38fdf-107">It can be a PivotTable object, a Table object or a string.</span></span> <span data-ttu-id="38fdf-108">Wenn ein PivotTable-Objekt übergeben wird, ist die Datenquelle die Quelle des PivotTable-Objekts.</span><span class="sxs-lookup"><span data-stu-id="38fdf-108">When a PivotTable object is passed, the data source is the source of the PivotTable object.</span></span> <span data-ttu-id="38fdf-109">Wenn ein Table-Objekt übergeben wird, ist die Datenquelle das Table-Objekt.</span><span class="sxs-lookup"><span data-stu-id="38fdf-109">When a Table object is passed, the data source is the Table object.</span></span> <span data-ttu-id="38fdf-110">Wenn eine Zeichenfolge übergeben wird, wird Sie als Name/ID einer PivotTable/Tabelle interpretiert.</span><span class="sxs-lookup"><span data-stu-id="38fdf-110">When a string is passed, it is interpreted as the name/id of a PivotTable/Table.</span></span>'
          type:
            - string | PivotTable | Table
        - id: sourceField
          description: '<span data-ttu-id="38fdf-111">Das Feld in der Datenquelle, nach dem gefiltert werden soll.</span><span class="sxs-lookup"><span data-stu-id="38fdf-111">The field in the data source to filter by.</span></span> <span data-ttu-id="38fdf-112">Dabei kann es sich um ein PivotField-Objekt, ein Table Column-Objekt, die ID eines PivotField-Objekts oder die ID/den Namen der Spalte handeln.</span><span class="sxs-lookup"><span data-stu-id="38fdf-112">It can be a PivotField object, a TableColumn object, the id of a PivotField or the id/name of TableColumn.</span></span>'
          type:
            - string | PivotField | number | TableColumn
        - id: slicerDestination
          description: '<span data-ttu-id="38fdf-113">Optional.</span><span class="sxs-lookup"><span data-stu-id="38fdf-113">Optional.</span></span> <span data-ttu-id="38fdf-114">Das Arbeitsblatt, in dem der neue datenschnitt erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="38fdf-114">The worksheet where the new slicer will be created in.</span></span> <span data-ttu-id="38fdf-115">Es kann ein Worksheet-Objekt oder der Name/die ID eines Arbeitsblatts sein.</span><span class="sxs-lookup"><span data-stu-id="38fdf-115">It can be a Worksheet object or the name/id of a worksheet.</span></span> <span data-ttu-id="38fdf-116">Dieser Parameter kann ausgelassen werden, wenn die Slicer-Auflistung aus dem Arbeitsblatt abgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="38fdf-116">This parameter can be omitted if the slicer collection is retrieved from worksheet.</span></span>'
          type:
            - string | Worksheet
  - uid: excel.Excel.SlicerCollection.context
    summary: <span data-ttu-id="38fdf-117">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="38fdf-117">The request context associated with the object.</span></span> <span data-ttu-id="38fdf-118">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="38fdf-118">This connects the add-in's process to the Office host application's process.</span></span>
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.SlicerCollection.getCount
    summary: |-
      <span data-ttu-id="38fdf-119">Gibt die Anzahl der Datenschnitte in der Sammlung zurück.</span><span class="sxs-lookup"><span data-stu-id="38fdf-119">Returns the number of slicers in the collection.</span></span>

      <span data-ttu-id="38fdf-120">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="38fdf-120">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.SlicerCollection.getItem
    summary: |-
      <span data-ttu-id="38fdf-121">Ruft ein Datenschnittobjekt anhand seines Namens oder seiner ID ab.</span><span class="sxs-lookup"><span data-stu-id="38fdf-121">Gets a slicer object using its name or id.</span></span>

      <span data-ttu-id="38fdf-122">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="38fdf-122">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="38fdf-123">Der Name oder die ID des datenschnitts.</span><span class="sxs-lookup"><span data-stu-id="38fdf-123">The name or id of the slicer.</span></span>
          type:
            - string
  - uid: excel.Excel.SlicerCollection.getItemAt
    summary: |-
      <span data-ttu-id="38fdf-124">Ruft einen Datenschnitt anhand seiner Position in der Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="38fdf-124">Gets a slicer based on its position in the collection.</span></span>

      <span data-ttu-id="38fdf-125">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="38fdf-125">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: ''
      parameters:
        - id: index
          description: <span data-ttu-id="38fdf-126">Index-Wert des abzurufenden Objekts.</span><span class="sxs-lookup"><span data-stu-id="38fdf-126">Index value of the object to be retrieved.</span></span> <span data-ttu-id="38fdf-127">Nullindiziert.</span><span class="sxs-lookup"><span data-stu-id="38fdf-127">Zero-indexed.</span></span>
          type:
            - number
  - uid: excel.Excel.SlicerCollection.getItemOrNullObject
    summary: |-
      <span data-ttu-id="38fdf-128">Ruft einen Datenschnitt anhand seines Namens oder seiner ID ab. Wenn der Datenschnitt nicht vorhanden ist, wird ein NULL-Objekt zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="38fdf-128">Gets a slicer using its name or id. If the slicer does not exist, will return a null object.</span></span>

      <span data-ttu-id="38fdf-129">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="38fdf-129">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getItemOrNullObject(key)
    fullName: getItemOrNullObject(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: string): Excel.Slicer;'
      return:
        type:
          - excel.Excel.Slicer
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="38fdf-130">Name oder ID des abzurufenden datenschnitts.</span><span class="sxs-lookup"><span data-stu-id="38fdf-130">Name or Id of the slicer to be retrieved.</span></span>
          type:
            - string
  - uid: excel.Excel.SlicerCollection.items
    summary: <span data-ttu-id="38fdf-131">Ruft die geladenen untergeordneten Elemente in dieser Sammlung ab.</span><span class="sxs-lookup"><span data-stu-id="38fdf-131">Gets the loaded child items in this collection.</span></span>
    isPreview: true
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Slicer[];'
      return:
        type:
          - 'Excel.Slicer[]'
  - uid: excel.Excel.SlicerCollection.load
    summary: <span data-ttu-id="38fdf-132">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="38fdf-132">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="38fdf-133">Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.</span><span class="sxs-lookup"><span data-stu-id="38fdf-133">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="38fdf-134">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="38fdf-134">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="38fdf-135">`load(option?: string | string[]): Excel.SlicerCollection`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="38fdf-135">`load(option?: string | string[]): Excel.SlicerCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="38fdf-136">`load(option?: { select?: string; expand?: string; }): Excel.SlicerCollection`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="38fdf-136">`load(option?: { select?: string; expand?: string; }): Excel.SlicerCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="38fdf-137">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerCollection`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="38fdf-137">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.SlicerCollection` - Only available on collection types.</span></span> <span data-ttu-id="38fdf-138">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="38fdf-138">It is similar to the preceding signature.</span></span> <span data-ttu-id="38fdf-139">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="38fdf-139">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="38fdf-140">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="38fdf-140">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="38fdf-141">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="38fdf-141">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.SlicerCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.SlicerCollection;'
      return:
        type:
          - excel.Excel.SlicerCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.SlicerCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.SlicerCollection.load_1
    summary: <span data-ttu-id="38fdf-142">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="38fdf-142">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="38fdf-143">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="38fdf-143">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.SlicerCollection;'
      return:
        type:
          - excel.Excel.SlicerCollection
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="38fdf-144">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="38fdf-144">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.SlicerCollection.load_2
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.SlicerCollection;'
      return:
        type:
          - excel.Excel.SlicerCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: excel.Excel.SlicerCollection.toJSON
    summary: '<span data-ttu-id="38fdf-145">ÜberSchreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API-Objekt an`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="38fdf-145">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="38fdf-146">.</span><span class="sxs-lookup"><span data-stu-id="38fdf-146"></span></span> <span data-ttu-id="38fdf-147">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="38fdf-147"></span></span><!-- --><span data-ttu-id="38fdf-148">Ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche `Excel.SlicerCollection` Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`Excel.Interfaces.SlicerCollectionData`</span><span class="sxs-lookup"><span data-stu-id="38fdf-148">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.SlicerCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SlicerCollectionData`</span></span><!-- --><span data-ttu-id="38fdf-149">), die ein Array "Items" mit flachen Kopien aller geladenen Eigenschaften aus den Elementen der Auflistung enthält.</span><span class="sxs-lookup"><span data-stu-id="38fdf-149">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SlicerCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.SlicerCollectionData
        description: ''