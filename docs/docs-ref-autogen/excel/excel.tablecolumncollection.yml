### YamlMime:UniversalReference
items:
  - uid: excel.Excel.TableColumnCollection
    summary: |-
      <span data-ttu-id="30ac1-101">Stellt eine Auflistung aller Spalten dar, die Teil der Tabelle sind.</span><span class="sxs-lookup"><span data-stu-id="30ac1-101">Represents a collection of all the columns that are part of the table.</span></span>

      <span data-ttu-id="30ac1-102">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30ac1-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.TableColumnCollection
    fullName: Excel.TableColumnCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: excel
    children:
      - excel.Excel.TableColumnCollection.add
      - excel.Excel.TableColumnCollection.context
      - excel.Excel.TableColumnCollection.count
      - excel.Excel.TableColumnCollection.getCount
      - excel.Excel.TableColumnCollection.getItem
      - excel.Excel.TableColumnCollection.getItemAt
      - excel.Excel.TableColumnCollection.getItemOrNullObject
      - excel.Excel.TableColumnCollection.items
      - excel.Excel.TableColumnCollection.load
      - excel.Excel.TableColumnCollection.load_1
      - excel.Excel.TableColumnCollection.load_2
      - excel.Excel.TableColumnCollection.toJSON
  - uid: excel.Excel.TableColumnCollection.add
    summary: |-
      <span data-ttu-id="30ac1-103">Fügt der Tabelle eine neue Spalte hinzu.</span><span class="sxs-lookup"><span data-stu-id="30ac1-103">Adds a new column to the table.</span></span>

      <span data-ttu-id="30ac1-104">\[[API-Satz: ExcelApi 1,1 erfordert einen Index, der kleiner als die Gesamtzahl der Spalten ist; 1,4 ermöglicht es dem Index, optional zu sein (null oder-1) und fügt eine Spalte am Ende an; 1,4 ermöglicht den Name-Parameter zum Zeitpunkt der Erstellung.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span><span class="sxs-lookup"><span data-stu-id="30ac1-104">\[ [API set: ExcelApi 1.1 requires an index smaller than the total column count; 1.4 allows index to be optional (null or -1) and will append a column at the end; 1.4 allows name parameter at creation time.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id="30ac1-105">\]</span><span class="sxs-lookup"><span data-stu-id="30ac1-105"></span></span>
    name: 'add(index, values, name)'
    fullName: 'add(index, values, name)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(index?: number, values?: Array<Array<boolean | string | number>> | boolean | string | number, name?: string): Excel.TableColumn;'
      return:
        type:
          - excel.Excel.TableColumn
        description: |-


          #### <a name="examples"></a><span data-ttu-id="30ac1-106">Beispiele</span><span class="sxs-lookup"><span data-stu-id="30ac1-106">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tables = ctx.workbook.tables;
              var values = [["Sample"], ["Values"], ["For"], ["New"], ["Column"]];
              var column = tables.getItem("Table1").columns.add(null, values);
              column.load('name');
              return ctx.sync().then(function() {
                  console.log(column.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: '<span data-ttu-id="30ac1-p102">Optional. Gibt die relative Position der neuen Spalte an. Bei NULL oder -1 erfolgt die Erweiterung am Ende. Spalten mit einem höheren Index werden auf die Seite verschoben. Nullindiziert.</span><span class="sxs-lookup"><span data-stu-id="30ac1-p102">Optional. Specifies the relative position of the new column. If null or -1, the addition happens at the end. Columns with a higher index will be shifted to the side. Zero-indexed.</span></span>'
          type:
            - number
        - id: values
          description: <span data-ttu-id="30ac1-112">Optional.</span><span class="sxs-lookup"><span data-stu-id="30ac1-112">Optional.</span></span> <span data-ttu-id="30ac1-113">Ein 2-dimensionales Array von unformatierten Werten der Tabellenspalte.</span><span class="sxs-lookup"><span data-stu-id="30ac1-113">A 2-dimensional array of unformatted values of the table column.</span></span>
          type:
            - Array<Array<boolean | string | number>> | boolean | string | number
        - id: name
          description: '<span data-ttu-id="30ac1-114">Optional.</span><span class="sxs-lookup"><span data-stu-id="30ac1-114">Optional.</span></span> <span data-ttu-id="30ac1-115">Gibt den Namen der neuen Spalte an.</span><span class="sxs-lookup"><span data-stu-id="30ac1-115">Specifies the name of the new column.</span></span> <span data-ttu-id="30ac1-116">Bei NULL wird der Standardname verwendet.</span><span class="sxs-lookup"><span data-stu-id="30ac1-116">If null, the default name will be used.</span></span>'
          type:
            - string
  - uid: excel.Excel.TableColumnCollection.context
    summary: <span data-ttu-id="30ac1-117">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="30ac1-117">The request context associated with the object.</span></span> <span data-ttu-id="30ac1-118">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="30ac1-118">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: excel.Excel.TableColumnCollection.count
    summary: |-
      <span data-ttu-id="30ac1-119">Gibt die Anzahl der Spalten in der Tabelle an.</span><span class="sxs-lookup"><span data-stu-id="30ac1-119">Returns the number of columns in the table.</span></span> <span data-ttu-id="30ac1-120">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="30ac1-120">Read-only.</span></span>

      <span data-ttu-id="30ac1-121">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30ac1-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: count
    fullName: count
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly count: number;'
      return:
        type:
          - number
  - uid: excel.Excel.TableColumnCollection.getCount
    summary: |-
      <span data-ttu-id="30ac1-122">Ruft die Anzahl der Spalten in der Tabelle ab.</span><span class="sxs-lookup"><span data-stu-id="30ac1-122">Gets the number of columns in the table.</span></span>

      <span data-ttu-id="30ac1-123">\[[API-Satz: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30ac1-123">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: ''
  - uid: excel.Excel.TableColumnCollection.getItem
    summary: |-
      <span data-ttu-id="30ac1-124">Ruft ein Spaltenobjekt nach Name oder ID ab.</span><span class="sxs-lookup"><span data-stu-id="30ac1-124">Gets a column object by Name or ID.</span></span>

      <span data-ttu-id="30ac1-125">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30ac1-125">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: number | string): Excel.TableColumn;'
      return:
        type:
          - excel.Excel.TableColumn
        description: |-


          #### <a name="examples"></a><span data-ttu-id="30ac1-126">Beispiele</span><span class="sxs-lookup"><span data-stu-id="30ac1-126">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tablecolumn = ctx.workbook.tables.getItem('Table1').columns.getItem(0);
              tablecolumn.load('name');
              return ctx.sync().then(function() {
                      console.log(tablecolumn.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: key
          description: <span data-ttu-id="30ac1-127">Spaltenname oder -ID.</span><span class="sxs-lookup"><span data-stu-id="30ac1-127">Column Name or ID.</span></span>
          type:
            - number | string
  - uid: excel.Excel.TableColumnCollection.getItemAt
    summary: |-
      <span data-ttu-id="30ac1-128">Ruft eine Spalte anhand ihrer Position in der Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="30ac1-128">Gets a column based on its position in the collection.</span></span>

      <span data-ttu-id="30ac1-129">\[[API-Satz: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30ac1-129">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.TableColumn;'
      return:
        type:
          - excel.Excel.TableColumn
        description: |-


          #### <a name="examples"></a><span data-ttu-id="30ac1-130">Beispiele</span><span class="sxs-lookup"><span data-stu-id="30ac1-130">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tablecolumn = ctx.workbook.tables.getItem['Table1'].columns.getItemAt(0);
              tablecolumn.load('name');
              return ctx.sync().then(function() {
                      console.log(tablecolumn.name);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: <span data-ttu-id="30ac1-131">Index-Wert des abzurufenden Objekts.</span><span class="sxs-lookup"><span data-stu-id="30ac1-131">Index value of the object to be retrieved.</span></span> <span data-ttu-id="30ac1-132">Nullindiziert.</span><span class="sxs-lookup"><span data-stu-id="30ac1-132">Zero-indexed.</span></span>
          type:
            - number
  - uid: excel.Excel.TableColumnCollection.getItemOrNullObject
    summary: |-
      <span data-ttu-id="30ac1-133">Ruft ein Spaltenobjekt nach Name oder ID ab.</span><span class="sxs-lookup"><span data-stu-id="30ac1-133">Gets a column object by Name or ID.</span></span> <span data-ttu-id="30ac1-134">Wenn die Spalte nicht vorhanden ist, wird ein NULL-Objekt zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="30ac1-134">If the column does not exist, will return a null object.</span></span>

      <span data-ttu-id="30ac1-135">\[[API-Satz: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="30ac1-135">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemOrNullObject(key)
    fullName: getItemOrNullObject(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: number | string): Excel.TableColumn;'
      return:
        type:
          - excel.Excel.TableColumn
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="30ac1-136">Spaltenname oder -ID.</span><span class="sxs-lookup"><span data-stu-id="30ac1-136">Column Name or ID.</span></span>
          type:
            - number | string
  - uid: excel.Excel.TableColumnCollection.items
    summary: <span data-ttu-id="30ac1-137">Ruft die geladenen untergeordneten Elemente in dieser Sammlung ab.</span><span class="sxs-lookup"><span data-stu-id="30ac1-137">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.TableColumn[];'
      return:
        type:
          - 'Excel.TableColumn[]'
  - uid: excel.Excel.TableColumnCollection.load
    summary: <span data-ttu-id="30ac1-138">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="30ac1-138">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="30ac1-139">Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.</span><span class="sxs-lookup"><span data-stu-id="30ac1-139">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="30ac1-140">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="30ac1-140">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="30ac1-141">`load(option?: string | string[]): Excel.TableColumnCollection`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="30ac1-141">`load(option?: string | string[]): Excel.TableColumnCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="30ac1-142">`load(option?: { select?: string; expand?: string; }): Excel.TableColumnCollection`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="30ac1-142">`load(option?: { select?: string; expand?: string; }): Excel.TableColumnCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="30ac1-143">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumnCollection`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="30ac1-143">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableColumnCollection` - Only available on collection types.</span></span> <span data-ttu-id="30ac1-144">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="30ac1-144">It is similar to the preceding signature.</span></span> <span data-ttu-id="30ac1-145">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="30ac1-145">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="30ac1-146">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="30ac1-146">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="30ac1-147">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="30ac1-147">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.TableColumnCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.TableColumnCollection;'
      return:
        type:
          - excel.Excel.TableColumnCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Excel.Interfaces.TableColumnCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
  - uid: excel.Excel.TableColumnCollection.load_1
    summary: <span data-ttu-id="30ac1-148">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="30ac1-148">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="30ac1-149">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="30ac1-149">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableColumnCollection;'
      return:
        type:
          - excel.Excel.TableColumnCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="30ac1-150">Beispiele</span><span class="sxs-lookup"><span data-stu-id="30ac1-150">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tablecolumns = ctx.workbook.tables.getItem('Table1').columns;
              tablecolumns.load('items');
              return ctx.sync().then(function() {
                  console.log("tablecolumns Count: " + tablecolumns.count);
                  for (var i = 0; i < tablecolumns.items.length; i++) {
                      console.log(tablecolumns.items[i].name);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="30ac1-151">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="30ac1-151">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: excel.Excel.TableColumnCollection.load_2
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.TableColumnCollection;'
      return:
        type:
          - excel.Excel.TableColumnCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: excel.Excel.TableColumnCollection.toJSON
    summary: '<span data-ttu-id="30ac1-152">ÜberSchreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API-Objekt an`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="30ac1-152">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="30ac1-153">.</span><span class="sxs-lookup"><span data-stu-id="30ac1-153"></span></span> <span data-ttu-id="30ac1-154">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="30ac1-154"></span></span><!-- --><span data-ttu-id="30ac1-155">Ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche `Excel.TableColumnCollection` Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`Excel.Interfaces.TableColumnCollectionData`</span><span class="sxs-lookup"><span data-stu-id="30ac1-155">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.TableColumnCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableColumnCollectionData`</span></span><!-- --><span data-ttu-id="30ac1-156">), die ein Array "Items" mit flachen Kopien aller geladenen Eigenschaften aus den Elementen der Auflistung enthält.</span><span class="sxs-lookup"><span data-stu-id="30ac1-156">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableColumnCollectionData;'
      return:
        type:
          - excel.Excel.Interfaces.TableColumnCollectionData
        description: ''