### YamlMime:UniversalReference
ms.openlocfilehash: 84d9bbc70d85f1cc092218f4f43b47b4827eb5e1
ms.sourcegitcommit: 06eebee5e68d349f78e6bc3bb0ef099fe063cf04
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 01/17/2019
ms.locfileid: "28724717"
items:
- uid: excel.Excel.TextConditionalFormat
  summary: >-
    <span data-ttu-id="6341f-101">Stellt ein bestimmtes bedingtes Textformat dar.</span><span class="sxs-lookup"><span data-stu-id="6341f-101">Represents a specific text conditional format.</span></span>


    <span data-ttu-id="6341f-102">\[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6341f-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.TextConditionalFormat
  fullName: Excel.TextConditionalFormat
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.TextConditionalFormat.context
  - excel.Excel.TextConditionalFormat.format
  - excel.Excel.TextConditionalFormat.load
  - excel.Excel.TextConditionalFormat.rule
  - excel.Excel.TextConditionalFormat.toJSON
- uid: excel.Excel.TextConditionalFormat.context
  summary: <span data-ttu-id="6341f-103">Der Anforderungskontext-zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="6341f-103">The request context associated with the object.</span></span> <span data-ttu-id="6341f-104">Dadurch wird das Add-in Prozess mit der Office-hostanwendung Prozess verbunden.</span><span class="sxs-lookup"><span data-stu-id="6341f-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.TextConditionalFormat.format
  summary: >-
    <span data-ttu-id="6341f-p102">Gibt ein Formatobjekt zurück, das die Schriftart, die Füllung, den Rahmen und andere Eigenschaften bedingter Formate kapselt. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="6341f-p102">Returns a format object, encapsulating the conditional formats font, fill, borders, and other properties. Read-only.</span></span>


    <span data-ttu-id="6341f-107">\[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6341f-107">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: format
  fullName: format
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly format: Excel.ConditionalRangeFormat;'
    return:
      type:
      - excel.Excel.ConditionalRangeFormat
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"6341f-108\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"6341f-108\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B16:D18\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.containsText);\n    conditionalFormat.textComparison.format.font.color = \"red\";\n    conditionalFormat.textComparison.rule = { operator: Excel.ConditionalTextOperator.contains, text: \"Delayed\" };\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.TextConditionalFormat.load
  summary: <span data-ttu-id="6341f-109">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="6341f-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6341f-110">Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="6341f-110">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="6341f-111">Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="6341f-111">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="6341f-112">`load(option?: { select?: string; expand?: string; }): Excel.TextConditionalFormat`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class="sxs-lookup"><span data-stu-id="6341f-112">`load(option?: { select?: string; expand?: string; }): Excel.TextConditionalFormat` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="6341f-113">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TextConditionalFormat`-Nur auf Auflistungstypen verfügbar.</span><span class="sxs-lookup"><span data-stu-id="6341f-113">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TextConditionalFormat` - Only available on collection types.</span></span> <span data-ttu-id="6341f-114">Es ist ähnlich wie die jeweils vorhergehende Signatur.</span><span class="sxs-lookup"><span data-stu-id="6341f-114">It is similar to the preceding signature.</span></span> <span data-ttu-id="6341f-115">Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können.</span><span class="sxs-lookup"><span data-stu-id="6341f-115">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="6341f-116">Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="6341f-116">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="6341f-117">Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.</span><span class="sxs-lookup"><span data-stu-id="6341f-117">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.TextConditionalFormat;'
    return:
      type:
      - excel.Excel.TextConditionalFormat
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="6341f-118">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="6341f-118">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.TextConditionalFormat.rule
  summary: >-
    <span data-ttu-id="6341f-119">Die Regel des bedingten Formats.</span><span class="sxs-lookup"><span data-stu-id="6341f-119">The rule of the conditional format.</span></span>


    <span data-ttu-id="6341f-120">\[[API-Satz: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6341f-120">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: rule
  fullName: rule
  langs:
  - typeScript
  type: property
  syntax:
    content: 'rule: Excel.ConditionalTextComparisonRule;'
    return:
      type:
      - excel.Excel.ConditionalTextComparisonRule
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"6341f-121\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"6341f-121\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Sample\");\n    const range = sheet.getRange(\"B16:D18\");\n    const conditionalFormat = range.conditionalFormats\n        .add(Excel.ConditionalFormatType.containsText);\n    conditionalFormat.textComparison.format.font.color = \"red\";\n    conditionalFormat.textComparison.rule = { operator: Excel.ConditionalTextOperator.contains, text: \"Delayed\" };\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.TextConditionalFormat.toJSON
  summary: <span data-ttu-id="6341f-122">Überschreibt das JavaScript `toJSON()` Methode, um nützliche Ausgabe zu gewährleisten, wenn ein API-Objekt zu übergeben ist `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="6341f-122">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="6341f-123">(`JSON.stringify`<!-- -->, wiederum die `toJSON` -Methode des Objekts, das es übergeben wird.) Das ursprüngliche Excel.TextConditionalFormat-Objekt ist ein API-Objekt der `toJSON` -Methode gibt eine einfache JavaScript-Objekt zurück (als `Excel.Interfaces.TextConditionalFormatData` <!-- -->), die flache Kopien der geladene untergeordnete Eigenschaften aus dem ursprünglichen-Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="6341f-123">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.TextConditionalFormat object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TextConditionalFormatData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TextConditionalFormatData;'
    return:
      type:
      - excel.Excel.Interfaces.TextConditionalFormatData
      description: ''
