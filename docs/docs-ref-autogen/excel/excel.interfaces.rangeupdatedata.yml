### YamlMime:UniversalReference
ms.openlocfilehash: 22ef285142a31a001c543d42601814b1fc8455e5
ms.sourcegitcommit: e9cb2f2717e1cf062a2f6ffe6a382d7b9b934ba0
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 09/21/2018
ms.locfileid: "24063430"
items:
- uid: excel.Excel.Interfaces.RangeUpdateData
  summary: Eine Schnittstelle zum Aktualisieren von Daten auf das Range-Objekt für die Verwendung in "range.set ({...})".
  name: Excel.Interfaces.RangeUpdateData
  fullName: excel.Excel.Interfaces.RangeUpdateData
  langs:
  - typeScript
  type: interface
  package: excel
  children:
  - excel.Excel.Interfaces.RangeUpdateData.columnHidden
  - excel.Excel.Interfaces.RangeUpdateData.dataValidation
  - excel.Excel.Interfaces.RangeUpdateData.format
  - excel.Excel.Interfaces.RangeUpdateData.formulas
  - excel.Excel.Interfaces.RangeUpdateData.formulasLocal
  - excel.Excel.Interfaces.RangeUpdateData.formulasR1C1
  - excel.Excel.Interfaces.RangeUpdateData.hyperlink
  - excel.Excel.Interfaces.RangeUpdateData.numberFormat
  - excel.Excel.Interfaces.RangeUpdateData.numberFormatLocal
  - excel.Excel.Interfaces.RangeUpdateData.rowHidden
  - excel.Excel.Interfaces.RangeUpdateData.style
  - excel.Excel.Interfaces.RangeUpdateData.values
- uid: excel.Excel.Interfaces.RangeUpdateData.columnHidden
  summary: >-
    Stellt dar, ob alle Spalten des aktuellen Bereichs ausgeblendet sind.


    \[[API-Satz: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: columnHidden
  fullName: excel.Excel.Interfaces.RangeUpdateData.columnHidden
  langs:
  - typeScript
  type: property
  syntax:
    content: 'columnHidden?: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Interfaces.RangeUpdateData.dataValidation
  summary: >-
    Gibt ein Data Validation-Objekt zurück.


    \[[API-Satz: ExcelApi 1,8](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: dataValidation
  fullName: excel.Excel.Interfaces.RangeUpdateData.dataValidation
  langs:
  - typeScript
  type: property
  syntax:
    content: 'dataValidation?: Excel.Interfaces.DataValidationUpdateData;'
    return:
      type:
      - excel.Excel.Interfaces.DataValidationUpdateData
- uid: excel.Excel.Interfaces.RangeUpdateData.format
  summary: >-
    Gibt ein Formatobjekt, das den Bereich Schriftart, Füllung, Rahmen, Ausrichtung und andere Eigenschaften zurück.


    \[[API-Satz: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: format
  fullName: excel.Excel.Interfaces.RangeUpdateData.format
  langs:
  - typeScript
  type: property
  syntax:
    content: 'format?: Excel.Interfaces.RangeFormatUpdateData;'
    return:
      type:
      - excel.Excel.Interfaces.RangeFormatUpdateData
- uid: excel.Excel.Interfaces.RangeUpdateData.formulas
  summary: >-
    Stellt die Formel in der A1-Schreibweise dar. Beim Festlegen von Formeln, die einem Bereich kann das Argument Value entweder einen single-Wert (eine Zeichenfolge) oder ein zweidimensionales Array sein. Wenn das Argument einen single-Wert ist, wird diese auf alle Zellen im Bereich angewendet werden.


    \[[API-Satz: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: formulas
  fullName: excel.Excel.Interfaces.RangeUpdateData.formulas
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formulas?: any[][];'
    return:
      type:
      - any[][]
- uid: excel.Excel.Interfaces.RangeUpdateData.formulasLocal
  summary: >-
    Die Formel in A1-Schreibweise, Sprache und Gebietsschema Formatieren von Zahlen des Benutzers darstellt. Beispielsweise würde die englische Formel "= SUM (A1, 1,5)" werden "= SUMME(A1; 1,5) "auf Deutsch. Beim Festlegen von Formeln, die einem Bereich kann das Argument Value entweder einen single-Wert (eine Zeichenfolge) oder ein zweidimensionales Array sein. Wenn das Argument einen single-Wert ist, wird diese auf alle Zellen im Bereich angewendet werden.


    \[[API-Satz: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: formulasLocal
  fullName: excel.Excel.Interfaces.RangeUpdateData.formulasLocal
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formulasLocal?: any[][];'
    return:
      type:
      - any[][]
- uid: excel.Excel.Interfaces.RangeUpdateData.formulasR1C1
  summary: >-
    Stellt die Formel in der R1C1-Schreibweise dar. Beim Festlegen von Formeln, die einem Bereich kann das Argument Value entweder einen single-Wert (eine Zeichenfolge) oder ein zweidimensionales Array sein. Wenn das Argument einen single-Wert ist, wird diese auf alle Zellen im Bereich angewendet werden.


    \[[API-Satz: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: formulasR1C1
  fullName: excel.Excel.Interfaces.RangeUpdateData.formulasR1C1
  langs:
  - typeScript
  type: property
  syntax:
    content: 'formulasR1C1?: any[][];'
    return:
      type:
      - any[][]
- uid: excel.Excel.Interfaces.RangeUpdateData.hyperlink
  summary: >-
    Stellt den Hyperlink für den aktuellen Bereich an.


    \[[API-Satz: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: hyperlink
  fullName: excel.Excel.Interfaces.RangeUpdateData.hyperlink
  langs:
  - typeScript
  type: property
  syntax:
    content: 'hyperlink?: Excel.RangeHyperlink;'
    return:
      type:
      - excel.Excel.RangeHyperlink
- uid: excel.Excel.Interfaces.RangeUpdateData.numberFormat
  summary: >-
    Excel Zahlenformat für den angegebenen Bereich darstellt. Beim Zahlenformat auf einen Bereich festlegen, kann das Argument Value entweder ein einzelner Wert (Zeichenfolge) oder ein zweidimensionales Array sein. Wenn das Argument einen single-Wert ist, wird diese auf alle Zellen im Bereich angewendet werden.


    \[[API-Satz: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: numberFormat
  fullName: excel.Excel.Interfaces.RangeUpdateData.numberFormat
  langs:
  - typeScript
  type: property
  syntax:
    content: 'numberFormat?: any[][];'
    return:
      type:
      - any[][]
- uid: excel.Excel.Interfaces.RangeUpdateData.numberFormatLocal
  summary: >-
    Excel Zahlenformat für den angegebenen Bereich als eine Zeichenfolge in der Sprache des Benutzers dargestellt wird. Beim Zahlenformat lokalen auf einen Bereich festlegen, kann das Argument Value entweder ein einzelner Wert (Zeichenfolge) oder ein zweidimensionales Array sein. Wenn das Argument einen single-Wert ist, wird diese auf alle Zellen im Bereich angewendet werden.


    \[[API-Satz: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: numberFormatLocal
  fullName: excel.Excel.Interfaces.RangeUpdateData.numberFormatLocal
  langs:
  - typeScript
  type: property
  syntax:
    content: 'numberFormatLocal?: any[][];'
    return:
      type:
      - any[][]
- uid: excel.Excel.Interfaces.RangeUpdateData.rowHidden
  summary: >-
    Stellt dar, ob alle Zeilen des aktuellen Bereichs ausgeblendet sind.


    \[[API-Satz: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: rowHidden
  fullName: excel.Excel.Interfaces.RangeUpdateData.rowHidden
  langs:
  - typeScript
  type: property
  syntax:
    content: 'rowHidden?: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Interfaces.RangeUpdateData.style
  summary: >-
    Das Format des aktuellen Bereichs darstellt. Wenn die Formate der Zellen inkonsistent sind, wird Null zurückgegeben. Für benutzerdefinierte Formatvorlagen wird der Name der Formatvorlage zurückgegeben werden soll. Bei integrierten Formatvorlagen wird eine Zeichenfolge zur Darstellung eines Werts in der BuiltInStyle-Enumeration zurückgegeben werden soll.


    \[[API-Satz: ExcelApi 1.7](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: style
  fullName: excel.Excel.Interfaces.RangeUpdateData.style
  langs:
  - typeScript
  type: property
  syntax:
    content: 'style?: string;'
    return:
      type:
      - string
- uid: excel.Excel.Interfaces.RangeUpdateData.values
  summary: >-
    Die unformatierten Werte des angegebenen Bereichs darstellt. Die zurückgegebenen Daten konnte vom Typ String, Nummer oder ein boolescher Wert sein. Zellen, die Fehler enthalten, gibt die Fehlerzeichenfolge zurück. Beim Festlegen von Werten, die einem Bereich kann das Argument Value entweder ein einzelner Wert (Zeichenfolge, Zahl oder boolescher Wert) oder ein zweidimensionales Array sein. Wenn das Argument einen single-Wert ist, wird diese auf alle Zellen im Bereich angewendet werden.


    \[[API-Satz: ExcelApi 1.1](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: values
  fullName: excel.Excel.Interfaces.RangeUpdateData.values
  langs:
  - typeScript
  type: property
  syntax:
    content: 'values?: any[][];'
    return:
      type:
      - any[][]
