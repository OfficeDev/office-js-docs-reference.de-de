### YamlMime:UniversalReference
ms.openlocfilehash: b1809496d1db3fd0b1ee94308b203f89594a6ce0
ms.sourcegitcommit: a68606173477c7fb4069880eea941766c7d8c50d
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/01/2019
ms.locfileid: "29703554"
items:
- uid: excel.Excel.PivotTable
  summary: >-
    <span data-ttu-id="d0ca1-101">Stellt eine Excel-PivotTable dar.</span><span class="sxs-lookup"><span data-stu-id="d0ca1-101">Represents an Excel PivotTable.</span></span>


    <span data-ttu-id="d0ca1-102">\[[API-Satz: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d0ca1-102">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.PivotTable
  fullName: Excel.PivotTable
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.PivotTable.columnHierarchies
  - excel.Excel.PivotTable.context
  - excel.Excel.PivotTable.dataHierarchies
  - excel.Excel.PivotTable.delete
  - excel.Excel.PivotTable.filterHierarchies
  - excel.Excel.PivotTable.hierarchies
  - excel.Excel.PivotTable.id
  - excel.Excel.PivotTable.layout
  - excel.Excel.PivotTable.load
  - excel.Excel.PivotTable.name
  - excel.Excel.PivotTable.refresh
  - excel.Excel.PivotTable.rowHierarchies
  - excel.Excel.PivotTable.toJSON
  - excel.Excel.PivotTable.worksheet
- uid: excel.Excel.PivotTable.columnHierarchies
  summary: >-
    <span data-ttu-id="d0ca1-103">Die Pivot-Hierarchien der Spalten von PivotTable.</span><span class="sxs-lookup"><span data-stu-id="d0ca1-103">The Column Pivot Hierarchies of the PivotTable.</span></span>


    <span data-ttu-id="d0ca1-104">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d0ca1-104">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: columnHierarchies
  fullName: columnHierarchies
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly columnHierarchies: Excel.RowColumnPivotHierarchyCollection;'
    return:
      type:
      - excel.Excel.RowColumnPivotHierarchyCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"d0ca1-105\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"d0ca1-105\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem(\"Farm Sales\");       \n\n    // check if the PivotTable already has a column\n    const column = pivotTable.columnHierarchies.getItemOrNullObject(\"Farm\");\n    column.load(\"id\");\n    await context.sync();\n\n    if (column.isNullObject) {\n        // ading the farm column to the column hierarchy automatically removes it from the row hierarchy\n        pivotTable.columnHierarchies.add(pivotTable.hierarchies.getItem(\"Farm\"));\n    } else {\n        pivotTable.columnHierarchies.remove(column);\n    }\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.PivotTable.context
  summary: <span data-ttu-id="d0ca1-106">Der Anforderungskontext-zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="d0ca1-106">The request context associated with the object.</span></span> <span data-ttu-id="d0ca1-107">Dadurch wird das Add-in Prozess mit der Office-hostanwendung Prozess verbunden.</span><span class="sxs-lookup"><span data-stu-id="d0ca1-107">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.PivotTable.dataHierarchies
  summary: >-
    <span data-ttu-id="d0ca1-108">Die Pivot-Hierarchien der Daten von PivotTable.</span><span class="sxs-lookup"><span data-stu-id="d0ca1-108">The Data Pivot Hierarchies of the PivotTable.</span></span>


    <span data-ttu-id="d0ca1-109">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d0ca1-109">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: dataHierarchies
  fullName: dataHierarchies
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly dataHierarchies: Excel.DataPivotHierarchyCollection;'
    return:
      type:
      - excel.Excel.DataPivotHierarchyCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"d0ca1-110\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"d0ca1-110\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem(\"Farm Sales\");\n    pivotTable.dataHierarchies.add(pivotTable.hierarchies.getItem(\"Crates Sold at Farm\"));\n    pivotTable.dataHierarchies.add(pivotTable.hierarchies.getItem(\"Crates Sold Wholesale\"));\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.PivotTable.delete
  summary: >-
    <span data-ttu-id="d0ca1-111">Aktualisiert PivotTable</span><span class="sxs-lookup"><span data-stu-id="d0ca1-111">Deletes the PivotTable.</span></span>


    <span data-ttu-id="d0ca1-112">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d0ca1-112">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"d0ca1-113\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"d0ca1-113\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    context.workbook.worksheets.getItem(\"Pivot\").pivotTables.getItem(\"Farm Sales\").delete();\n\n    await context.sync();\n});\n```"
- uid: excel.Excel.PivotTable.filterHierarchies
  summary: >-
    <span data-ttu-id="d0ca1-114">Die Pivot-Hierarchien der Filter von PivotTable.</span><span class="sxs-lookup"><span data-stu-id="d0ca1-114">The Filter Pivot Hierarchies of the PivotTable.</span></span>


    <span data-ttu-id="d0ca1-115">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d0ca1-115">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: filterHierarchies
  fullName: filterHierarchies
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly filterHierarchies: Excel.FilterPivotHierarchyCollection;'
    return:
      type:
      - excel.Excel.FilterPivotHierarchyCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"d0ca1-116\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"d0ca1-116\">Examples</span></span>\n\n```typescript\nasync function filter(functionType: Excel.AggregationFunction) {\n    await Excel.run(async (context) => {\n        const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem(\"Farm Sales\");\n        const filters = pivotTable.filterHierarchies;\n        const filter = filters.getItemOrNullObject(\"Classification\");\n        filter.load();\n        await context.sync();\n\n        // add the Classification hierarchy to the filter, if it's not already there\n        if (filter.isNullObject) {\n            filters.add(pivotTable.hierarchies.getItem(\"Classification\"));\n            await context.sync();\n        }\n    });\n}\n```"
- uid: excel.Excel.PivotTable.hierarchies
  summary: >-
    <span data-ttu-id="d0ca1-117">Die Pivot-Hierarchien von PivotTable.</span><span class="sxs-lookup"><span data-stu-id="d0ca1-117">The Pivot Hierarchies of the PivotTable.</span></span>


    <span data-ttu-id="d0ca1-118">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d0ca1-118">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: hierarchies
  fullName: hierarchies
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly hierarchies: Excel.PivotHierarchyCollection;'
    return:
      type:
      - excel.Excel.PivotHierarchyCollection
- uid: excel.Excel.PivotTable.id
  summary: >-
    <span data-ttu-id="d0ca1-p102">Die ID der PivotTable. Schreibgesch√ºtzt.</span><span class="sxs-lookup"><span data-stu-id="d0ca1-p102">Id of the PivotTable. Read-only.</span></span>


    <span data-ttu-id="d0ca1-121">\[[API-Satz: 1,5 ExcelApi](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d0ca1-121">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel.Excel.PivotTable.layout
  summary: >-
    <span data-ttu-id="d0ca1-122">Das PivotLayout-Objekt, das das Layout und die visuelle Struktur von PivotTable beschreibt.</span><span class="sxs-lookup"><span data-stu-id="d0ca1-122">The PivotLayout describing the layout and visual structure of the PivotTable.</span></span>


    <span data-ttu-id="d0ca1-123">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d0ca1-123">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: layout
  fullName: layout
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly layout: Excel.PivotLayout;'
    return:
      type:
      - excel.Excel.PivotLayout
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"d0ca1-124\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"d0ca1-124\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem(\"Farm Sales\");\n    pivotTable.layout.load(\"layoutType\");\n    await context.sync();\n\n    // cycle between the three layout types\n    if (pivotTable.layout.layoutType === \"Compact\") {\n        pivotTable.layout.layoutType = \"Outline\";\n    } else if (pivotTable.layout.layoutType === \"Outline\") {\n        pivotTable.layout.layoutType = \"Tabular\";\n    } else {\n        pivotTable.layout.layoutType = \"Compact\";\n    }\n    await context.sync();\n    console.log(\"Pivot layout is now \" + pivotTable.layout.layoutType);\n});\n```"
- uid: excel.Excel.PivotTable.load
  summary: <span data-ttu-id="d0ca1-125">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="d0ca1-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="d0ca1-126">Sie m√ºssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="d0ca1-126">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="d0ca1-127">Zus√§tzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="d0ca1-127">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="d0ca1-128">`load(option?: { select?: string; expand?: string; }): Excel.PivotTable`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class="sxs-lookup"><span data-stu-id="d0ca1-128">`load(option?: { select?: string; expand?: string; }): Excel.PivotTable` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="d0ca1-129">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTable`-Nur auf Auflistungstypen verf√ºgbar.</span><span class="sxs-lookup"><span data-stu-id="d0ca1-129">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTable` - Only available on collection types.</span></span> <span data-ttu-id="d0ca1-130">Es ist √§hnlich wie die jeweils vorhergehende Signatur.</span><span class="sxs-lookup"><span data-stu-id="d0ca1-130">It is similar to the preceding signature.</span></span> <span data-ttu-id="d0ca1-131">Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein k√∂nnen.</span><span class="sxs-lookup"><span data-stu-id="d0ca1-131">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="d0ca1-132">Option.Skip gibt die Anzahl der Elemente, die √ºbersprungen und nicht in das Ergebnis eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="d0ca1-132">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="d0ca1-133">Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen √ºbersprungen wird.</span><span class="sxs-lookup"><span data-stu-id="d0ca1-133">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.PivotTable;'
    return:
      type:
      - excel.Excel.PivotTable
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="d0ca1-134">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="d0ca1-134">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.PivotTable.name
  summary: >-
    <span data-ttu-id="d0ca1-135">Der Name der PivotTable.</span><span class="sxs-lookup"><span data-stu-id="d0ca1-135">Name of the PivotTable.</span></span>


    <span data-ttu-id="d0ca1-136">\[[API-Satz: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d0ca1-136">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
- uid: excel.Excel.PivotTable.refresh
  summary: >-
    <span data-ttu-id="d0ca1-137">Aktualisiert die PivotTable.</span><span class="sxs-lookup"><span data-stu-id="d0ca1-137">Refreshes the PivotTable.</span></span>


    <span data-ttu-id="d0ca1-138">\[[API-Satz: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d0ca1-138">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: refresh()
  fullName: refresh
  langs:
  - typeScript
  type: method
  syntax:
    content: 'refresh(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.PivotTable.rowHierarchies
  summary: >-
    <span data-ttu-id="d0ca1-139">Die Pivot-Hierarchien der Zeilen von PivotTable.</span><span class="sxs-lookup"><span data-stu-id="d0ca1-139">The Row Pivot Hierarchies of the PivotTable.</span></span>


    <span data-ttu-id="d0ca1-140">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d0ca1-140">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: rowHierarchies
  fullName: rowHierarchies
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly rowHierarchies: Excel.RowColumnPivotHierarchyCollection;'
    return:
      type:
      - excel.Excel.RowColumnPivotHierarchyCollection
- uid: excel.Excel.PivotTable.toJSON
  summary: <span data-ttu-id="d0ca1-141">√úberschreibt das JavaScript `toJSON()` Methode, um n√ºtzliche Ausgabe zu gew√§hrleisten, wenn ein API-Objekt zu √ºbergeben ist `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="d0ca1-141">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="d0ca1-142">(`JSON.stringify`<!-- -->, wiederum die `toJSON` -Methode des Objekts, das es √ºbergeben wird.) Das urspr√ºngliche Excel.PivotTable-Objekt ist ein API-Objekt der `toJSON` -Methode gibt eine einfache JavaScript-Objekt zur√ºck (als `Excel.Interfaces.PivotTableData` <!-- -->), die flache Kopien der geladene untergeordnete Eigenschaften aus dem urspr√ºnglichen-Objekt enth√§lt.</span><span class="sxs-lookup"><span data-stu-id="d0ca1-142">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.PivotTable object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotTableData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.PivotTableData;'
    return:
      type:
      - excel.Excel.Interfaces.PivotTableData
      description: ''
- uid: excel.Excel.PivotTable.worksheet
  summary: >-
    <span data-ttu-id="d0ca1-143">Das Arbeitsblatt mit der aktuellen PivotTable.</span><span class="sxs-lookup"><span data-stu-id="d0ca1-143">The worksheet containing the current PivotTable.</span></span>


    <span data-ttu-id="d0ca1-144">\[[API-Satz: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="d0ca1-144">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheet
  fullName: worksheet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheet: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
