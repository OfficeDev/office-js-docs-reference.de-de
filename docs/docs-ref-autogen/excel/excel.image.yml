### YamlMime:UniversalReference
ms.openlocfilehash: 03af886840e9b3df7d3796ba913e024ba07753f9
ms.sourcegitcommit: fd03ef72d6a546b0e4dbe0cc9e75d2a7cf9341a1
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/27/2019
ms.locfileid: "30303123"
items:
- uid: excel.Excel.Image
  summary: >-
    <span data-ttu-id="6a4e2-101">Stellt ein Image-Objekt im Arbeitsblatt dar.</span><span class="sxs-lookup"><span data-stu-id="6a4e2-101">Represents an image object in the worksheet.</span></span>


    <span data-ttu-id="6a4e2-102">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6a4e2-102">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: Excel.Image
  fullName: Excel.Image
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Image.context
  - excel.Excel.Image.format
  - excel.Excel.Image.id
  - excel.Excel.Image.load
  - excel.Excel.Image.load_1
  - excel.Excel.Image.load_2
  - excel.Excel.Image.shape
  - excel.Excel.Image.toJSON
- uid: excel.Excel.Image.context
  summary: <span data-ttu-id="6a4e2-103">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="6a4e2-103">The request context associated with the object.</span></span> <span data-ttu-id="6a4e2-104">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="6a4e2-104">This connects the add-in's process to the Office host application's process.</span></span>
  isPreview: true
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.Image.format
  summary: >-
    <span data-ttu-id="6a4e2-105">Gibt das Format für das Bild zurück.</span><span class="sxs-lookup"><span data-stu-id="6a4e2-105">Returns the format for the image.</span></span> <span data-ttu-id="6a4e2-106">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="6a4e2-106">Read-only.</span></span>


    <span data-ttu-id="6a4e2-107">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6a4e2-107">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: format
  fullName: format
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly format: Excel.PictureFormat | "UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG";'
    return:
      type:
      - Excel.PictureFormat | "UNKNOWN" | "BMP" | "JPEG" | "GIF" | "PNG" | "SVG"
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"6a4e2-108\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"6a4e2-108\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    const sheet = context.workbook.worksheets.getItem(\"Shapes\");\n    const image = sheet.shapes.getItem(\"Image\").image;\n    image.load(\"format\");\n    await context.sync();\n\n    console.log(\"The image's format is: \" + image.format);\n    await context.sync();\n});\n```"
- uid: excel.Excel.Image.id
  summary: >-
    <span data-ttu-id="6a4e2-109">Stellt den Shape-Bezeichner für das Image-Objekt dar.</span><span class="sxs-lookup"><span data-stu-id="6a4e2-109">Represents the shape identifier for the image object.</span></span> <span data-ttu-id="6a4e2-110">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="6a4e2-110">Read-only.</span></span>


    <span data-ttu-id="6a4e2-111">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6a4e2-111">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel.Excel.Image.load
  summary: <span data-ttu-id="6a4e2-112">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="6a4e2-112">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6a4e2-113">Sie müssen "context. Sync ()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="6a4e2-113">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="6a4e2-114">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="6a4e2-114">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="6a4e2-115">`load(option?: string | string[]): Excel.Image`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="6a4e2-115">`load(option?: string | string[]): Excel.Image` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="6a4e2-116">`load(option?: { select?: string; expand?: string; }): Excel.Image`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="6a4e2-116">`load(option?: { select?: string; expand?: string; }): Excel.Image` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="6a4e2-117">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Image`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="6a4e2-117">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Image` - Only available on collection types.</span></span> <span data-ttu-id="6a4e2-118">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="6a4e2-118">It is similar to the preceding signature.</span></span> <span data-ttu-id="6a4e2-119">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="6a4e2-119">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="6a4e2-120">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="6a4e2-120">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="6a4e2-121">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="6a4e2-121">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  isPreview: true
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.ImageLoadOptions): Excel.Image;'
    return:
      type:
      - excel.Excel.Image
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.ImageLoadOptions
- uid: excel.Excel.Image.load_1
  summary: <span data-ttu-id="6a4e2-122">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="6a4e2-122">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6a4e2-123">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="6a4e2-123">You must call `context.sync()` before reading the properties.</span></span>
  isPreview: true
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Image;'
    return:
      type:
      - excel.Excel.Image
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="6a4e2-124">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="6a4e2-124">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.Image.load_2
  summary: <span data-ttu-id="6a4e2-125">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="6a4e2-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6a4e2-126">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="6a4e2-126">You must call `context.sync()` before reading the properties.</span></span>
  isPreview: true
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Image;'
    return:
      type:
      - excel.Excel.Image
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="6a4e2-127">Wobei propertyNamesAndPaths. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="6a4e2-127">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.Image.shape
  summary: >-
    <span data-ttu-id="6a4e2-128">Gibt das Shape-Objekt für das Bild zurück.</span><span class="sxs-lookup"><span data-stu-id="6a4e2-128">Returns the shape object for the image.</span></span> <span data-ttu-id="6a4e2-129">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="6a4e2-129">Read-only.</span></span>


    <span data-ttu-id="6a4e2-130">\[[API-Satz: EXCELAPI Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6a4e2-130">\[ [API set: ExcelApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  isPreview: true
  name: shape
  fullName: shape
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly shape: Excel.Shape;'
    return:
      type:
      - excel.Excel.Shape
- uid: excel.Excel.Image.toJSON
  summary: <span data-ttu-id="6a4e2-131">ÜberSchreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API `JSON.stringify()` <!-- -->-Objekt an übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="6a4e2-131">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="6a4e2-132">(`JSON.stringify`<!-- -->ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche Excel. Image-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt `Excel.Interfaces.ImageData` <!-- -->(typisiert als) zurück, das flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="6a4e2-132">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Image object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ImageData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  isPreview: true
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.ImageData;'
    return:
      type:
      - excel.Excel.Interfaces.ImageData
      description: ''
