### YamlMime:UniversalReference
ms.openlocfilehash: 775d304847b2d40e8ca281468c04b2075733b106
ms.sourcegitcommit: beffe9455dace422e85b92f0105c54ff7b594cbf
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 09/20/2018
ms.locfileid: "24046036"
items:
- uid: excel.Excel.TableSort
  summary: >-
    Verwaltet Sortiervorgänge für Table-Objekte.


    \[[API-Satz: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: Excel.TableSort
  fullName: excel.Excel.TableSort
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.TableSort.apply
  - excel.Excel.TableSort.clear
  - excel.Excel.TableSort.fields
  - excel.Excel.TableSort.load
  - excel.Excel.TableSort.matchCase
  - excel.Excel.TableSort.method
  - excel.Excel.TableSort.reapply
  - excel.Excel.TableSort.toJSON
- uid: excel.Excel.TableSort.apply
  summary: >-
    Führt einen Sortiervorgang aus.


    \[[API-Satz: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: apply(fields, matchCase, method)
  fullName: excel.Excel.TableSort.apply
  langs:
  - typeScript
  type: method
  syntax:
    content: 'apply(fields: Excel.SortField[], matchCase?: boolean, method?: Excel.SortMethod): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    table.sort.apply([ \n            {\n                key: 2,\n                ascending: true\n            },\n        ], true);\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: fields
      description: Die Liste der Bedingungen, nach denen sortiert werden soll.
      type:
      - Excel.SortField[]
    - id: matchCase
      description: Optional. Gibt an, ob sich die Groß-/Kleinschreibung auf die Zeichenfolgensortierung auswirkt.
      type:
      - boolean
    - id: method
      description: Optional. Die Sortiermethode für chinesischen Schriftzeichen verwendet.
      type:
      - excel.Excel.SortMethod
- uid: excel.Excel.TableSort.clear
  summary: >-
    Löscht die Sortierung, die derzeit in der Tabelle enthalten ist. Dies ändert nicht die Sortierung der Tabelle, löscht jedoch den Zustand der Kopfzeilen-Schaltflächen.


    \[[API-Satz: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: clear()
  fullName: excel.Excel.TableSort.clear
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.TableSort.fields
  summary: >-
    Stellt die aktuellen Bedingungen dar, die zuletzt zum Sortieren der Tabelle verwendet wurden. Schreibgeschützt.


    \[[API-Satz: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: fields
  fullName: excel.Excel.TableSort.fields
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly fields: Excel.SortField[];'
    return:
      type:
      - Excel.SortField[]
- uid: excel.Excel.TableSort.load
  summary: Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts. Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.
  remarks: >-
    Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:


    `load(option?: { select?: string; expand?: string; }): Excel.TableSort`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableSort`-Nur auf Auflistungstypen verfügbar. Es ist ähnlich wie die jeweils vorhergehende Signatur. Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können. Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen. Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.
  name: load(option)
  fullName: excel.Excel.TableSort.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Excel.TableSort;'
    return:
      type:
      - excel.Excel.TableSort
      description: ''
    parameters:
    - id: option
      description: Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.
      type:
      - string | string[]
- uid: excel.Excel.TableSort.matchCase
  summary: >-
    Stellt dar, ob die Groß-/Kleinschreibung den letzten Sortiervorgang der Tabelle beeinflusst hat. Schreibgeschützt.


    \[[API-Satz: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: matchCase
  fullName: excel.Excel.TableSort.matchCase
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly matchCase: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.TableSort.method
  summary: >-
    Stellt Chinesisches Zeichen Sortierung Methode zuletzt verwendet, um die Tabelle zu sortieren. Schreibgeschützt.


    \[[API-Satz: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: method
  fullName: excel.Excel.TableSort.method
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly method: Excel.SortMethod | "PinYin" | "StrokeCount";'
    return:
      type:
      - Excel.SortMethod | "PinYin" | "StrokeCount"
- uid: excel.Excel.TableSort.reapply
  summary: >-
    Wendet die aktuellen Sortierparameter erneut auf die Tabelle an.


    \[[API-Satz: ExcelApi 1.2](/javascript/office/requirement-sets/excel-api-requirement-sets)\]
  name: reapply()
  fullName: excel.Excel.TableSort.reapply
  langs:
  - typeScript
  type: method
  syntax:
    content: 'reapply(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.TableSort.toJSON
  name: toJSON()
  fullName: excel.Excel.TableSort.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableSortData;'
    return:
      type:
      - excel.Excel.Interfaces.TableSortData
      description: ''
