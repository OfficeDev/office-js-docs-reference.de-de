### YamlMime:UniversalReference
ms.openlocfilehash: 5bd5b055e39908e3c3fdd513f2d48f9665544f8a
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/13/2019
ms.locfileid: "29978385"
items:
- uid: excel.Excel.Table
  summary: >-
    <span data-ttu-id="4a549-101">Stellt eine Excel-Tabelle dar.</span><span class="sxs-lookup"><span data-stu-id="4a549-101">Represents an Excel table.</span></span>


    <span data-ttu-id="4a549-102">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a549-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: Excel.Table
  fullName: Excel.Table
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: excel
  children:
  - excel.Excel.Table.clearFilters
  - excel.Excel.Table.columns
  - excel.Excel.Table.context
  - excel.Excel.Table.convertToRange
  - excel.Excel.Table.delete
  - excel.Excel.Table.getDataBodyRange
  - excel.Excel.Table.getHeaderRowRange
  - excel.Excel.Table.getRange
  - excel.Excel.Table.getTotalRowRange
  - excel.Excel.Table.highlightFirstColumn
  - excel.Excel.Table.highlightLastColumn
  - excel.Excel.Table.id
  - excel.Excel.Table.legacyId
  - excel.Excel.Table.load
  - excel.Excel.Table.load_1
  - excel.Excel.Table.load_2
  - excel.Excel.Table.name
  - excel.Excel.Table.onChanged
  - excel.Excel.Table.onSelectionChanged
  - excel.Excel.Table.reapplyFilters
  - excel.Excel.Table.rows
  - excel.Excel.Table.set
  - excel.Excel.Table.set_1
  - excel.Excel.Table.showBandedColumns
  - excel.Excel.Table.showBandedRows
  - excel.Excel.Table.showFilterButton
  - excel.Excel.Table.showHeaders
  - excel.Excel.Table.showTotals
  - excel.Excel.Table.sort
  - excel.Excel.Table.style
  - excel.Excel.Table.toJSON
  - excel.Excel.Table.worksheet
- uid: excel.Excel.Table.clearFilters
  summary: >-
    <span data-ttu-id="4a549-103">Löscht alle Filter, die derzeit in der Tabelle verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="4a549-103">Clears all the filters currently applied on the table.</span></span>


    <span data-ttu-id="4a549-104">\[[API-Satz: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a549-104">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: clearFilters()
  fullName: clearFilters()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clearFilters(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.Table.columns
  summary: >-
    <span data-ttu-id="4a549-p101">Stellt eine Auflistung aller Spalten in der Tabelle dar. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="4a549-p101">Represents a collection of all the columns in the table. Read-only.</span></span>


    <span data-ttu-id="4a549-107">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a549-107">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: columns
  fullName: columns
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly columns: Excel.TableColumnCollection;'
    return:
      type:
      - excel.Excel.TableColumnCollection
- uid: excel.Excel.Table.context
  summary: <span data-ttu-id="4a549-108">Der Anforderungskontext-zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="4a549-108">The request context associated with the object.</span></span> <span data-ttu-id="4a549-109">Dadurch wird das Add-in Prozess mit der Office-hostanwendung Prozess verbunden.</span><span class="sxs-lookup"><span data-stu-id="4a549-109">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: excel.Excel.Table.convertToRange
  summary: >-
    <span data-ttu-id="4a549-p103">Wandelt die Tabelle in einen normalen Bereich von Zellen um. Alle Daten werden beibehalten.</span><span class="sxs-lookup"><span data-stu-id="4a549-p103">Converts the table into a normal range of cells. All data is preserved.</span></span>


    <span data-ttu-id="4a549-112">\[[API-Satz: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a549-112">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: convertToRange()
  fullName: convertToRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'convertToRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4a549-113\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"4a549-113\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    table.convertToRange();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Table.delete
  summary: >-
    <span data-ttu-id="4a549-114">Löscht die Tabelle.</span><span class="sxs-lookup"><span data-stu-id="4a549-114">Deletes the table.</span></span>


    <span data-ttu-id="4a549-115">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a549-115">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: delete()
  fullName: delete()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'delete(): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4a549-116\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"4a549-116\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    table.delete();\n    return ctx.sync(); \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Table.getDataBodyRange
  summary: >-
    <span data-ttu-id="4a549-117">Ruft das Bereichsobjekt ab, das mit dem Datenteil der Tabelle verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="4a549-117">Gets the range object associated with the data body of the table.</span></span>


    <span data-ttu-id="4a549-118">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a549-118">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getDataBodyRange()
  fullName: getDataBodyRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getDataBodyRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4a549-119\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"4a549-119\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    var tableDataRange = table.getDataBodyRange();\n    tableDataRange.load('address')\n    return ctx.sync().then(function() {\n            console.log(tableDataRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Table.getHeaderRowRange
  summary: >-
    <span data-ttu-id="4a549-120">Ruft das Bereichsobjekt ab, das mit der Kopfzeile der Tabelle verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="4a549-120">Gets the range object associated with header row of the table.</span></span>


    <span data-ttu-id="4a549-121">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a549-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getHeaderRowRange()
  fullName: getHeaderRowRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getHeaderRowRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4a549-122\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"4a549-122\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    var tableHeaderRange = table.getHeaderRowRange();\n    tableHeaderRange.load('address');\n    return ctx.sync().then(function() {\n        console.log(tableHeaderRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Table.getRange
  summary: >-
    <span data-ttu-id="4a549-123">Ruft das Bereichsobjekt ab, das mit der gesamten Tabelle verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="4a549-123">Gets the range object associated with the entire table.</span></span>


    <span data-ttu-id="4a549-124">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a549-124">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getRange()
  fullName: getRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4a549-125\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"4a549-125\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    var tableRange = table.getRange();\n    tableRange.load('address');    \n    return ctx.sync().then(function() {\n            console.log(tableRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Table.getTotalRowRange
  summary: >-
    <span data-ttu-id="4a549-126">Ruft das Bereichsobjekt ab, das mit der Ergebniszeile der Tabelle verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="4a549-126">Gets the range object associated with totals row of the table.</span></span>


    <span data-ttu-id="4a549-127">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a549-127">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: getTotalRowRange()
  fullName: getTotalRowRange()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTotalRowRange(): Excel.Range;'
    return:
      type:
      - excel.Excel.Range
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4a549-128\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"4a549-128\">Examples</span></span>\n\n```javascript\nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    var tableTotalsRange = table.getTotalRowRange();\n    tableTotalsRange.load('address');    \n    return ctx.sync().then(function() {\n            console.log(tableTotalsRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: excel.Excel.Table.highlightFirstColumn
  summary: >-
    <span data-ttu-id="4a549-129">Gibt an, ob die erste Spalte spezielle Formatierung enthält.</span><span class="sxs-lookup"><span data-stu-id="4a549-129">Indicates whether the first column contains special formatting.</span></span>


    <span data-ttu-id="4a549-130">\[[API-Satz: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a549-130">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: highlightFirstColumn
  fullName: highlightFirstColumn
  langs:
  - typeScript
  type: property
  syntax:
    content: 'highlightFirstColumn: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Table.highlightLastColumn
  summary: >-
    <span data-ttu-id="4a549-131">Gibt an, ob die letzte Spalte spezielle Formatierung enthält.</span><span class="sxs-lookup"><span data-stu-id="4a549-131">Indicates whether the last column contains special formatting.</span></span>


    <span data-ttu-id="4a549-132">\[[API-Satz: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a549-132">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: highlightLastColumn
  fullName: highlightLastColumn
  langs:
  - typeScript
  type: property
  syntax:
    content: 'highlightLastColumn: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Table.id
  summary: >-
    <span data-ttu-id="4a549-p104">Gibt einen Wert zurück, der das Arbeitsblatt in einer bestimmten Arbeitsmappe eindeutig identifiziert. Der Wert des Bezeichners bleibt unverändert, auch wenn die Tabelle umbenannt wird. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="4a549-p104">Returns a value that uniquely identifies the table in a given workbook. The value of the identifier remains the same even when the table is renamed. Read-only.</span></span>


    <span data-ttu-id="4a549-136">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a549-136">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: excel.Excel.Table.legacyId
  summary: >-
    <span data-ttu-id="4a549-137">Gibt eine numerische Id zurück.</span><span class="sxs-lookup"><span data-stu-id="4a549-137">Returns a numeric id.</span></span>


    <span data-ttu-id="4a549-138">\[[API-Satz: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a549-138">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: legacyId
  fullName: legacyId
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly legacyId: string;'
    return:
      type:
      - string
- uid: excel.Excel.Table.load
  summary: <span data-ttu-id="4a549-139">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="4a549-139">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4a549-140">Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="4a549-140">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="4a549-141">Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="4a549-141">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="4a549-142">`load(option?: string | string[]): Excel.Table`-Wo Option ist eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="4a549-142">`load(option?: string | string[]): Excel.Table` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="4a549-143">`load(option?: { select?: string; expand?: string; }): Excel.Table`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class="sxs-lookup"><span data-stu-id="4a549-143">`load(option?: { select?: string; expand?: string; }): Excel.Table` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="4a549-144">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Table`-Nur auf Auflistungstypen verfügbar.</span><span class="sxs-lookup"><span data-stu-id="4a549-144">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Table` - Only available on collection types.</span></span> <span data-ttu-id="4a549-145">Es ist ähnlich wie die jeweils vorhergehende Signatur.</span><span class="sxs-lookup"><span data-stu-id="4a549-145">It is similar to the preceding signature.</span></span> <span data-ttu-id="4a549-146">Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können.</span><span class="sxs-lookup"><span data-stu-id="4a549-146">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="4a549-147">Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="4a549-147">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="4a549-148">Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.</span><span class="sxs-lookup"><span data-stu-id="4a549-148">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Excel.Interfaces.TableLoadOptions): Excel.Table;'
    return:
      type:
      - excel.Excel.Table
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - excel.Excel.Interfaces.TableLoadOptions
- uid: excel.Excel.Table.load_1
  summary: <span data-ttu-id="4a549-149">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="4a549-149">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4a549-150">Sie müssen Aufrufen `context.sync()` vor dem Lesen der Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="4a549-150">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Table;'
    return:
      type:
      - excel.Excel.Table
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4a549-151\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"4a549-151\">Examples</span></span>\n\n```javascript\n// Get a table by name. \nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    table.load('index')\n    return ctx.sync().then(function() {\n            console.log(table.index);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Get a table by index.\nExcel.run(function (ctx) { \n    var index = 0;\n    var table = ctx.workbook.tables.getItemAt(0);\n    table.load('id')\n    return ctx.sync().then(function() {\n            console.log(table.id);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Set table style. \nExcel.run(function (ctx) { \n    var tableName = 'Table1';\n    var table = ctx.workbook.tables.getItem(tableName);\n    table.name = 'Table1-Renamed';\n    table.showTotals = false;\n    table.style = 'TableStyleMedium2';\n    table.load('tableStyle');\n    return ctx.sync().then(function() {\n            console.log(table.style);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="4a549-152">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="4a549-152">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: excel.Excel.Table.load_2
  summary: <span data-ttu-id="4a549-153">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="4a549-153">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4a549-154">Sie müssen Aufrufen `context.sync()` vor dem Lesen der Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="4a549-154">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Table;'
    return:
      type:
      - excel.Excel.Table
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="4a549-155">Wobei propertyNamesAndPaths.select ist eine durch Kommas getrennte Zeichenfolge, die angibt, die Eigenschaften zum Laden und propertyNamesAndPaths.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class="sxs-lookup"><span data-stu-id="4a549-155">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: excel.Excel.Table.name
  summary: >-
    <span data-ttu-id="4a549-156">Der Name der Tabelle.</span><span class="sxs-lookup"><span data-stu-id="4a549-156">Name of the table.</span></span>


    <span data-ttu-id="4a549-157">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a549-157">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: name
  fullName: name
  langs:
  - typeScript
  type: property
  syntax:
    content: 'name: string;'
    return:
      type:
      - string
- uid: excel.Excel.Table.onChanged
  summary: >-
    <span data-ttu-id="4a549-158">Tritt auf, wenn Daten in den Zellen für eine bestimmte Tabelle geändert wird.</span><span class="sxs-lookup"><span data-stu-id="4a549-158">Occurs when data in cells changes on a specific table.</span></span>


    <span data-ttu-id="4a549-159">\[[API-Satz: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a549-159">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onChanged
  fullName: onChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onChanged: OfficeExtension.EventHandlers<Excel.TableChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.TableChangedEventArgs>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4a549-160\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"4a549-160\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let table = context.workbook.tables.getItemAt(0);\n    table.onChanged.add(onChange);\n\n    await context.sync();\n    console.log(\"A handler has been registered for the onChanged event\");\n});\n```"
- uid: excel.Excel.Table.onSelectionChanged
  summary: >-
    <span data-ttu-id="4a549-161">Tritt auf, wenn die Markierung in einer bestimmten Tabelle ändert.</span><span class="sxs-lookup"><span data-stu-id="4a549-161">Occurs when the selection changes on a specific table.</span></span>


    <span data-ttu-id="4a549-162">\[[API-Satz: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a549-162">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: onSelectionChanged
  fullName: onSelectionChanged
  langs:
  - typeScript
  type: event
  syntax:
    content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.TableSelectionChangedEventArgs>;'
    return:
      type:
      - OfficeExtension.EventHandlers<Excel.TableSelectionChangedEventArgs>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4a549-163\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"4a549-163\">Examples</span></span>\n\n```typescript\nawait Excel.run(async (context) => {\n    let table = context.workbook.tables.getItemAt(0);\n    table.onSelectionChanged.add(onSelectionChange);\n\n    await context.sync();\n    console.log(\"A handler has been registered for table onSelectionChanged event\");\n});\n```"
- uid: excel.Excel.Table.reapplyFilters
  summary: >-
    <span data-ttu-id="4a549-164">Wendet alle Filter erneut an, die derzeit in der Tabelle vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="4a549-164">Reapplies all the filters currently on the table.</span></span>


    <span data-ttu-id="4a549-165">\[[API-Satz: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a549-165">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: reapplyFilters()
  fullName: reapplyFilters()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'reapplyFilters(): void;'
    return:
      type:
      - void
      description: ''
- uid: excel.Excel.Table.rows
  summary: >-
    <span data-ttu-id="4a549-p109">Stellt eine Auflistung aller Zeilen in der Tabelle dar. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="4a549-p109">Represents a collection of all the rows in the table. Read-only.</span></span>


    <span data-ttu-id="4a549-168">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a549-168">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: rows
  fullName: rows
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly rows: Excel.TableRowCollection;'
    return:
      type:
      - excel.Excel.TableRowCollection
- uid: excel.Excel.Table.set
  summary: <span data-ttu-id="4a549-169">Legt mehrere Eigenschaften eines Objekts zur selben Zeit fest.</span><span class="sxs-lookup"><span data-stu-id="4a549-169">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="4a549-170">Sie können entweder eine einfache-Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt des gleichen Typs übergeben.</span><span class="sxs-lookup"><span data-stu-id="4a549-170">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="4a549-171">Diese Methode hat die folgenden zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="4a549-171">This method has the following additional signature:</span></span>


    `set(properties: Excel.Table): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.TableUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="4a549-172">Ein JavaScript-Objekt mit Eigenschaften, die an die Eigenschaften des Objekts isomorphically strukturiert werden, auf denen die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="4a549-172">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.TableUpdateData
    - id: options
      description: <span data-ttu-id="4a549-173">Bietet eine Option, um Fehler zu unterdrücken, wenn schreibgeschützte Eigenschaften festgelegt werden, versucht das Properties-Objekt.</span><span class="sxs-lookup"><span data-stu-id="4a549-173">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: excel.Excel.Table.set_1
  summary: <span data-ttu-id="4a549-174">Mehrere Eigenschaften festgelegt auf das Objekt zur selben Zeit, basierend auf einem vorhandenen geladen-Objekt.</span><span class="sxs-lookup"><span data-stu-id="4a549-174">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Excel.Table): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - excel.Excel.Table
- uid: excel.Excel.Table.showBandedColumns
  summary: >-
    <span data-ttu-id="4a549-175">Gibt an, ob die Spalten gebänderte Formatierung aufweisen, wobei ungerade Spalten anders hervorgehoben werden als gerade, um die Tabelle leichter lesbar zu machen.</span><span class="sxs-lookup"><span data-stu-id="4a549-175">Indicates whether the columns show banded formatting in which odd columns are highlighted differently from even ones to make reading the table easier.</span></span>


    <span data-ttu-id="4a549-176">\[[API-Satz: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a549-176">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showBandedColumns
  fullName: showBandedColumns
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showBandedColumns: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Table.showBandedRows
  summary: >-
    <span data-ttu-id="4a549-177">Gibt an, ob die Zeilen gebänderte Formatierung aufweisen, wobei ungerade Zeilen anders hervorgehoben werden als gerade, um die Tabelle leichter lesbar zu machen.</span><span class="sxs-lookup"><span data-stu-id="4a549-177">Indicates whether the rows show banded formatting in which odd rows are highlighted differently from even ones to make reading the table easier.</span></span>


    <span data-ttu-id="4a549-178">\[[API-Satz: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a549-178">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showBandedRows
  fullName: showBandedRows
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showBandedRows: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Table.showFilterButton
  summary: >-
    <span data-ttu-id="4a549-p111">Gibt an, ob die Filterschaltflächen am oberen Rand jedes Spaltenheaders sichtbar sind. Diese Einstellung ist nur zulässig, wenn die Tabelle eine Kopfzeile enthält.</span><span class="sxs-lookup"><span data-stu-id="4a549-p111">Indicates whether the filter buttons are visible at the top of each column header. Setting this is only allowed if the table contains a header row.</span></span>


    <span data-ttu-id="4a549-181">\[[API-Satz: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a549-181">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showFilterButton
  fullName: showFilterButton
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showFilterButton: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Table.showHeaders
  summary: >-
    <span data-ttu-id="4a549-p112">Gibt an, ob die Kopfzeile sichtbar oder nicht sichtbar ist. Dieser Wert kann festgelegt werden, um die Kopfzeile anzuzeigen, oder sie zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="4a549-p112">Indicates whether the header row is visible or not. This value can be set to show or remove the header row.</span></span>


    <span data-ttu-id="4a549-184">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a549-184">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showHeaders
  fullName: showHeaders
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showHeaders: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Table.showTotals
  summary: >-
    <span data-ttu-id="4a549-p113">Gibt an, ob die Ergebniszeile sichtbar ist oder nicht. Dieser Wert kann so festgelegt werden, dass die Ergebniszeile angezeigt oder ausgeblendet wird.</span><span class="sxs-lookup"><span data-stu-id="4a549-p113">Indicates whether the total row is visible or not. This value can be set to show or remove the total row.</span></span>


    <span data-ttu-id="4a549-187">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a549-187">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: showTotals
  fullName: showTotals
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showTotals: boolean;'
    return:
      type:
      - boolean
- uid: excel.Excel.Table.sort
  summary: >-
    <span data-ttu-id="4a549-p114">Stellt die Sortierung für die Tabelle dar. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="4a549-p114">Represents the sorting for the table. Read-only.</span></span>


    <span data-ttu-id="4a549-190">\[[API-Satz: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a549-190">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: sort
  fullName: sort
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly sort: Excel.TableSort;'
    return:
      type:
      - excel.Excel.TableSort
- uid: excel.Excel.Table.style
  summary: >-
    <span data-ttu-id="4a549-p115">Konstanter Wert, der das Tabellenformat darstellt. Die folgenden Werte sind möglich: TableStyleLight1 thru TableStyleLight21, TableStyleMedium1 thru TableStyleMedium28, TableStyleStyleDark1 thru TableStyleStyleDark11. Es kann ebenfalls eine in der Arbeitsmappe vorhandene benutzerdefinierte Formatierung angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="4a549-p115">Constant value that represents the Table style. Possible values are: TableStyleLight1 thru TableStyleLight21, TableStyleMedium1 thru TableStyleMedium28, TableStyleStyleDark1 thru TableStyleStyleDark11. A custom user-defined style present in the workbook can also be specified.</span></span>


    <span data-ttu-id="4a549-194">\[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a549-194">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: style
  fullName: style
  langs:
  - typeScript
  type: property
  syntax:
    content: 'style: string;'
    return:
      type:
      - string
- uid: excel.Excel.Table.toJSON
  summary: <span data-ttu-id="4a549-195">Überschreibt das JavaScript `toJSON()` Methode, um nützliche Ausgabe zu gewährleisten, wenn ein API-Objekt zu übergeben ist `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="4a549-195">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="4a549-196">(`JSON.stringify`<!-- -->, wiederum die `toJSON` -Methode des Objekts, das es übergeben wird.) Das ursprüngliche Excel.Table-Objekt ist ein API-Objekt der `toJSON` -Methode gibt eine einfache JavaScript-Objekt zurück (als `Excel.Interfaces.TableData` <!-- -->), die flache Kopien der geladene untergeordnete Eigenschaften aus dem ursprünglichen-Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="4a549-196">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Table object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Excel.Interfaces.TableData;'
    return:
      type:
      - excel.Excel.Interfaces.TableData
      description: ''
- uid: excel.Excel.Table.worksheet
  summary: >-
    <span data-ttu-id="4a549-p117">Das Arbeitsblatt, das die aktuelle Tabelle enthält. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="4a549-p117">The worksheet containing the current table. Read-only.</span></span>


    <span data-ttu-id="4a549-199">\[[API-Satz: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a549-199">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
  name: worksheet
  fullName: worksheet
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly worksheet: Excel.Worksheet;'
    return:
      type:
      - excel.Excel.Worksheet
