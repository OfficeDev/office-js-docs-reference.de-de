### YamlMime:TSType
name: PowerPoint.Tag
uid: powerpoint!PowerPoint.Tag:class
package: powerpoint!
fullName: PowerPoint.Tag
summary: >-
  Stellt ein einzelnes Tag auf der Folie dar.


  \[[API-Satz: PowerPointApi BETA (NUR VORSCHAU)](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
remarks: ''
isPreview: true
isDeprecated: false
type: class
properties:
- name: context
  uid: powerpoint!PowerPoint.Tag#context:member
  package: powerpoint!
  fullName: context
  summary: Der Dem Objekt zugeordnete Anforderungskontext. Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="powerpoint!PowerPoint.RequestContext:class" />
- name: key
  uid: powerpoint!PowerPoint.Tag#key:member
  package: powerpoint!
  fullName: key
  summary: >-
    Ruft die eindeutige ID des Tags ab. Die `key` ist innerhalb des Besitzenden eindeutig und immer als Großbuchstaben innerhalb des Dokuments `TagCollection` gespeichert.


    \[[API-Satz: PowerPointApi BETA (NUR VORSCHAU)](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'readonly key: string;'
    return:
      type: string
- name: value
  uid: powerpoint!PowerPoint.Tag#value:member
  package: powerpoint!
  fullName: value
  summary: >-
    Ruft den Wert des Tags ab.


    \[[API-Satz: PowerPointApi BETA (NUR VORSCHAU)](/office/dev/add-ins/reference/requirement-sets/powerpoint-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'value: string;'
    return:
      type: string
methods:
- name: load(options)
  uid: powerpoint!PowerPoint.Tag#load:member(1)
  package: powerpoint!
  fullName: load(options)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'load(options?: PowerPoint.Interfaces.TagLoadOptions): PowerPoint.Tag;'
    parameters:
    - id: options
      description: Stellt Optionen für die Eigenschaften des zu ladenden Objekts zur Verfügung.
      type: <xref uid="powerpoint!PowerPoint.Interfaces.TagLoadOptions:interface" />
    return:
      type: <xref uid="powerpoint!PowerPoint.Tag:class" />
      description: ''
- name: load(propertyNames)
  uid: powerpoint!PowerPoint.Tag#load:member(2)
  package: powerpoint!
  fullName: load(propertyNames)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): PowerPoint.Tag;'
    parameters:
    - id: propertyNames
      description: Eine durch Trennzeichen getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.
      type: string | string[]
    return:
      type: <xref uid="powerpoint!PowerPoint.Tag:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: powerpoint!PowerPoint.Tag#load:member(3)
  package: powerpoint!
  fullName: load(propertyNamesAndPaths)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): PowerPoint.Tag;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` ist eine durch Trennzeichen getrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und eine durch Kommas getrennte Zeichenfolge, die die zu ladenden `propertyNamesAndPaths.expand` Navigationseigenschaften angibt.'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="powerpoint!PowerPoint.Tag:class" />
      description: ''
- name: toJSON()
  uid: powerpoint!PowerPoint.Tag#toJSON:member(1)
  package: powerpoint!
  fullName: toJSON()
  summary: 'Überschreibt die JavaScript-Methode, um eine nützlichere Ausgabe zu `toJSON()` bieten, wenn ein API-Objekt an übergeben wird `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->ruft wiederum die Methode `toJSON` des Objekts auf, das an das Objekt übergeben wird.) Während das ursprüngliche PowerPoint.Tag-Objekt ein API-Objekt ist, gibt die Methode ein `toJSON` einfaches JavaScript-Objekt zurück (Typ: `PowerPoint.Interfaces.TagData`<!-- -->), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.'
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'toJSON(): PowerPoint.Interfaces.TagData;'
    return:
      type: <xref uid="powerpoint!PowerPoint.Interfaces.TagData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 4047a9d27ac6812a334aeb668adec9601480002f
  ms.sourcegitcommit: a8a86cfcaff5ad7dacc653d63502c76b1fedbebe
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 03/26/2021
  ms.locfileid: "51328376"
