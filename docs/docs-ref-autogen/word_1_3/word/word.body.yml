### YamlMime:TSType
name: Word.Body
uid: word!Word.Body:class
package: word!
fullName: Word.Body
summary: >-
  Steht für den Textkörper eines Dokuments oder Abschnitts.


  \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: contentControls
  uid: word!Word.Body#contentControls:member
  package: word!
  fullName: contentControls
  summary: >-
    Ruft die Auflistung der Rich-Text-Inhaltssteuerelemente im Textkörper ab. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly contentControls: Word.ContentControlCollection;'
    return:
      type: <xref uid="word!Word.ContentControlCollection:class" />
- name: context
  uid: word!Word.Body#context:member
  package: word!
  fullName: context
  summary: Der Anforderungskontext, der mit dem Objekt verknüpft ist. Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="word!Word.RequestContext:class" />
- name: font
  uid: word!Word.Body#font:member
  package: word!
  fullName: font
  summary: >-
    Ruft das Textformat des Textkörpers ab. Verwenden Sie diese Eigenschaft, um Schriftartnamen,-Größe,-Farbe und andere Eigenschaften abzurufen und festzulegen. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly font: Word.Font;'
    return:
      type: <xref uid="word!Word.Font:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Get the style and the font size, font name, and font color properties on the body object.\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a command to load font and style information for the document body.\n    context.load(body, 'font/size, font/name, font/color, style');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        // Show the results of the load method. Here we show the\n        // property values on the body object.\n        var results = 'Font size: ' + body.font.size +\n                      '; Font name: ' + body.font.name +\n                      '; Font color: ' + body.font.color +\n                      '; Body style: ' + body.style;\n\n        console.log(results);\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: inlinePictures
  uid: word!Word.Body#inlinePictures:member
  package: word!
  fullName: inlinePictures
  summary: >-
    Ruft die Auflistung der Inline Picture-Objekte im Textkörper ab. Die Sammlung enthält keinen schwebenden Bilder. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly inlinePictures: Word.InlinePictureCollection;'
    return:
      type: <xref uid="word!Word.InlinePictureCollection:class" />
- name: lists
  uid: word!Word.Body#lists:member
  package: word!
  fullName: lists
  summary: >-
    Ruft die Sammlung von Listenobjekten im Textkörper ab. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly lists: Word.ListCollection;'
    return:
      type: <xref uid="word!Word.ListCollection:class" />
- name: paragraphs
  uid: word!Word.Body#paragraphs:member
  package: word!
  fullName: paragraphs
  summary: >-
    Ruft die Auflistung von Paragraph-Objekten im Textkörper ab. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly paragraphs: Word.ParagraphCollection;'
    return:
      type: <xref uid="word!Word.ParagraphCollection:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/25-paragraph/get-word-count.yaml\nawait Word.run(async (context) => {\n  let paragraphs = context.document.body.paragraphs;\n  paragraphs.load(\"text\");\n  await context.sync();\n\n  let text = [];\n  paragraphs.items.forEach((item) => {\n    let paragraph = item.text.trim();\n    if (paragraph) {\n      paragraph.split(\" \").forEach((term) => {\n        let currentTerm = term.trim();\n        if (currentTerm) {\n          text.push(currentTerm);\n        }\n      });\n    }\n  });\n\n  let makeTextDistinct = new Set(text);\n  let distinctText = Array.from(makeTextDistinct);\n  let allSearchResults = [];\n\n  for (let i = 0; i < distinctText.length; i++) {\n    let results = context.document.body.search(distinctText[i], { matchCase: true, matchWholeWord: true });\n    results.load(\"text\");\n\n    // Map search term with its results.\n    let correlatedResults = {\n      searchTerm: distinctText[i],\n      hits: results\n    };\n\n    allSearchResults.push(correlatedResults);\n  }\n\n  await context.sync();\n\n  // Display counts.\n  allSearchResults.forEach((result) => {\n    let length = result.hits.items.length;\n\n    console.log(\"Search term: \" + result.searchTerm + \" => Count: \" + length);\n  });\n});\n```"
- name: parentBody
  uid: word!Word.Body#parentBody:member
  package: word!
  fullName: parentBody
  summary: >-
    Ruft den übergeordneten Text des Texts ab. Beispielsweise könnte der übergeordnete Text des Texts einer Tabellenzelle ein Header sein. Löst einen Fehler aus, wenn kein übergeordneter Textkörper vorhanden ist. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentBody: Word.Body;'
    return:
      type: <xref uid="word!Word.Body:class" />
- name: parentBodyOrNullObject
  uid: word!Word.Body#parentBodyOrNullObject:member
  package: word!
  fullName: parentBodyOrNullObject
  summary: >-
    Ruft den übergeordneten Textkörper des Textkörpers ab. Beispielsweise kann der übergeordnete Textkörper des Textkörpers einer Tabellenzelle ein Header sein. Gibt ein NULL-Objekt zurück, wenn kein übergeordneter Textkörper vorhanden ist. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentBodyOrNullObject: Word.Body;'
    return:
      type: <xref uid="word!Word.Body:class" />
- name: parentContentControl
  uid: word!Word.Body#parentContentControl:member
  package: word!
  fullName: parentContentControl
  summary: >-
    Ruft das Inhaltssteuerelement ab, das den Textkörper enthält. Löst einen Fehler aus, wenn kein übergeordnetes Inhaltssteuerelement vorhanden ist. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentContentControl: Word.ContentControl;'
    return:
      type: <xref uid="word!Word.ContentControl:class" />
- name: parentContentControlOrNullObject
  uid: word!Word.Body#parentContentControlOrNullObject:member
  package: word!
  fullName: parentContentControlOrNullObject
  summary: >-
    Ruft das Inhaltssteuerelement ab, das den Textkörper enthält. Gibt ein NULL-Objekt zurück, wenn kein übergeordnetes Inhaltssteuerelement vorhanden ist. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentContentControlOrNullObject: Word.ContentControl;'
    return:
      type: <xref uid="word!Word.ContentControl:class" />
- name: parentSection
  uid: word!Word.Body#parentSection:member
  package: word!
  fullName: parentSection
  summary: >-
    Ruft den übergeordneten Abschnitt des Texts ab. Löst einen Fehler aus, wenn kein übergeordneter Abschnitt vorhanden ist. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentSection: Word.Section;'
    return:
      type: <xref uid="word!Word.Section:class" />
- name: parentSectionOrNullObject
  uid: word!Word.Body#parentSectionOrNullObject:member
  package: word!
  fullName: parentSectionOrNullObject
  summary: >-
    Ruft den übergeordneten Abschnitt des Texts ab. Gibt ein NULL-Objekt zurück, wenn kein übergeordneter Abschnitt vorhanden ist. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentSectionOrNullObject: Word.Section;'
    return:
      type: <xref uid="word!Word.Section:class" />
- name: style
  uid: word!Word.Body#style:member
  package: word!
  fullName: style
  summary: >-
    Ruft den Namen der Formatvorlage für den Textkörper ab oder legt ihn fest. Verwenden Sie diese Eigenschaft für benutzerdefinierte Formatvorlagen und lokalisierte Formatvorlagennamen. Informationen zur Verwendung der integrierten Formatvorlagen, die zwischen Gebietsschemas portabel sind, finden Sie unter der Eigenschaft „styleBuiltIn“.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'style: string;'
    return:
      type: string
- name: styleBuiltIn
  uid: word!Word.Body#styleBuiltIn:member
  package: word!
  fullName: styleBuiltIn
  summary: >-
    Ruft den Namen der integrierten Formatvorlage für den Text ab oder legt ihn fest. Verwenden Sie diese Eigenschaft für integrierte Formatvorlagen, die zwischen Gebietsschemas portabel sind. Informationen zum Verwenden benutzerdefinierter Formatvorlagen oder lokalisierter Namen finden Sie unter der Eigenschaft "style".


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'styleBuiltIn: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";'
    return:
      type: <xref uid="word!Word.Style:enum" /> | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"
- name: tables
  uid: word!Word.Body#tables:member
  package: word!
  fullName: tables
  summary: >-
    Ruft die Sammlung von Tabellenobjekten im Text ab. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly tables: Word.TableCollection;'
    return:
      type: <xref uid="word!Word.TableCollection:class" />
- name: text
  uid: word!Word.Body#text:member
  package: word!
  fullName: text
  summary: >-
    Ruft den Textkörper ab. Verwenden Sie die InsertText-Methode zum Einfügen von Text. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly text: string;'
    return:
      type: string
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Get the text property on the body object\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a command to load the text in document body.\n    context.load(body, 'text');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log(\"Body contents: \" + body.text);\n    });\n})\n.catch(function (error) {\n    console.log(\"Error: \" + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: type
  uid: word!Word.Body#type:member
  package: word!
  fullName: type
  summary: >-
    Ruft den Typ des Texts ab. Der Typ kann "MainDoc", "Section", "Header", "Footer" oder "TableCell" sein. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly type: Word.BodyType | "Unknown" | "MainDoc" | "Section" | "Header" | "Footer" | "TableCell";'
    return:
      type: <xref uid="word!Word.BodyType:enum" /> | "Unknown" | "MainDoc" | "Section" | "Header" | "Footer" | "TableCell"
methods:
- name: clear()
  uid: word!Word.Body#clear:member(1)
  package: word!
  fullName: clear()
  summary: >-
    Löscht den Inhalt des Body-Objekts. Der Benutzer kann den Rückgängig-Vorgang auf den gelöschten Inhalt durchführen.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'clear(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a command to clear the contents of the body.\n    body.clear();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Cleared the body contents.');\n    });\n})\n.catch(function (error) {\n    console.log(\"Error: \" + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n\n// The Silly stories add-in sample shows how the \n// clear method can be used to clear the contents of a document.\n// https://aka.ms/sillystorywordaddin\n```"
- name: getHtml()
  uid: word!Word.Body#getHtml:member(1)
  package: word!
  fullName: getHtml()
  summary: >-
    Ruft eine HTML-Darstellung des Body-Objekts ab. Wenn die Formatierung in einer Webseite oder einem HTML-Viewer gerendert wird, entspricht Sie der Formatierung des Dokuments, ist jedoch nicht genau. Diese Methode gibt nicht exakt denselben HTML-Code für dasselbe Dokument auf unterschiedlichen Plattformen (Windows, Mac, Word im Internet usw.) zurück. Wenn Sie exakte Genauigkeit oder Konsistenz plattformübergreifend benötigen, verwenden `Body.getOoxml()` und konvertieren Sie den zurückgegebenen XML-Code in HTML.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getHtml(): OfficeExtension.ClientResult<string>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string&gt;
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a command to get the HTML contents of the body.\n    var bodyHTML = body.getHtml();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log(\"Body HTML contents: \" + bodyHTML.value);\n    });\n})\n.catch(function (error) {\n    console.log(\"Error: \" + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getOoxml()
  uid: word!Word.Body#getOoxml:member(1)
  package: word!
  fullName: getOoxml()
  summary: >-
    Ruft die OOXML (Office Open XML)-Darstellung des Body-Objekts ab.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string&gt;
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a command to get the OOXML contents of the body.\n    var bodyOOXML = body.getOoxml();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log(\"Body OOXML contents: \" + bodyOOXML.value);\n    });\n})\n.catch(function (error) {\n    console.log(\"Error: \" + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getRange(rangeLocation)
  uid: word!Word.Body#getRange:member(1)
  package: word!
  fullName: getRange(rangeLocation)
  summary: >-
    Ruft den gesamten Text oder den Start- bzw. Endpunkt des Textkörpers als Bereich ab.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRange(rangeLocation?: Word.RangeLocation): Word.Range;'
    parameters:
    - id: rangeLocation
      description: Optional. Die Bereichsposition kann "Whole", "Start", "End", "After" oder "Content" lauten.
      type: <xref uid="word!Word.RangeLocation:enum" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: getRange(rangeLocationString)
  uid: word!Word.Body#getRange:member(2)
  package: word!
  fullName: getRange(rangeLocationString)
  summary: >-
    Ruft den gesamten Text oder den Start- bzw. Endpunkt des Textkörpers als Bereich ab.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRange(rangeLocationString?: "Whole" | "Start" | "End" | "Before" | "After" | "Content"): Word.Range;'
    parameters:
    - id: rangeLocationString
      description: Optional. Die Bereichsposition kann "Whole", "Start", "End", "After" oder "Content" lauten.
      type: "\"Whole\" | \"Start\" | \"End\" | \"Before\" | \"After\" | \"Content\""
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: insertBreak(breakType, insertLocation)
  uid: word!Word.Body#insertBreak:member(1)
  package: word!
  fullName: insertBreak(breakType, insertLocation)
  summary: >-
    Fügt an der angegebenen Position im Hauptdokument einen Umbruch ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
    parameters:
    - id: breakType
      description: Erforderlich. Der Typ des zum Textkörper hinzuzufügenden Umbruchs.
      type: <xref uid="word!Word.BreakType:enum" />
    - id: insertLocation
      description: Erforderlich. Der Wert kann „Start“ oder „End“ lauten.
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (ctx) {\n\n    // Create a proxy object for the document body.\n    var body = ctx.document.body;\n\n    // Queue a command to insert a page break at the start of the document body.\n    body.insertBreak(Word.BreakType.page, Word.InsertLocation.start);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        console.log('Added a page break at the start of the document body.');\n    });\n})\n.catch(function (error) {\n    console.log(\"Error: \" + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertBreak(breakTypeString, insertLocation)
  uid: word!Word.Body#insertBreak:member(2)
  package: word!
  fullName: insertBreak(breakTypeString, insertLocation)
  summary: >-
    Fügt an der angegebenen Position im Hauptdokument einen Umbruch ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
    parameters:
    - id: breakTypeString
      description: Erforderlich. Der Typ des zum Textkörper hinzuzufügenden Umbruchs.
      type: "\"Page\" | \"Next\" | \"SectionNext\" | \"SectionContinuous\" | \"SectionEven\" | \"SectionOdd\" | \"Line\""
    - id: insertLocation
      description: Erforderlich. Der Wert kann „Start“ oder „End“ lauten.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: void
      description: ''
- name: insertContentControl()
  uid: word!Word.Body#insertContentControl:member(1)
  package: word!
  fullName: insertContentControl()
  summary: >-
    Umschließt das Body-Objekt mit einem Rich-Text-Inhaltssteuerelement.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertContentControl(): Word.ContentControl;'
    return:
      type: <xref uid="word!Word.ContentControl:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a command to wrap the body in a content control.\n    body.insertContentControl();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Wrapped the body in a content control.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertFileFromBase64(base64File, insertLocation)
  uid: word!Word.Body#insertFileFromBase64:member(1)
  package: word!
  fullName: insertFileFromBase64(base64File, insertLocation)
  summary: >-
    Fügt in den Textkörper an der angegebenen Position ein Dokument ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
    parameters:
    - id: base64File
      description: Erforderlich. Der Base64-codierte Inhalt einer DOCX-Datei.
      type: string
    - id: insertLocation
      description: Erforderlich. Der Wert kann „Replace“, „Start“ oder „End“ lauten.
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a command to insert base64 encoded .docx at the beginning of the content body.\n    // You will need to implement getBase64() to pass in a string of a base64 encoded docx file.\n    body.insertFileFromBase64(getBase64(), Word.InsertLocation.start);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Added base64 encoded text to the beginning of the document body.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertFileFromBase64(base64File, insertLocationString)
  uid: word!Word.Body#insertFileFromBase64:member(2)
  package: word!
  fullName: insertFileFromBase64(base64File, insertLocationString)
  summary: >-
    Fügt in den Textkörper an der angegebenen Position ein Dokument ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    parameters:
    - id: base64File
      description: Erforderlich. Der Base64-codierte Inhalt einer DOCX-Datei.
      type: string
    - id: insertLocationString
      description: Erforderlich. Der Wert kann „Replace“, „Start“ oder „End“ lauten.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: insertHtml(html, insertLocation)
  uid: word!Word.Body#insertHtml:member(1)
  package: word!
  fullName: insertHtml(html, insertLocation)
  summary: >-
    Fügt an der angegebenen Position HTML-Code ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
    parameters:
    - id: html
      description: Erforderlich. Der in das Dokument einzufügende HTML-Code.
      type: string
    - id: insertLocation
      description: Erforderlich. Der Wert kann „Replace“, „Start“ oder „End“ lauten.
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a command to insert HTML in to the beginning of the body.\n    body.insertHtml(\n        '<strong>This is text inserted with body.insertHtml()</strong>', Word.InsertLocation.start);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('HTML added to the beginning of the document body.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertHtml(html, insertLocationString)
  uid: word!Word.Body#insertHtml:member(2)
  package: word!
  fullName: insertHtml(html, insertLocationString)
  summary: >-
    Fügt an der angegebenen Position HTML-Code ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    parameters:
    - id: html
      description: Erforderlich. Der in das Dokument einzufügende HTML-Code.
      type: string
    - id: insertLocationString
      description: Erforderlich. Der Wert kann „Replace“, „Start“ oder „End“ lauten.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: insertInlinePictureFromBase64(base64EncodedImage, insertLocation)
  uid: word!Word.Body#insertInlinePictureFromBase64:member(1)
  package: word!
  fullName: insertInlinePictureFromBase64(base64EncodedImage, insertLocation)
  summary: >-
    Fügt in den Textkörper an der angegebenen Position ein Bild ein.


    \[[API-Gruppe: WordApi 1,2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
    parameters:
    - id: base64EncodedImage
      description: Erforderlich. Das base64-codierte Bild, das in den Textkörper eingefügt werden soll.
      type: string
    - id: insertLocation
      description: Erforderlich. Der Wert kann „Start“ oder „End“ lauten.
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.InlinePicture:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a command to insert OOXML in to the beginning of the body.\n    body.insertOoxml(\"<pkg:package xmlns:pkg='http://schemas.microsoft.com/office/2006/xmlPackage'><pkg:part pkg:name='/_rels/.rels' pkg:contentType='application/vnd.openxmlformats-package.relationships+xml' pkg:padding='512'><pkg:xmlData><Relationships xmlns='http://schemas.openxmlformats.org/package/2006/relationships'><Relationship Id='rId1' Type='http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument' Target='word/document.xml'/></Relationships></pkg:xmlData></pkg:part><pkg:part pkg:name='/word/document.xml' pkg:contentType='application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml'><pkg:xmlData><w:document xmlns:w='http://schemas.openxmlformats.org/wordprocessingml/2006/main' ><w:body><w:p><w:pPr><w:spacing w:before='360' w:after='0' w:line='480' w:lineRule='auto'/><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr></w:pPr><w:r><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr><w:t>This text has formatting directly applied to achieve its font size, color, line spacing, and paragraph spacing.</w:t></w:r></w:p></w:body></w:document></pkg:xmlData></pkg:part></pkg:package>\", Word.InsertLocation.start);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('OOXML added to the beginning of the document body.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n\n// Read \"Create better add-ins for Word with Office Open XML\" for guidance on working with OOXML.\n// https://docs.microsoft.com/office/dev/add-ins/word/create-better-add-ins-for-word-with-office-open-xml\n\n// The Word-Add-in-DocumentAssembly sample shows how you can use this API to assemble a document.\n// https://github.com/OfficeDev/Word-Add-in-DocumentAssembly\n```"
- name: insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)
  uid: word!Word.Body#insertInlinePictureFromBase64:member(2)
  package: word!
  fullName: insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)
  summary: >-
    Fügt in den Textkörper an der angegebenen Position ein Bild ein.


    \[[API-Gruppe: WordApi 1,2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.InlinePicture;'
    parameters:
    - id: base64EncodedImage
      description: Erforderlich. Das base64-codierte Bild, das in den Textkörper eingefügt werden soll.
      type: string
    - id: insertLocationString
      description: Erforderlich. Der Wert kann „Start“ oder „End“ lauten.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.InlinePicture:class" />
      description: ''
- name: insertOoxml(ooxml, insertLocation)
  uid: word!Word.Body#insertOoxml:member(1)
  package: word!
  fullName: insertOoxml(ooxml, insertLocation)
  summary: >-
    Fügt an der angegebenen Position OOXML-Code ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
    parameters:
    - id: ooxml
      description: Erforderlich. Der einzufügende OOXML-Code.
      type: string
    - id: insertLocation
      description: Erforderlich. Der Wert kann „Replace“, „Start“ oder „End“ lauten.
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: insertOoxml(ooxml, insertLocationString)
  uid: word!Word.Body#insertOoxml:member(2)
  package: word!
  fullName: insertOoxml(ooxml, insertLocationString)
  summary: >-
    Fügt an der angegebenen Position OOXML-Code ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    parameters:
    - id: ooxml
      description: Erforderlich. Der einzufügende OOXML-Code.
      type: string
    - id: insertLocationString
      description: Erforderlich. Der Wert kann „Replace“, „Start“ oder „End“ lauten.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: insertParagraph(paragraphText, insertLocation)
  uid: word!Word.Body#insertParagraph:member(1)
  package: word!
  fullName: insertParagraph(paragraphText, insertLocation)
  summary: >-
    Fügt an der angegebenen Position einen Absatz ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
    parameters:
    - id: paragraphText
      description: Erforderlich. Der einzufügende Absatztext.
      type: string
    - id: insertLocation
      description: Erforderlich. Der Wert kann „Start“ oder „End“ lauten.
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Paragraph:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a command to insert the paragraph at the end of the document body.\n    body.insertParagraph('Content of a new paragraph', Word.InsertLocation.end);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Paragraph added at the end of the document body.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n\n// The Word-Add-in-DocumentAssembly sample shows how you can use the insertParagraph method to assemble a document.\n// https://github.com/OfficeDev/Word-Add-in-DocumentAssembly\n```"
- name: insertParagraph(paragraphText, insertLocationString)
  uid: word!Word.Body#insertParagraph:member(2)
  package: word!
  fullName: insertParagraph(paragraphText, insertLocationString)
  summary: >-
    Fügt an der angegebenen Position einen Absatz ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
    parameters:
    - id: paragraphText
      description: Erforderlich. Der einzufügende Absatztext.
      type: string
    - id: insertLocationString
      description: Erforderlich. Der Wert kann „Start“ oder „End“ lauten.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Paragraph:class" />
      description: ''
- name: insertTable(rowCount, columnCount, insertLocation, values)
  uid: word!Word.Body#insertTable:member(1)
  package: word!
  fullName: insertTable(rowCount, columnCount, insertLocation, values)
  summary: >-
    Fügt eine Tabelle mit der angegebenen Anzahl von Zeilen und Spalten ein.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertTable(rowCount: number, columnCount: number, insertLocation: Word.InsertLocation, values?: string[][]): Word.Table;'
    parameters:
    - id: rowCount
      description: Erforderlich. Die Anzahl der Zeilen in der Tabelle.
      type: number
    - id: columnCount
      description: Erforderlich. Die Anzahl der Spalten in der Tabelle.
      type: number
    - id: insertLocation
      description: Erforderlich. Der Wert kann „Start“ oder „End“ lauten.
      type: <xref uid="word!Word.InsertLocation:enum" />
    - id: values
      description: Optionales 2D-Array. Wenn die entsprechenden Zeichenfolgen im Array angegeben sind, werden die Zellen gefüllt.
      type: string[][]
    return:
      type: <xref uid="word!Word.Table:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/40-tables/table-cell-access.yaml\nawait Word.run(async (context) => {\n  // Use a two-dimensional array to hold the initial table values.\n  let data = [\n    [\"Tokyo\", \"Beijing\", \"Seattle\"],\n    [\"Apple\", \"Orange\", \"Pineapple\"]\n  ];\n  let table = context.document.body.insertTable(2, 3, \"Start\", data);\n  table.styleBuiltIn = Word.Style.gridTable5Dark_Accent2;\n  table.styleFirstColumn = false;\n\n  await context.sync();\n});\n```"
- name: insertTable(rowCount, columnCount, insertLocationString, values)
  uid: word!Word.Body#insertTable:member(2)
  package: word!
  fullName: insertTable(rowCount, columnCount, insertLocationString, values)
  summary: >-
    Fügt eine Tabelle mit der angegebenen Anzahl von Zeilen und Spalten ein.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertTable(rowCount: number, columnCount: number, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace", values?: string[][]): Word.Table;'
    parameters:
    - id: rowCount
      description: Erforderlich. Die Anzahl der Zeilen in der Tabelle.
      type: number
    - id: columnCount
      description: Erforderlich. Die Anzahl der Spalten in der Tabelle.
      type: number
    - id: insertLocationString
      description: Erforderlich. Der Wert kann „Start“ oder „End“ lauten.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    - id: values
      description: Optionales 2D-Array. Wenn die entsprechenden Zeichenfolgen im Array angegeben sind, werden die Zellen gefüllt.
      type: string[][]
    return:
      type: <xref uid="word!Word.Table:class" />
      description: ''
- name: insertText(text, insertLocation)
  uid: word!Word.Body#insertText:member(1)
  package: word!
  fullName: insertText(text, insertLocation)
  summary: >-
    Fügt in den Textkörper an der angegebenen Position Text ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
    parameters:
    - id: text
      description: Erforderlich. Der einzufügende Text.
      type: string
    - id: insertLocation
      description: Erforderlich. Der Wert kann „Replace“, „Start“ oder „End“ lauten.
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a command to insert text in to the beginning of the body.\n    body.insertText('This is text inserted with body.insertText()', Word.InsertLocation.start);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Text added to the beginning of the document body.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertText(text, insertLocationString)
  uid: word!Word.Body#insertText:member(2)
  package: word!
  fullName: insertText(text, insertLocationString)
  summary: >-
    Fügt in den Textkörper an der angegebenen Position Text ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    parameters:
    - id: text
      description: Erforderlich. Der einzufügende Text.
      type: string
    - id: insertLocationString
      description: Erforderlich. Der Wert kann „Replace“, „Start“ oder „End“ lauten.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: load(options)
  uid: word!Word.Body#load:member(1)
  package: word!
  fullName: load(options)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Word.Interfaces.BodyLoadOptions): Word.Body;'
    parameters:
    - id: options
      description: Enthält Optionen für die Eigenschaften des zu ladenden Objekts.
      type: <xref uid="word!Word.Interfaces.BodyLoadOptions:interface" />
    return:
      type: <xref uid="word!Word.Body:class" />
      description: ''
- name: load(propertyNames)
  uid: word!Word.Body#load:member(2)
  package: word!
  fullName: load(propertyNames)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Word.Body;'
    parameters:
    - id: propertyNames
      description: Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.
      type: string | string[]
    return:
      type: <xref uid="word!Word.Body:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: word!Word.Body#load:member(3)
  package: word!
  fullName: load(propertyNamesAndPaths)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Word.Body;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und `propertyNamesAndPaths.expand` ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="word!Word.Body:class" />
      description: ''
- name: search(searchText, searchOptions)
  uid: word!Word.Body#search:member(1)
  package: word!
  fullName: search(searchText, searchOptions)
  summary: >-
    Führt eine Suche mit den angegebenen SearchOptions für den Bereich des Body-Objekts aus. Die Suchergebnisse sind eine Sammlung von Bereichsobjekten.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      search(searchText: string, searchOptions?: Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }): Word.RangeCollection;
    parameters:
    - id: searchText
      description: Erforderlich. Der Suchtext. Kann maximal 255 Zeichen lang sein.
      type: string
    - id: searchOptions
      description: Optional. Optionen für die Suche.
      type: >-
        <xref uid="word!Word.SearchOptions:class" /> | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }
    return:
      type: <xref uid="word!Word.RangeCollection:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/25-paragraph/search.yaml\nawait Word.run(async (context) => {\n  let results = context.document.body.search(\"Online\");\n  results.load(\"length\");\n\n  await context.sync();\n\n  // Let's traverse the search results... and highlight...\n  for (let i = 0; i < results.items.length; i++) {\n    results.items[i].font.highlightColor = \"yellow\";\n  }\n\n  await context.sync();\n});\n```\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/25-paragraph/search.yaml\nawait Word.run(async (context) => {\n  // Check out how wildcard expression are built, also use the second parameter of the search method to include search modes\n  // (i.e. use wildcards).\n  let results = context.document.body.search(\"$*.[0-9][0-9]\", { matchWildcards: true });\n  results.load(\"length\");\n\n  await context.sync();\n\n  // Let's traverse the search results... and highlight...\n  for (let i = 0; i < results.items.length; i++) {\n    results.items[i].font.highlightColor = \"red\";\n    results.items[i].font.color = \"white\";\n  }\n\n  await context.sync();\n});\n```\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/25-paragraph/get-word-count.yaml\nawait Word.run(async (context) => {\n  let paragraphs = context.document.body.paragraphs;\n  paragraphs.load(\"text\");\n  await context.sync();\n\n  let text = [];\n  paragraphs.items.forEach((item) => {\n    let paragraph = item.text.trim();\n    if (paragraph) {\n      paragraph.split(\" \").forEach((term) => {\n        let currentTerm = term.trim();\n        if (currentTerm) {\n          text.push(currentTerm);\n        }\n      });\n    }\n  });\n\n  let makeTextDistinct = new Set(text);\n  let distinctText = Array.from(makeTextDistinct);\n  let allSearchResults = [];\n\n  for (let i = 0; i < distinctText.length; i++) {\n    let results = context.document.body.search(distinctText[i], { matchCase: true, matchWholeWord: true });\n    results.load(\"text\");\n\n    // Map search term with its results.\n    let correlatedResults = {\n      searchTerm: distinctText[i],\n      hits: results\n    };\n\n    allSearchResults.push(correlatedResults);\n  }\n\n  await context.sync();\n\n  // Display counts.\n  allSearchResults.forEach((result) => {\n    let length = result.hits.items.length;\n\n    console.log(\"Search term: \" + result.searchTerm + \" => Count: \" + length);\n  });\n});\n```"
- name: select(selectionMode)
  uid: word!Word.Body#select:member(1)
  package: word!
  fullName: select(selectionMode)
  summary: >-
    Wählt den Textkörper und navigiert die Word-Benutzeroberfläche an diese Position.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'select(selectionMode?: Word.SelectionMode): void;'
    parameters:
    - id: selectionMode
      description: Optional. Der Auswahlmodus kann „Select“, „Start“ oder „End“ sein. „Select“ ist die Standardeinstellung.
      type: <xref uid="word!Word.SelectionMode:enum" />
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the document body.\n    var body = context.document.body;\n\n    // Queue a command to select the document body. The Word UI will\n    // move to the selected document body.\n    body.select();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Selected the document body.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: select(selectionModeString)
  uid: word!Word.Body#select:member(2)
  package: word!
  fullName: select(selectionModeString)
  summary: >-
    Wählt den Textkörper und navigiert die Word-Benutzeroberfläche an diese Position.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
    parameters:
    - id: selectionModeString
      description: Optional. Der Auswahlmodus kann „Select“, „Start“ oder „End“ sein. „Select“ ist die Standardeinstellung.
      type: "\"Select\" | \"Start\" | \"End\""
    return:
      type: void
      description: ''
- name: set(properties, options)
  uid: word!Word.Body#set:member(1)
  package: word!
  fullName: set(properties, options)
  summary: Legt mehrere Eigenschaften eines Objekts gleichzeitig fest. Sie können entweder ein einfaches Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs übergeben.
  remarks: >-
    Diese Methode hat die folgende zusätzliche Signatur:


    `set(properties: Word.Body): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.BodyUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: Ein JavaScript-Objekt mit Eigenschaften, die isomorphically für die Eigenschaften des Objekts strukturiert sind, für das die Methode aufgerufen wird.
      type: <xref uid="word!Word.Interfaces.BodyUpdateData:interface" />
    - id: options
      description: Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: word!Word.Body#set:member(2)
  package: word!
  fullName: set(properties)
  summary: Legt mehrere Eigenschaften für das Objekt gleichzeitig basierend auf einem vorhandenen geladenen Objekt fest.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Word.Body): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="word!Word.Body:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: word!Word.Body#toJSON:member(1)
  package: word!
  fullName: toJSON()
  summary: Überschreibt die JavaScript `toJSON()` -Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird. `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche Word. Body-Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt (typisiert als `Word.Interfaces.BodyData`<!-- -->), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Word.Interfaces.BodyData;'
    return:
      type: <xref uid="word!Word.Interfaces.BodyData:interface" />
      description: ''
- name: track()
  uid: word!Word.Body#track:member(1)
  package: word!
  fullName: track()
  summary: Nachverfolgung des Objekts zwecks automatischer Anpassung auf der Grundlage der umgebenden Änderungen im Dokument. Dieser Aufruf ist eine Kurzform für `context.trackedObjects.add(thisObject)`<!-- -->. Wenn Sie dieses Objekt für `.sync` Aufrufe und außerhalb der sequenziellen Ausführung eines ". Run"-Batches verwenden und beim Festlegen einer Eigenschaft oder beim Aufrufen einer Methode für das Objekt einen "InvalidObjectPath"-Fehler erhalten, mussten Sie das Objekt der nachverfolgten Objektauflistung hinzugefügt haben, als das Objekt zum ersten Mal erstellt wurde.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'track(): Word.Body;'
    return:
      type: <xref uid="word!Word.Body:class" />
      description: ''
- name: untrack()
  uid: word!Word.Body#untrack:member(1)
  package: word!
  fullName: untrack()
  summary: Gibt den diesem Objekt zugewiesenen Arbeitsspeicher frei, wenn das Objekt zuvor nachverfolgt wurde. Bei diesem Aufruf handelt es sich um eine Kurzform `context.trackedObjects.remove(thisObject)`<!-- -->. Viele nachverfolgte Objekte verlangsamen die Ausführung der Hostanwendung, also achten Sie darauf, alle hinzugefügten Objekte nach abgeschlossener Verwendung freizugeben. Sie müssen anrufen, `context.sync()` bevor die Speicherfreigabe wirksam wird.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'untrack(): Word.Body;'
    return:
      type: <xref uid="word!Word.Body:class" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 5a72da3bb14324fc4ede0034731b79534126b532
  ms.sourcegitcommit: 551d760f6b9e7ff22afdaf6ce8e0b2863946596d
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 12/04/2020
  ms.locfileid: "49570158"
