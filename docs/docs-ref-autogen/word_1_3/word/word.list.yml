### YamlMime:UniversalReference
items:
  - uid: word.Word.List
    summary: |-
      Enthält eine Auflistung von [Word. Paragraph](xref:word.Word.Paragraph) -Objekten.

      \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: Word.List
    fullName: Word.List
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: word
    children:
      - word.Word.List.context
      - word.Word.List.getLevelParagraphs
      - word.Word.List.getLevelString
      - word.Word.List.id
      - word.Word.List.insertParagraph
      - word.Word.List.insertParagraph_1
      - word.Word.List.levelExistences
      - word.Word.List.levelTypes
      - word.Word.List.load
      - word.Word.List.load_1
      - word.Word.List.load_2
      - word.Word.List.paragraphs
      - word.Word.List.setLevelAlignment
      - word.Word.List.setLevelAlignment_1
      - word.Word.List.setLevelBullet
      - word.Word.List.setLevelBullet_1
      - word.Word.List.setLevelIndents
      - word.Word.List.setLevelNumbering
      - word.Word.List.setLevelNumbering_1
      - word.Word.List.setLevelStartingNumber
      - word.Word.List.toJSON
      - word.Word.List.track
      - word.Word.List.untrack
  - uid: word.Word.List.context
    summary: 'Der Anforderungskontext, der mit dem Objekt verknüpft ist. Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - word.Word.RequestContext
  - uid: word.Word.List.getLevelParagraphs
    summary: |-
      Ruft die Absätze auf der angegebenen Ebene in der Liste ab.

      \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: getLevelParagraphs(level)
    fullName: getLevelParagraphs(level)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLevelParagraphs(level: number): Word.ParagraphCollection;'
      return:
        type:
          - word.Word.ParagraphCollection
        description: ''
      parameters:
        - id: level
          description: Erforderlich. Die Ebene in der Liste.
          type:
            - number
  - uid: word.Word.List.getLevelString
    summary: |-
      Ruft das Aufzählungszeichen, die Zahl oder das Bild auf der angegebenen Ebene als Zeichenfolge ab.

      \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: getLevelString(level)
    fullName: getLevelString(level)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getLevelString(level: number): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: ''
      parameters:
        - id: level
          description: Erforderlich. Die Ebene in der Liste.
          type:
            - number
  - uid: word.Word.List.id
    summary: |-
      Ruft die ID der Liste ab.

      \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: number;'
      return:
        type:
          - number
  - uid: word.Word.List.insertParagraph
    summary: |-
      Fügt an der angegebenen Position einen Absatz ein. Der insertLocation-Wert kann "Start", "End", "Before" oder "After" lauten.

      \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
      return:
        type:
          - word.Word.Paragraph
        description: ''
      parameters:
        - id: paragraphText
          description: Erforderlich. Der einzufügende Absatztext.
          type:
            - string
        - id: insertLocation
          description: 'Erforderlich. Der Wert kann "Start", "End", "Before" oder "After" lauten.'
          type:
            - word.Word.InsertLocation
  - uid: word.Word.List.insertParagraph_1
    summary: |-
      Fügt an der angegebenen Position einen Absatz ein. Der insertLocation-Wert kann "Start", "End", "Before" oder "After" lauten.

      \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'insertParagraph(paragraphText, insertLocationString)'
    fullName: 'insertParagraph(paragraphText, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
      return:
        type:
          - word.Word.Paragraph
        description: ''
      parameters:
        - id: paragraphText
          description: Erforderlich. Der einzufügende Absatztext.
          type:
            - string
        - id: insertLocationString
          description: 'Erforderlich. Der Wert kann "Start", "End", "Before" oder "After" lauten.'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.List.levelExistences
    summary: |-
      Überprüft, ob jede der 9 Ebenen in der Liste vorhanden ist. Der Wert true gibt an, dass die Ebene vorhanden ist, was bedeutet, dass mindestens ein Listenelement auf dieser Ebene vorhanden ist. Schreibgeschützt.

      \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: levelExistences
    fullName: levelExistences
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly levelExistences: boolean[];'
      return:
        type:
          - 'boolean[]'
  - uid: word.Word.List.levelTypes
    summary: |-
      Ruft die Typen aller 9 Ebenen in der Liste ab. Jeder Typ kann "Aufzählungszeichen", "Zahl" oder "Bild" sein. Schreibgeschützt.

      \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: levelTypes
    fullName: levelTypes
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly levelTypes: Word.ListLevelType[];'
      return:
        type:
          - 'Word.ListLevelType[]'
  - uid: word.Word.List.load
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.
    remarks: |-
      Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:

      `load(option?: string | string[]): Word.List`-Wobei Option eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.

      `load(option?: { select?: string; expand?: string; }): Word.List`-Bei Option. Select handelt es sich um eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.List`Nur verfügbar für Sammlungstypen. Sie ähnelt der vorherigen Signatur. Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis einbezogen werden können. Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind. Wenn Option. Top angegeben ist, wird das Resultset gestartet, nachdem die angegebene Anzahl von Elementen übersprungen wurde.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.ListLoadOptions): Word.List;'
      return:
        type:
          - word.Word.List
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - word.Word.Interfaces.ListLoadOptions
  - uid: word.Word.List.load_1
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.List;'
      return:
        type:
          - word.Word.List
        description: ''
      parameters:
        - id: propertyNames
          description: 'Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.'
          type:
            - 'string | string[]'
  - uid: word.Word.List.load_2
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.List;'
      return:
        type:
          - word.Word.List
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: 'Dabei ist propertyNamesAndPaths. Select eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: word.Word.List.paragraphs
    summary: |-
      Ruft die Absätze in der Liste ab. Schreibgeschützt.

      \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: paragraphs
    fullName: paragraphs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraphs: Word.ParagraphCollection;'
      return:
        type:
          - word.Word.ParagraphCollection
  - uid: word.Word.List.setLevelAlignment
    summary: |-
      Legt die Ausrichtung des Aufzählungszeichens, der Zahl oder des Bilds auf der angegebenen Ebene fest.

      \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'setLevelAlignment(level, alignment)'
    fullName: 'setLevelAlignment(level, alignment)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelAlignment(level: number, alignment: Word.Alignment): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Erforderlich. Die Ebene in der Liste.
          type:
            - number
        - id: alignment
          description: 'Erforderlich. Die Ausrichtung der Ebene, die "Left", "zentriert" oder "Right" sein kann.'
          type:
            - word.Word.Alignment
  - uid: word.Word.List.setLevelAlignment_1
    summary: |-
      Legt die Ausrichtung des Aufzählungszeichens, der Zahl oder des Bilds auf der angegebenen Ebene fest.

      \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'setLevelAlignment(level, alignmentString)'
    fullName: 'setLevelAlignment(level, alignmentString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelAlignment(level: number, alignmentString: "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Erforderlich. Die Ebene in der Liste.
          type:
            - number
        - id: alignmentString
          description: 'Erforderlich. Die Ausrichtung der Ebene, die "Left", "zentriert" oder "Right" sein kann.'
          type:
            - '"Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"'
  - uid: word.Word.List.setLevelBullet
    summary: |-
      Legt das Format des Aufzählungszeichens auf der angegebenen Ebene in der Liste fest. Wenn das Aufzählungszeichen vom Typ "Custom" ist, ist charCode erforderlich.

      \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'setLevelBullet(level, listBullet, charCode, fontName)'
    fullName: 'setLevelBullet(level, listBullet, charCode, fontName)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelBullet(level: number, listBullet: Word.ListBullet, charCode?: number, fontName?: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Erforderlich. Die Ebene in der Liste.
          type:
            - number
        - id: listBullet
          description: Erforderlich. Das Aufzählungszeichen.
          type:
            - word.Word.ListBullet
        - id: charCode
          description: 'Optional. Der Codewert des Aufzählungszeichens. Wird nur verwendet, wenn das Aufzählungszeichen "Custom" ist.'
          type:
            - number
        - id: fontName
          description: 'Optional. Der Schriftartname des Aufzählungszeichens. Wird nur verwendet, wenn das Aufzählungszeichen "Custom" ist.'
          type:
            - string
  - uid: word.Word.List.setLevelBullet_1
    summary: |-
      Legt das Format des Aufzählungszeichens auf der angegebenen Ebene in der Liste fest. Wenn das Aufzählungszeichen vom Typ "Custom" ist, ist charCode erforderlich.

      \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'setLevelBullet(level, listBulletString, charCode, fontName)'
    fullName: 'setLevelBullet(level, listBulletString, charCode, fontName)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelBullet(level: number, listBulletString: "Custom" | "Solid" | "Hollow" | "Square" | "Diamonds" | "Arrow" | "Checkmark", charCode?: number, fontName?: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Erforderlich. Die Ebene in der Liste.
          type:
            - number
        - id: listBulletString
          description: Erforderlich. Das Aufzählungszeichen.
          type:
            - '"Custom" | "Solid" | "Hollow" | "Square" | "Diamonds" | "Arrow" | "Checkmark"'
        - id: charCode
          description: 'Optional. Der Codewert des Aufzählungszeichens. Wird nur verwendet, wenn das Aufzählungszeichen "Custom" ist.'
          type:
            - number
        - id: fontName
          description: 'Optional. Der Schriftartname des Aufzählungszeichens. Wird nur verwendet, wenn das Aufzählungszeichen "Custom" ist.'
          type:
            - string
  - uid: word.Word.List.setLevelIndents
    summary: |-
      Legt die zwei Einzüge der angegebenen Ebene in der Liste fest.

      \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'setLevelIndents(level, textIndent, bulletNumberPictureIndent)'
    fullName: 'setLevelIndents(level, textIndent, bulletNumberPictureIndent)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelIndents(level: number, textIndent: number, bulletNumberPictureIndent: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Erforderlich. Die Ebene in der Liste.
          type:
            - number
        - id: textIndent
          description: Erforderlich. Der Texteinzug in Punkt. Es ist identisch mit dem Absatz links Einzug.
          type:
            - number
        - id: bulletNumberPictureIndent
          description: 'Erforderlich. Der relative Einzug des Aufzählungszeichens, der Zahl oder des Bilds in Punkt. Es entspricht dem Absatz 1. Zeileneinzug.'
          type:
            - number
  - uid: word.Word.List.setLevelNumbering
    summary: |-
      Legt das Nummerierungsformat auf der angegebenen Ebene in der Liste fest.

      \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'setLevelNumbering(level, listNumbering, formatString)'
    fullName: 'setLevelNumbering(level, listNumbering, formatString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelNumbering(level: number, listNumbering: Word.ListNumbering, formatString?: Array<string | number>): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Erforderlich. Die Ebene in der Liste.
          type:
            - number
        - id: listNumbering
          description: Erforderlich. Das Ordnungszahlen Format.
          type:
            - word.Word.ListNumbering
        - id: formatString
          description: 'Optional. Das Zahlen Zeichenfolgenformat, das als ein Array von Zeichenfolgen und/oder Ganzzahlen definiert ist. Jede ganze Zahl ist eine Ebene des Zahlen Typs, die größer oder gleich dieser Ebene ist. Beispielsweise kann ein Array von \["(", Level-1, ".", Level, ")"\] das Format von "(2. c)" definieren, wobei 2 die Elementnummer des übergeordneten Elements und c die Elementnummer dieser Ebene ist.'
          type:
            - Array<string | number>
  - uid: word.Word.List.setLevelNumbering_1
    summary: |-
      Legt das Nummerierungsformat auf der angegebenen Ebene in der Liste fest.

      \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'setLevelNumbering(level, listNumberingString, formatString)'
    fullName: 'setLevelNumbering(level, listNumberingString, formatString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelNumbering(level: number, listNumberingString: "None" | "Arabic" | "UpperRoman" | "LowerRoman" | "UpperLetter" | "LowerLetter", formatString?: Array<string | number>): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Erforderlich. Die Ebene in der Liste.
          type:
            - number
        - id: listNumberingString
          description: Erforderlich. Das Ordnungszahlen Format.
          type:
            - '"None" | "Arabic" | "UpperRoman" | "LowerRoman" | "UpperLetter" | "LowerLetter"'
        - id: formatString
          description: 'Optional. Das Zahlen Zeichenfolgenformat, das als ein Array von Zeichenfolgen und/oder Ganzzahlen definiert ist. Jede ganze Zahl ist eine Ebene des Zahlen Typs, die größer oder gleich dieser Ebene ist. Beispielsweise kann ein Array von \["(", Level-1, ".", Level, ")"\] das Format von "(2. c)" definieren, wobei 2 die Elementnummer des übergeordneten Elements und c die Elementnummer dieser Ebene ist.'
          type:
            - Array<string | number>
  - uid: word.Word.List.setLevelStartingNumber
    summary: |-
      Legt die Anfangsnummer auf der angegebenen Ebene in der Liste fest. Der Standardwert ist 1.

      \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
    name: 'setLevelStartingNumber(level, startingNumber)'
    fullName: 'setLevelStartingNumber(level, startingNumber)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setLevelStartingNumber(level: number, startingNumber: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: level
          description: Erforderlich. Die Ebene in der Liste.
          type:
            - number
        - id: startingNumber
          description: 'Erforderlich. Die Zahl, mit der begonnen werden soll.'
          type:
            - number
  - uid: word.Word.List.toJSON
    summary: 'Überschreibt die `toJSON()` JavaScript-Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird.`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche Word. List-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`Word.Interfaces.ListData`<!-- -->), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.ListData;'
      return:
        type:
          - word.Word.Interfaces.ListData
        description: ''
  - uid: word.Word.List.track
    summary: 'Nachverfolgung des Objekts zwecks automatischer Anpassung auf der Grundlage der umgebenden Änderungen im Dokument. Dieser Aufruf ist eine Kurzschreibweise für context.trackedObjects.add(thisObject). Wenn Sie dieses Objekt übergreifend für ".sync"-Aufrufe und außerhalb der sequenziellen Ausführung eines ".run"-Stapels verwenden und beim Festlegen einer Eigenschaft oder Aufrufen einer Methode für das Objekt ein "InvalidObjectPath"-Fehler zurückgegeben wird, hätte das Objekt der nachverfolgten Objektsammlung hinzugefügt werden müssen, in der das Objekt ursprünglich erstellt wurde.'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.List;'
      return:
        type:
          - word.Word.List
        description: ''
  - uid: word.Word.List.untrack
    summary: 'Gibt den diesem Objekt zugewiesenen Arbeitsspeicher frei, wenn das Objekt zuvor nachverfolgt wurde. Dieser Aufruf stellt eine Kurzschreibweise für context.trackedObjects.remove(thisObject) dar. Viele nachverfolgte Objekte verlangsamen die Ausführung der Hostanwendung, also achten Sie darauf, alle hinzugefügten Objekte nach abgeschlossener Verwendung freizugeben. Sie müssen "context.sync()" aufrufen, damit die Freigabe des Arbeitsspeichers wirksam wird.'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.List;'
      return:
        type:
          - word.Word.List
        description: ''