### YamlMime:UniversalReference
ms.openlocfilehash: e3484c16bb369c8b91e81f90887da926906ba1d9
ms.sourcegitcommit: 262b7c417245b7b61a57d53eee33a477a722ca6e
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 09/28/2018
ms.locfileid: "24045651"
items:
- uid: onenote.OneNote.Table
  summary: >-
    <span data-ttu-id="b5f81-101">Stellt eine Tabelle auf einer OneNote-Seite dar.</span><span class="sxs-lookup"><span data-stu-id="b5f81-101">Represents a table in a OneNote page.</span></span>


    <span data-ttu-id="b5f81-102">\[[API-Satz: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b5f81-102">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: OneNote.Table
  fullName: onenote.OneNote.Table
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: onenote
  children:
  - onenote.OneNote.Table.appendColumn
  - onenote.OneNote.Table.appendRow
  - onenote.OneNote.Table.borderVisible
  - onenote.OneNote.Table.clear
  - onenote.OneNote.Table.columnCount
  - onenote.OneNote.Table.getCell
  - onenote.OneNote.Table.id
  - onenote.OneNote.Table.insertColumn
  - onenote.OneNote.Table.insertRow
  - onenote.OneNote.Table.load
  - onenote.OneNote.Table.paragraph
  - onenote.OneNote.Table.rowCount
  - onenote.OneNote.Table.rows
  - onenote.OneNote.Table.setShadingColor
  - onenote.OneNote.Table.toJSON
  - onenote.OneNote.Table.track
  - onenote.OneNote.Table.untrack
- uid: onenote.OneNote.Table.appendColumn
  summary: >-
    <span data-ttu-id="b5f81-p101">Fügt eine Spalte am Ende der Tabelle hinzu. Angegebene Werte werden ggf. in der neuen Spalte festgelegt. Andernfalls ist die Spalte leer.</span><span class="sxs-lookup"><span data-stu-id="b5f81-p101">Adds a column to the end of the table. Values, if specified, are set in the new column. Otherwise the column is empty.</span></span>


    <span data-ttu-id="b5f81-106">\[[API-Satz: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b5f81-106">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: appendColumn(values)
  fullName: onenote.OneNote.Table.appendColumn
  langs:
  - typeScript
  type: method
  syntax:
    content: 'appendColumn(values?: string[]): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"b5f81-107\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5f81-107\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, append a column.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                table.appendColumn([\"cell0\", \"cell1\"]);\n            }\n        }\n        return ctx.sync();\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: values
      description: <span data-ttu-id="b5f81-108">Optional.</span><span class="sxs-lookup"><span data-stu-id="b5f81-108">Optional.</span></span> <span data-ttu-id="b5f81-109">Zeichenfolgen, die in der neuen Spalte einzufügen sind, angegeben als Array.</span><span class="sxs-lookup"><span data-stu-id="b5f81-109">Strings to insert in the new column, specified as an array.</span></span> <span data-ttu-id="b5f81-110">Darf nicht mehr Werte als Zeilen in der Tabelle enthalten.</span><span class="sxs-lookup"><span data-stu-id="b5f81-110">Must not have more values than rows in the table.</span></span>
      type:
      - string[]
- uid: onenote.OneNote.Table.appendRow
  summary: >-
    <span data-ttu-id="b5f81-p103">Fügt eine Zeile am Ende der Tabelle hinzu. Angegebene Werte werden ggf. in der neuen Zeile festgelegt. Andernfalls ist die Zeile leer.</span><span class="sxs-lookup"><span data-stu-id="b5f81-p103">Adds a row to the end of the table. Values, if specified, are set in the new row. Otherwise the row is empty.</span></span>


    <span data-ttu-id="b5f81-114">\[[API-Satz: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b5f81-114">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: appendRow(values)
  fullName: onenote.OneNote.Table.appendRow
  langs:
  - typeScript
  type: method
  syntax:
    content: 'appendRow(values?: string[]): OneNote.TableRow;'
    return:
      type:
      - OneNote.TableRow
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"b5f81-115\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5f81-115\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, append a column.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                var row = table.appendRow([\"cell0\", \"cell1\"]);\n            }\n        }\n        return ctx.sync();\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: values
      description: <span data-ttu-id="b5f81-116">Optional.</span><span class="sxs-lookup"><span data-stu-id="b5f81-116">Optional.</span></span> <span data-ttu-id="b5f81-117">Zeichenfolgen, die in der neuen Zeile einzufügen sind, angegeben als Array.</span><span class="sxs-lookup"><span data-stu-id="b5f81-117">Strings to insert in the new row, specified as an array.</span></span> <span data-ttu-id="b5f81-118">Darf nicht mehr Werte als Spalten in der Tabelle enthalten.</span><span class="sxs-lookup"><span data-stu-id="b5f81-118">Must not have more values than columns in the table.</span></span>
      type:
      - string[]
- uid: onenote.OneNote.Table.borderVisible
  summary: >-
    <span data-ttu-id="b5f81-p105">Ruft ab oder legt fest, ob die Rahmen angezeigt werden oder nicht. „True“, wenn sie sichtbar sind, „false“, wenn sie ausgeblendet sind.</span><span class="sxs-lookup"><span data-stu-id="b5f81-p105">Gets or sets whether the borders are visible or not. True if they are visible, false if they are hidden.</span></span>


    <span data-ttu-id="b5f81-121">\[[API-Satz: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b5f81-121">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: borderVisible
  fullName: onenote.OneNote.Table.borderVisible
  langs:
  - typeScript
  type: property
  syntax:
    content: 'borderVisible: boolean;'
    return:
      type:
      - boolean
- uid: onenote.OneNote.Table.clear
  summary: >-
    <span data-ttu-id="b5f81-122">Löscht den Inhalt der Tabelle.</span><span class="sxs-lookup"><span data-stu-id="b5f81-122">Clears the contents of the table.</span></span>


    <span data-ttu-id="b5f81-123">\[[API-Satz: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b5f81-123">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: clear()
  fullName: onenote.OneNote.Table.clear
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: ''
- uid: onenote.OneNote.Table.columnCount
  summary: >-
    <span data-ttu-id="b5f81-124">Ruft die Anzahl der Spalten in der Tabelle ab.</span><span class="sxs-lookup"><span data-stu-id="b5f81-124">Gets the number of columns in the table.</span></span>


    <span data-ttu-id="b5f81-125">\[[API-Satz: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b5f81-125">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: columnCount
  fullName: onenote.OneNote.Table.columnCount
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly columnCount: number;'
    return:
      type:
      - number
- uid: onenote.OneNote.Table.getCell
  summary: >-
    <span data-ttu-id="b5f81-126">Ruft die Tabellenzelle in einer angegebenen Zeile und Spalte ab.</span><span class="sxs-lookup"><span data-stu-id="b5f81-126">Gets the table cell at a specified row and column.</span></span>


    <span data-ttu-id="b5f81-127">\[[API-Satz: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b5f81-127">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getCell(rowIndex, cellIndex)
  fullName: onenote.OneNote.Table.getCell
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCell(rowIndex: number, cellIndex: number): OneNote.TableCell;'
    return:
      type:
      - onenote.OneNote.TableCell
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"b5f81-128\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5f81-128\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, get a cell in the second row and third column.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                var cell = table.getCell(2 /*Row Index*/, 3 /*Column Index*/);\n            }\n        }\n        return ctx.sync();\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: rowIndex
      description: <span data-ttu-id="b5f81-129">Der Index der Zeile.</span><span class="sxs-lookup"><span data-stu-id="b5f81-129">The index of the row.</span></span>
      type:
      - number
    - id: cellIndex
      description: <span data-ttu-id="b5f81-130">Der Index der Zelle in der Zeile.</span><span class="sxs-lookup"><span data-stu-id="b5f81-130">The index of the cell in the row.</span></span>
      type:
      - number
- uid: onenote.OneNote.Table.id
  summary: >-
    <span data-ttu-id="b5f81-p106">Ruft die ID der Tabelle ab. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b5f81-p106">Gets the ID of the table. Read-only.</span></span>


    <span data-ttu-id="b5f81-133">\[[API-Satz: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b5f81-133">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: id
  fullName: onenote.OneNote.Table.id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: onenote.OneNote.Table.insertColumn
  summary: >-
    <span data-ttu-id="b5f81-p107">Fügt eine Spalte an der angegebenen Indexposition in der Tabelle ein. Angegebene Werte werden ggf. in der neuen Spalte festgelegt. Andernfalls ist die Spalte leer.</span><span class="sxs-lookup"><span data-stu-id="b5f81-p107">Inserts a column at the given index in the table. Values, if specified, are set in the new column. Otherwise the column is empty.</span></span>


    <span data-ttu-id="b5f81-137">\[[API-Satz: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b5f81-137">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertColumn(index, values)
  fullName: onenote.OneNote.Table.insertColumn
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertColumn(index: number, values?: string[]): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"b5f81-138\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5f81-138\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, insert a column at index two.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                table.insertColumn(2, [\"cell0\", \"cell1\"]);\n            }\n        }\n        return ctx.sync();\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="b5f81-139">Index, an dem die Spalte in die Tabelle eingefügt wird.</span><span class="sxs-lookup"><span data-stu-id="b5f81-139">Index where the column will be inserted in the table.</span></span>
      type:
      - number
    - id: values
      description: <span data-ttu-id="b5f81-140">Optional.</span><span class="sxs-lookup"><span data-stu-id="b5f81-140">Optional.</span></span> <span data-ttu-id="b5f81-141">Zeichenfolgen, die in der neuen Spalte einzufügen sind, angegeben als Array.</span><span class="sxs-lookup"><span data-stu-id="b5f81-141">Strings to insert in the new column, specified as an array.</span></span> <span data-ttu-id="b5f81-142">Darf nicht mehr Werte als Zeilen in der Tabelle enthalten.</span><span class="sxs-lookup"><span data-stu-id="b5f81-142">Must not have more values than rows in the table.</span></span>
      type:
      - string[]
- uid: onenote.OneNote.Table.insertRow
  summary: >-
    <span data-ttu-id="b5f81-p109">Fügt eine Zeile an der angegebenen Indexposition in der Tabelle ein. Angegebene Werte werden ggf. in der neuen Zeile festgelegt. Andernfalls ist die Zeile leer.</span><span class="sxs-lookup"><span data-stu-id="b5f81-p109">Inserts a row at the given index in the table. Values, if specified, are set in the new row. Otherwise the row is empty.</span></span>


    <span data-ttu-id="b5f81-146">\[[API-Satz: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b5f81-146">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertRow(index, values)
  fullName: onenote.OneNote.Table.insertRow
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertRow(index: number, values?: string[]): OneNote.TableRow;'
    return:
      type:
      - OneNote.TableRow
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"b5f81-147\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5f81-147\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, insert a row at index two.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                var row = table.insertRow(2, [\"cell0\", \"cell1\"]);\n            }\n        }\n        return ctx.sync();\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: index
      description: <span data-ttu-id="b5f81-148">Index, an dem die Zeile in die Tabelle eingefügt wird.</span><span class="sxs-lookup"><span data-stu-id="b5f81-148">Index where the row will be inserted in the table.</span></span>
      type:
      - number
    - id: values
      description: <span data-ttu-id="b5f81-149">Optional.</span><span class="sxs-lookup"><span data-stu-id="b5f81-149">Optional.</span></span> <span data-ttu-id="b5f81-150">Zeichenfolgen, die in der neuen Zeile einzufügen sind, angegeben als Array.</span><span class="sxs-lookup"><span data-stu-id="b5f81-150">Strings to insert in the new row, specified as an array.</span></span> <span data-ttu-id="b5f81-151">Darf nicht mehr Werte als Spalten in der Tabelle enthalten.</span><span class="sxs-lookup"><span data-stu-id="b5f81-151">Must not have more values than columns in the table.</span></span>
      type:
      - string[]
- uid: onenote.OneNote.Table.load
  summary: <span data-ttu-id="b5f81-152">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="b5f81-152">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="b5f81-153">Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="b5f81-153">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"b5f81-154\">Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5f81-154\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"b5f81-155\">`load(option?: { select?: string; expand?: string; }): OneNote.Table`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5f81-155\">`load(option?: { select?: string; expand?: string; }): OneNote.Table` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"b5f81-156\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Table`-Nur auf Auflistungstypen verfügbar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5f81-156\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Table` - Only available on collection types.</span></span> <span data-ttu-id=\"b5f81-157\">Es ist ähnlich wie die jeweils vorhergehende Signatur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5f81-157\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"b5f81-158\">Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5f81-158\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"b5f81-159\">Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5f81-159\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"b5f81-160\">Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5f81-160\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"b5f81-161\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"b5f81-161\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // For each table, log properties.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                ctx.load(table);\n                return ctx.sync().then(function() {\n                    console.log(\"Table Id: \" + table.id);\n                    console.log(\"Row Count: \" + table.rowCount);\n                    console.log(\"Column Count: \" + table.columnCount);\n                    return ctx.sync();\n                });\n            }\n        }\n    });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, log its paragraph id.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                ctx.load(table, \"paragraph/id, rows/id\");\n                return ctx.sync().then(function() {\n                    console.log(\"Paragraph Id: \" + table.paragraph.id);\n                    var rows = table.rows;\n                    \n                    // for each rows in the table, log row index and id.\n                    for (var i = 0; i < rows.items.length; i++) {\n                        console.log(\"Row \" + i + \" Id: \" + rows.items[i].id);\n                    }\n                    return ctx.sync();\n                });\n            }\n        }\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: onenote.OneNote.Table.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): OneNote.Table;'
    return:
      type:
      - OneNote.Table
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="b5f81-162">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="b5f81-162">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: onenote.OneNote.Table.paragraph
  summary: >-
    <span data-ttu-id="b5f81-p113">Ruft das Paragraph-Objekt ab, das das Table-Objekt enthält. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b5f81-p113">Gets the Paragraph object that contains the Table object. Read-only.</span></span>


    <span data-ttu-id="b5f81-165">\[[API-Satz: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b5f81-165">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: paragraph
  fullName: onenote.OneNote.Table.paragraph
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly paragraph: OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
- uid: onenote.OneNote.Table.rowCount
  summary: >-
    <span data-ttu-id="b5f81-166">Ruft die Anzahl der Zeilen in der Tabelle ab.</span><span class="sxs-lookup"><span data-stu-id="b5f81-166">Gets the number of rows in the table.</span></span>


    <span data-ttu-id="b5f81-167">\[[API-Satz: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b5f81-167">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: rowCount
  fullName: onenote.OneNote.Table.rowCount
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly rowCount: number;'
    return:
      type:
      - number
- uid: onenote.OneNote.Table.rows
  summary: >-
    <span data-ttu-id="b5f81-p114">Ruft alle Zeilen der Tabelle ab. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="b5f81-p114">Gets all of the table rows. Read-only.</span></span>


    <span data-ttu-id="b5f81-170">\[[API-Satz: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b5f81-170">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: rows
  fullName: onenote.OneNote.Table.rows
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly rows: OneNote.TableRowCollection;'
    return:
      type:
      - OneNote.TableRowCollection
- uid: onenote.OneNote.Table.setShadingColor
  summary: >-
    <span data-ttu-id="b5f81-171">Legt die Farbe aller Zellen in der Tabelle fest.</span><span class="sxs-lookup"><span data-stu-id="b5f81-171">Sets the shading color of all cells in the table.</span></span> <span data-ttu-id="b5f81-172">Der Farbcode, auf den die Zellen festgelegt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="b5f81-172">The color code to set the cells to.</span></span>


    <span data-ttu-id="b5f81-173">\[[API-Satz: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="b5f81-173">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: setShadingColor(colorCode)
  fullName: onenote.OneNote.Table.setShadingColor
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setShadingColor(colorCode: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: colorCode
      description: ''
      type:
      - string
- uid: onenote.OneNote.Table.toJSON
  name: toJSON()
  fullName: onenote.OneNote.Table.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): OneNote.Interfaces.TableData;'
    return:
      type:
      - OneNote.Interfaces.TableData
      description: ''
- uid: onenote.OneNote.Table.track
  summary: <span data-ttu-id="b5f81-174">Nachverfolgen Sie das Objekt für die automatische Anpassung basierend auf Änderungen im Dokument umgebenden.</span><span class="sxs-lookup"><span data-stu-id="b5f81-174">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="b5f81-175">Dieser Aufruf ist eine Abkürzung für context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="b5f81-175">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="b5f81-176">Wenn Sie mithilfe dieses Objekts hinweg "Sync" Anrufe und außerhalb der sequenzielle Ausführung eines ".run" Batch und Get "InvalidObjectPath" Fehler beim Festlegen einer Eigenschaft oder Aufrufen einer Methode für das Objekt, mussten Sie das Objekt nachverfolgten Objekts hinzugefügt haben Auflistung, wenn das Objekt erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="b5f81-176">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: onenote.OneNote.Table.track
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): OneNote.Table;'
    return:
      type:
      - OneNote.Table
      description: ''
- uid: onenote.OneNote.Table.untrack
  summary: <span data-ttu-id="b5f81-177">Lösen Sie den Speicher, die mit diesem Objekt verknüpft ist, wenn es zuvor erzeugt wurde.</span><span class="sxs-lookup"><span data-stu-id="b5f81-177">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="b5f81-178">Dieses Anrufs ist die Abkürzung für context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="b5f81-178">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="b5f81-179">Viele nachverfolgte Objekte verlangsamt der Host-Anwendung, also denken Sie alle Objekte frei Sie hinzufügen, sobald Sie fertig sind deren Verwendung.</span><span class="sxs-lookup"><span data-stu-id="b5f81-179">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="b5f81-180">Sie müssen "context.sync()" aufrufen, bevor die Speicher Version wirksam wird.</span><span class="sxs-lookup"><span data-stu-id="b5f81-180">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: onenote.OneNote.Table.untrack
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): OneNote.Table;'
    return:
      type:
      - OneNote.Table
      description: ''
