### YamlMime:UniversalReference
ms.openlocfilehash: d4ee3e0cd4627108a13af9f76ff99e596e2792e6
ms.sourcegitcommit: 2dcedf6deec4167dca476a42dad411e28cc92a97
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 01/23/2019
ms.locfileid: "29385042"
items:
- uid: onenote.OneNote.TableRow
  summary: >-
    <span data-ttu-id="260ab-101">Stellt eine Zeile in einer Tabelle dar.</span><span class="sxs-lookup"><span data-stu-id="260ab-101">Represents a row in a table.</span></span>


    <span data-ttu-id="260ab-102">\[[API-Satz: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="260ab-102">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: OneNote.TableRow
  fullName: OneNote.TableRow
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: onenote
  children:
  - onenote.OneNote.TableRow.cellCount
  - onenote.OneNote.TableRow.cells
  - onenote.OneNote.TableRow.clear
  - onenote.OneNote.TableRow.context
  - onenote.OneNote.TableRow.id
  - onenote.OneNote.TableRow.insertRowAsSibling
  - onenote.OneNote.TableRow.load
  - onenote.OneNote.TableRow.parentTable
  - onenote.OneNote.TableRow.rowIndex
  - onenote.OneNote.TableRow.setShadingColor
  - onenote.OneNote.TableRow.toJSON
  - onenote.OneNote.TableRow.track
  - onenote.OneNote.TableRow.untrack
- uid: onenote.OneNote.TableRow.cellCount
  summary: >-
    <span data-ttu-id="260ab-p101">Ruft die Anzahl der Zellen in der Zeile ab. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="260ab-p101">Gets the number of cells in the row. Read-only.</span></span>


    <span data-ttu-id="260ab-105">\[[API-Satz: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="260ab-105">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: cellCount
  fullName: cellCount
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly cellCount: number;'
    return:
      type:
      - number
- uid: onenote.OneNote.TableRow.cells
  summary: >-
    <span data-ttu-id="260ab-p102">Ruft die Zellen in der Zeile ab. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="260ab-p102">Gets the cells in the row. Read-only.</span></span>


    <span data-ttu-id="260ab-108">\[[API-Satz: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="260ab-108">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: cells
  fullName: cells
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly cells: OneNote.TableCellCollection;'
    return:
      type:
      - onenote.OneNote.TableCellCollection
- uid: onenote.OneNote.TableRow.clear
  summary: >-
    <span data-ttu-id="260ab-109">Löscht den Inhalt der Zeile.</span><span class="sxs-lookup"><span data-stu-id="260ab-109">Clears the contents of the row.</span></span>


    <span data-ttu-id="260ab-110">\[[API-Satz: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="260ab-110">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: clear()
  fullName: clear
  langs:
  - typeScript
  type: method
  syntax:
    content: 'clear(): void;'
    return:
      type:
      - void
      description: ''
- uid: onenote.OneNote.TableRow.context
  summary: <span data-ttu-id="260ab-111">Der Anforderungskontext-zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="260ab-111">The request context associated with the object.</span></span> <span data-ttu-id="260ab-112">Dadurch wird das Add-in Prozess mit der Office-hostanwendung Prozess verbunden.</span><span class="sxs-lookup"><span data-stu-id="260ab-112">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: onenote.OneNote.TableRow.id
  summary: >-
    <span data-ttu-id="260ab-p104">Ruft die ID der Zeile ab. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="260ab-p104">Gets the ID of the row. Read-only.</span></span>


    <span data-ttu-id="260ab-115">\[[API-Satz: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="260ab-115">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: id
  fullName: id
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly id: string;'
    return:
      type:
      - string
- uid: onenote.OneNote.TableRow.insertRowAsSibling
  summary: >-
    <span data-ttu-id="260ab-116">Fügt eine Zeile vor oder nach der aktuellen Zeile ein.</span><span class="sxs-lookup"><span data-stu-id="260ab-116">Inserts a row before or after the current row.</span></span>


    <span data-ttu-id="260ab-117">\[[API-Satz: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="260ab-117">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: insertRowAsSibling(insertLocation, values)
  fullName: insertRowAsSibling
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertRowAsSibling(insertLocation: OneNote.InsertLocation, values?: string[]): OneNote.TableRow;'
    return:
      type:
      - OneNote.TableRow
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"260ab-118\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"260ab-118\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, get table rows.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                \n                // Queue a command to load table.rows.\n                ctx.load(table, \"rows\");\n                \n                // Run the queued commands\n                return ctx.sync().then(function() {\n                    var rows = table.rows;\n                    rows.items[1].insertRowAsSibling(\"Before\", [\"cell0\", \"cell1\"]);\n                    return ctx.sync();\n                });\n            }\n        }\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: insertLocation
      description: <span data-ttu-id="260ab-119">Position, an der die neuen Zeilen eingefügt werden sollen, relativ zur aktuellen Zeile.</span><span class="sxs-lookup"><span data-stu-id="260ab-119">Where the new rows should be inserted relative to the current row.</span></span>
      type:
      - onenote.OneNote.InsertLocation
    - id: values
      description: <span data-ttu-id="260ab-120">Zeichenfolgen, die in der neuen Zeile einzufügen sind, angegeben als Array.</span><span class="sxs-lookup"><span data-stu-id="260ab-120">Strings to insert in the new row, specified as an array.</span></span> <span data-ttu-id="260ab-121">Darf nicht mehr Zellen als die aktuelle Zeile enthalten.</span><span class="sxs-lookup"><span data-stu-id="260ab-121">Must not have more cells than in the current row.</span></span> <span data-ttu-id="260ab-122">Optional.</span><span class="sxs-lookup"><span data-stu-id="260ab-122">Optional.</span></span>
      type:
      - string[]
- uid: onenote.OneNote.TableRow.load
  summary: <span data-ttu-id="260ab-123">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="260ab-123">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="260ab-124">Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="260ab-124">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"260ab-125\">Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:</span><span class=\"sxs-lookup\"><span data-stu-id=\"260ab-125\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"260ab-126\">`load(option?: { select?: string; expand?: string; }): OneNote.TableRow`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"260ab-126\">`load(option?: { select?: string; expand?: string; }): OneNote.TableRow` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"260ab-127\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.TableRow`-Nur auf Auflistungstypen verfügbar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"260ab-127\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.TableRow` - Only available on collection types.</span></span> <span data-ttu-id=\"260ab-128\">Es ist ähnlich wie die jeweils vorhergehende Signatur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"260ab-128\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"260ab-129\">Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können.</span><span class=\"sxs-lookup\"><span data-stu-id=\"260ab-129\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"260ab-130\">Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"260ab-130\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"260ab-131\">Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.</span><span class=\"sxs-lookup\"><span data-stu-id=\"260ab-131\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"260ab-132\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"260ab-132\">Examples</span></span>\n\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, get table rows.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                \n                // Queue a command to load table.rows.\n                ctx.load(table, \"rows\");\n                return ctx.sync().then(function() {\n                    var rows = table.rows;\n                    \n                    // for each table row, log cell count and row index.\n                    for (var i = 0; i < rows.items.length; i++) {\n                        console.log(\"Row \" + i + \" Id: \" + rows.items[i].id);\n                        console.log(\"Row \" + i + \" Cell Count: \" + rows.items[i].cellCount);\n                        console.log(\"Row \" + i + \" Row Index: \" + rows.items[i].rowIndex);\n                    }\n                    return ctx.sync();\n                });\n            }\n        }\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\nOneNote.run(function(ctx) {\n    var app = ctx.application;\n    var outline = app.getActiveOutline();\n    \n    // Queue a command to load outline.paragraphs and their types.\n    ctx.load(outline, \"paragraphs, paragraphs/type\");\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return ctx.sync().then(function () {\n        var paragraphs = outline.paragraphs;\n        \n        // for each table, get table rows.\n        for (var i = 0; i < paragraphs.items.length; i++) {\n            var paragraph = paragraphs.items[i];\n            if (paragraph.type == \"Table\") {\n                var table = paragraph.table;\n                \n                // Queue a command to load parentTable and cells of each row in the table.\n                ctx.load(table, \"rows/parentTable, rows/cells\");\n                return ctx.sync().then(function() {\n                    var rows = table.rows;\n                    \n                    // for each row, log parentTable and cells\n                    for (var i = 0; i < rows.items.length; i++) {\n                        console.log(\"Row \" + i + \" Parent Table Id: \" + rows.items[i].parentTable.id);\n                        var cells = rows.items[i].cells;\n                        for (var j = 0 ; j < cells.items.length; j++) {\n                            console.log(\"Row \" + i + \" Cell \" + j + \" Id: \" + cells.items[j].id);\n                        }\n                    }\n                    return ctx.sync();\n                });\n            }\n        }\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): OneNote.TableRow;'
    return:
      type:
      - OneNote.TableRow
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="260ab-133">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="260ab-133">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: onenote.OneNote.TableRow.parentTable
  summary: >-
    <span data-ttu-id="260ab-p108">Ruft die übergeordnete Tabelle ab. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="260ab-p108">Gets the parent table. Read-only.</span></span>


    <span data-ttu-id="260ab-136">\[[API-Satz: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="260ab-136">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: parentTable
  fullName: parentTable
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly parentTable: OneNote.Table;'
    return:
      type:
      - OneNote.Table
- uid: onenote.OneNote.TableRow.rowIndex
  summary: >-
    <span data-ttu-id="260ab-p109">Ruft den Index der Zeile in der übergeordneten Tabelle ab. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="260ab-p109">Gets the index of the row in its parent table. Read-only.</span></span>


    <span data-ttu-id="260ab-139">\[[API-Satz: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="260ab-139">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: rowIndex
  fullName: rowIndex
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly rowIndex: number;'
    return:
      type:
      - number
- uid: onenote.OneNote.TableRow.setShadingColor
  summary: >-
    <span data-ttu-id="260ab-140">Legt die Farbe aller Zellen in der Zeile fest.</span><span class="sxs-lookup"><span data-stu-id="260ab-140">Sets the shading color of all cells in the row.</span></span> <span data-ttu-id="260ab-141">Der Farbcode, auf den die Zellen festgelegt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="260ab-141">The color code to set the cells to.</span></span>


    <span data-ttu-id="260ab-142">\[[API-Satz: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="260ab-142">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: setShadingColor(colorCode)
  fullName: setShadingColor
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setShadingColor(colorCode: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: colorCode
      description: ''
      type:
      - string
- uid: onenote.OneNote.TableRow.toJSON
  summary: <span data-ttu-id="260ab-143">Überschreibt das JavaScript `toJSON()` Methode, um nützliche Ausgabe zu gewährleisten, wenn ein API-Objekt zu übergeben ist `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="260ab-143">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="260ab-144">(`JSON.stringify`<!-- -->, wiederum die `toJSON` -Methode des Objekts, das es übergeben wird.) Das ursprüngliche OneNote.TableRow-Objekt ist ein API-Objekt der `toJSON` -Methode gibt eine einfache JavaScript-Objekt zurück (als `OneNote.Interfaces.TableRowData` <!-- -->), die flache Kopien der geladene untergeordnete Eigenschaften aus dem ursprünglichen-Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="260ab-144">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original OneNote.TableRow object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.TableRowData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): OneNote.Interfaces.TableRowData;'
    return:
      type:
      - OneNote.Interfaces.TableRowData
      description: ''
- uid: onenote.OneNote.TableRow.track
  summary: <span data-ttu-id="260ab-145">Nachverfolgen Sie das Objekt für die automatische Anpassung basierend auf Änderungen im Dokument umgebenden.</span><span class="sxs-lookup"><span data-stu-id="260ab-145">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="260ab-146">Dieser Aufruf ist eine Abkürzung für context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="260ab-146">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="260ab-147">Wenn Sie mithilfe dieses Objekts hinweg "Sync" Anrufe und außerhalb der sequenzielle Ausführung eines ".run" Batch und Get "InvalidObjectPath" Fehler beim Festlegen einer Eigenschaft oder Aufrufen einer Methode für das Objekt, mussten Sie das Objekt nachverfolgten Objekts hinzugefügt haben Auflistung, wenn das Objekt erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="260ab-147">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: track
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): OneNote.TableRow;'
    return:
      type:
      - OneNote.TableRow
      description: ''
- uid: onenote.OneNote.TableRow.untrack
  summary: <span data-ttu-id="260ab-148">Lösen Sie den Speicher, die mit diesem Objekt verknüpft ist, wenn es zuvor erzeugt wurde.</span><span class="sxs-lookup"><span data-stu-id="260ab-148">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="260ab-149">Dieses Anrufs ist die Abkürzung für context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="260ab-149">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="260ab-150">Viele nachverfolgte Objekte verlangsamt der Host-Anwendung, also denken Sie alle Objekte frei Sie hinzufügen, sobald Sie fertig sind deren Verwendung.</span><span class="sxs-lookup"><span data-stu-id="260ab-150">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="260ab-151">Sie müssen "context.sync()" aufrufen, bevor die Speicher Version wirksam wird.</span><span class="sxs-lookup"><span data-stu-id="260ab-151">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: untrack
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): OneNote.TableRow;'
    return:
      type:
      - OneNote.TableRow
      description: ''
