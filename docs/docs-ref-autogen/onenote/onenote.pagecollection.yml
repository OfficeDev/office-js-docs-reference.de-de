### YamlMime:UniversalReference
ms.openlocfilehash: 39da68fc689507abad95d26efbf749dea8f26451
ms.sourcegitcommit: beffe9455dace422e85b92f0105c54ff7b594cbf
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 09/20/2018
ms.locfileid: "24047237"
items:
- uid: onenote.OneNote.PageCollection
  summary: >-
    <span data-ttu-id="4e780-101">Stellt eine Auflistung von Seiten dar.</span><span class="sxs-lookup"><span data-stu-id="4e780-101">Represents a collection of pages.</span></span>


    <span data-ttu-id="4e780-102">\[[API-Satz: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4e780-102">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: OneNote.PageCollection
  fullName: onenote.OneNote.PageCollection
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: onenote
  children:
  - onenote.OneNote.PageCollection.count
  - onenote.OneNote.PageCollection.getByTitle
  - onenote.OneNote.PageCollection.getItem
  - onenote.OneNote.PageCollection.getItemAt
  - onenote.OneNote.PageCollection.items
  - onenote.OneNote.PageCollection.load
  - onenote.OneNote.PageCollection.toJSON
  - onenote.OneNote.PageCollection.track
  - onenote.OneNote.PageCollection.untrack
- uid: onenote.OneNote.PageCollection.count
  summary: >-
    <span data-ttu-id="4e780-p101">Gibt die Anzahl von Seiten in der Auflistung zurück. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="4e780-p101">Returns the number of pages in the collection. Read-only.</span></span>


    <span data-ttu-id="4e780-105">\[[API-Satz: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4e780-105">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: count
  fullName: onenote.OneNote.PageCollection.count
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly count: number;'
    return:
      type:
      - number
- uid: onenote.OneNote.PageCollection.getByTitle
  summary: >-
    <span data-ttu-id="4e780-106">Ruft die Auflistung von Seiten mit dem angegebenen Titel ab.</span><span class="sxs-lookup"><span data-stu-id="4e780-106">Gets the collection of pages with the specified title.</span></span>


    <span data-ttu-id="4e780-107">\[[API-Satz: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4e780-107">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getByTitle(title)
  fullName: onenote.OneNote.PageCollection.getByTitle
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getByTitle(title: string): OneNote.PageCollection;'
    return:
      type:
      - onenote.OneNote.PageCollection
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4e780-108\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"4e780-108\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get all the pages in the current section.\n    var allPages = context.application.getActiveSection().pages;\n\n    // Queue a command to load the pages. \n    // For best performance, request specific properties.\n    allPages.load(\"id\"); \n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Get the sections with the specified name.\n            var todoPages = allPages.getByTitle(\"Todo list\");\n\n            // Queue a command to load the section. \n            // For best performance, request specific properties.\n            todoPages.load(\"id,title\"); \n\n            return context.sync()\n                .then(function () {\n\n                    // Iterate through the collection or access items individually by index.\n                    if (todoPages.items.length > 0) {\n                        console.log(\"Page title: \" + todoPages.items[0].title);\n                        console.log(\"Page ID: \" + todoPages.items[0].id);\n                    }\n                });\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: title
      description: <span data-ttu-id="4e780-109">Der Titel der Seite.</span><span class="sxs-lookup"><span data-stu-id="4e780-109">The title of the page.</span></span>
      type:
      - string
- uid: onenote.OneNote.PageCollection.getItem
  summary: >-
    <span data-ttu-id="4e780-p102">Ruft eine Seite nach ID oder ihrem Index in der Auflistung ab. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="4e780-p102">Gets a page by ID or by its index in the collection. Read-only.</span></span>


    <span data-ttu-id="4e780-112">\[[API-Satz: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4e780-112">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getItem(index)
  fullName: onenote.OneNote.PageCollection.getItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(index: number | string): OneNote.Page;'
    return:
      type:
      - onenote.OneNote.Page
      description: ''
    parameters:
    - id: index
      description: <span data-ttu-id="4e780-113">Die ID der Seite oder die Indexposition der Seite in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="4e780-113">The ID of the page, or the index location of the page in the collection.</span></span>
      type:
      - number | string
- uid: onenote.OneNote.PageCollection.getItemAt
  summary: >-
    <span data-ttu-id="4e780-114">Ruft eine Seite anhand ihrer Position in der Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="4e780-114">Gets a page on its position in the collection.</span></span>


    <span data-ttu-id="4e780-115">\[[API-Satz: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4e780-115">\[ [API set: OneNoteApi 1.1](/javascript/office/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getItemAt(index)
  fullName: onenote.OneNote.PageCollection.getItemAt
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItemAt(index: number): OneNote.Page;'
    return:
      type:
      - onenote.OneNote.Page
      description: ''
    parameters:
    - id: index
      description: <span data-ttu-id="4e780-p103">Index-Wert des abzurufenden Objekts. Nullindiziert.</span><span class="sxs-lookup"><span data-stu-id="4e780-p103">Index value of the object to be retrieved. Zero-indexed.</span></span>
      type:
      - number
- uid: onenote.OneNote.PageCollection.items
  summary: <span data-ttu-id="4e780-118">Ruft die geladene untergeordnete Elemente in dieser Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="4e780-118">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: onenote.OneNote.PageCollection.items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: OneNote.Page[];'
    return:
      type:
      - OneNote.Page[]
- uid: onenote.OneNote.PageCollection.load
  summary: <span data-ttu-id="4e780-119">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="4e780-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4e780-120">Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="4e780-120">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"4e780-121\">Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:</span><span class=\"sxs-lookup\"><span data-stu-id=\"4e780-121\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"4e780-122\">`load(option?: { select?: string; expand?: string; }): OneNote.PageCollection`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"4e780-122\">`load(option?: { select?: string; expand?: string; }): OneNote.PageCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"4e780-123\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.PageCollection`-Nur auf Auflistungstypen verfügbar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"4e780-123\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.PageCollection` - Only available on collection types.</span></span> <span data-ttu-id=\"4e780-124\">Es ist ähnlich wie die jeweils vorhergehende Signatur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"4e780-124\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"4e780-125\">Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können.</span><span class=\"sxs-lookup\"><span data-stu-id=\"4e780-125\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"4e780-126\">Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"4e780-126\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"4e780-127\">Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.</span><span class=\"sxs-lookup\"><span data-stu-id=\"4e780-127\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"4e780-128\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"4e780-128\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n    \n    // Get the pages in the current section.\n    var pages = context.application.getActiveSection().pages;\n    \n    // Queue a command to load the id and title for each page.            \n    pages.load('id,title');\n    \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            \n            // Display the properties.\n            $.each(pages.items, function(index, page) {\n                console.log(page.title);\n                console.log(page.id);\n            });\n        }); \n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: onenote.OneNote.PageCollection.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): OneNote.PageCollection;'
    return:
      type:
      - onenote.OneNote.PageCollection
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="4e780-129">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="4e780-129">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: onenote.OneNote.PageCollection.toJSON
  name: toJSON()
  fullName: onenote.OneNote.PageCollection.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): OneNote.Interfaces.PageCollectionData;'
    return:
      type:
      - onenote.OneNote.Interfaces.PageCollectionData
      description: ''
- uid: onenote.OneNote.PageCollection.track
  summary: <span data-ttu-id="4e780-130">Nachverfolgen Sie das Objekt für die automatische Anpassung basierend auf Änderungen im Dokument umgebenden.</span><span class="sxs-lookup"><span data-stu-id="4e780-130">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="4e780-131">Dieser Aufruf ist eine Abkürzung für context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="4e780-131">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="4e780-132">Wenn Sie mithilfe dieses Objekts hinweg "Sync" Anrufe und außerhalb der sequenzielle Ausführung eines ".run" Batch und Get "InvalidObjectPath" Fehler beim Festlegen einer Eigenschaft oder Aufrufen einer Methode für das Objekt, mussten Sie das Objekt nachverfolgten Objekts hinzugefügt haben Auflistung, wenn das Objekt erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="4e780-132">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>
  name: track()
  fullName: onenote.OneNote.PageCollection.track
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): OneNote.PageCollection;'
    return:
      type:
      - onenote.OneNote.PageCollection
      description: ''
- uid: onenote.OneNote.PageCollection.untrack
  summary: <span data-ttu-id="4e780-133">Lösen Sie den Speicher, die mit diesem Objekt verknüpft ist, wenn es zuvor erzeugt wurde.</span><span class="sxs-lookup"><span data-stu-id="4e780-133">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="4e780-134">Dieses Anrufs ist die Abkürzung für context.trackedObjects.remove(thisObject).</span><span class="sxs-lookup"><span data-stu-id="4e780-134">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="4e780-135">Viele nachverfolgte Objekte verlangsamt der Host-Anwendung, also denken Sie alle Objekte frei Sie hinzufügen, sobald Sie fertig sind deren Verwendung.</span><span class="sxs-lookup"><span data-stu-id="4e780-135">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you're done using them.</span></span> <span data-ttu-id="4e780-136">Sie müssen "context.sync()" aufrufen, bevor die Speicher Version wirksam wird.</span><span class="sxs-lookup"><span data-stu-id="4e780-136">You will need to call "context.sync()" before the memory release takes effect.</span></span>
  name: untrack()
  fullName: onenote.OneNote.PageCollection.untrack
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): OneNote.PageCollection;'
    return:
      type:
      - onenote.OneNote.PageCollection
      description: ''
