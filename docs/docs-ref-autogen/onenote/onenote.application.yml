### YamlMime:UniversalReference
ms.openlocfilehash: 99be0fd3e06119510bfe903d6953053658bc010a
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/13/2019
ms.locfileid: "29981724"
items:
- uid: onenote.OneNote.Application
  summary: >-
    <span data-ttu-id="4ac8d-101">Stellt das Objekt der obersten Ebene dar, das alle global adressierbaren OneNote-Objekte enthält, z. B. Notizbücher, das aktive Notizbuch und den aktiven Abschnitt.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-101">Represents the top-level object that contains all globally addressable OneNote objects such as notebooks, the active notebook, and the active section.</span></span>


    <span data-ttu-id="4ac8d-102">\[[API-Satz: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4ac8d-102">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: OneNote.Application
  fullName: OneNote.Application
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: onenote
  children:
  - onenote.OneNote.Application.context
  - onenote.OneNote.Application.getActiveNotebook
  - onenote.OneNote.Application.getActiveNotebookOrNull
  - onenote.OneNote.Application.getActiveOutline
  - onenote.OneNote.Application.getActiveOutlineOrNull
  - onenote.OneNote.Application.getActivePage
  - onenote.OneNote.Application.getActivePageOrNull
  - onenote.OneNote.Application.getActiveParagraph
  - onenote.OneNote.Application.getActiveParagraphOrNull
  - onenote.OneNote.Application.getActiveSection
  - onenote.OneNote.Application.getActiveSectionOrNull
  - onenote.OneNote.Application.getWindowSize
  - onenote.OneNote.Application.insertHtmlAtCurrentPosition
  - onenote.OneNote.Application.isViewingDeletedNotes
  - onenote.OneNote.Application.load
  - onenote.OneNote.Application.load_1
  - onenote.OneNote.Application.load_2
  - onenote.OneNote.Application.navigateToPage
  - onenote.OneNote.Application.navigateToPageWithClientUrl
  - onenote.OneNote.Application.notebooks
  - onenote.OneNote.Application.toJSON
- uid: onenote.OneNote.Application.context
  summary: <span data-ttu-id="4ac8d-103">Der Anforderungskontext-zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-103">The request context associated with the object.</span></span> <span data-ttu-id="4ac8d-104">Dadurch wird das Add-in Prozess mit der Office-hostanwendung Prozess verbunden.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: onenote.OneNote.Application.getActiveNotebook
  summary: >-
    <span data-ttu-id="4ac8d-p102">Ruft das aktive Notizbuch ab, falls vorhanden. Wenn kein Notizbuch aktiv ist, wird ItemNotFound ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-p102">Gets the active notebook if one exists. If no notebook is active, throws ItemNotFound.</span></span>


    <span data-ttu-id="4ac8d-107">\[[API-Satz: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4ac8d-107">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getActiveNotebook()
  fullName: getActiveNotebook()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveNotebook(): OneNote.Notebook;'
    return:
      type:
      - onenote.OneNote.Notebook
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4ac8d-108\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"4ac8d-108\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n        \n    // Get the active notebook.\n    var notebook = context.application.getActiveNotebook();\n            \n    // Queue a command to load the notebook. \n    // For best performance, request specific properties.           \n    notebook.load('id,name');\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n                    \n            // Show some properties.\n            console.log(\"Notebook name: \" + notebook.name);\n            console.log(\"Notebook ID: \" + notebook.id);\n            \n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: onenote.OneNote.Application.getActiveNotebookOrNull
  summary: >-
    <span data-ttu-id="4ac8d-p103">Ruft das aktive Notizbuch ab, falls vorhanden. Wenn kein Notizbuch aktiv ist, wird null zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-p103">Gets the active notebook if one exists. If no notebook is active, returns null.</span></span>


    <span data-ttu-id="4ac8d-111">\[[API-Satz: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4ac8d-111">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getActiveNotebookOrNull()
  fullName: getActiveNotebookOrNull()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveNotebookOrNull(): OneNote.Notebook;'
    return:
      type:
      - onenote.OneNote.Notebook
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4ac8d-112\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"4ac8d-112\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the active notebook.\n    var notebook = context.application.getActiveNotebookOrNull();\n\n    // Queue a command to load the notebook. \n    // For best performance, request specific properties.           \n    notebook.load('id,name');\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // check if active notebook is set.\n            if (!notebook.isNull) {\n                console.log(\"Notebook name: \" + notebook.name);\n                console.log(\"Notebook ID: \" + notebook.id);\n            }\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: onenote.OneNote.Application.getActiveOutline
  summary: >-
    <span data-ttu-id="4ac8d-113">Ruft die aktive Gliederung ab, falls vorhanden. Wenn keine Gliederung aktiv ist, wird ItemNotFound ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-113">Gets the active outline if one exists, If no outline is active, throws ItemNotFound.</span></span>


    <span data-ttu-id="4ac8d-114">\[[API-Satz: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4ac8d-114">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getActiveOutline()
  fullName: getActiveOutline()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveOutline(): OneNote.Outline;'
    return:
      type:
      - onenote.OneNote.Outline
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4ac8d-115\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"4ac8d-115\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // get active outline.\n    var outline = context.application.getActiveOutline();\n\n    // Queue a command to load the id of the outline.         \n    outline.load('id');\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Show some properties.\n            console.log(\"outline id: \" + outline.id);\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: onenote.OneNote.Application.getActiveOutlineOrNull
  summary: >-
    <span data-ttu-id="4ac8d-116">Ruft die aktive Gliederung ab, falls vorhanden, andernfalls wird null zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-116">Gets the active outline if one exists, otherwise returns null.</span></span>


    <span data-ttu-id="4ac8d-117">\[[API-Satz: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4ac8d-117">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getActiveOutlineOrNull()
  fullName: getActiveOutlineOrNull()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveOutlineOrNull(): OneNote.Outline;'
    return:
      type:
      - onenote.OneNote.Outline
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4ac8d-118\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"4ac8d-118\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // get active outline.\n    var outline = context.application.getActiveOutlineOrNull();\n\n    // Queue a command to load the id of the outline.         \n    outline.load('id');\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            if (!outline.isNull) {\n                console.log(\"outline id: \" + outline.id);\n            }\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: onenote.OneNote.Application.getActivePage
  summary: >-
    <span data-ttu-id="4ac8d-p104">Ruft die aktive Seite ab, falls vorhanden. Wenn keine Seite aktiv ist, wird ItemNotFound ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-p104">Gets the active page if one exists. If no page is active, throws ItemNotFound.</span></span>


    <span data-ttu-id="4ac8d-121">\[[API-Satz: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4ac8d-121">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getActivePage()
  fullName: getActivePage()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActivePage(): OneNote.Page;'
    return:
      type:
      - onenote.OneNote.Page
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4ac8d-122\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"4ac8d-122\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n        \n    // Get the active page.\n    var page = context.application.getActivePage();\n            \n    // Queue a command to load the page. \n    // For best performance, request specific properties.           \n    page.load('id,title');\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n                    \n            // Show some properties.\n            console.log(\"Page title: \" + page.title);\n            console.log(\"Page ID: \" + page.id);\n            \n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: onenote.OneNote.Application.getActivePageOrNull
  summary: >-
    <span data-ttu-id="4ac8d-p105">Ruft die aktive Seite ab, falls vorhanden. Wenn keine Seite aktiv ist, wird null zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-p105">Gets the active page if one exists. If no page is active, returns null.</span></span>


    <span data-ttu-id="4ac8d-125">\[[API-Satz: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4ac8d-125">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getActivePageOrNull()
  fullName: getActivePageOrNull()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActivePageOrNull(): OneNote.Page;'
    return:
      type:
      - onenote.OneNote.Page
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4ac8d-126\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"4ac8d-126\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the active page.\n    var page = context.application.getActivePageOrNull();\n\n    // Queue a command to load the page. \n    // For best performance, request specific properties.           \n    page.load('id,title');\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            \n            if (!page.isNull) {\n                // Show some properties.\n                console.log(\"Page title: \" + page.title);\n                console.log(\"Page ID: \" + page.id);\n            }\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: onenote.OneNote.Application.getActiveParagraph
  summary: >-
    <span data-ttu-id="4ac8d-127">Ruft sofern vorhanden, wenn kein Absatz aktiv ist, wird der aktive Absatz ItemNotFound.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-127">Gets the active Paragraph if one exists, If no Paragraph is active, throws ItemNotFound.</span></span>


    <span data-ttu-id="4ac8d-128">\[[API-Satz: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4ac8d-128">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getActiveParagraph()
  fullName: getActiveParagraph()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveParagraph(): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: ''
- uid: onenote.OneNote.Application.getActiveParagraphOrNull
  summary: >-
    <span data-ttu-id="4ac8d-129">Ruft eine vorhandene aktiven Absatzes andernfalls gibt null zurück.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-129">Gets the active Paragraph if one exists, otherwise returns null.</span></span>


    <span data-ttu-id="4ac8d-130">\[[API-Satz: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4ac8d-130">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getActiveParagraphOrNull()
  fullName: getActiveParagraphOrNull()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveParagraphOrNull(): OneNote.Paragraph;'
    return:
      type:
      - onenote.OneNote.Paragraph
      description: ''
- uid: onenote.OneNote.Application.getActiveSection
  summary: >-
    <span data-ttu-id="4ac8d-p106">Ruft den aktiven Abschnitt ab, falls vorhanden. Wenn kein Abschnitt aktiv ist, wird ItemNotFound ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-p106">Gets the active section if one exists. If no section is active, throws ItemNotFound.</span></span>


    <span data-ttu-id="4ac8d-133">\[[API-Satz: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4ac8d-133">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getActiveSection()
  fullName: getActiveSection()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveSection(): OneNote.Section;'
    return:
      type:
      - onenote.OneNote.Section
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4ac8d-134\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"4ac8d-134\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n        \n    // Get the active section.\n    var section = context.application.getActiveSection();\n            \n    // Queue a command to load the section. \n    // For best performance, request specific properties.           \n    section.load('id,name');\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n                    \n            // Show some properties.\n            console.log(\"Section name: \" + section.name);\n            console.log(\"Section ID: \" + section.id);\n            \n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: onenote.OneNote.Application.getActiveSectionOrNull
  summary: >-
    <span data-ttu-id="4ac8d-p107">Ruft den aktiven Abschnitt ab, falls vorhanden. Wenn kein Abschnitt aktiv ist, wird null zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-p107">Gets the active section if one exists. If no section is active, returns null.</span></span>


    <span data-ttu-id="4ac8d-137">\[[API-Satz: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4ac8d-137">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: getActiveSectionOrNull()
  fullName: getActiveSectionOrNull()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveSectionOrNull(): OneNote.Section;'
    return:
      type:
      - onenote.OneNote.Section
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4ac8d-138\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"4ac8d-138\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the active section.\n    var section = context.application.getActiveSectionOrNull();\n\n    // Queue a command to load the section. \n    // For best performance, request specific properties.           \n    section.load('id,name');\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            if (!section.isNull) {\n                // Show some properties.\n                console.log(\"Section name: \" + section.name);\n                console.log(\"Section ID: \" + section.id);\n            }\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: onenote.OneNote.Application.getWindowSize
  name: getWindowSize()
  fullName: getWindowSize()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getWindowSize(): OfficeExtension.ClientResult<number[]>;'
    return:
      type:
      - OfficeExtension.ClientResult<number[]>
      description: ''
- uid: onenote.OneNote.Application.insertHtmlAtCurrentPosition
  name: insertHtmlAtCurrentPosition(html)
  fullName: insertHtmlAtCurrentPosition(html)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'insertHtmlAtCurrentPosition(html: string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: html
      description: ''
      type:
      - string
- uid: onenote.OneNote.Application.isViewingDeletedNotes
  name: isViewingDeletedNotes()
  fullName: isViewingDeletedNotes()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'isViewingDeletedNotes(): OfficeExtension.ClientResult<boolean>;'
    return:
      type:
      - OfficeExtension.ClientResult<boolean>
      description: ''
- uid: onenote.OneNote.Application.load
  summary: <span data-ttu-id="4ac8d-139">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-139">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4ac8d-140">Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-140">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="4ac8d-141">Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="4ac8d-141">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="4ac8d-142">`load(option?: string | string[]): OneNote.Application`-Wo Option ist eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-142">`load(option?: string | string[]): OneNote.Application` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="4ac8d-143">`load(option?: { select?: string; expand?: string; }): OneNote.Application`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-143">`load(option?: { select?: string; expand?: string; }): OneNote.Application` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="4ac8d-144">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Application`-Nur auf Auflistungstypen verfügbar.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-144">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Application` - Only available on collection types.</span></span> <span data-ttu-id="4ac8d-145">Es ist ähnlich wie die jeweils vorhergehende Signatur.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-145">It is similar to the preceding signature.</span></span> <span data-ttu-id="4ac8d-146">Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-146">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="4ac8d-147">Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-147">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="4ac8d-148">Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-148">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OneNote.Interfaces.ApplicationLoadOptions): OneNote.Application;'
    return:
      type:
      - OneNote.Application
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - OneNote.Interfaces.ApplicationLoadOptions
- uid: onenote.OneNote.Application.load_1
  summary: <span data-ttu-id="4ac8d-149">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-149">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4ac8d-150">Sie müssen Aufrufen `context.sync()` vor dem Lesen der Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-150">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): OneNote.Application;'
    return:
      type:
      - OneNote.Application
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="4ac8d-151">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-151">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: onenote.OneNote.Application.load_2
  summary: <span data-ttu-id="4ac8d-152">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-152">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4ac8d-153">Sie müssen Aufrufen `context.sync()` vor dem Lesen der Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-153">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.Application;'
    return:
      type:
      - OneNote.Application
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="4ac8d-154">Wobei propertyNamesAndPaths.select ist eine durch Kommas getrennte Zeichenfolge, die angibt, die Eigenschaften zum Laden und propertyNamesAndPaths.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-154">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: onenote.OneNote.Application.navigateToPage
  summary: >-
    <span data-ttu-id="4ac8d-155">Öffnet die angegebene Seite in der Anwendungsinstanz.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-155">Opens the specified page in the application instance.</span></span>


    <span data-ttu-id="4ac8d-156">\[[API-Satz: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4ac8d-156">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: navigateToPage(page)
  fullName: navigateToPage(page)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'navigateToPage(page: OneNote.Page): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4ac8d-157\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"4ac8d-157\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n        \n    // Get the pages in the current section.\n    var pages = context.application.getActiveSection().pages;\n            \n    // Queue a command to load the pages. \n    // For best performance, request specific properties.           \n    pages.load('id');\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n                    \n            // This example loads the first page in the section.\n            var page = pages.items[0];\n                        \n            // Open the page in the application.                    \n            context.application.navigateToPage(page);\n                    \n            // Run the queued command.\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: page
      description: <span data-ttu-id="4ac8d-158">Die zu öffnende Seite.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-158">The page to open.</span></span>
      type:
      - onenote.OneNote.Page
- uid: onenote.OneNote.Application.navigateToPageWithClientUrl
  summary: >-
    <span data-ttu-id="4ac8d-159">Ruft die angegebene Seite ab und öffnet sie in der Anwendungsinstanz.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-159">Gets the specified page, and opens it in the application instance.</span></span>


    <span data-ttu-id="4ac8d-160">\[[API-Satz: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4ac8d-160">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: navigateToPageWithClientUrl(url)
  fullName: navigateToPageWithClientUrl(url)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'navigateToPageWithClientUrl(url: string): OneNote.Page;'
    return:
      type:
      - onenote.OneNote.Page
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"4ac8d-161\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"4ac8d-161\">Examples</span></span>\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the pages in the current section.\n    var pages = context.application.getActiveSection().pages;\n\n    // Queue a command to load the pages. \n    // For best performance, request specific properties.           \n    pages.load('clientUrl');\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // This example loads the first page in the section.\n            var page = pages.items[0];\n\n            // Open the page in the application.                    \n            context.application.navigateToPageWithClientUrl(page.clientUrl);\n\n            // Run the queued command.\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: url
      description: <span data-ttu-id="4ac8d-162">Die Client-URL der zu öffnenden Seite.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-162">The client url of the page to open.</span></span>
      type:
      - string
- uid: onenote.OneNote.Application.notebooks
  summary: >-
    <span data-ttu-id="4ac8d-p112">Ruft die Auflistung von Notizbüchern ab, die in der OneNote-Anwendungsinstanz geöffnet sind. In OneNote Online ist immer nur ein Notizbuch in der Anwendungsinstanz geöffnet. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-p112">Gets the collection of notebooks that are open in the OneNote application instance. In OneNote Online, only one notebook at a time is open in the application instance. Read-only.</span></span>


    <span data-ttu-id="4ac8d-166">\[[API-Satz: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4ac8d-166">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
  name: notebooks
  fullName: notebooks
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly notebooks: OneNote.NotebookCollection;'
    return:
      type:
      - onenote.OneNote.NotebookCollection
- uid: onenote.OneNote.Application.toJSON
  summary: <span data-ttu-id="4ac8d-167">Überschreibt das JavaScript `toJSON()` Methode, um nützliche Ausgabe zu gewährleisten, wenn ein API-Objekt zu übergeben ist `JSON.stringify()` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-167">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`<!-- -->.</span></span> <span data-ttu-id="4ac8d-168">(`JSON.stringify`<!-- -->, wiederum die `toJSON` -Methode des Objekts, das es übergeben wird.) Das ursprüngliche OneNote.Application-Objekt ist ein API-Objekt der `toJSON` -Methode gibt eine einfache JavaScript-Objekt zurück (als `OneNote.Interfaces.ApplicationData` <!-- -->), die flache Kopien der geladene untergeordnete Eigenschaften aus dem ursprünglichen-Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="4ac8d-168">(`JSON.stringify`<!-- -->, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original OneNote.Application object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.ApplicationData`<!-- -->) that contains shallow copies of any loaded child properties from the original object.</span></span>
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): OneNote.Interfaces.ApplicationData;'
    return:
      type:
      - OneNote.Interfaces.ApplicationData
      description: ''
