### YamlMime:UniversalReference
items:
  - uid: onenote.OneNote.Application
    summary: |-
      <span data-ttu-id="fa21c-101">Stellt das Objekt der obersten Ebene dar, das alle global adressierbaren OneNote-Objekte enthält, z. B. Notizbücher, das aktive Notizbuch und den aktiven Abschnitt.</span><span class="sxs-lookup"><span data-stu-id="fa21c-101">Represents the top-level object that contains all globally addressable OneNote objects such as notebooks, the active notebook, and the active section.</span></span>

      <span data-ttu-id="fa21c-102">\[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fa21c-102">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: OneNote.Application
    fullName: OneNote.Application
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: onenote
    children:
      - onenote.OneNote.Application.context
      - onenote.OneNote.Application.getActiveNotebook
      - onenote.OneNote.Application.getActiveNotebookOrNull
      - onenote.OneNote.Application.getActiveOutline
      - onenote.OneNote.Application.getActiveOutlineOrNull
      - onenote.OneNote.Application.getActivePage
      - onenote.OneNote.Application.getActivePageOrNull
      - onenote.OneNote.Application.getActiveParagraph
      - onenote.OneNote.Application.getActiveParagraphOrNull
      - onenote.OneNote.Application.getActiveSection
      - onenote.OneNote.Application.getActiveSectionOrNull
      - onenote.OneNote.Application.getWindowSize
      - onenote.OneNote.Application.insertHtmlAtCurrentPosition
      - onenote.OneNote.Application.isViewingDeletedNotes
      - onenote.OneNote.Application.load
      - onenote.OneNote.Application.load_1
      - onenote.OneNote.Application.load_2
      - onenote.OneNote.Application.navigateToPage
      - onenote.OneNote.Application.navigateToPageWithClientUrl
      - onenote.OneNote.Application.notebooks
      - onenote.OneNote.Application.toJSON
  - uid: onenote.OneNote.Application.context
    summary: '<span data-ttu-id="fa21c-103">Der Anforderungskontext, der mit dem Objekt verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="fa21c-103">The request context associated with the object.</span></span> <span data-ttu-id="fa21c-104">Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="fa21c-104">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - onenote.OneNote.RequestContext
  - uid: onenote.OneNote.Application.getActiveNotebook
    summary: |-
      <span data-ttu-id="fa21c-105">Ruft das aktive Notizbuch ab, falls vorhanden.</span><span class="sxs-lookup"><span data-stu-id="fa21c-105">Gets the active notebook if one exists.</span></span> <span data-ttu-id="fa21c-106">Wenn kein Notizbuch aktiv ist, wird ItemNotFound ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="fa21c-106">If no notebook is active, throws ItemNotFound.</span></span>

      <span data-ttu-id="fa21c-107">\[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fa21c-107">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getActiveNotebook()
    fullName: getActiveNotebook()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveNotebook(): OneNote.Notebook;'
      return:
        type:
          - onenote.OneNote.Notebook
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fa21c-108">Beispiele</span><span class="sxs-lookup"><span data-stu-id="fa21c-108">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {
                  
              // Get the active notebook.
              var notebook = context.application.getActiveNotebook();
                      
              // Queue a command to load the notebook. 
              // For best performance, request specific properties.           
              notebook.load('id,name');
                      
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                              
                      // Show some properties.
                      console.log("Notebook name: " + notebook.name);
                      console.log("Notebook ID: " + notebook.id);
                      
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: onenote.OneNote.Application.getActiveNotebookOrNull
    summary: |-
      <span data-ttu-id="fa21c-109">Ruft das aktive Notizbuch ab, falls vorhanden.</span><span class="sxs-lookup"><span data-stu-id="fa21c-109">Gets the active notebook if one exists.</span></span> <span data-ttu-id="fa21c-110">Wenn kein Notizbuch aktiv ist, wird null zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="fa21c-110">If no notebook is active, returns null.</span></span>

      <span data-ttu-id="fa21c-111">\[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fa21c-111">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getActiveNotebookOrNull()
    fullName: getActiveNotebookOrNull()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveNotebookOrNull(): OneNote.Notebook;'
      return:
        type:
          - onenote.OneNote.Notebook
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fa21c-112">Beispiele</span><span class="sxs-lookup"><span data-stu-id="fa21c-112">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // Get the active notebook.
              var notebook = context.application.getActiveNotebookOrNull();

              // Queue a command to load the notebook. 
              // For best performance, request specific properties.           
              notebook.load('id,name');

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {

                      // check if active notebook is set.
                      if (!notebook.isNull) {
                          console.log("Notebook name: " + notebook.name);
                          console.log("Notebook ID: " + notebook.id);
                      }
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: onenote.OneNote.Application.getActiveOutline
    summary: |-
      <span data-ttu-id="fa21c-113">Ruft die aktive Gliederung ab, falls vorhanden. Wenn keine Gliederung aktiv ist, wird ItemNotFound ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="fa21c-113">Gets the active outline if one exists, If no outline is active, throws ItemNotFound.</span></span>

      <span data-ttu-id="fa21c-114">\[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fa21c-114">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getActiveOutline()
    fullName: getActiveOutline()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveOutline(): OneNote.Outline;'
      return:
        type:
          - onenote.OneNote.Outline
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fa21c-115">Beispiele</span><span class="sxs-lookup"><span data-stu-id="fa21c-115">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // get active outline.
              var outline = context.application.getActiveOutline();

              // Queue a command to load the id of the outline.         
              outline.load('id');

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {

                      // Show some properties.
                      console.log("outline id: " + outline.id);
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: onenote.OneNote.Application.getActiveOutlineOrNull
    summary: |-
      <span data-ttu-id="fa21c-116">Ruft die aktive Gliederung ab, falls vorhanden, andernfalls wird null zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="fa21c-116">Gets the active outline if one exists, otherwise returns null.</span></span>

      <span data-ttu-id="fa21c-117">\[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fa21c-117">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getActiveOutlineOrNull()
    fullName: getActiveOutlineOrNull()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveOutlineOrNull(): OneNote.Outline;'
      return:
        type:
          - onenote.OneNote.Outline
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fa21c-118">Beispiele</span><span class="sxs-lookup"><span data-stu-id="fa21c-118">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // get active outline.
              var outline = context.application.getActiveOutlineOrNull();

              // Queue a command to load the id of the outline.         
              outline.load('id');

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {

                      if (!outline.isNull) {
                          console.log("outline id: " + outline.id);
                      }
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: onenote.OneNote.Application.getActivePage
    summary: |-
      <span data-ttu-id="fa21c-119">Ruft die aktive Seite ab, falls vorhanden.</span><span class="sxs-lookup"><span data-stu-id="fa21c-119">Gets the active page if one exists.</span></span> <span data-ttu-id="fa21c-120">Wenn keine Seite aktiv ist, wird ItemNotFound ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="fa21c-120">If no page is active, throws ItemNotFound.</span></span>

      <span data-ttu-id="fa21c-121">\[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fa21c-121">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getActivePage()
    fullName: getActivePage()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActivePage(): OneNote.Page;'
      return:
        type:
          - onenote.OneNote.Page
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fa21c-122">Beispiele</span><span class="sxs-lookup"><span data-stu-id="fa21c-122">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {
                  
              // Get the active page.
              var page = context.application.getActivePage();
                      
              // Queue a command to load the page. 
              // For best performance, request specific properties.           
              page.load('id,title');
                      
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                              
                      // Show some properties.
                      console.log("Page title: " + page.title);
                      console.log("Page ID: " + page.id);
                      
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: onenote.OneNote.Application.getActivePageOrNull
    summary: |-
      <span data-ttu-id="fa21c-123">Ruft die aktive Seite ab, falls vorhanden.</span><span class="sxs-lookup"><span data-stu-id="fa21c-123">Gets the active page if one exists.</span></span> <span data-ttu-id="fa21c-124">Wenn keine Seite aktiv ist, wird null zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="fa21c-124">If no page is active, returns null.</span></span>

      <span data-ttu-id="fa21c-125">\[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fa21c-125">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getActivePageOrNull()
    fullName: getActivePageOrNull()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActivePageOrNull(): OneNote.Page;'
      return:
        type:
          - onenote.OneNote.Page
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fa21c-126">Beispiele</span><span class="sxs-lookup"><span data-stu-id="fa21c-126">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // Get the active page.
              var page = context.application.getActivePageOrNull();

              // Queue a command to load the page. 
              // For best performance, request specific properties.           
              page.load('id,title');

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                      
                      if (!page.isNull) {
                          // Show some properties.
                          console.log("Page title: " + page.title);
                          console.log("Page ID: " + page.id);
                      }
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: onenote.OneNote.Application.getActiveParagraph
    summary: |-
      <span data-ttu-id="fa21c-127">Ruft den aktiven Absatz ab, wenn einer vorhanden ist, wenn kein Absatz aktiv ist, löst ItemNotFound aus.</span><span class="sxs-lookup"><span data-stu-id="fa21c-127">Gets the active Paragraph if one exists, If no Paragraph is active, throws ItemNotFound.</span></span>

      <span data-ttu-id="fa21c-128">\[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fa21c-128">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getActiveParagraph()
    fullName: getActiveParagraph()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveParagraph(): OneNote.Paragraph;'
      return:
        type:
          - onenote.OneNote.Paragraph
        description: ''
  - uid: onenote.OneNote.Application.getActiveParagraphOrNull
    summary: |-
      <span data-ttu-id="fa21c-129">Ruft den aktiven Absatz ab, wenn einer vorhanden ist, andernfalls wird NULL zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="fa21c-129">Gets the active Paragraph if one exists, otherwise returns null.</span></span>

      <span data-ttu-id="fa21c-130">\[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fa21c-130">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getActiveParagraphOrNull()
    fullName: getActiveParagraphOrNull()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveParagraphOrNull(): OneNote.Paragraph;'
      return:
        type:
          - onenote.OneNote.Paragraph
        description: ''
  - uid: onenote.OneNote.Application.getActiveSection
    summary: |-
      <span data-ttu-id="fa21c-131">Ruft den aktiven Abschnitt ab, falls vorhanden.</span><span class="sxs-lookup"><span data-stu-id="fa21c-131">Gets the active section if one exists.</span></span> <span data-ttu-id="fa21c-132">Wenn kein Abschnitt aktiv ist, wird ItemNotFound ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="fa21c-132">If no section is active, throws ItemNotFound.</span></span>

      <span data-ttu-id="fa21c-133">\[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fa21c-133">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getActiveSection()
    fullName: getActiveSection()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveSection(): OneNote.Section;'
      return:
        type:
          - onenote.OneNote.Section
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fa21c-134">Beispiele</span><span class="sxs-lookup"><span data-stu-id="fa21c-134">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {
                  
              // Get the active section.
              var section = context.application.getActiveSection();
                      
              // Queue a command to load the section. 
              // For best performance, request specific properties.           
              section.load('id,name');
                      
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                              
                      // Show some properties.
                      console.log("Section name: " + section.name);
                      console.log("Section ID: " + section.id);
                      
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: onenote.OneNote.Application.getActiveSectionOrNull
    summary: |-
      <span data-ttu-id="fa21c-135">Ruft den aktiven Abschnitt ab, falls vorhanden.</span><span class="sxs-lookup"><span data-stu-id="fa21c-135">Gets the active section if one exists.</span></span> <span data-ttu-id="fa21c-136">Wenn kein Abschnitt aktiv ist, wird null zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="fa21c-136">If no section is active, returns null.</span></span>

      <span data-ttu-id="fa21c-137">\[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fa21c-137">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: getActiveSectionOrNull()
    fullName: getActiveSectionOrNull()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getActiveSectionOrNull(): OneNote.Section;'
      return:
        type:
          - onenote.OneNote.Section
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fa21c-138">Beispiele</span><span class="sxs-lookup"><span data-stu-id="fa21c-138">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // Get the active section.
              var section = context.application.getActiveSectionOrNull();

              // Queue a command to load the section. 
              // For best performance, request specific properties.           
              section.load('id,name');

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                      if (!section.isNull) {
                          // Show some properties.
                          console.log("Section name: " + section.name);
                          console.log("Section ID: " + section.id);
                      }
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: onenote.OneNote.Application.getWindowSize
    name: getWindowSize()
    fullName: getWindowSize()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getWindowSize(): OfficeExtension.ClientResult<number[]>;'
      return:
        type:
          - 'OfficeExtension.ClientResult<number[]>'
        description: ''
  - uid: onenote.OneNote.Application.insertHtmlAtCurrentPosition
    name: insertHtmlAtCurrentPosition(html)
    fullName: insertHtmlAtCurrentPosition(html)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtmlAtCurrentPosition(html: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: html
          description: ''
          type:
            - string
  - uid: onenote.OneNote.Application.isViewingDeletedNotes
    name: isViewingDeletedNotes()
    fullName: isViewingDeletedNotes()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'isViewingDeletedNotes(): OfficeExtension.ClientResult<boolean>;'
      return:
        type:
          - OfficeExtension.ClientResult<boolean>
        description: ''
  - uid: onenote.OneNote.Application.load
    summary: <span data-ttu-id="fa21c-139">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="fa21c-139">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="fa21c-140">Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.</span><span class="sxs-lookup"><span data-stu-id="fa21c-140">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="fa21c-141">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="fa21c-141">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="fa21c-142">`load(option?: string | string[]): OneNote.Application`-Wobei Option eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="fa21c-142">`load(option?: string | string[]): OneNote.Application` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="fa21c-143">`load(option?: { select?: string; expand?: string; }): OneNote.Application`-Bei Option. Select handelt es sich um eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="fa21c-143">`load(option?: { select?: string; expand?: string; }): OneNote.Application` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="fa21c-144">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Application`Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="fa21c-144">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Application` - Only available on collection types.</span></span> <span data-ttu-id="fa21c-145">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="fa21c-145">It is similar to the preceding signature.</span></span> <span data-ttu-id="fa21c-146">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis einbezogen werden können.</span><span class="sxs-lookup"><span data-stu-id="fa21c-146">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="fa21c-147">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="fa21c-147">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="fa21c-148">Wenn Option. Top angegeben ist, wird das Resultset gestartet, nachdem die angegebene Anzahl von Elementen übersprungen wurde.</span><span class="sxs-lookup"><span data-stu-id="fa21c-148">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OneNote.Interfaces.ApplicationLoadOptions): OneNote.Application;'
      return:
        type:
          - onenote.OneNote.Application
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - onenote.OneNote.Interfaces.ApplicationLoadOptions
  - uid: onenote.OneNote.Application.load_1
    summary: <span data-ttu-id="fa21c-149">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="fa21c-149">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="fa21c-150">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="fa21c-150">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): OneNote.Application;'
      return:
        type:
          - onenote.OneNote.Application
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="fa21c-151">Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="fa21c-151">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: onenote.OneNote.Application.load_2
    summary: <span data-ttu-id="fa21c-152">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="fa21c-152">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="fa21c-153">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="fa21c-153">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.Application;'
      return:
        type:
          - onenote.OneNote.Application
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="fa21c-154">Dabei ist propertyNamesAndPaths. Select eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="fa21c-154">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: onenote.OneNote.Application.navigateToPage
    summary: |-
      <span data-ttu-id="fa21c-155">Öffnet die angegebene Seite in der Anwendungsinstanz.</span><span class="sxs-lookup"><span data-stu-id="fa21c-155">Opens the specified page in the application instance.</span></span>

      <span data-ttu-id="fa21c-156">\[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fa21c-156">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: navigateToPage(page)
    fullName: navigateToPage(page)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'navigateToPage(page: OneNote.Page): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fa21c-157">Beispiele</span><span class="sxs-lookup"><span data-stu-id="fa21c-157">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {
                  
              // Get the pages in the current section.
              var pages = context.application.getActiveSection().pages;
                      
              // Queue a command to load the pages. 
              // For best performance, request specific properties.           
              pages.load('id');
                      
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                              
                      // This example loads the first page in the section.
                      var page = pages.items[0];
                                  
                      // Open the page in the application.                    
                      context.application.navigateToPage(page);
                              
                      // Run the queued command.
                      return context.sync();
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: page
          description: <span data-ttu-id="fa21c-158">Die zu öffnende Seite.</span><span class="sxs-lookup"><span data-stu-id="fa21c-158">The page to open.</span></span>
          type:
            - onenote.OneNote.Page
  - uid: onenote.OneNote.Application.navigateToPageWithClientUrl
    summary: |-
      <span data-ttu-id="fa21c-159">Ruft die angegebene Seite ab und öffnet sie in der Anwendungsinstanz.</span><span class="sxs-lookup"><span data-stu-id="fa21c-159">Gets the specified page, and opens it in the application instance.</span></span>

      <span data-ttu-id="fa21c-160">\[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fa21c-160">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: navigateToPageWithClientUrl(url)
    fullName: navigateToPageWithClientUrl(url)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'navigateToPageWithClientUrl(url: string): OneNote.Page;'
      return:
        type:
          - onenote.OneNote.Page
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fa21c-161">Beispiele</span><span class="sxs-lookup"><span data-stu-id="fa21c-161">Examples</span></span>

          ```javascript
          OneNote.run(function (context) {

              // Get the pages in the current section.
              var pages = context.application.getActiveSection().pages;

              // Queue a command to load the pages. 
              // For best performance, request specific properties.           
              pages.load('clientUrl');

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {

                      // This example loads the first page in the section.
                      var page = pages.items[0];

                      // Open the page in the application.                    
                      context.application.navigateToPageWithClientUrl(page.clientUrl);

                      // Run the queued command.
                      return context.sync();
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: url
          description: <span data-ttu-id="fa21c-162">Die Client-URL der zu öffnenden Seite.</span><span class="sxs-lookup"><span data-stu-id="fa21c-162">The client url of the page to open.</span></span>
          type:
            - string
  - uid: onenote.OneNote.Application.notebooks
    summary: |-
      <span data-ttu-id="fa21c-163">Ruft die Auflistung von Notizbüchern ab, die in der OneNote-Anwendungsinstanz geöffnet sind.</span><span class="sxs-lookup"><span data-stu-id="fa21c-163">Gets the collection of notebooks that are open in the OneNote application instance.</span></span> <span data-ttu-id="fa21c-164">In OneNote im Internet ist nur ein Notizbuch gleichzeitig in der Anwendungsinstanz geöffnet.</span><span class="sxs-lookup"><span data-stu-id="fa21c-164">In OneNote on the web, only one notebook at a time is open in the application instance.</span></span> <span data-ttu-id="fa21c-165">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="fa21c-165">Read-only.</span></span>

      <span data-ttu-id="fa21c-166">\[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fa21c-166">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: notebooks
    fullName: notebooks
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly notebooks: OneNote.NotebookCollection;'
      return:
        type:
          - onenote.OneNote.NotebookCollection
  - uid: onenote.OneNote.Application.toJSON
    summary: '<span data-ttu-id="fa21c-167">Überschreibt die `toJSON()` JavaScript-Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird.`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="fa21c-167">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="fa21c-168">.</span><span class="sxs-lookup"><span data-stu-id="fa21c-168"></span></span> <span data-ttu-id="fa21c-169">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="fa21c-169"></span></span><!-- --><span data-ttu-id="fa21c-170">wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche OneNote. Application-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`OneNote.Interfaces.ApplicationData`</span><span class="sxs-lookup"><span data-stu-id="fa21c-170">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original OneNote.Application object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.ApplicationData`</span></span><!-- --><span data-ttu-id="fa21c-171">), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="fa21c-171">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.ApplicationData;'
      return:
        type:
          - onenote.OneNote.Interfaces.ApplicationData
        description: ''