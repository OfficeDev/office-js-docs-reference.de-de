### YamlMime:UniversalReference
items:
  - uid: onenote.OneNote.Paragraph
    summary: |-
      Ein Container für den sichtbaren Inhalt auf einer Seite. Ein Absatz kann beliebige ParagraphType-Inhaltstypen enthalten.

      \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: OneNote.Paragraph
    fullName: OneNote.Paragraph
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: onenote
    children:
      - onenote.OneNote.Paragraph.addNoteTag
      - onenote.OneNote.Paragraph.addNoteTag_1
      - onenote.OneNote.Paragraph.context
      - onenote.OneNote.Paragraph.delete
      - onenote.OneNote.Paragraph.getParagraphInfo
      - onenote.OneNote.Paragraph.id
      - onenote.OneNote.Paragraph.image
      - onenote.OneNote.Paragraph.inkWords
      - onenote.OneNote.Paragraph.insertHtmlAsSibling
      - onenote.OneNote.Paragraph.insertHtmlAsSibling_1
      - onenote.OneNote.Paragraph.insertImageAsSibling
      - onenote.OneNote.Paragraph.insertImageAsSibling_1
      - onenote.OneNote.Paragraph.insertRichTextAsSibling
      - onenote.OneNote.Paragraph.insertRichTextAsSibling_1
      - onenote.OneNote.Paragraph.insertTableAsSibling
      - onenote.OneNote.Paragraph.insertTableAsSibling_1
      - onenote.OneNote.Paragraph.load
      - onenote.OneNote.Paragraph.load_1
      - onenote.OneNote.Paragraph.load_2
      - onenote.OneNote.Paragraph.outline
      - onenote.OneNote.Paragraph.paragraphs
      - onenote.OneNote.Paragraph.parentParagraph
      - onenote.OneNote.Paragraph.parentParagraphOrNull
      - onenote.OneNote.Paragraph.parentTableCell
      - onenote.OneNote.Paragraph.parentTableCellOrNull
      - onenote.OneNote.Paragraph.richText
      - onenote.OneNote.Paragraph.set
      - onenote.OneNote.Paragraph.set_1
      - onenote.OneNote.Paragraph.table
      - onenote.OneNote.Paragraph.toJSON
      - onenote.OneNote.Paragraph.track
      - onenote.OneNote.Paragraph.type
      - onenote.OneNote.Paragraph.untrack
  - uid: onenote.OneNote.Paragraph.addNoteTag
    summary: |-
      Fügen Sie NoteTag zum Absatz hinzu.

      \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: 'addNoteTag(type, status)'
    fullName: 'addNoteTag(type, status)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addNoteTag(type: OneNote.NoteTagType, status: OneNote.NoteTagStatus): OneNote.NoteTag;'
      return:
        type:
          - onenote.OneNote.NoteTag
        description: ''
      parameters:
        - id: type
          description: Der Typ des NoteTag.
          type:
            - onenote.OneNote.NoteTagType
        - id: status
          description: Der Status des NoteTag.
          type:
            - onenote.OneNote.NoteTagStatus
  - uid: onenote.OneNote.Paragraph.addNoteTag_1
    summary: |-
      Fügen Sie NoteTag zum Absatz hinzu.

      \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: 'addNoteTag(typeString, status)'
    fullName: 'addNoteTag(typeString, status)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addNoteTag(typeString: "Unknown" | "ToDo" | "Important" | "Question" | "Contact" | "Address" | "PhoneNumber" | "Website" | "Idea" | "Critical" | "ToDoPriority1" | "ToDoPriority2", status: "Unknown" | "Normal" | "Completed" | "Disabled" | "OutlookTask" | "TaskNotSyncedYet" | "TaskRemoved"): OneNote.NoteTag;'
      return:
        type:
          - onenote.OneNote.NoteTag
        description: ''
      parameters:
        - id: typeString
          description: Der Typ des NoteTag.
          type:
            - '"Unknown" | "ToDo" | "Important" | "Question" | "Contact" | "Address" | "PhoneNumber" | "Website" | "Idea" | "Critical" | "ToDoPriority1" | "ToDoPriority2"'
        - id: status
          description: Der Status des NoteTag.
          type:
            - '"Unknown" | "Normal" | "Completed" | "Disabled" | "OutlookTask" | "TaskNotSyncedYet" | "TaskRemoved"'
  - uid: onenote.OneNote.Paragraph.context
    summary: 'Der Anforderungskontext, der mit dem Objekt verknüpft ist. Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - onenote.OneNote.RequestContext
  - uid: onenote.OneNote.Paragraph.delete
    summary: |-
      Löscht den Absatz.

      \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Beispiele

          ```javascript
          OneNote.run(function (context) {

              // Get the collection of pageContent items from the page.
              var pageContents = context.application.getActivePage().contents;

              // Get the first PageContent on the page
              // Assuming its an outline, get the outline's paragraphs.
              var pageContent = pageContents.getItemAt(0);
              
              var paragraphs = pageContent.outline.paragraphs;
              
              var firstParagraph = paragraphs.getItemAt(0);
              
              // Queue a command to load the id and type of the first paragraph
              firstParagraph.load("id,type");

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                      
                      // Queue a command to delete the first paragraph                 
                      firstParagraph.delete();
                      
                      // Run the command to delete it
                      return context.sync();
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: onenote.OneNote.Paragraph.getParagraphInfo
    summary: |-
      Abrufen von Listeninformationen von Absatz

      \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: getParagraphInfo()
    fullName: getParagraphInfo()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getParagraphInfo(): OfficeExtension.ClientResult<OneNote.ParagraphInfo>;'
      return:
        type:
          - OfficeExtension.ClientResult<OneNote.ParagraphInfo>
        description: ''
  - uid: onenote.OneNote.Paragraph.id
    summary: |-
      Ruft die ID des Paragraph-Objekts ab. Schreibgeschützt.

      \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: onenote.OneNote.Paragraph.image
    summary: |-
      Ruft das Image-Objekt im Absatz ab. Löst eine Ausnahme aus, wenn ParagraphType nicht vom Typ „Image“ ist. Schreibgeschützt.

      \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: image
    fullName: image
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly image: OneNote.Image;'
      return:
        type:
          - onenote.OneNote.Image
  - uid: onenote.OneNote.Paragraph.inkWords
    summary: |-
      Ruft die Ink-Auflistung im Absatz ab. Löst eine Ausnahme aus, wenn ParagraphType nicht vom Typ „Ink“ ist. Schreibgeschützt.

      \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: inkWords
    fullName: inkWords
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly inkWords: OneNote.InkWordCollection;'
      return:
        type:
          - onenote.OneNote.InkWordCollection
  - uid: onenote.OneNote.Paragraph.insertHtmlAsSibling
    summary: |-
      Fügt den angegebenen HTML-Inhalt ein.

      \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: 'insertHtmlAsSibling(insertLocation, html)'
    fullName: 'insertHtmlAsSibling(insertLocation, html)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtmlAsSibling(insertLocation: OneNote.InsertLocation, html: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a>Beispiele

          ```javascript
          OneNote.run(function (context) {

              // Get the collection of pageContent items from the page.
              var pageContents = context.application.getActivePage().contents;

              // Get the first PageContent on the page
              // Assuming its an outline, get the outline's paragraphs.
              var pageContent = pageContents.getItemAt(0);
              var paragraphs = pageContent.outline.paragraphs;
              var firstParagraph = paragraphs.getItemAt(0);

              // Queue a command to load the id and type of the first paragraph
              firstParagraph.load("id,type");

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {

                      // Queue commands to insert before and after the first paragraph
                      firstParagraph.insertHtmlAsSibling("Before", "<p>ContentBeforeFirstParagraph</p>");
                      firstParagraph.insertHtmlAsSibling("After", "<p>ContentAfterFirstParagraph</p>");
                      
                      // Run the command to run inserts
                      return context.sync();
                  });
          ))
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: insertLocation
          description: Die Position von neuen Inhalten relativ zum aktuellen Absatz.
          type:
            - onenote.OneNote.InsertLocation
        - id: html
          description: 'Eine HTML-Zeichenfolge, die die visuelle Darstellung des Inhalts beschreibt. Siehe [unterstützte HTML](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) für die JavaScript-API für OneNote-Add-Ins.'
          type:
            - string
  - uid: onenote.OneNote.Paragraph.insertHtmlAsSibling_1
    summary: |-
      Fügt den angegebenen HTML-Inhalt ein.

      \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: 'insertHtmlAsSibling(insertLocationString, html)'
    fullName: 'insertHtmlAsSibling(insertLocationString, html)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtmlAsSibling(insertLocationString: "Before" | "After", html: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: insertLocationString
          description: Die Position von neuen Inhalten relativ zum aktuellen Absatz.
          type:
            - '"Before" | "After"'
        - id: html
          description: 'Eine HTML-Zeichenfolge, die die visuelle Darstellung des Inhalts beschreibt. Siehe [unterstützte HTML](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) für die JavaScript-API für OneNote-Add-Ins.'
          type:
            - string
  - uid: onenote.OneNote.Paragraph.insertImageAsSibling
    summary: |-
      Fügt das Bild an der angegebenen Einfügeposition ein.

      \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: 'insertImageAsSibling(insertLocation, base64EncodedImage, width, height)'
    fullName: 'insertImageAsSibling(insertLocation, base64EncodedImage, width, height)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertImageAsSibling(insertLocation: OneNote.InsertLocation, base64EncodedImage: string, width: number, height: number): OneNote.Image;'
      return:
        type:
          - onenote.OneNote.Image
        description: |-


          #### <a name="examples"></a>Beispiele

          ```javascript
          OneNote.run(function (context) {

              // Get the collection of pageContent items from the page.
              var pageContents = context.application.getActivePage().contents;

              // Get the first PageContent on the page
              // Assuming its an outline, get the outline's paragraphs.
              var pageContent = pageContents.getItemAt(0);
              var paragraphs = pageContent.outline.paragraphs;
              var firstParagraph = paragraphs.getItemAt(0);

              // Queue a command to load the id and type of the first paragraph
              firstParagraph.load("id,type");

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {

                      // Queue commands to insert before and after the first paragraph
                      firstParagraph.insertImageAsSibling("Before", "R0lGODlhDwAPAKECAAAAzMzM/////wAAACwAAAAADwAPAAACIISPeQHsrZ5ModrLlN48CXF8m2iQ3YmmKqVlRtW4MLwWACH+H09wdGltaXplZCBieSBVbGVhZCBTbWFydFNhdmVyIQAAOw==");
                      firstParagraph.insertImageAsSibling("After", "R0lGODlhDwAPAKECAAAAzMzM/////wAAACwAAAAADwAPAAACIISPeQHsrZ5ModrLlN48CXF8m2iQ3YmmKqVlRtW4MLwWACH+H09wdGltaXplZCBieSBVbGVhZCBTbWFydFNhdmVyIQAAOw==");
                      
                      // Run the command to insert images
                      return context.sync();
                  });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: insertLocation
          description: Die Position der Tabelle relativ zum aktuellen Absatz.
          type:
            - onenote.OneNote.InsertLocation
        - id: base64EncodedImage
          description: 'HTML-Zeichenfolge, die angefügt werden soll.'
          type:
            - string
        - id: width
          description: 'Optional. Breite in der Maßeinheit Punkt. Der Standardwert ist null, und die Bildbreite wird beachtet.'
          type:
            - number
        - id: height
          description: 'Optional. Höhe in der Maßeinheit Punkt. Der Standardwert ist null, und die Bildhöhe wird beachtet.'
          type:
            - number
  - uid: onenote.OneNote.Paragraph.insertImageAsSibling_1
    summary: |-
      Fügt das Bild an der angegebenen Einfügeposition ein.

      \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: 'insertImageAsSibling(insertLocationString, base64EncodedImage, width, height)'
    fullName: 'insertImageAsSibling(insertLocationString, base64EncodedImage, width, height)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertImageAsSibling(insertLocationString: "Before" | "After", base64EncodedImage: string, width: number, height: number): OneNote.Image;'
      return:
        type:
          - onenote.OneNote.Image
        description: ''
      parameters:
        - id: insertLocationString
          description: Die Position der Tabelle relativ zum aktuellen Absatz.
          type:
            - '"Before" | "After"'
        - id: base64EncodedImage
          description: 'HTML-Zeichenfolge, die angefügt werden soll.'
          type:
            - string
        - id: width
          description: 'Optional. Breite in der Maßeinheit Punkt. Der Standardwert ist null, und die Bildbreite wird beachtet.'
          type:
            - number
        - id: height
          description: 'Optional. Höhe in der Maßeinheit Punkt. Der Standardwert ist null, und die Bildhöhe wird beachtet.'
          type:
            - number
  - uid: onenote.OneNote.Paragraph.insertRichTextAsSibling
    summary: |-
      Fügt den Text des Absatzes an der angegebenen Einfügeposition ein.

      \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: 'insertRichTextAsSibling(insertLocation, paragraphText)'
    fullName: 'insertRichTextAsSibling(insertLocation, paragraphText)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertRichTextAsSibling(insertLocation: OneNote.InsertLocation, paragraphText: string): OneNote.RichText;'
      return:
        type:
          - onenote.OneNote.RichText
        description: |-


          #### <a name="examples"></a>Beispiele

          ```javascript
          OneNote.run(function (context) {

              // Get the collection of pageContent items from the page.
              var pageContents = context.application.getActivePage().contents;

              // Get the first PageContent on the page
              // Assuming its an outline, get the outline's paragraphs.
              var pageContent = pageContents.getItemAt(0);
              var paragraphs = pageContent.outline.paragraphs;
              var firstParagraph = paragraphs.getItemAt(0);

              // Queue a command to load the id and type of the first paragraph
              firstParagraph.load("id,type");

              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {

                      // Queue commands to insert before and after the first paragraph
                      firstParagraph.insertRichTextAsSibling("Before", "Text Appears Before Paragraph");
                      firstParagraph.insertRichTextAsSibling("After", "Text Appears After Paragraph");
                      
                      // Run the command to insert text contents
                      return context.sync();
                  });
          })    
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          }); 
          ```
      parameters:
        - id: insertLocation
          description: Die Position der Tabelle relativ zum aktuellen Absatz.
          type:
            - onenote.OneNote.InsertLocation
        - id: paragraphText
          description: 'HTML-Zeichenfolge, die angefügt werden soll.'
          type:
            - string
  - uid: onenote.OneNote.Paragraph.insertRichTextAsSibling_1
    summary: |-
      Fügt den Text des Absatzes an der angegebenen Einfügeposition ein.

      \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: 'insertRichTextAsSibling(insertLocationString, paragraphText)'
    fullName: 'insertRichTextAsSibling(insertLocationString, paragraphText)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertRichTextAsSibling(insertLocationString: "Before" | "After", paragraphText: string): OneNote.RichText;'
      return:
        type:
          - onenote.OneNote.RichText
        description: ''
      parameters:
        - id: insertLocationString
          description: Die Position der Tabelle relativ zum aktuellen Absatz.
          type:
            - '"Before" | "After"'
        - id: paragraphText
          description: 'HTML-Zeichenfolge, die angefügt werden soll.'
          type:
            - string
  - uid: onenote.OneNote.Paragraph.insertTableAsSibling
    summary: |-
      Fügt eine Tabelle mit der angegebenen Anzahl von Zeilen und Spalten vor oder nach dem aktuellen Absatz hinzu.

      \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: 'insertTableAsSibling(insertLocation, rowCount, columnCount, values)'
    fullName: 'insertTableAsSibling(insertLocation, rowCount, columnCount, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertTableAsSibling(insertLocation: OneNote.InsertLocation, rowCount: number, columnCount: number, values?: string[][]): OneNote.Table;'
      return:
        type:
          - onenote.OneNote.Table
        description: ''
      parameters:
        - id: insertLocation
          description: Die Position der Tabelle relativ zum aktuellen Absatz.
          type:
            - onenote.OneNote.InsertLocation
        - id: rowCount
          description: Die Anzahl der Zeilen in der Tabelle.
          type:
            - number
        - id: columnCount
          description: Die Anzahl der Spalten in der Tabelle.
          type:
            - number
        - id: values
          description: 'Optionales 2D-Array. Wenn die entsprechenden Zeichenfolgen im Array angegeben sind, werden die Zellen gefüllt.'
          type:
            - 'string[][]'
  - uid: onenote.OneNote.Paragraph.insertTableAsSibling_1
    summary: |-
      Fügt eine Tabelle mit der angegebenen Anzahl von Zeilen und Spalten vor oder nach dem aktuellen Absatz hinzu.

      \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: 'insertTableAsSibling(insertLocationString, rowCount, columnCount, values)'
    fullName: 'insertTableAsSibling(insertLocationString, rowCount, columnCount, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertTableAsSibling(insertLocationString: "Before" | "After", rowCount: number, columnCount: number, values?: string[][]): OneNote.Table;'
      return:
        type:
          - onenote.OneNote.Table
        description: ''
      parameters:
        - id: insertLocationString
          description: Die Position der Tabelle relativ zum aktuellen Absatz.
          type:
            - '"Before" | "After"'
        - id: rowCount
          description: Die Anzahl der Zeilen in der Tabelle.
          type:
            - number
        - id: columnCount
          description: Die Anzahl der Spalten in der Tabelle.
          type:
            - number
        - id: values
          description: 'Optionales 2D-Array. Wenn die entsprechenden Zeichenfolgen im Array angegeben sind, werden die Zellen gefüllt.'
          type:
            - 'string[][]'
  - uid: onenote.OneNote.Paragraph.load
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.
    remarks: |-
      Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:

      `load(option?: string | string[]): OneNote.Paragraph`-Wobei Option eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.

      `load(option?: { select?: string; expand?: string; }): OneNote.Paragraph`-Bei Option. Select handelt es sich um eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Paragraph`Nur verfügbar für Sammlungstypen. Sie ähnelt der vorherigen Signatur. Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis einbezogen werden können. Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind. Wenn Option. Top angegeben ist, wird das Resultset gestartet, nachdem die angegebene Anzahl von Elementen übersprungen wurde.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OneNote.Interfaces.ParagraphLoadOptions): OneNote.Paragraph;'
      return:
        type:
          - onenote.OneNote.Paragraph
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - onenote.OneNote.Interfaces.ParagraphLoadOptions
  - uid: onenote.OneNote.Paragraph.load_1
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): OneNote.Paragraph;'
      return:
        type:
          - onenote.OneNote.Paragraph
        description: |-


          #### <a name="examples"></a>Beispiele

          ```javascript
          OneNote.run(function (context) {

              // Get the collection of pageContent items from the page.
              var pageContents = context.application.getActivePage().contents;
              
              // Queue a command to load the outline property of each pageContent.
              pageContents.load("outline");
                  
              // Get the first PageContent on the page, and then get its Outline.
              var pageContent = pageContents._GetItem(0);
              var paragraphs = pageContent.outline.paragraphs;
                      
              // Queue a command to load the id and type of each paragraph.
              paragraphs.load("id,type");
                      
              // Run the queued commands, and return a promise to indicate task completion.
              return context.sync()
                  .then(function () {
                      
                      // Write the text.                  
                      $.each(paragraphs.items, function(index, paragraph) {
                          console.log("Paragraph type: " + paragraph.type);
                          console.log("Paragraph ID: " + paragraph.id);
                      });
                  });
          })        
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          }); 
          ```
          ```javascript
          OneNote.run(function(context) {
              var app = context.application;
              
              // Gets the active outline
              var outline = app.getActiveOutline();
              
              // load nested paragraphs and their types.
              outline.load("paragraphs/type");
              
              return context.sync().then(function () {
                  var paragraphs = outline.paragraphs.items;
                  
                  var promise;
                  // for each nested paragraphs, load tables only
                  for (var i = 0; i < paragraphs.length; i++) {
                      var paragraph = paragraphs[i];
                      if (paragraph.type == "Table") {
                          paragraph.load("table/id");
                          promise =  context.sync().then(function() {
                              console.log(paragraph.table.id);
                          });
                      }
                  }
                  return promise;
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: 'Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.'
          type:
            - 'string | string[]'
  - uid: onenote.OneNote.Paragraph.load_2
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.Paragraph;'
      return:
        type:
          - onenote.OneNote.Paragraph
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: 'Dabei ist propertyNamesAndPaths. Select eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: onenote.OneNote.Paragraph.outline
    summary: |-
      Ruft das Outline-Objekt ab, das den Absatz enthält. Schreibgeschützt.

      \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: outline
    fullName: outline
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly outline: OneNote.Outline;'
      return:
        type:
          - onenote.OneNote.Outline
  - uid: onenote.OneNote.Paragraph.paragraphs
    summary: |-
      Die Auflistung von Absätzen unter diesem Absatz. Schreibgeschützt

      \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: paragraphs
    fullName: paragraphs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraphs: OneNote.ParagraphCollection;'
      return:
        type:
          - onenote.OneNote.ParagraphCollection
  - uid: onenote.OneNote.Paragraph.parentParagraph
    summary: |-
      Ruft das übergeordnete Paragraph-Objekt ab. Löst eine Ausnahme aus, wenn kein übergeordneter Absatz vorhanden ist. Schreibgeschützt.

      \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: parentParagraph
    fullName: parentParagraph
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentParagraph: OneNote.Paragraph;'
      return:
        type:
          - onenote.OneNote.Paragraph
  - uid: onenote.OneNote.Paragraph.parentParagraphOrNull
    summary: |-
      Ruft das übergeordnete Paragraph-Objekt ab. Gibt Null zurück, wenn kein übergeordneter Absatz vorhanden ist. Schreibgeschützt.

      \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: parentParagraphOrNull
    fullName: parentParagraphOrNull
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentParagraphOrNull: OneNote.Paragraph;'
      return:
        type:
          - onenote.OneNote.Paragraph
  - uid: onenote.OneNote.Paragraph.parentTableCell
    summary: |-
      Ruft das TableCell-Objekt ab, das das Paragraph-Objekt (falls vorhanden) enthält. Wenn das übergeordnete Element keine TableCell ist, wird ItemNotFound ausgelöst. Schreibgeschützt.

      \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: parentTableCell
    fullName: parentTableCell
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTableCell: OneNote.TableCell;'
      return:
        type:
          - onenote.OneNote.TableCell
  - uid: onenote.OneNote.Paragraph.parentTableCellOrNull
    summary: |-
      Ruft das TableCell-Objekt ab, das das Paragraph-Objekt (falls vorhanden) enthält. Wenn das übergeordnete Element keine TableCell ist, wird Null zurückgegeben. Schreibgeschützt.

      \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: parentTableCellOrNull
    fullName: parentTableCellOrNull
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTableCellOrNull: OneNote.TableCell;'
      return:
        type:
          - onenote.OneNote.TableCell
  - uid: onenote.OneNote.Paragraph.richText
    summary: |-
      Ruft das RichText-Objekt im Absatz ab. Löst eine Ausnahme aus, wenn ParagraphType nicht vom Typ „RichText“ ist. Schreibgeschützt

      \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: richText
    fullName: richText
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly richText: OneNote.RichText;'
      return:
        type:
          - onenote.OneNote.RichText
  - uid: onenote.OneNote.Paragraph.set
    summary: Legt mehrere Eigenschaften eines Objekts gleichzeitig fest. Sie können entweder ein einfaches Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs übergeben.
    remarks: |-
      Diese Methode hat die folgende zusätzliche Signatur:

      `set(properties: OneNote.Paragraph): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ParagraphUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: 'Ein JavaScript-Objekt mit Eigenschaften, die isomorphically für die Eigenschaften des Objekts strukturiert sind, für das die Methode aufgerufen wird.'
          type:
            - Interfaces.ParagraphUpdateData
        - id: options
          description: 'Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.'
          type:
            - OfficeExtension.UpdateOptions
  - uid: onenote.OneNote.Paragraph.set_1
    summary: Legt mehrere Eigenschaften für das Objekt gleichzeitig basierend auf einem vorhandenen geladenen Objekt fest.
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: OneNote.Paragraph): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - onenote.OneNote.Paragraph
  - uid: onenote.OneNote.Paragraph.table
    summary: |-
      Ruft das Table-Objekt im Absatz ab. Löst eine Ausnahme aus, wenn ParagraphType nicht vom Typ „Table“ ist. Schreibgeschützt.

      \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: table
    fullName: table
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly table: OneNote.Table;'
      return:
        type:
          - onenote.OneNote.Table
  - uid: onenote.OneNote.Paragraph.toJSON
    summary: 'Überschreibt die `toJSON()` JavaScript-Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird.`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche OneNote. Paragraph-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`OneNote.Interfaces.ParagraphData`<!-- -->), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.ParagraphData;'
      return:
        type:
          - onenote.OneNote.Interfaces.ParagraphData
        description: ''
  - uid: onenote.OneNote.Paragraph.track
    summary: 'Nachverfolgung des Objekts zwecks automatischer Anpassung auf der Grundlage der umgebenden Änderungen im Dokument. Dieser Aufruf ist eine Kurzschreibweise für context.trackedObjects.add(thisObject). Wenn Sie dieses Objekt übergreifend für ".sync"-Aufrufe und außerhalb der sequenziellen Ausführung eines ".run"-Stapels verwenden und beim Festlegen einer Eigenschaft oder Aufrufen einer Methode für das Objekt ein "InvalidObjectPath"-Fehler zurückgegeben wird, hätte das Objekt der nachverfolgten Objektsammlung hinzugefügt werden müssen, in der das Objekt ursprünglich erstellt wurde.'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): OneNote.Paragraph;'
      return:
        type:
          - onenote.OneNote.Paragraph
        description: ''
  - uid: onenote.OneNote.Paragraph.type
    summary: |-
      Ruft den Typ des Paragraph-Objekts ab. Schreibgeschützt.

      \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: OneNote.ParagraphType | "RichText" | "Image" | "Table" | "Ink" | "Other";'
      return:
        type:
          - OneNote.ParagraphType | "RichText" | "Image" | "Table" | "Ink" | "Other"
  - uid: onenote.OneNote.Paragraph.untrack
    summary: 'Gibt den diesem Objekt zugewiesenen Arbeitsspeicher frei, wenn das Objekt zuvor nachverfolgt wurde. Dieser Aufruf stellt eine Kurzschreibweise für context.trackedObjects.remove(thisObject) dar. Viele nachverfolgte Objekte verlangsamen die Ausführung der Hostanwendung, also achten Sie darauf, alle hinzugefügten Objekte nach abgeschlossener Verwendung freizugeben. Sie müssen "context.sync()" aufrufen, damit die Freigabe des Arbeitsspeichers wirksam wird.'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): OneNote.Paragraph;'
      return:
        type:
          - onenote.OneNote.Paragraph
        description: ''