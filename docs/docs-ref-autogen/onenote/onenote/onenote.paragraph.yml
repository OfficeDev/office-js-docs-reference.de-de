### YamlMime:TSType
name: OneNote.Paragraph
uid: onenote!OneNote.Paragraph:class
package: onenote!
fullName: OneNote.Paragraph
summary: >-
  Ein Container für den sichtbaren Inhalt auf einer Seite. Ein Absatz kann beliebige ParagraphType-Inhaltstypen enthalten.


  \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: onenote!OneNote.Paragraph#context:member
  package: onenote!
  fullName: context
  summary: Der Anforderungskontext, der mit dem Objekt verknüpft ist. Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="onenote!OneNote.RequestContext:class" />
- name: id
  uid: onenote!OneNote.Paragraph#id:member
  package: onenote!
  fullName: id
  summary: >-
    Ruft die ID des Paragraph-Objekts ab. Schreibgeschützt.


    \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly id: string;'
    return:
      type: string
- name: image
  uid: onenote!OneNote.Paragraph#image:member
  package: onenote!
  fullName: image
  summary: >-
    Ruft das Image-Objekt im Absatz ab. Löst eine Ausnahme aus, wenn ParagraphType nicht vom Typ „Image“ ist. Schreibgeschützt.


    \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly image: OneNote.Image;'
    return:
      type: <xref uid="onenote!OneNote.Image:class" />
- name: inkWords
  uid: onenote!OneNote.Paragraph#inkWords:member
  package: onenote!
  fullName: inkWords
  summary: >-
    Ruft die Ink-Auflistung im Absatz ab. Löst eine Ausnahme aus, wenn ParagraphType nicht vom Typ „Ink“ ist. Schreibgeschützt.


    \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly inkWords: OneNote.InkWordCollection;'
    return:
      type: <xref uid="onenote!OneNote.InkWordCollection:class" />
- name: outline
  uid: onenote!OneNote.Paragraph#outline:member
  package: onenote!
  fullName: outline
  summary: >-
    Ruft das Outline-Objekt ab, das den Absatz enthält. Schreibgeschützt.


    \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly outline: OneNote.Outline;'
    return:
      type: <xref uid="onenote!OneNote.Outline:class" />
- name: paragraphs
  uid: onenote!OneNote.Paragraph#paragraphs:member
  package: onenote!
  fullName: paragraphs
  summary: >-
    Die Auflistung von Absätzen unter diesem Absatz. Schreibgeschützt


    \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly paragraphs: OneNote.ParagraphCollection;'
    return:
      type: <xref uid="onenote!OneNote.ParagraphCollection:class" />
- name: parentParagraph
  uid: onenote!OneNote.Paragraph#parentParagraph:member
  package: onenote!
  fullName: parentParagraph
  summary: >-
    Ruft das übergeordnete Paragraph-Objekt ab. Löst eine Ausnahme aus, wenn kein übergeordneter Absatz vorhanden ist. Schreibgeschützt.


    \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentParagraph: OneNote.Paragraph;'
    return:
      type: <xref uid="onenote!OneNote.Paragraph:class" />
- name: parentParagraphOrNull
  uid: onenote!OneNote.Paragraph#parentParagraphOrNull:member
  package: onenote!
  fullName: parentParagraphOrNull
  summary: >-
    Ruft das übergeordnete Paragraph-Objekt ab. Gibt Null zurück, wenn kein übergeordneter Absatz vorhanden ist. Schreibgeschützt.


    \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentParagraphOrNull: OneNote.Paragraph;'
    return:
      type: <xref uid="onenote!OneNote.Paragraph:class" />
- name: parentTableCell
  uid: onenote!OneNote.Paragraph#parentTableCell:member
  package: onenote!
  fullName: parentTableCell
  summary: >-
    Ruft das TableCell-Objekt ab, das das Paragraph-Objekt (falls vorhanden) enthält. Wenn das übergeordnete Element keine TableCell ist, wird ItemNotFound ausgelöst. Schreibgeschützt.


    \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentTableCell: OneNote.TableCell;'
    return:
      type: <xref uid="onenote!OneNote.TableCell:class" />
- name: parentTableCellOrNull
  uid: onenote!OneNote.Paragraph#parentTableCellOrNull:member
  package: onenote!
  fullName: parentTableCellOrNull
  summary: >-
    Ruft das TableCell-Objekt ab, das das Paragraph-Objekt (falls vorhanden) enthält. Wenn das übergeordnete Element keine TableCell ist, wird Null zurückgegeben. Schreibgeschützt.


    \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentTableCellOrNull: OneNote.TableCell;'
    return:
      type: <xref uid="onenote!OneNote.TableCell:class" />
- name: richText
  uid: onenote!OneNote.Paragraph#richText:member
  package: onenote!
  fullName: richText
  summary: >-
    Ruft das RichText-Objekt im Absatz ab. Löst eine Ausnahme aus, wenn ParagraphType nicht vom Typ „RichText“ ist. Schreibgeschützt


    \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly richText: OneNote.RichText;'
    return:
      type: <xref uid="onenote!OneNote.RichText:class" />
- name: table
  uid: onenote!OneNote.Paragraph#table:member
  package: onenote!
  fullName: table
  summary: >-
    Ruft das Table-Objekt im Absatz ab. Löst eine Ausnahme aus, wenn ParagraphType nicht vom Typ „Table“ ist. Schreibgeschützt.


    \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly table: OneNote.Table;'
    return:
      type: <xref uid="onenote!OneNote.Table:class" />
- name: type
  uid: onenote!OneNote.Paragraph#type:member
  package: onenote!
  fullName: type
  summary: >-
    Ruft den Typ des Paragraph-Objekts ab. Schreibgeschützt.


    \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly type: OneNote.ParagraphType | "RichText" | "Image" | "Table" | "Ink" | "Other";'
    return:
      type: <xref uid="onenote!OneNote.ParagraphType:enum" /> | "RichText" | "Image" | "Table" | "Ink" | "Other"
methods:
- name: addNoteTag(type, status)
  uid: onenote!OneNote.Paragraph#addNoteTag:member(1)
  package: onenote!
  fullName: addNoteTag(type, status)
  summary: >-
    Fügen Sie NoteTag zum Absatz hinzu.


    \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'addNoteTag(type: OneNote.NoteTagType, status: OneNote.NoteTagStatus): OneNote.NoteTag;'
    parameters:
    - id: type
      description: Der Typ des NoteTag.
      type: <xref uid="onenote!OneNote.NoteTagType:enum" />
    - id: status
      description: Der Status des NoteTag.
      type: <xref uid="onenote!OneNote.NoteTagStatus:enum" />
    return:
      type: <xref uid="onenote!OneNote.NoteTag:class" />
      description: ''
- name: addNoteTag(typeString, status)
  uid: onenote!OneNote.Paragraph#addNoteTag:member(2)
  package: onenote!
  fullName: addNoteTag(typeString, status)
  summary: >-
    Fügen Sie NoteTag zum Absatz hinzu.


    \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'addNoteTag(typeString: "Unknown" | "ToDo" | "Important" | "Question" | "Contact" | "Address" | "PhoneNumber" | "Website" | "Idea" | "Critical" | "ToDoPriority1" | "ToDoPriority2", status: "Unknown" | "Normal" | "Completed" | "Disabled" | "OutlookTask" | "TaskNotSyncedYet" | "TaskRemoved"): OneNote.NoteTag;'
    parameters:
    - id: typeString
      description: Der Typ des NoteTag.
      type: "\"Unknown\" | \"ToDo\" | \"Important\" | \"Question\" | \"Contact\" | \"Address\" | \"PhoneNumber\" | \"Website\" | \"Idea\" | \"Critical\" | \"ToDoPriority1\" | \"ToDoPriority2\""
    - id: status
      description: Der Status des NoteTag.
      type: "\"Unknown\" | \"Normal\" | \"Completed\" | \"Disabled\" | \"OutlookTask\" | \"TaskNotSyncedYet\" | \"TaskRemoved\""
    return:
      type: <xref uid="onenote!OneNote.NoteTag:class" />
      description: ''
- name: delete()
  uid: onenote!OneNote.Paragraph#delete:member(1)
  package: onenote!
  fullName: delete()
  summary: >-
    Löscht den Absatz.


    \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    \n    var paragraphs = pageContent.outline.paragraphs;\n    \n    var firstParagraph = paragraphs.getItemAt(0);\n    \n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            \n            // Queue a command to delete the first paragraph                 \n            firstParagraph.delete();\n            \n            // Run the command to delete it\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getParagraphInfo()
  uid: onenote!OneNote.Paragraph#getParagraphInfo:member(1)
  package: onenote!
  fullName: getParagraphInfo()
  summary: >-
    Abrufen von Listeninformationen von Absatz


    \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getParagraphInfo(): OfficeExtension.ClientResult<OneNote.ParagraphInfo>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;<xref uid="onenote!OneNote.ParagraphInfo:interface" />&gt;
      description: ''
- name: insertHtmlAsSibling(insertLocation, html)
  uid: onenote!OneNote.Paragraph#insertHtmlAsSibling:member(1)
  package: onenote!
  fullName: insertHtmlAsSibling(insertLocation, html)
  summary: >-
    Fügt den angegebenen HTML-Inhalt ein.


    \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertHtmlAsSibling(insertLocation: OneNote.InsertLocation, html: string): void;'
    parameters:
    - id: insertLocation
      description: Die Position von neuen Inhalten relativ zum aktuellen Absatz.
      type: <xref uid="onenote!OneNote.InsertLocation:enum" />
    - id: html
      description: Eine HTML-Zeichenfolge, die die visuelle Darstellung des Inhalts beschreibt. Siehe [unterstützte HTML](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) für die JavaScript-API für OneNote-Add-Ins.
      type: string
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    var paragraphs = pageContent.outline.paragraphs;\n    var firstParagraph = paragraphs.getItemAt(0);\n\n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Queue commands to insert before and after the first paragraph\n            firstParagraph.insertHtmlAsSibling(\"Before\", \"<p>ContentBeforeFirstParagraph</p>\");\n            firstParagraph.insertHtmlAsSibling(\"After\", \"<p>ContentAfterFirstParagraph</p>\");\n            \n            // Run the command to run inserts\n            return context.sync();\n        });\n))\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertHtmlAsSibling(insertLocationString, html)
  uid: onenote!OneNote.Paragraph#insertHtmlAsSibling:member(2)
  package: onenote!
  fullName: insertHtmlAsSibling(insertLocationString, html)
  summary: >-
    Fügt den angegebenen HTML-Inhalt ein.


    \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertHtmlAsSibling(insertLocationString: "Before" | "After", html: string): void;'
    parameters:
    - id: insertLocationString
      description: Die Position von neuen Inhalten relativ zum aktuellen Absatz.
      type: "\"Before\" | \"After\""
    - id: html
      description: Eine HTML-Zeichenfolge, die die visuelle Darstellung des Inhalts beschreibt. Siehe [unterstützte HTML](https://docs.microsoft.com/office/dev/add-ins/onenote/onenote-add-ins-page-content#supported-html) für die JavaScript-API für OneNote-Add-Ins.
      type: string
    return:
      type: void
      description: ''
- name: insertImageAsSibling(insertLocation, base64EncodedImage, width, height)
  uid: onenote!OneNote.Paragraph#insertImageAsSibling:member(1)
  package: onenote!
  fullName: insertImageAsSibling(insertLocation, base64EncodedImage, width, height)
  summary: >-
    Fügt das Bild an der angegebenen Einfügeposition ein.


    \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertImageAsSibling(insertLocation: OneNote.InsertLocation, base64EncodedImage: string, width: number, height: number): OneNote.Image;'
    parameters:
    - id: insertLocation
      description: Die Position der Tabelle relativ zum aktuellen Absatz.
      type: <xref uid="onenote!OneNote.InsertLocation:enum" />
    - id: base64EncodedImage
      description: HTML-Zeichenfolge, die angefügt werden soll.
      type: string
    - id: width
      description: Optional. Breite in der Maßeinheit Punkt. Der Standardwert ist null, und die Bildbreite wird beachtet.
      type: number
    - id: height
      description: Optional. Höhe in der Maßeinheit Punkt. Der Standardwert ist null, und die Bildhöhe wird beachtet.
      type: number
    return:
      type: <xref uid="onenote!OneNote.Image:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    var paragraphs = pageContent.outline.paragraphs;\n    var firstParagraph = paragraphs.getItemAt(0);\n\n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Queue commands to insert before and after the first paragraph\n            firstParagraph.insertImageAsSibling(\"Before\", \"R0lGODlhDwAPAKECAAAAzMzM/////wAAACwAAAAADwAPAAACIISPeQHsrZ5ModrLlN48CXF8m2iQ3YmmKqVlRtW4MLwWACH+H09wdGltaXplZCBieSBVbGVhZCBTbWFydFNhdmVyIQAAOw==\");\n            firstParagraph.insertImageAsSibling(\"After\", \"R0lGODlhDwAPAKECAAAAzMzM/////wAAACwAAAAADwAPAAACIISPeQHsrZ5ModrLlN48CXF8m2iQ3YmmKqVlRtW4MLwWACH+H09wdGltaXplZCBieSBVbGVhZCBTbWFydFNhdmVyIQAAOw==\");\n            \n            // Run the command to insert images\n            return context.sync();\n        });\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertImageAsSibling(insertLocationString, base64EncodedImage, width, height)
  uid: onenote!OneNote.Paragraph#insertImageAsSibling:member(2)
  package: onenote!
  fullName: insertImageAsSibling(insertLocationString, base64EncodedImage, width, height)
  summary: >-
    Fügt das Bild an der angegebenen Einfügeposition ein.


    \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertImageAsSibling(insertLocationString: "Before" | "After", base64EncodedImage: string, width: number, height: number): OneNote.Image;'
    parameters:
    - id: insertLocationString
      description: Die Position der Tabelle relativ zum aktuellen Absatz.
      type: "\"Before\" | \"After\""
    - id: base64EncodedImage
      description: HTML-Zeichenfolge, die angefügt werden soll.
      type: string
    - id: width
      description: Optional. Breite in der Maßeinheit Punkt. Der Standardwert ist null, und die Bildbreite wird beachtet.
      type: number
    - id: height
      description: Optional. Höhe in der Maßeinheit Punkt. Der Standardwert ist null, und die Bildhöhe wird beachtet.
      type: number
    return:
      type: <xref uid="onenote!OneNote.Image:class" />
      description: ''
- name: insertRichTextAsSibling(insertLocation, paragraphText)
  uid: onenote!OneNote.Paragraph#insertRichTextAsSibling:member(1)
  package: onenote!
  fullName: insertRichTextAsSibling(insertLocation, paragraphText)
  summary: >-
    Fügt den Text des Absatzes an der angegebenen Einfügeposition ein.


    \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertRichTextAsSibling(insertLocation: OneNote.InsertLocation, paragraphText: string): OneNote.RichText;'
    parameters:
    - id: insertLocation
      description: Die Position der Tabelle relativ zum aktuellen Absatz.
      type: <xref uid="onenote!OneNote.InsertLocation:enum" />
    - id: paragraphText
      description: HTML-Zeichenfolge, die angefügt werden soll.
      type: string
    return:
      type: <xref uid="onenote!OneNote.RichText:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n\n    // Get the first PageContent on the page\n    // Assuming its an outline, get the outline's paragraphs.\n    var pageContent = pageContents.getItemAt(0);\n    var paragraphs = pageContent.outline.paragraphs;\n    var firstParagraph = paragraphs.getItemAt(0);\n\n    // Queue a command to load the id and type of the first paragraph\n    firstParagraph.load(\"id,type\");\n\n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n\n            // Queue commands to insert before and after the first paragraph\n            firstParagraph.insertRichTextAsSibling(\"Before\", \"Text Appears Before Paragraph\");\n            firstParagraph.insertRichTextAsSibling(\"After\", \"Text Appears After Paragraph\");\n            \n            // Run the command to insert text contents\n            return context.sync();\n        });\n})    \n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n}); \n```"
- name: insertRichTextAsSibling(insertLocationString, paragraphText)
  uid: onenote!OneNote.Paragraph#insertRichTextAsSibling:member(2)
  package: onenote!
  fullName: insertRichTextAsSibling(insertLocationString, paragraphText)
  summary: >-
    Fügt den Text des Absatzes an der angegebenen Einfügeposition ein.


    \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertRichTextAsSibling(insertLocationString: "Before" | "After", paragraphText: string): OneNote.RichText;'
    parameters:
    - id: insertLocationString
      description: Die Position der Tabelle relativ zum aktuellen Absatz.
      type: "\"Before\" | \"After\""
    - id: paragraphText
      description: HTML-Zeichenfolge, die angefügt werden soll.
      type: string
    return:
      type: <xref uid="onenote!OneNote.RichText:class" />
      description: ''
- name: insertTableAsSibling(insertLocation, rowCount, columnCount, values)
  uid: onenote!OneNote.Paragraph#insertTableAsSibling:member(1)
  package: onenote!
  fullName: insertTableAsSibling(insertLocation, rowCount, columnCount, values)
  summary: >-
    Fügt eine Tabelle mit der angegebenen Anzahl von Zeilen und Spalten vor oder nach dem aktuellen Absatz hinzu.


    \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertTableAsSibling(insertLocation: OneNote.InsertLocation, rowCount: number, columnCount: number, values?: string[][]): OneNote.Table;'
    parameters:
    - id: insertLocation
      description: Die Position der Tabelle relativ zum aktuellen Absatz.
      type: <xref uid="onenote!OneNote.InsertLocation:enum" />
    - id: rowCount
      description: Die Anzahl der Zeilen in der Tabelle.
      type: number
    - id: columnCount
      description: Die Anzahl der Spalten in der Tabelle.
      type: number
    - id: values
      description: Optionales 2D-Array. Wenn die entsprechenden Zeichenfolgen im Array angegeben sind, werden die Zellen gefüllt.
      type: string[][]
    return:
      type: <xref uid="onenote!OneNote.Table:class" />
      description: ''
- name: insertTableAsSibling(insertLocationString, rowCount, columnCount, values)
  uid: onenote!OneNote.Paragraph#insertTableAsSibling:member(2)
  package: onenote!
  fullName: insertTableAsSibling(insertLocationString, rowCount, columnCount, values)
  summary: >-
    Fügt eine Tabelle mit der angegebenen Anzahl von Zeilen und Spalten vor oder nach dem aktuellen Absatz hinzu.


    \[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertTableAsSibling(insertLocationString: "Before" | "After", rowCount: number, columnCount: number, values?: string[][]): OneNote.Table;'
    parameters:
    - id: insertLocationString
      description: Die Position der Tabelle relativ zum aktuellen Absatz.
      type: "\"Before\" | \"After\""
    - id: rowCount
      description: Die Anzahl der Zeilen in der Tabelle.
      type: number
    - id: columnCount
      description: Die Anzahl der Spalten in der Tabelle.
      type: number
    - id: values
      description: Optionales 2D-Array. Wenn die entsprechenden Zeichenfolgen im Array angegeben sind, werden die Zellen gefüllt.
      type: string[][]
    return:
      type: <xref uid="onenote!OneNote.Table:class" />
      description: ''
- name: load(option)
  uid: onenote!OneNote.Paragraph#load:member(1)
  package: onenote!
  fullName: load(option)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.
  remarks: >-
    Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:


    `load(option?: string | string[]): OneNote.Paragraph` -Wobei Option eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.


    `load(option?: { select?: string; expand?: string; }): OneNote.Paragraph` -Bei Option. Select handelt es sich um eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Paragraph` Nur verfügbar für Sammlungstypen. Sie ähnelt der vorherigen Signatur. Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis einbezogen werden können. Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind. Wenn Option. Top angegeben ist, wird das Resultset gestartet, nachdem die angegebene Anzahl von Elementen übersprungen wurde.
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: OneNote.Interfaces.ParagraphLoadOptions): OneNote.Paragraph;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="onenote!OneNote.Interfaces.ParagraphLoadOptions:interface" />
    return:
      type: <xref uid="onenote!OneNote.Paragraph:class" />
      description: ''
- name: load(propertyNames)
  uid: onenote!OneNote.Paragraph#load:member(2)
  package: onenote!
  fullName: load(propertyNames)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): OneNote.Paragraph;'
    parameters:
    - id: propertyNames
      description: Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.
      type: string | string[]
    return:
      type: <xref uid="onenote!OneNote.Paragraph:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\nOneNote.run(function (context) {\n\n    // Get the collection of pageContent items from the page.\n    var pageContents = context.application.getActivePage().contents;\n    \n    // Queue a command to load the outline property of each pageContent.\n    pageContents.load(\"outline\");\n        \n    // Get the first PageContent on the page, and then get its Outline.\n    var pageContent = pageContents._GetItem(0);\n    var paragraphs = pageContent.outline.paragraphs;\n            \n    // Queue a command to load the id and type of each paragraph.\n    paragraphs.load(\"id,type\");\n            \n    // Run the queued commands, and return a promise to indicate task completion.\n    return context.sync()\n        .then(function () {\n            \n            // Write the text.                  \n            $.each(paragraphs.items, function(index, paragraph) {\n                console.log(\"Paragraph type: \" + paragraph.type);\n                console.log(\"Paragraph ID: \" + paragraph.id);\n            });\n        });\n})        \n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n}); \n```\n```javascript\nOneNote.run(function(context) {\n    var app = context.application;\n    \n    // Gets the active outline\n    var outline = app.getActiveOutline();\n    \n    // load nested paragraphs and their types.\n    outline.load(\"paragraphs/type\");\n    \n    return context.sync().then(function () {\n        var paragraphs = outline.paragraphs.items;\n        \n        var promise;\n        // for each nested paragraphs, load tables only\n        for (var i = 0; i < paragraphs.length; i++) {\n            var paragraph = paragraphs[i];\n            if (paragraph.type == \"Table\") {\n                paragraph.load(\"table/id\");\n                promise =  context.sync().then(function() {\n                    console.log(paragraph.table.id);\n                });\n            }\n        }\n        return promise;\n    })\n})\n.catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(propertyNamesAndPaths)
  uid: onenote!OneNote.Paragraph#load:member(3)
  package: onenote!
  fullName: load(propertyNamesAndPaths)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.Paragraph;'
    parameters:
    - id: propertyNamesAndPaths
      description: Dabei ist propertyNamesAndPaths. Select eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.
      type: '{ select?: string; expand?: string; }'
    return:
      type: <xref uid="onenote!OneNote.Paragraph:class" />
      description: ''
- name: set(properties, options)
  uid: onenote!OneNote.Paragraph#set:member(1)
  package: onenote!
  fullName: set(properties, options)
  summary: Legt mehrere Eigenschaften eines Objekts gleichzeitig fest. Sie können entweder ein einfaches Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs übergeben.
  remarks: >-
    Diese Methode hat die folgende zusätzliche Signatur:


    `set(properties: OneNote.Paragraph): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.ParagraphUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: Ein JavaScript-Objekt mit Eigenschaften, die isomorphically für die Eigenschaften des Objekts strukturiert sind, für das die Methode aufgerufen wird.
      type: <xref uid="onenote!OneNote.Interfaces.ParagraphUpdateData:interface" />
    - id: options
      description: Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: onenote!OneNote.Paragraph#set:member(2)
  package: onenote!
  fullName: set(properties)
  summary: Legt mehrere Eigenschaften für das Objekt gleichzeitig basierend auf einem vorhandenen geladenen Objekt fest.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: OneNote.Paragraph): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="onenote!OneNote.Paragraph:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: onenote!OneNote.Paragraph#toJSON:member(1)
  package: onenote!
  fullName: toJSON()
  summary: Überschreibt die JavaScript `toJSON()` -Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird. `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche OneNote. Paragraph-Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt (typisiert als `OneNote.Interfaces.ParagraphData`<!-- -->), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): OneNote.Interfaces.ParagraphData;'
    return:
      type: <xref uid="onenote!OneNote.Interfaces.ParagraphData:interface" />
      description: ''
- name: track()
  uid: onenote!OneNote.Paragraph#track:member(1)
  package: onenote!
  fullName: track()
  summary: Nachverfolgung des Objekts zwecks automatischer Anpassung auf der Grundlage der umgebenden Änderungen im Dokument. Dieser Aufruf ist eine Kurzschreibweise für context.trackedObjects.add(thisObject). Wenn Sie dieses Objekt übergreifend für ".sync"-Aufrufe und außerhalb der sequenziellen Ausführung eines ".run"-Stapels verwenden und beim Festlegen einer Eigenschaft oder Aufrufen einer Methode für das Objekt ein "InvalidObjectPath"-Fehler zurückgegeben wird, hätte das Objekt der nachverfolgten Objektsammlung hinzugefügt werden müssen, in der das Objekt ursprünglich erstellt wurde.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'track(): OneNote.Paragraph;'
    return:
      type: <xref uid="onenote!OneNote.Paragraph:class" />
      description: ''
- name: untrack()
  uid: onenote!OneNote.Paragraph#untrack:member(1)
  package: onenote!
  fullName: untrack()
  summary: Gibt den diesem Objekt zugewiesenen Arbeitsspeicher frei, wenn das Objekt zuvor nachverfolgt wurde. Dieser Aufruf stellt eine Kurzschreibweise für context.trackedObjects.remove(thisObject) dar. Viele nachverfolgte Objekte verlangsamen die Ausführung der Hostanwendung, also achten Sie darauf, alle hinzugefügten Objekte nach abgeschlossener Verwendung freizugeben. Sie müssen "context.sync()" aufrufen, damit die Freigabe des Arbeitsspeichers wirksam wird.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'untrack(): OneNote.Paragraph;'
    return:
      type: <xref uid="onenote!OneNote.Paragraph:class" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: c8303cba7c4342f1cc89a2d99e9c12f89ccd4d4b
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49136673"
