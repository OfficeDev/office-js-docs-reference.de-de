### YamlMime:UniversalReference
items:
  - uid: onenote.OneNote.Table
    summary: |-
      <span data-ttu-id="1e05c-101">Stellt eine Tabelle auf einer OneNote-Seite dar.</span><span class="sxs-lookup"><span data-stu-id="1e05c-101">Represents a table in a OneNote page.</span></span>

      <span data-ttu-id="1e05c-102">\[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e05c-102">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: OneNote.Table
    fullName: OneNote.Table
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: onenote
    children:
      - onenote.OneNote.Table.appendColumn
      - onenote.OneNote.Table.appendRow
      - onenote.OneNote.Table.borderVisible
      - onenote.OneNote.Table.clear
      - onenote.OneNote.Table.columnCount
      - onenote.OneNote.Table.context
      - onenote.OneNote.Table.getCell
      - onenote.OneNote.Table.id
      - onenote.OneNote.Table.insertColumn
      - onenote.OneNote.Table.insertRow
      - onenote.OneNote.Table.load
      - onenote.OneNote.Table.load_1
      - onenote.OneNote.Table.load_2
      - onenote.OneNote.Table.paragraph
      - onenote.OneNote.Table.rowCount
      - onenote.OneNote.Table.rows
      - onenote.OneNote.Table.set
      - onenote.OneNote.Table.set_1
      - onenote.OneNote.Table.setShadingColor
      - onenote.OneNote.Table.toJSON
      - onenote.OneNote.Table.track
      - onenote.OneNote.Table.untrack
  - uid: onenote.OneNote.Table.appendColumn
    summary: |-
      <span data-ttu-id="1e05c-103">Fügt am Ende der Tabelle eine Spalte hinzu.</span><span class="sxs-lookup"><span data-stu-id="1e05c-103">Adds a column to the end of the table.</span></span> <span data-ttu-id="1e05c-104">Werte, sofern angegeben, werden in der neuen Spalte festgelegt.</span><span class="sxs-lookup"><span data-stu-id="1e05c-104">Values, if specified, are set in the new column.</span></span> <span data-ttu-id="1e05c-105">Andernfalls ist die Spalte leer.</span><span class="sxs-lookup"><span data-stu-id="1e05c-105">Otherwise the column is empty.</span></span>

      <span data-ttu-id="1e05c-106">\[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e05c-106">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: appendColumn(values)
    fullName: appendColumn(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'appendColumn(values?: string[]): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1e05c-107">Beispiele</span><span class="sxs-lookup"><span data-stu-id="1e05c-107">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, append a column.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          table.appendColumn(["cell0", "cell1"]);
                      }
                  }
                  return ctx.sync();
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: values
          description: '<span data-ttu-id="1e05c-108">Optional.</span><span class="sxs-lookup"><span data-stu-id="1e05c-108">Optional.</span></span> <span data-ttu-id="1e05c-109">Zeichenfolgen, die in der neuen Spalte einzufügen sind, angegeben als Array.</span><span class="sxs-lookup"><span data-stu-id="1e05c-109">Strings to insert in the new column, specified as an array.</span></span> <span data-ttu-id="1e05c-110">Darf nicht mehr Werte als Zeilen in der Tabelle enthalten.</span><span class="sxs-lookup"><span data-stu-id="1e05c-110">Must not have more values than rows in the table.</span></span>'
          type:
            - 'string[]'
  - uid: onenote.OneNote.Table.appendRow
    summary: |-
      <span data-ttu-id="1e05c-111">Fügt am Ende der Tabelle eine Zeile hinzu.</span><span class="sxs-lookup"><span data-stu-id="1e05c-111">Adds a row to the end of the table.</span></span> <span data-ttu-id="1e05c-112">Wenn angegeben, werden die Werte in der neuen Zeile festgelegt.</span><span class="sxs-lookup"><span data-stu-id="1e05c-112">Values, if specified, are set in the new row.</span></span> <span data-ttu-id="1e05c-113">Andernfalls ist die Zeile leer.</span><span class="sxs-lookup"><span data-stu-id="1e05c-113">Otherwise the row is empty.</span></span>

      <span data-ttu-id="1e05c-114">\[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e05c-114">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: appendRow(values)
    fullName: appendRow(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'appendRow(values?: string[]): OneNote.TableRow;'
      return:
        type:
          - onenote.OneNote.TableRow
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1e05c-115">Beispiele</span><span class="sxs-lookup"><span data-stu-id="1e05c-115">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, append a column.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          var row = table.appendRow(["cell0", "cell1"]);
                      }
                  }
                  return ctx.sync();
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: values
          description: '<span data-ttu-id="1e05c-116">Optional.</span><span class="sxs-lookup"><span data-stu-id="1e05c-116">Optional.</span></span> <span data-ttu-id="1e05c-117">Zeichenfolgen, die in der neuen Zeile einzufügen sind, angegeben als Array.</span><span class="sxs-lookup"><span data-stu-id="1e05c-117">Strings to insert in the new row, specified as an array.</span></span> <span data-ttu-id="1e05c-118">Darf nicht mehr Werte als Spalten in der Tabelle enthalten.</span><span class="sxs-lookup"><span data-stu-id="1e05c-118">Must not have more values than columns in the table.</span></span>'
          type:
            - 'string[]'
  - uid: onenote.OneNote.Table.borderVisible
    summary: |-
      <span data-ttu-id="1e05c-119">Ruft ab oder legt fest, ob die Rahmen angezeigt werden oder nicht.</span><span class="sxs-lookup"><span data-stu-id="1e05c-119">Gets or sets whether the borders are visible or not.</span></span> <span data-ttu-id="1e05c-120">„True“, wenn sie sichtbar sind, „false“, wenn sie ausgeblendet sind.</span><span class="sxs-lookup"><span data-stu-id="1e05c-120">True if they are visible, false if they are hidden.</span></span>

      <span data-ttu-id="1e05c-121">\[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e05c-121">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: borderVisible
    fullName: borderVisible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderVisible: boolean;'
      return:
        type:
          - boolean
  - uid: onenote.OneNote.Table.clear
    summary: |-
      <span data-ttu-id="1e05c-122">Löscht den Inhalt der Tabelle.</span><span class="sxs-lookup"><span data-stu-id="1e05c-122">Clears the contents of the table.</span></span>

      <span data-ttu-id="1e05c-123">\[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e05c-123">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: ''
  - uid: onenote.OneNote.Table.columnCount
    summary: |-
      <span data-ttu-id="1e05c-124">Ruft die Anzahl der Spalten in der Tabelle ab.</span><span class="sxs-lookup"><span data-stu-id="1e05c-124">Gets the number of columns in the table.</span></span>

      <span data-ttu-id="1e05c-125">\[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e05c-125">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: columnCount
    fullName: columnCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly columnCount: number;'
      return:
        type:
          - number
  - uid: onenote.OneNote.Table.context
    summary: '<span data-ttu-id="1e05c-126">Der Anforderungskontext, der mit dem Objekt verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="1e05c-126">The request context associated with the object.</span></span> <span data-ttu-id="1e05c-127">Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="1e05c-127">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - onenote.OneNote.RequestContext
  - uid: onenote.OneNote.Table.getCell
    summary: |-
      <span data-ttu-id="1e05c-128">Ruft die Tabellenzelle in einer angegebenen Zeile und Spalte ab.</span><span class="sxs-lookup"><span data-stu-id="1e05c-128">Gets the table cell at a specified row and column.</span></span>

      <span data-ttu-id="1e05c-129">\[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e05c-129">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'getCell(rowIndex, cellIndex)'
    fullName: 'getCell(rowIndex, cellIndex)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCell(rowIndex: number, cellIndex: number): OneNote.TableCell;'
      return:
        type:
          - onenote.OneNote.TableCell
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1e05c-130">Beispiele</span><span class="sxs-lookup"><span data-stu-id="1e05c-130">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, get a cell in the second row and third column.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          var cell = table.getCell(2 /*Row Index*/, 3 /*Column Index*/);
                      }
                  }
                  return ctx.sync();
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: rowIndex
          description: <span data-ttu-id="1e05c-131">Der Index der Zeile.</span><span class="sxs-lookup"><span data-stu-id="1e05c-131">The index of the row.</span></span>
          type:
            - number
        - id: cellIndex
          description: <span data-ttu-id="1e05c-132">Der Index der Zelle in der Zeile.</span><span class="sxs-lookup"><span data-stu-id="1e05c-132">The index of the cell in the row.</span></span>
          type:
            - number
  - uid: onenote.OneNote.Table.id
    summary: |-
      <span data-ttu-id="1e05c-133">Ruft die ID der Tabelle ab.</span><span class="sxs-lookup"><span data-stu-id="1e05c-133">Gets the ID of the table.</span></span> <span data-ttu-id="1e05c-134">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1e05c-134">Read-only.</span></span>

      <span data-ttu-id="1e05c-135">\[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e05c-135">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: onenote.OneNote.Table.insertColumn
    summary: |-
      <span data-ttu-id="1e05c-p108">Fügt eine Spalte an der angegebenen Indexposition in der Tabelle ein. Angegebene Werte werden ggf. in der neuen Spalte festgelegt. Andernfalls ist die Spalte leer.</span><span class="sxs-lookup"><span data-stu-id="1e05c-p108">Inserts a column at the given index in the table. Values, if specified, are set in the new column. Otherwise the column is empty.</span></span>

      <span data-ttu-id="1e05c-139">\[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e05c-139">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'insertColumn(index, values)'
    fullName: 'insertColumn(index, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertColumn(index: number, values?: string[]): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1e05c-140">Beispiele</span><span class="sxs-lookup"><span data-stu-id="1e05c-140">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, insert a column at index two.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          table.insertColumn(2, ["cell0", "cell1"]);
                      }
                  }
                  return ctx.sync();
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: '<span data-ttu-id="1e05c-141">Index, an dem die Spalte in die Tabelle eingefügt wird.</span><span class="sxs-lookup"><span data-stu-id="1e05c-141">Index where the column will be inserted in the table.</span></span>'
          type:
            - number
        - id: values
          description: '<span data-ttu-id="1e05c-142">Optional.</span><span class="sxs-lookup"><span data-stu-id="1e05c-142">Optional.</span></span> <span data-ttu-id="1e05c-143">Zeichenfolgen, die in der neuen Spalte einzufügen sind, angegeben als Array.</span><span class="sxs-lookup"><span data-stu-id="1e05c-143">Strings to insert in the new column, specified as an array.</span></span> <span data-ttu-id="1e05c-144">Darf nicht mehr Werte als Zeilen in der Tabelle enthalten.</span><span class="sxs-lookup"><span data-stu-id="1e05c-144">Must not have more values than rows in the table.</span></span>'
          type:
            - 'string[]'
  - uid: onenote.OneNote.Table.insertRow
    summary: |-
      <span data-ttu-id="1e05c-p110">Fügt eine Zeile an der angegebenen Indexposition in der Tabelle ein. Angegebene Werte werden ggf. in der neuen Zeile festgelegt. Andernfalls ist die Zeile leer.</span><span class="sxs-lookup"><span data-stu-id="1e05c-p110">Inserts a row at the given index in the table. Values, if specified, are set in the new row. Otherwise the row is empty.</span></span>

      <span data-ttu-id="1e05c-148">\[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e05c-148">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: 'insertRow(index, values)'
    fullName: 'insertRow(index, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertRow(index: number, values?: string[]): OneNote.TableRow;'
      return:
        type:
          - onenote.OneNote.TableRow
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1e05c-149">Beispiele</span><span class="sxs-lookup"><span data-stu-id="1e05c-149">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, insert a row at index two.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          var row = table.insertRow(2, ["cell0", "cell1"]);
                      }
                  }
                  return ctx.sync();
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: index
          description: '<span data-ttu-id="1e05c-150">Index, an dem die Zeile in die Tabelle eingefügt wird.</span><span class="sxs-lookup"><span data-stu-id="1e05c-150">Index where the row will be inserted in the table.</span></span>'
          type:
            - number
        - id: values
          description: '<span data-ttu-id="1e05c-151">Optional.</span><span class="sxs-lookup"><span data-stu-id="1e05c-151">Optional.</span></span> <span data-ttu-id="1e05c-152">Zeichenfolgen, die in der neuen Zeile einzufügen sind, angegeben als Array.</span><span class="sxs-lookup"><span data-stu-id="1e05c-152">Strings to insert in the new row, specified as an array.</span></span> <span data-ttu-id="1e05c-153">Darf nicht mehr Werte als Spalten in der Tabelle enthalten.</span><span class="sxs-lookup"><span data-stu-id="1e05c-153">Must not have more values than columns in the table.</span></span>'
          type:
            - 'string[]'
  - uid: onenote.OneNote.Table.load
    summary: <span data-ttu-id="1e05c-154">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="1e05c-154">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1e05c-155">Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.</span><span class="sxs-lookup"><span data-stu-id="1e05c-155">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="1e05c-156">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="1e05c-156">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="1e05c-157">`load(option?: string | string[]): OneNote.Table`-Wobei Option eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="1e05c-157">`load(option?: string | string[]): OneNote.Table` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="1e05c-158">`load(option?: { select?: string; expand?: string; }): OneNote.Table`-Bei Option. Select handelt es sich um eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="1e05c-158">`load(option?: { select?: string; expand?: string; }): OneNote.Table` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="1e05c-159">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Table`Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="1e05c-159">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): OneNote.Table` - Only available on collection types.</span></span> <span data-ttu-id="1e05c-160">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="1e05c-160">It is similar to the preceding signature.</span></span> <span data-ttu-id="1e05c-161">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis einbezogen werden können.</span><span class="sxs-lookup"><span data-stu-id="1e05c-161">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="1e05c-162">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="1e05c-162">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="1e05c-163">Wenn Option. Top angegeben ist, wird das Resultset gestartet, nachdem die angegebene Anzahl von Elementen übersprungen wurde.</span><span class="sxs-lookup"><span data-stu-id="1e05c-163">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OneNote.Interfaces.TableLoadOptions): OneNote.Table;'
      return:
        type:
          - onenote.OneNote.Table
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - onenote.OneNote.Interfaces.TableLoadOptions
  - uid: onenote.OneNote.Table.load_1
    summary: <span data-ttu-id="1e05c-164">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="1e05c-164">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1e05c-165">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="1e05c-165">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): OneNote.Table;'
      return:
        type:
          - onenote.OneNote.Table
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1e05c-166">Beispiele</span><span class="sxs-lookup"><span data-stu-id="1e05c-166">Examples</span></span>

          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // For each table, log properties.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          ctx.load(table);
                          return ctx.sync().then(function() {
                              console.log("Table Id: " + table.id);
                              console.log("Row Count: " + table.rowCount);
                              console.log("Column Count: " + table.columnCount);
                              return ctx.sync();
                          });
                      }
                  }
              });
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          OneNote.run(function(ctx) {
              var app = ctx.application;
              var outline = app.getActiveOutline();
              
              // Queue a command to load outline.paragraphs and their types.
              ctx.load(outline, "paragraphs, paragraphs/type");
              
              // Run the queued commands, and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  var paragraphs = outline.paragraphs;
                  
                  // for each table, log its paragraph id.
                  for (var i = 0; i < paragraphs.items.length; i++) {
                      var paragraph = paragraphs.items[i];
                      if (paragraph.type == "Table") {
                          var table = paragraph.table;
                          ctx.load(table, "paragraph/id, rows/id");
                          return ctx.sync().then(function() {
                              console.log("Paragraph Id: " + table.paragraph.id);
                              var rows = table.rows;
                              
                              // for each rows in the table, log row index and id.
                              for (var i = 0; i < rows.items.length; i++) {
                                  console.log("Row " + i + " Id: " + rows.items[i].id);
                              }
                              return ctx.sync();
                          });
                      }
                  }
              })
          })
          .catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="1e05c-167">Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="1e05c-167">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: onenote.OneNote.Table.load_2
    summary: <span data-ttu-id="1e05c-168">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="1e05c-168">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1e05c-169">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="1e05c-169">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): OneNote.Table;'
      return:
        type:
          - onenote.OneNote.Table
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="1e05c-170">Dabei ist propertyNamesAndPaths. Select eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="1e05c-170">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: onenote.OneNote.Table.paragraph
    summary: |-
      <span data-ttu-id="1e05c-171">Ruft das Paragraph-Objekt ab, das das Table-Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="1e05c-171">Gets the Paragraph object that contains the Table object.</span></span> <span data-ttu-id="1e05c-172">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1e05c-172">Read-only.</span></span>

      <span data-ttu-id="1e05c-173">\[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e05c-173">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: paragraph
    fullName: paragraph
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraph: OneNote.Paragraph;'
      return:
        type:
          - onenote.OneNote.Paragraph
  - uid: onenote.OneNote.Table.rowCount
    summary: |-
      <span data-ttu-id="1e05c-174">Ruft die Anzahl der Zeilen in der Tabelle ab.</span><span class="sxs-lookup"><span data-stu-id="1e05c-174">Gets the number of rows in the table.</span></span>

      <span data-ttu-id="1e05c-175">\[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e05c-175">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: rowCount
    fullName: rowCount
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rowCount: number;'
      return:
        type:
          - number
  - uid: onenote.OneNote.Table.rows
    summary: |-
      <span data-ttu-id="1e05c-176">Ruft alle Zeilen der Tabelle ab.</span><span class="sxs-lookup"><span data-stu-id="1e05c-176">Gets all of the table rows.</span></span> <span data-ttu-id="1e05c-177">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1e05c-177">Read-only.</span></span>

      <span data-ttu-id="1e05c-178">\[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e05c-178">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: rows
    fullName: rows
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rows: OneNote.TableRowCollection;'
      return:
        type:
          - onenote.OneNote.TableRowCollection
  - uid: onenote.OneNote.Table.set
    summary: '<span data-ttu-id="1e05c-179">Legt mehrere Eigenschaften eines Objekts gleichzeitig fest.</span><span class="sxs-lookup"><span data-stu-id="1e05c-179">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="1e05c-180">Sie können entweder ein einfaches Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs übergeben.</span><span class="sxs-lookup"><span data-stu-id="1e05c-180">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="1e05c-181">Diese Methode hat die folgende zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="1e05c-181">This method has the following additional signature:</span></span>

      `set(properties: OneNote.Table): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.TableUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="1e05c-182">Ein JavaScript-Objekt mit Eigenschaften, die isomorphically für die Eigenschaften des Objekts strukturiert sind, für das die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="1e05c-182">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.TableUpdateData
        - id: options
          description: '<span data-ttu-id="1e05c-183">Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.</span><span class="sxs-lookup"><span data-stu-id="1e05c-183">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - OfficeExtension.UpdateOptions
  - uid: onenote.OneNote.Table.set_1
    summary: '<span data-ttu-id="1e05c-184">Legt mehrere Eigenschaften für das Objekt gleichzeitig basierend auf einem vorhandenen geladenen Objekt fest.</span><span class="sxs-lookup"><span data-stu-id="1e05c-184">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: OneNote.Table): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - onenote.OneNote.Table
  - uid: onenote.OneNote.Table.setShadingColor
    summary: |-
      <span data-ttu-id="1e05c-185">Legt die Farbe aller Zellen in der Tabelle fest.</span><span class="sxs-lookup"><span data-stu-id="1e05c-185">Sets the shading color of all cells in the table.</span></span> <span data-ttu-id="1e05c-186">Der Farbcode, auf den die Zellen festgelegt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="1e05c-186">The color code to set the cells to.</span></span>

      <span data-ttu-id="1e05c-187">\[[API-Gruppe: OneNoteApi 1,1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1e05c-187">\[ [API set: OneNoteApi 1.1](/office/dev/add-ins/reference/requirement-sets/onenote-api-requirement-sets) \]</span></span>
    name: setShadingColor(colorCode)
    fullName: setShadingColor(colorCode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setShadingColor(colorCode: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: colorCode
          description: ''
          type:
            - string
  - uid: onenote.OneNote.Table.toJSON
    summary: '<span data-ttu-id="1e05c-188">Überschreibt die `toJSON()` JavaScript-Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird.`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="1e05c-188">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="1e05c-189">.</span><span class="sxs-lookup"><span data-stu-id="1e05c-189"></span></span> <span data-ttu-id="1e05c-190">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="1e05c-190"></span></span><!-- --><span data-ttu-id="1e05c-191">wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche OneNote. Table-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`OneNote.Interfaces.TableData`</span><span class="sxs-lookup"><span data-stu-id="1e05c-191">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original OneNote.Table object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `OneNote.Interfaces.TableData`</span></span><!-- --><span data-ttu-id="1e05c-192">), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="1e05c-192">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): OneNote.Interfaces.TableData;'
      return:
        type:
          - onenote.OneNote.Interfaces.TableData
        description: ''
  - uid: onenote.OneNote.Table.track
    summary: '<span data-ttu-id="1e05c-193">Nachverfolgung des Objekts zwecks automatischer Anpassung auf der Grundlage der umgebenden Änderungen im Dokument.</span><span class="sxs-lookup"><span data-stu-id="1e05c-193">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="1e05c-194">Dieser Aufruf ist eine Kurzschreibweise für context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="1e05c-194">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="1e05c-195">Wenn Sie dieses Objekt übergreifend für ".sync"-Aufrufe und außerhalb der sequenziellen Ausführung eines ".run"-Stapels verwenden und beim Festlegen einer Eigenschaft oder Aufrufen einer Methode für das Objekt ein "InvalidObjectPath"-Fehler zurückgegeben wird, hätte das Objekt der nachverfolgten Objektsammlung hinzugefügt werden müssen, in der das Objekt ursprünglich erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="1e05c-195">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): OneNote.Table;'
      return:
        type:
          - onenote.OneNote.Table
        description: ''
  - uid: onenote.OneNote.Table.untrack
    summary: '<span data-ttu-id="1e05c-196">Gibt den diesem Objekt zugewiesenen Arbeitsspeicher frei, wenn das Objekt zuvor nachverfolgt wurde.</span><span class="sxs-lookup"><span data-stu-id="1e05c-196">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="1e05c-197">Dieser Aufruf stellt eine Kurzschreibweise für context.trackedObjects.remove(thisObject) dar.</span><span class="sxs-lookup"><span data-stu-id="1e05c-197">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="1e05c-198">Viele nachverfolgte Objekte verlangsamen die Ausführung der Hostanwendung, also achten Sie darauf, alle hinzugefügten Objekte nach abgeschlossener Verwendung freizugeben.</span><span class="sxs-lookup"><span data-stu-id="1e05c-198">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="1e05c-199">Sie müssen "context.sync()" aufrufen, damit die Freigabe des Arbeitsspeichers wirksam wird.</span><span class="sxs-lookup"><span data-stu-id="1e05c-199">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): OneNote.Table;'
      return:
        type:
          - onenote.OneNote.Table
        description: ''