### YamlMime:UniversalReference
ms.openlocfilehash: c964997bb038ce43ea3871feb349955f288bbd2c
ms.sourcegitcommit: e9cb2f2717e1cf062a2f6ffe6a382d7b9b934ba0
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 09/21/2018
ms.locfileid: "24063318"
items:
- uid: office
  name: office
  fullName: office
  langs:
  - typeScript
  type: package
  children:
  - office.Office.ActiveView
  - office.Office.AddBindingFromNamedItemOptions
  - office.Office.AddBindingFromPromptOptions
  - office.Office.AddBindingFromSelectionOptions
  - office.Office.AddinCommands.Event
  - office.Office.AddinCommands.Source
  - office.Office.AsyncContextOptions
  - office.Office.AsyncResult
  - office.Office.AsyncResultStatus
  - office.Office.Binding
  - office.Office.BindingDataChangedEventArgs
  - office.Office.Bindings
  - office.Office.BindingSelectionChangedEventArgs
  - office.Office.BindingType
  - office.Office.CoercionType
  - office.Office.Context
  - office.Office.ContextInformation
  - office.Office.CustomXmlNode
  - office.Office.CustomXMLNodeType
  - office.Office.CustomXmlPart
  - office.Office.CustomXmlParts
  - office.Office.CustomXmlPrefixMappings
  - office.Office.Dialog
  - office.Office.DialogOptions
  - office.Office.Document
  - office.Office.DocumentMode
  - office.Office.DocumentSelectionChangedEventArgs
  - office.Office.Error
  - office.Office.EventType
  - office.Office.File
  - office.Office.FileProperties
  - office.Office.FileType
  - office.Office.FilterType
  - office.Office.GetBindingDataOptions
  - office.Office.GetFileOptions
  - office.Office.GetSelectedDataOptions
  - office.Office.GoToByIdOptions
  - office.Office.GoToType
  - office.Office.HostType
  - office.Office.Index
  - office.Office.InitializationReason
  - office.Office.initialize
  - office.Office.IPromiseConstructor
  - office.Office.MatrixBinding
  - office.Office.NodeDeletedEventArgs
  - office.Office.NodeInsertedEventArgs
  - office.Office.NodeReplacedEventArgs
  - office.Office.OfficeTheme
  - office.Office.onReady
  - office.Office.PlatformType
  - office.Office.ProjectProjectFields
  - office.Office.ProjectResourceFields
  - office.Office.ProjectTaskFields
  - office.Office.ProjectViewTypes
  - office.Office.RangeCoordinates
  - office.Office.RangeFormatConfiguration
  - office.Office.RemoveHandlerOptions
  - office.Office.RequirementSetSupport
  - office.Office.SaveSettingsOptions
  - office.Office.select
  - office.Office.SelectionMode
  - office.Office.SetBindingDataOptions
  - office.Office.SetSelectedDataOptions
  - office.Office.Settings
  - office.Office.SettingsChangedEventArgs
  - office.Office.Slice
  - office.Office.Table
  - office.Office.TableBinding
  - office.Office.TableData
  - office.Office.TextBinding
  - office.Office.UI
  - office.Office.useShortNamespace
  - office.Office.ValueFormat
  - office.OfficeExtension.ClientObject
  - office.OfficeExtension.ClientRequestContext
  - office.OfficeExtension.ClientResult
  - office.OfficeExtension.DebugInfo
  - office.OfficeExtension.EmbeddedOptions
  - office.OfficeExtension.EmbeddedSession
  - office.OfficeExtension.Error
  - office.OfficeExtension.ErrorCodes
  - office.OfficeExtension.EventHandlerResult
  - office.OfficeExtension.EventHandlers
  - office.OfficeExtension.EventInfo
  - office.OfficeExtension.LoadOption
  - office.OfficeExtension.RequestContextDebugInfo
  - office.OfficeExtension.RequestUrlAndHeaderInfo
  - office.OfficeExtension.RunOptions
  - office.OfficeExtension.TrackedObjects
  - office.OfficeExtension.UpdateOptions
- uid: office.Office.initialize
  summary: >-
    Tritt ein, wenn die Laufzeitumgebung geladen wird und das Add-In bereit für die Interaktion mit der Anwendung und dem gehosteten Dokument ist.


    Reason-Parameter der Initialize-Ereignis Listener-Funktion gibt eine `InitializationReason` -Enumerationswert ab, der angibt, wie die Initialisierung aufgetreten ist. Eine Aufgabenbereich- oder Inhalts-add-in kann auf zwei Arten initialisiert werden:


    - Der Benutzer eingefügt nur aus der zuletzt verwendeten-Add-ins-Abschnitt der Add-in-Dropdown-Liste auf der Registerkarte Einfügen des Menübands in Office-hostanwendung oder aus im Add-in-Dialogfeld einfügen.


    - Der Benutzer hat ein Dokument geöffnet, das das Add-In bereits enthält.


    *Hinweis*: der Reason-Parameter der Initialize-Ereignis-Listener-Funktion nur gibt ein `InitializationReason` -Enumerationswert für Aufgabenbereich und Inhalts-add-ins. Es gibt keinen Wert für Outlook-add-ins zurück.
  remarks: "**Supportdetails**\n\nEin Häkchen (v) in der folgenden Matrix weist darauf hin, dass diese Methode in der entsprechenden Office-Hostanwendung unterstützt wird. Eine leere Zelle weist darauf hin, dass die Office-Hostanwendung diese Methode nicht unterstützt.\n\nWeitere Informationen zu Office-Host-Anwendung und Server-Anforderungen, finden Sie unter [Anforderungen für die Ausführung von Office-Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.\n\n*Unterstützte Hosts nach Plattform* <table> <tr><th> </th><th> Office für Windows Desktop </th><th> Office Online (im Browser) </th><th> Office für iPad </th><th> OWA für mobile Geräte </th><th> Office für Mac </th></tr> <tr><td><strong>Zugriff</strong></td><td> </td><td> v </td><td> </td><td> </td><td> </td></tr> <tr><td><strong>Excel</strong></td><td> v </td><td> v </td><td> v </td><td> </td><td> </td></tr> <tr><td><strong>Outlook</strong></td><td> v </td><td> v </td><td> </td><td> v </td><td> v </td></tr> <tr><td><strong>PowerPoint</strong></td><td> v </td><td> v </td><td> v </td><td> </td><td> </td></tr> <tr><td><strong>Projekt</strong></td><td> v </td><td> </td><td> </td><td> </td><td> </td></tr> <tr><td><strong>Word</strong></td><td> v </td><td> v </td><td> v </td><td> </td><td> </td></tr> </table>\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// You can use the value of the InitializationEnumeration to implement different logic for\n// when the add-in is first inserted versus when it is already part of the document.\n// The following example shows some simple logic that uses the value of the reason parameter\n// to display how the task pane or content add-in was initialized.\nOffice.initialize = function (reason) {\n    // Checks for the DOM to load using the jQuery ready function.\n    $(document).ready(function () {\n    // After the DOM is loaded, code specific to the add-in can run.\n    // Display initialization reason.\n    if (reason == \"inserted\")\n    write(\"The add-in was just inserted.\");\n\n    if (reason == \"documentOpened\")\n    write(\"The add-in is already part of the document.\");\n    });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: initialize(reason)
  fullName: office.Office.initialize
  langs:
  - typeScript
  type: function
  syntax:
    content: 'export function initialize(reason: InitializationReason): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: reason
      description: Gibt an, wie die app initialisiert wurde.
      type:
      - office.Office.InitializationReason
- uid: office.Office.onReady
  summary: Stellt sicher, dass die Office JavaScript-APIs werden durch das Add-in aufgerufen werden können. Wenn das Framework noch initialisiert noch nicht, wird der Rückruf oder Zusage warten Sie, bis der Office-Host-API-Aufrufe zu akzeptieren bereit ist. Beachten Sie, obwohl diese API innerhalb eines Office-Add-Ins verwendet werden soll, sie auch außerhalb des Add-Ins verwendet werden kann. Sobald Office.js feststellt, dass es außerhalb einer Office-Host-Anwendung ausgeführt wird, wird es in diesem Fall rufen Sie den Rückruf und lösen die Zusage mit "Null" für den Host und die Plattform.
  name: onReady(callback)
  fullName: office.Office.onReady
  langs:
  - typeScript
  type: function
  syntax:
    content: 'export function onReady(callback?: (info: { host: HostType, platform: PlatformType }) => any): Promise<{ host: HostType, platform: PlatformType }>;'
    return:
      type:
      - 'Promise<{ host: HostType, platform: PlatformType }>'
      description: Eine Zusage, die das Host und Plattform Info, sobald die Initialisierung abgeschlossen ist.
    parameters:
    - id: callback
      description: Eine optionale Callback-Methode, die das Host- und Plattform Info entgegennimmt. Alternativ kann statt einen Rückruf verwenden, ein Add-in einfach umfassende durch die Funktion zurückgegebene aufzulösende warten.
      type:
      - '(info: { host: HostType, platform: PlatformType }) => any'
- uid: office.Office.select
  summary: Gibt eine Zusage eines Objekts im Ausdruck beschrieben. Rückruf wird nur aufgerufen, wenn-Methode schlägt fehl.
  remarks: >-
    **Supportdetails**


    Ein Häkchen (v) in der folgenden Matrix weist darauf hin, dass diese Methode in der entsprechenden Office-Hostanwendung unterstützt wird. Eine leere Zelle weist darauf hin, dass die Office-Hostanwendung diese Methode nicht unterstützt.


    Weitere Informationen zu Office-Host-Anwendung und Server-Anforderungen, finden Sie unter [Anforderungen für die Ausführung von Office-Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.


    *Unterstützte Hosts nach Plattform* <table> <tr><th> </th><th> Office für Windows Desktop </th><th> Office Online (im Browser) </th><th> Office für iPad </th></tr> <tr><td><strong>Zugriff</strong></td><td> </td><td> v </td><td> </td></tr> <tr><td><strong>Excel</strong></td><td> v </td><td> v </td><td> v </td></tr> <tr><td><strong>Word</strong></td><td> v </td><td> </td><td> v </td></tr> </table>

    #### <a name="examples"></a>Beispiele


    ```javascript

    // The following code example uses the select method to retrieve a binding with the id "cities" from

    // the Bindings collection, and then calls the addHandlerAsync method to add an event handler for the

    // dataChanged event of the binding.

    function addBindingDataChangedEventHandler() {
        Office.select("bindings#cities", function onError(){}).addHandlerAsync(Office.EventType.BindingDataChanged,
        function (eventArgs) {
            doSomethingWithBinding(eventArgs.binding);
        });
    }

    ```
  name: select(expression, callback)
  fullName: office.Office.select
  langs:
  - typeScript
  type: function
  syntax:
    content: 'export function select(expression: string, callback?: (result: AsyncResult<any>) => void): Binding;'
    return:
      type:
      - Binding
      description: ''
    parameters:
    - id: expression
      description: Das Objekt abgerufen werden sollen. Beispiel "Bindungen\#BindingName", ruft eine Bindung Zusage für eine Bindung mit dem Namen 'BindingName'
      type:
      - string
    - id: callback
      description: Optional. Eine Funktion, die bei der Rückgabe des Rückrufs aufgerufen wird, dessen einziger Parameter vom Typ[Office.AsyncResult](xref:office.Office.AsyncResult)ist<!-- -->.
      type:
      - '(result: AsyncResult<any>) => void'
- uid: office.Office.useShortNamespace
  summary: Schaltet aktiviert und deaktiviert die `Office` Alias für die vollständige `Microsoft.Office.WebExtension` Namespace.
  remarks: "**Supportdetails**\n\nEin Häkchen (v) in der folgenden Matrix weist darauf hin, dass diese Methode in der entsprechenden Office-Hostanwendung unterstützt wird. Eine leere Zelle weist darauf hin, dass die Office-Hostanwendung diese Methode nicht unterstützt.\n\nWeitere Informationen zu Office-Host-Anwendung und Server-Anforderungen, finden Sie unter [Anforderungen für die Ausführung von Office-Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.\n\n*Unterstützte Hosts nach Plattform* <table> <tr><th> </th><th> Office für Windows Desktop </th><th> Office Online (im Browser) </th><th> Office für iPad </th><th> OWA für mobile Geräte </th><th> Office für Mac </th></tr> <tr><td><strong>Zugriff</strong></td><td> </td><td> v </td><td> </td><td> </td><td> </td></tr> <tr><td><strong>Excel</strong></td><td> v </td><td> v </td><td> v </td><td> </td><td> </td></tr> <tr><td><strong>Outlook</strong></td><td> v </td><td> v </td><td> </td><td> v </td><td> v </td></tr> <tr><td><strong>PowerPoint</strong></td><td> v </td><td> v </td><td> v </td><td> </td><td> </td></tr> <tr><td><strong>Projekt</strong></td><td> v </td><td> </td><td> </td><td> </td><td> </td></tr> <tr><td><strong>Word</strong></td><td> v </td><td> v </td><td> v </td><td> </td><td> </td></tr> </table>\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\nfunction startUsingShortNamespace() {\n    if (typeof Office === 'undefined') {\n        Microsoft.Office.WebExtension.useShortNamespace(true);\n    }\n    else {\n        Office.useShortNamespace(true);\n    }\n    write('Office alias is now ' + typeof Office);\n}\n\nfunction stopUsingShortNamespace() {\n    if (typeof Office === 'undefined') {\n        Microsoft.Office.WebExtension.useShortNamespace(false);\n    }\n    else {\n        Office.useShortNamespace(false);\n    }\n    write('Office alias is now ' + typeof Office);\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: useShortNamespace(useShortNamespace)
  fullName: office.Office.useShortNamespace
  langs:
  - typeScript
  type: function
  syntax:
    content: 'export function useShortNamespace(useShortNamespace: boolean): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: useShortNamespace
      description: True, um das Kontextmenü Alias verwenden. andernfalls False, um es zu deaktivieren. Der Standardwert ist true.
      type:
      - boolean
references:
- uid: office.Office.ActiveView
  name: Office.ActiveView
- uid: office.Office.AddBindingFromNamedItemOptions
  name: Office.AddBindingFromNamedItemOptions
- uid: office.Office.AddBindingFromPromptOptions
  name: Office.AddBindingFromPromptOptions
- uid: office.Office.AddBindingFromSelectionOptions
  name: Office.AddBindingFromSelectionOptions
- uid: office.Office.AddinCommands.Event
  name: Office.AddinCommands.Event
- uid: office.Office.AddinCommands.Source
  name: Office.AddinCommands.Source
- uid: office.Office.AsyncContextOptions
  name: Office.AsyncContextOptions
- uid: office.Office.AsyncResult
  name: Office.AsyncResult
- uid: office.Office.AsyncResultStatus
  name: Office.AsyncResultStatus
- uid: office.Office.Binding
  name: Office.Binding
- uid: office.Office.BindingDataChangedEventArgs
  name: Office.BindingDataChangedEventArgs
- uid: office.Office.Bindings
  name: Office.Bindings
- uid: office.Office.BindingSelectionChangedEventArgs
  name: Office.BindingSelectionChangedEventArgs
- uid: office.Office.BindingType
  name: Office.BindingType
- uid: office.Office.CoercionType
  name: Office.CoercionType
- uid: office.Office.Context
  name: Office.Context
- uid: office.Office.ContextInformation
  name: Office.ContextInformation
- uid: office.Office.CustomXmlNode
  name: Office.CustomXmlNode
- uid: office.Office.CustomXMLNodeType
  name: Office.CustomXMLNodeType
- uid: office.Office.CustomXmlPart
  name: Office.CustomXmlPart
- uid: office.Office.CustomXmlParts
  name: Office.CustomXmlParts
- uid: office.Office.CustomXmlPrefixMappings
  name: Office.CustomXmlPrefixMappings
- uid: office.Office.Dialog
  name: Office.Dialog
- uid: office.Office.DialogOptions
  name: Office.DialogOptions
- uid: office.Office.Document
  name: Office.Document
- uid: office.Office.DocumentMode
  name: Office.DocumentMode
- uid: office.Office.DocumentSelectionChangedEventArgs
  name: Office.DocumentSelectionChangedEventArgs
- uid: office.Office.Error
  name: Office.Error
- uid: office.Office.EventType
  name: Office.EventType
- uid: office.Office.File
  name: Office.File
- uid: office.Office.FileProperties
  name: Office.FileProperties
- uid: office.Office.FileType
  name: Office.FileType
- uid: office.Office.FilterType
  name: Office.FilterType
- uid: office.Office.GetBindingDataOptions
  name: Office.GetBindingDataOptions
- uid: office.Office.GetFileOptions
  name: Office.GetFileOptions
- uid: office.Office.GetSelectedDataOptions
  name: Office.GetSelectedDataOptions
- uid: office.Office.GoToByIdOptions
  name: Office.GoToByIdOptions
- uid: office.Office.GoToType
  name: Office.GoToType
- uid: office.Office.HostType
  name: Office.HostType
- uid: office.Office.Index
  name: Office.Index
- uid: office.Office.InitializationReason
  name: Office.InitializationReason
- uid: office.Office.IPromiseConstructor
  name: Office.IPromiseConstructor
- uid: office.Office.MatrixBinding
  name: Office.MatrixBinding
- uid: office.Office.NodeDeletedEventArgs
  name: Office.NodeDeletedEventArgs
- uid: office.Office.NodeInsertedEventArgs
  name: Office.NodeInsertedEventArgs
- uid: office.Office.NodeReplacedEventArgs
  name: Office.NodeReplacedEventArgs
- uid: office.Office.OfficeTheme
  name: Office.OfficeTheme
- uid: office.Office.PlatformType
  name: Office.PlatformType
- uid: office.Office.ProjectProjectFields
  name: Office.ProjectProjectFields
- uid: office.Office.ProjectResourceFields
  name: Office.ProjectResourceFields
- uid: office.Office.ProjectTaskFields
  name: Office.ProjectTaskFields
- uid: office.Office.ProjectViewTypes
  name: Office.ProjectViewTypes
- uid: office.Office.RangeCoordinates
  name: Office.RangeCoordinates
- uid: office.Office.RangeFormatConfiguration
  name: Office.RangeFormatConfiguration
- uid: office.Office.RemoveHandlerOptions
  name: Office.RemoveHandlerOptions
- uid: office.Office.RequirementSetSupport
  name: Office.RequirementSetSupport
- uid: office.Office.SaveSettingsOptions
  name: Office.SaveSettingsOptions
- uid: office.Office.SelectionMode
  name: Office.SelectionMode
- uid: office.Office.SetBindingDataOptions
  name: Office.SetBindingDataOptions
- uid: office.Office.SetSelectedDataOptions
  name: Office.SetSelectedDataOptions
- uid: office.Office.Settings
  name: Office.Settings
- uid: office.Office.SettingsChangedEventArgs
  name: Office.SettingsChangedEventArgs
- uid: office.Office.Slice
  name: Office.Slice
- uid: office.Office.Table
  name: Office.Table
- uid: office.Office.TableBinding
  name: Office.TableBinding
- uid: office.Office.TableData
  name: Office.TableData
- uid: office.Office.TextBinding
  name: Office.TextBinding
- uid: office.Office.UI
  name: Office.UI
- uid: office.Office.ValueFormat
  name: Office.ValueFormat
- uid: office.OfficeExtension.ClientObject
  name: OfficeExtension.ClientObject
- uid: office.OfficeExtension.ClientRequestContext
  name: OfficeExtension.ClientRequestContext
- uid: office.OfficeExtension.ClientResult
  name: OfficeExtension.ClientResult
- uid: office.OfficeExtension.DebugInfo
  name: OfficeExtension.DebugInfo
- uid: office.OfficeExtension.EmbeddedOptions
  name: OfficeExtension.EmbeddedOptions
- uid: office.OfficeExtension.EmbeddedSession
  name: OfficeExtension.EmbeddedSession
- uid: office.OfficeExtension.Error
  name: OfficeExtension.Error
- uid: office.OfficeExtension.ErrorCodes
  name: OfficeExtension.ErrorCodes
- uid: office.OfficeExtension.EventHandlerResult
  name: OfficeExtension.EventHandlerResult
- uid: office.OfficeExtension.EventHandlers
  name: OfficeExtension.EventHandlers
- uid: office.OfficeExtension.EventInfo
  name: OfficeExtension.EventInfo
- uid: office.OfficeExtension.LoadOption
  name: OfficeExtension.LoadOption
- uid: office.OfficeExtension.RequestContextDebugInfo
  name: OfficeExtension.RequestContextDebugInfo
- uid: office.OfficeExtension.RequestUrlAndHeaderInfo
  name: OfficeExtension.RequestUrlAndHeaderInfo
- uid: office.OfficeExtension.RunOptions
  name: OfficeExtension.RunOptions
- uid: office.OfficeExtension.TrackedObjects
  name: OfficeExtension.TrackedObjects
- uid: office.OfficeExtension.UpdateOptions
  name: OfficeExtension.UpdateOptions
