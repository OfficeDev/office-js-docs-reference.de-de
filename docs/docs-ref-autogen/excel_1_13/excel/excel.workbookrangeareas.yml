### YamlMime:TSType
name: Excel.WorkbookRangeAreas
uid: excel!Excel.WorkbookRangeAreas:class
package: excel!
fullName: Excel.WorkbookRangeAreas
summary: >-
  Stellt eine Auflistung von einem oder mehreren rechteckigen Bereichen in mehreren Arbeitsblättern dar.


  \[[API-Satz: ExcelApi 1.12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: addresses
  uid: excel!Excel.WorkbookRangeAreas#addresses:member
  package: excel!
  fullName: addresses
  summary: >-
    Gibt ein Array von Adressen im A1-Format zurück. Adresswerte enthalten den Arbeitsblattnamen für jeden rechteckigen Zellenblock (z. B. "Sheet1! A1:B4, Sheet1! D1:D4"). Schreibgeschützt.


    \[[API-Satz: ExcelApi 1.12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly addresses: string[];'
    return:
      type: string[]
- name: areas
  uid: excel!Excel.WorkbookRangeAreas#areas:member
  package: excel!
  fullName: areas
  summary: >-
    Gibt das `RangeAreasCollection` Objekt zurück. Jedes `RangeAreas` In der Auflistung stellt einen oder mehrere Rechteckbereiche in einem Arbeitsblatt dar.


    \[[API-Satz: ExcelApi 1.12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly areas: Excel.RangeAreasCollection;'
    return:
      type: <xref uid="excel!Excel.RangeAreasCollection:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/42-range/direct-precedents.yaml\nawait Excel.run(async (context) => {\n  // Precedents are cells referenced by the formula in a cell.\n  let range = context.workbook.getActiveCell();\n  let directPrecedents = range.getDirectPrecedents();\n  range.load(\"address\");\n  directPrecedents.areas.load(\"address\");\n  await context.sync();\n\n  console.log(`Direct precedent cells of ${range.address}:`);\n\n  // Use the direct precedents API to loop through precedents of the active cell. \n  for (var i = 0; i < directPrecedents.areas.items.length; i++) {\n    // Highlight and console the address of each precedent cell.\n    directPrecedents.areas.items[i].format.fill.color = \"Yellow\";\n    console.log(`  ${directPrecedents.areas.items[i].address}`);\n  }\n  await context.sync();\n});\n```"
- name: context
  uid: excel!Excel.WorkbookRangeAreas#context:member
  package: excel!
  fullName: context
  summary: Der dem Objekt zugeordnete Anforderungskontext. Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office Hostanwendung verbunden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: ranges
  uid: excel!Excel.WorkbookRangeAreas#ranges:member
  package: excel!
  fullName: ranges
  summary: >-
    Gibt Bereiche zurück, aus denen dieses Objekt in einem `RangeCollection` Objekt besteht.


    \[[API-Satz: ExcelApi 1.12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly ranges: Excel.RangeCollection;'
    return:
      type: <xref uid="excel!Excel.RangeCollection:class" />
methods:
- name: getRangeAreasBySheet(key)
  uid: excel!Excel.WorkbookRangeAreas#getRangeAreasBySheet:member(1)
  package: excel!
  fullName: getRangeAreasBySheet(key)
  summary: >-
    Gibt das Objekt basierend auf der `RangeAreas` Arbeitsblatt-ID oder dem Namen in der Auflistung zurück.


    \[[API-Satz: ExcelApi 1.12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRangeAreasBySheet(key: string): Excel.RangeAreas;'
    parameters:
    - id: key
      description: Der Name oder die ID des Arbeitsblatts.
      type: string
    return:
      type: <xref uid="excel!Excel.RangeAreas:class" />
      description: ''
- name: getRangeAreasOrNullObjectBySheet(key)
  uid: excel!Excel.WorkbookRangeAreas#getRangeAreasOrNullObjectBySheet:member(1)
  package: excel!
  fullName: getRangeAreasOrNullObjectBySheet(key)
  summary: >-
    Gibt das `RangeAreas` Objekt basierend auf dem Arbeitsblattnamen oder der ID in der Auflistung zurück. Wenn das Arbeitsblatt nicht vorhanden ist, gibt diese Funktion ein Objekt zurück, dessen `isNullObject` Eigenschaft auf `true`<!-- -->. Weitere Informationen finden Sie unter [*OrNullObject-Methoden und -Eigenschaften.](https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!-- -->.


    \[[API-Satz: ExcelApi 1.12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRangeAreasOrNullObjectBySheet(key: string): Excel.RangeAreas;'
    parameters:
    - id: key
      description: Der Name oder die ID des Arbeitsblatts.
      type: string
    return:
      type: <xref uid="excel!Excel.RangeAreas:class" />
      description: ''
- name: load(options)
  uid: excel!Excel.WorkbookRangeAreas#load:member(1)
  package: excel!
  fullName: load(options)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.WorkbookRangeAreasLoadOptions): Excel.WorkbookRangeAreas;'
    parameters:
    - id: options
      description: Stellt Optionen bereit, für welche Eigenschaften des Objekts geladen werden soll.
      type: <xref uid="excel!Excel.Interfaces.WorkbookRangeAreasLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.WorkbookRangeAreas:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.WorkbookRangeAreas#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.WorkbookRangeAreas;'
    parameters:
    - id: propertyNames
      description: Eine durch Trennzeichen getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.WorkbookRangeAreas:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.WorkbookRangeAreas#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Excel.WorkbookRangeAreas;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` ist eine durch Trennzeichen getrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und `propertyNamesAndPaths.expand` eine durch Trennzeichen getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="excel!Excel.WorkbookRangeAreas:class" />
      description: ''
- name: toJSON()
  uid: excel!Excel.WorkbookRangeAreas#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: Überschreibt die `toJSON()` JavaScript-Methode, um eine hilfreichere Ausgabe bereitzustellen, wenn ein API-Objekt an `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->ruft wiederum die Methode des Objekts auf, `toJSON` das an das Objekt übergeben wird.) Während die ursprüngliche Excel. WorkbookRangeAreas-Objekt ist ein API-Objekt, die `toJSON` Methode gibt ein einfaches JavaScript-Objekt zurück (typisiert als`Excel.Interfaces.WorkbookRangeAreasData`<!-- -->), die flache Kopien aller geladenen untergeordneten Eigenschaften des ursprünglichen Objekts enthält.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.WorkbookRangeAreasData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.WorkbookRangeAreasData:interface" />
      description: ''
- name: track()
  uid: excel!Excel.WorkbookRangeAreas#track:member(1)
  package: excel!
  fullName: track()
  summary: Nachverfolgung des Objekts zwecks automatischer Anpassung auf der Grundlage der umgebenden Änderungen im Dokument. Dieser Aufruf ist eine Abkürzung für `context.trackedObjects.add(thisObject)`<!-- -->. Wenn Sie dieses Objekt über `.sync` Aufrufe und außerhalb der sequenziellen Ausführung eines ".run"-Batches verwenden und beim Festlegen einer Eigenschaft oder Aufrufen einer Methode für das Objekt den Fehler "InvalidObjectPath" erhalten, mussten Sie das Objekt der Nachverfolgungsobjektauflistung hinzugefügt haben, als das Objekt zum ersten Mal erstellt wurde.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'track(): Excel.WorkbookRangeAreas;'
    return:
      type: <xref uid="excel!Excel.WorkbookRangeAreas:class" />
      description: ''
- name: untrack()
  uid: excel!Excel.WorkbookRangeAreas#untrack:member(1)
  package: excel!
  fullName: untrack()
  summary: Gibt den diesem Objekt zugewiesenen Arbeitsspeicher frei, wenn das Objekt zuvor nachverfolgt wurde. Dieser Aufruf ist eine Abkürzung für `context.trackedObjects.remove(thisObject)`<!-- -->. Viele nachverfolgte Objekte verlangsamen die Ausführung der Hostanwendung, also achten Sie darauf, alle hinzugefügten Objekte nach abgeschlossener Verwendung freizugeben. Sie müssen aufrufen, `context.sync()` bevor die Speicherfreigabe wirksam wird.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'untrack(): Excel.WorkbookRangeAreas;'
    return:
      type: <xref uid="excel!Excel.WorkbookRangeAreas:class" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: bfc39377aa89700c653de4e91d5e9e58b5040b19
  ms.sourcegitcommit: 1f63896cdaa3b8ac3bfcb506161116a564538837
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 07/02/2021
  ms.locfileid: "53271099"
