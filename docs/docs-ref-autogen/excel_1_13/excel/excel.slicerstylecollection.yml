### YamlMime:TSType
name: Excel.SlicerStyleCollection
uid: excel!Excel.SlicerStyleCollection:class
package: excel!
fullName: Excel.SlicerStyleCollection
summary: >-
  Stellt eine Auflistung von `SlicerStyle` Objekten dar.


  \[[API-Satz: ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: excel!Excel.SlicerStyleCollection#context:member
  package: excel!
  fullName: context
  summary: Der dem Objekt zugeordnete Anforderungskontext. Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office Hostanwendung verbunden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: items
  uid: excel!Excel.SlicerStyleCollection#items:member
  package: excel!
  fullName: items
  summary: Ruft die geladenen untergeordneten Elemente in dieser Sammlung ab.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly items: Excel.SlicerStyle[];'
    return:
      type: <xref uid="excel!Excel.SlicerStyle:class" />[]
methods:
- name: add(name, makeUniqueName)
  uid: excel!Excel.SlicerStyleCollection#add:member(1)
  package: excel!
  fullName: add(name, makeUniqueName)
  summary: >-
    Erstellt eine leere Datenschnittformatvorlage mit dem angegebenen Namen.


    \[[API-Satz: ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'add(name: string, makeUniqueName?: boolean): Excel.SlicerStyle;'
    parameters:
    - id: name
      description: Der eindeutige Name für die neue Datenschnittart. Löst eine `InvalidArgument` Ausnahme aus, wenn der Name bereits verwendet wird.
      type: string
    - id: makeUniqueName
      description: Optional. Standardmäßig `false`.<!-- -->. Wenn `true`<!-- -->fügt dem Namen Nummern an, um ihn bei Bedarf eindeutig zu machen.
      type: boolean
    return:
      type: <xref uid="excel!Excel.SlicerStyle:class" />
      description: Die neu erstellte `SlicerStyle`<!-- -->.
- name: getCount()
  uid: excel!Excel.SlicerStyleCollection#getCount:member(1)
  package: excel!
  fullName: getCount()
  summary: >-
    Ruft die Anzahl der Datenschnitt-Formatvorlagen in der Sammlung ab.


    \[[API-Satz: ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;number&gt;
      description: ''
- name: getDefault()
  uid: excel!Excel.SlicerStyleCollection#getDefault:member(1)
  package: excel!
  fullName: getDefault()
  summary: >-
    Ruft den Standardwert `SlicerStyle` für den Bereich des übergeordneten Objekts ab.


    \[[API-Satz: ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getDefault(): Excel.SlicerStyle;'
    return:
      type: <xref uid="excel!Excel.SlicerStyle:class" />
      description: Das `SlicerStyle` Objekt, bei dem es sich um die aktuelle Standardschnittart handelt.
- name: getItem(name)
  uid: excel!Excel.SlicerStyleCollection#getItem:member(1)
  package: excel!
  fullName: getItem(name)
  summary: >-
    Ruft einen `SlicerStyle` anhand des Namens ab.


    \[[API-Satz: ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItem(name: string): Excel.SlicerStyle;'
    parameters:
    - id: name
      description: Name des abzurufenden Datenschnittformats.
      type: string
    return:
      type: <xref uid="excel!Excel.SlicerStyle:class" />
      description: Das `SlicerStyle` Objekt, dessen Name der Eingabe entspricht.
- name: getItemOrNullObject(name)
  uid: excel!Excel.SlicerStyleCollection#getItemOrNullObject:member(1)
  package: excel!
  fullName: getItemOrNullObject(name)
  summary: >-
    Ruft einen `SlicerStyle` anhand des Namens ab. Wenn das Datenschnittformat nicht vorhanden ist, gibt diese Funktion ein Objekt zurück, dessen `isNullObject` Eigenschaft auf `true`<!-- -->. Weitere Informationen finden Sie unter [*OrNullObject-Methoden und -Eigenschaften.](https://docs.microsoft.com/office/dev/add-ins/develop/application-specific-api-model#ornullobject-methods-and-properties)<!-- -->.


    \[[API-Satz: ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItemOrNullObject(name: string): Excel.SlicerStyle;'
    parameters:
    - id: name
      description: Name des abzurufenden Datenschnittformats.
      type: string
    return:
      type: <xref uid="excel!Excel.SlicerStyle:class" />
      description: Das `SlicerStyle` Objekt, dessen Name der Eingabe entspricht.
- name: load(options)
  uid: excel!Excel.SlicerStyleCollection#load:member(1)
  package: excel!
  fullName: load(options)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.SlicerStyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.SlicerStyleCollection;'
    parameters:
    - id: options
      description: Stellt Optionen bereit, für welche Eigenschaften des Objekts geladen werden soll.
      type: <xref uid="excel!Excel.Interfaces.SlicerStyleCollectionLoadOptions:interface" /> & <xref uid="excel!Excel.Interfaces.CollectionLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.SlicerStyleCollection:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.SlicerStyleCollection#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.SlicerStyleCollection;'
    parameters:
    - id: propertyNames
      description: Eine durch Trennzeichen getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.SlicerStyleCollection:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.SlicerStyleCollection#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.SlicerStyleCollection;'
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` ist eine durch Trennzeichen getrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und `propertyNamesAndPaths.expand` eine durch Trennzeichen getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.'
      type: <xref uid="office!OfficeExtension.LoadOption:interface" />
    return:
      type: <xref uid="excel!Excel.SlicerStyleCollection:class" />
      description: ''
- name: setDefault(newDefaultStyle)
  uid: excel!Excel.SlicerStyleCollection#setDefault:member(1)
  package: excel!
  fullName: setDefault(newDefaultStyle)
  summary: >-
    Legt die Standardschnittart für die Verwendung im Bereich des übergeordneten Objekts fest.


    \[[API-Satz: ExcelApi 1.10](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setDefault(newDefaultStyle: SlicerStyle | string): void;'
    parameters:
    - id: newDefaultStyle
      description: Das `SlicerStyle` Objekt oder der Name des `SlicerStyle` Objekts, das der neue Standardwert sein sollte.
      type: <xref uid="excel!Excel.SlicerStyle:class" /> | string
    return:
      type: void
      description: ''
- name: toJSON()
  uid: excel!Excel.SlicerStyleCollection#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: Überschreibt die `toJSON()` JavaScript-Methode, um eine hilfreichere Ausgabe bereitzustellen, wenn ein API-Objekt an `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->ruft wiederum die Methode des Objekts auf, `toJSON` das an das Objekt übergeben wird.) Während das ursprüngliche `Excel.SlicerStyleCollection` Objekt ein API-Objekt ist, gibt die `toJSON` Methode ein einfaches JavaScript-Objekt zurück (typisiert als `Excel.Interfaces.SlicerStyleCollectionData`<!-- -->), die ein "Items"-Array mit flachen Kopien aller geladenen Eigenschaften aus den Elementen der Auflistung enthält.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.SlicerStyleCollectionData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.SlicerStyleCollectionData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: f45c875130e4495db05f5be08964b6ca98f50b91
  ms.sourcegitcommit: 1f63896cdaa3b8ac3bfcb506161116a564538837
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 07/02/2021
  ms.locfileid: "53273160"
