### YamlMime:TSType
name: Excel.ChartSeries
uid: excel!Excel.ChartSeries:class
package: excel!
fullName: Excel.ChartSeries
summary: >-
  Stellt eine Datenreihe in einem Diagramm dar.


  \[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: axisGroup
  uid: excel!Excel.ChartSeries#axisGroup:member
  package: excel!
  fullName: axisGroup
  summary: >-
    Gibt die Gruppe für die angegebene Datenreihe an.


    \[[API-Satz: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'axisGroup: Excel.ChartAxisGroup | "Primary" | "Secondary";'
    return:
      type: <xref uid="excel!Excel.ChartAxisGroup:enum" /> | "Primary" | "Secondary"
- name: binOptions
  uid: excel!Excel.ChartSeries#binOptions:member
  package: excel!
  fullName: binOptions
  summary: >-
    Verkapselt die Intervalloptionen für Histogramme und Pareto-Diagramme.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly binOptions: Excel.ChartBinOptions;'
    return:
      type: <xref uid="excel!Excel.ChartBinOptions:class" />
- name: boxwhiskerOptions
  uid: excel!Excel.ChartSeries#boxwhiskerOptions:member
  package: excel!
  fullName: boxwhiskerOptions
  summary: >-
    Verkapselt die Optionen für Kastengrafikdiagramme.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly boxwhiskerOptions: Excel.ChartBoxwhiskerOptions;'
    return:
      type: <xref uid="excel!Excel.ChartBoxwhiskerOptions:class" />
- name: bubbleScale
  uid: excel!Excel.ChartSeries#bubbleScale:member
  package: excel!
  fullName: bubbleScale
  summary: >-
    Dies kann ein ganzzahliger Wert von 0 (null) bis 300 sein, der einem Prozentsatz der Standardgröße darstellt. Diese Eigenschaft gilt nur für Blasendiagramme.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'bubbleScale: number;'
    return:
      type: number
- name: chartType
  uid: excel!Excel.ChartSeries#chartType:member
  package: excel!
  fullName: chartType
  summary: >-
    Stellt den Diagrammtyp einer Reihe dar. Weitere Informationen finden Sie `Excel.ChartType` unter.


    \[[API-Satz: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'chartType: Excel.ChartType | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel";'
    return:
      type: <xref uid="excel!Excel.ChartType:enum" /> | "Invalid" | "ColumnClustered" | "ColumnStacked" | "ColumnStacked100" | "3DColumnClustered" | "3DColumnStacked" | "3DColumnStacked100" | "BarClustered" | "BarStacked" | "BarStacked100" | "3DBarClustered" | "3DBarStacked" | "3DBarStacked100" | "LineStacked" | "LineStacked100" | "LineMarkers" | "LineMarkersStacked" | "LineMarkersStacked100" | "PieOfPie" | "PieExploded" | "3DPieExploded" | "BarOfPie" | "XYScatterSmooth" | "XYScatterSmoothNoMarkers" | "XYScatterLines" | "XYScatterLinesNoMarkers" | "AreaStacked" | "AreaStacked100" | "3DAreaStacked" | "3DAreaStacked100" | "DoughnutExploded" | "RadarMarkers" | "RadarFilled" | "Surface" | "SurfaceWireframe" | "SurfaceTopView" | "SurfaceTopViewWireframe" | "Bubble" | "Bubble3DEffect" | "StockHLC" | "StockOHLC" | "StockVHLC" | "StockVOHLC" | "CylinderColClustered" | "CylinderColStacked" | "CylinderColStacked100" | "CylinderBarClustered" | "CylinderBarStacked" | "CylinderBarStacked100" | "CylinderCol" | "ConeColClustered" | "ConeColStacked" | "ConeColStacked100" | "ConeBarClustered" | "ConeBarStacked" | "ConeBarStacked100" | "ConeCol" | "PyramidColClustered" | "PyramidColStacked" | "PyramidColStacked100" | "PyramidBarClustered" | "PyramidBarStacked" | "PyramidBarStacked100" | "PyramidCol" | "3DColumn" | "Line" | "3DLine" | "3DPie" | "Pie" | "XYScatter" | "3DArea" | "Area" | "Doughnut" | "Radar" | "Histogram" | "Boxwhisker" | "Pareto" | "RegionMap" | "Treemap" | "Waterfall" | "Sunburst" | "Funnel"
- name: context
  uid: excel!Excel.ChartSeries#context:member
  package: excel!
  fullName: context
  summary: Der dem Objekt zugeordnete Anforderungskontext. Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office Hostanwendung verbunden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: dataLabels
  uid: excel!Excel.ChartSeries#dataLabels:member
  package: excel!
  fullName: dataLabels
  summary: >-
    Stellt eine Auflistung aller Datenbeschriftungen in der Datenreihe dar.


    \[[API-Satz: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly dataLabels: Excel.ChartDataLabels;'
    return:
      type: <xref uid="excel!Excel.ChartDataLabels:class" />
- name: doughnutHoleSize
  uid: excel!Excel.ChartSeries#doughnutHoleSize:member
  package: excel!
  fullName: doughnutHoleSize
  summary: >-
    Stellt die Innenringgröße einer Diagrammreihe dar. Nur gültig für ring- und ringexplodierte Diagramme. Löst einen `InvalidArgument` Fehler in ungültigen Diagrammen aus.


    \[[API-Satz: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'doughnutHoleSize: number;'
    return:
      type: number
- name: explosion
  uid: excel!Excel.ChartSeries#explosion:member
  package: excel!
  fullName: explosion
  summary: >-
    Gibt den Explosionswert für ein Kreis- oder Ringdiagrammsegment an. Gibt 0 (null) zurück, wenn keine Explosion vorliegt (die Spitze des Segments befindet sich in der Mitte des Kreisdiagramms).


    \[[API-Satz: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'explosion: number;'
    return:
      type: number
- name: filtered
  uid: excel!Excel.ChartSeries#filtered:member
  package: excel!
  fullName: filtered
  summary: >-
    Gibt an, ob die Datenreihe gefiltert wird. Gilt nicht für Oberflächendiagramme.


    \[[API-Satz: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'filtered: boolean;'
    return:
      type: boolean
- name: firstSliceAngle
  uid: excel!Excel.ChartSeries#firstSliceAngle:member
  package: excel!
  fullName: firstSliceAngle
  summary: >-
    Gibt den Winkel des ersten Kreisdiagramm- oder Ringdiagrammsegments in Grad (von vertikal im Uhrzeigersinn) an. Gilt nur für Kreis-, 3D-Kreis- und Ringdiagramme. Dies kann ein Wert von 0 bis 360 sein.


    \[[API-Satz: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'firstSliceAngle: number;'
    return:
      type: number
- name: format
  uid: excel!Excel.ChartSeries#format:member
  package: excel!
  fullName: format
  summary: >-
    Stellt die Formatierung für eine Diagrammdatenreihe dar, einschließlich Füllung und Linienformatierung.


    \[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly format: Excel.ChartSeriesFormat;'
    return:
      type: <xref uid="excel!Excel.ChartSeriesFormat:class" />
- name: gapWidth
  uid: excel!Excel.ChartSeries#gapWidth:member
  package: excel!
  fullName: gapWidth
  summary: >-
    Stellt die Abstandsbreite einer Diagrammreihe dar. Nur gültig für Balken- und Säulendiagramme sowie bestimmte Klassen von Linien- und Kreisdiagrammen. Löst eine Ausnahme für ungültige Argumente für ungültige Diagramme aus.


    \[[API-Satz: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'gapWidth: number;'
    return:
      type: number
- name: gradientMaximumColor
  uid: excel!Excel.ChartSeries#gradientMaximumColor:member
  package: excel!
  fullName: gradientMaximumColor
  summary: >-
    Gibt die Farbe für den Maximalwert einer Datenreihe eines Bereichsdiagramms an.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'gradientMaximumColor: string;'
    return:
      type: string
- name: gradientMaximumType
  uid: excel!Excel.ChartSeries#gradientMaximumType:member
  package: excel!
  fullName: gradientMaximumType
  summary: >-
    Gibt den Typ für den Maximalwert einer Datenreihe eines Bereichsdiagramms an.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'gradientMaximumType: Excel.ChartGradientStyleType | "ExtremeValue" | "Number" | "Percent";'
    return:
      type: <xref uid="excel!Excel.ChartGradientStyleType:enum" /> | "ExtremeValue" | "Number" | "Percent"
- name: gradientMaximumValue
  uid: excel!Excel.ChartSeries#gradientMaximumValue:member
  package: excel!
  fullName: gradientMaximumValue
  summary: >-
    Gibt den Maximalwert einer Datenreihe eines Bereichsdiagramms an.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'gradientMaximumValue: number;'
    return:
      type: number
- name: gradientMidpointColor
  uid: excel!Excel.ChartSeries#gradientMidpointColor:member
  package: excel!
  fullName: gradientMidpointColor
  summary: >-
    Gibt die Farbe für den Mittelpunktswert einer Datenreihe eines Bereichsdiagramms an.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'gradientMidpointColor: string;'
    return:
      type: string
- name: gradientMidpointType
  uid: excel!Excel.ChartSeries#gradientMidpointType:member
  package: excel!
  fullName: gradientMidpointType
  summary: >-
    Gibt den Typ für den Mittelpunktswert einer Datenreihe eines Bereichsdiagramms an.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'gradientMidpointType: Excel.ChartGradientStyleType | "ExtremeValue" | "Number" | "Percent";'
    return:
      type: <xref uid="excel!Excel.ChartGradientStyleType:enum" /> | "ExtremeValue" | "Number" | "Percent"
- name: gradientMidpointValue
  uid: excel!Excel.ChartSeries#gradientMidpointValue:member
  package: excel!
  fullName: gradientMidpointValue
  summary: >-
    Gibt den Mittelpunktswert einer Datenreihe eines Bereichsdiagramms an.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'gradientMidpointValue: number;'
    return:
      type: number
- name: gradientMinimumColor
  uid: excel!Excel.ChartSeries#gradientMinimumColor:member
  package: excel!
  fullName: gradientMinimumColor
  summary: >-
    Gibt die Farbe für den Minimalwert einer Datenreihe eines Bereichsdiagramms an.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'gradientMinimumColor: string;'
    return:
      type: string
- name: gradientMinimumType
  uid: excel!Excel.ChartSeries#gradientMinimumType:member
  package: excel!
  fullName: gradientMinimumType
  summary: >-
    Gibt den Typ für den Minimalwert einer Datenreihe eines Bereichsdiagramms an.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'gradientMinimumType: Excel.ChartGradientStyleType | "ExtremeValue" | "Number" | "Percent";'
    return:
      type: <xref uid="excel!Excel.ChartGradientStyleType:enum" /> | "ExtremeValue" | "Number" | "Percent"
- name: gradientMinimumValue
  uid: excel!Excel.ChartSeries#gradientMinimumValue:member
  package: excel!
  fullName: gradientMinimumValue
  summary: >-
    Gibt den Minimalwert einer Datenreihe eines Bereichsdiagramms an.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'gradientMinimumValue: number;'
    return:
      type: number
- name: gradientStyle
  uid: excel!Excel.ChartSeries#gradientStyle:member
  package: excel!
  fullName: gradientStyle
  summary: >-
    Gibt die Farbverlaufsart der Datenreihe eines Bereichsdiagramms an.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'gradientStyle: Excel.ChartGradientStyle | "TwoPhaseColor" | "ThreePhaseColor";'
    return:
      type: <xref uid="excel!Excel.ChartGradientStyle:enum" /> | "TwoPhaseColor" | "ThreePhaseColor"
- name: hasDataLabels
  uid: excel!Excel.ChartSeries#hasDataLabels:member
  package: excel!
  fullName: hasDataLabels
  summary: >-
    Gibt an, ob die Datenreihe Datenbeschriftungen enthält.


    \[[API-Satz: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'hasDataLabels: boolean;'
    return:
      type: boolean
- name: invertColor
  uid: excel!Excel.ChartSeries#invertColor:member
  package: excel!
  fullName: invertColor
  summary: >-
    Gibt die Füllfarbe für negative Datenpunkte in einer Datenreihe an.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'invertColor: string;'
    return:
      type: string
- name: invertIfNegative
  uid: excel!Excel.ChartSeries#invertIfNegative:member
  package: excel!
  fullName: invertIfNegative
  summary: >-
    True, wenn Excel das Muster im Element umkehrt, wenn es einer negativen Zahl entspricht.


    \[[API-Satz: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'invertIfNegative: boolean;'
    return:
      type: boolean
- name: mapOptions
  uid: excel!Excel.ChartSeries#mapOptions:member
  package: excel!
  fullName: mapOptions
  summary: >-
    Verkapselt die Optionen für ein Bereichsdiagramm.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly mapOptions: Excel.ChartMapOptions;'
    return:
      type: <xref uid="excel!Excel.ChartMapOptions:class" />
- name: markerBackgroundColor
  uid: excel!Excel.ChartSeries#markerBackgroundColor:member
  package: excel!
  fullName: markerBackgroundColor
  summary: >-
    Gibt die Hintergrundfarbe des Markers einer Diagrammreihe an.


    \[[API-Satz: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'markerBackgroundColor: string;'
    return:
      type: string
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/10-chart/chart-series-markers.yaml\nawait Excel.run(async (context) => {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let salesTable = sheet.tables.getItem(\"SalesTable\");\n    let dataRange = sheet.getRange(\"A1:E7\");\n\n    // Create an XY scatter chart.\n    let chart = sheet.charts.add(\"XYScatterSmooth\", dataRange, \"Auto\");\n    chart.title.text = \"Bicycle Parts Quarterly Sales\"; \n  \n    let series = chart.series;\n    let series0 = series.getItemAt(0);\n    let series1 = series.getItemAt(1);\n    let series2 = series.getItemAt(2);\n    let series3 = series.getItemAt(3);\n\n    // Set markers.\n    series0.markerStyle = \"Dash\";\n    series0.markerForegroundColor = \"black\";\n    series1.markerStyle = \"Star\";\n    series1.markerForegroundColor = \"black\";\n    series2.markerStyle = \"X\";\n    series2.markerSize = 12;\n    series3.markerStyle = \"Triangle\";\n    series3.markerBackgroundColor = \"purple\";\n\n    await context.sync();\n});\n```"
- name: markerForegroundColor
  uid: excel!Excel.ChartSeries#markerForegroundColor:member
  package: excel!
  fullName: markerForegroundColor
  summary: >-
    Gibt die Vordergrundfarbe der Markierung einer Diagrammreihe an.


    \[[API-Satz: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'markerForegroundColor: string;'
    return:
      type: string
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/10-chart/chart-series-markers.yaml\nawait Excel.run(async (context) => {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let salesTable = sheet.tables.getItem(\"SalesTable\");\n    let dataRange = sheet.getRange(\"A1:E7\");\n\n    // Create an XY scatter chart.\n    let chart = sheet.charts.add(\"XYScatterSmooth\", dataRange, \"Auto\");\n    chart.title.text = \"Bicycle Parts Quarterly Sales\"; \n  \n    let series = chart.series;\n    let series0 = series.getItemAt(0);\n    let series1 = series.getItemAt(1);\n    let series2 = series.getItemAt(2);\n    let series3 = series.getItemAt(3);\n\n    // Set markers.\n    series0.markerStyle = \"Dash\";\n    series0.markerForegroundColor = \"black\";\n    series1.markerStyle = \"Star\";\n    series1.markerForegroundColor = \"black\";\n    series2.markerStyle = \"X\";\n    series2.markerSize = 12;\n    series3.markerStyle = \"Triangle\";\n    series3.markerBackgroundColor = \"purple\";\n\n    await context.sync();\n});\n```"
- name: markerSize
  uid: excel!Excel.ChartSeries#markerSize:member
  package: excel!
  fullName: markerSize
  summary: >-
    Gibt die Markierungsgröße einer Diagrammreihe an.


    \[[API-Satz: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'markerSize: number;'
    return:
      type: number
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/10-chart/chart-series-markers.yaml\nawait Excel.run(async (context) => {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let salesTable = sheet.tables.getItem(\"SalesTable\");\n    let dataRange = sheet.getRange(\"A1:E7\");\n\n    // Create an XY scatter chart.\n    let chart = sheet.charts.add(\"XYScatterSmooth\", dataRange, \"Auto\");\n    chart.title.text = \"Bicycle Parts Quarterly Sales\"; \n  \n    let series = chart.series;\n    let series0 = series.getItemAt(0);\n    let series1 = series.getItemAt(1);\n    let series2 = series.getItemAt(2);\n    let series3 = series.getItemAt(3);\n\n    // Set markers.\n    series0.markerStyle = \"Dash\";\n    series0.markerForegroundColor = \"black\";\n    series1.markerStyle = \"Star\";\n    series1.markerForegroundColor = \"black\";\n    series2.markerStyle = \"X\";\n    series2.markerSize = 12;\n    series3.markerStyle = \"Triangle\";\n    series3.markerBackgroundColor = \"purple\";\n\n    await context.sync();\n});\n```"
- name: markerStyle
  uid: excel!Excel.ChartSeries#markerStyle:member
  package: excel!
  fullName: markerStyle
  summary: >-
    Gibt die Markierungsart einer Diagrammreihe an. Weitere Informationen finden Sie `Excel.ChartMarkerStyle` unter.


    \[[API-Satz: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'markerStyle: Excel.ChartMarkerStyle | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture";'
    return:
      type: <xref uid="excel!Excel.ChartMarkerStyle:enum" /> | "Invalid" | "Automatic" | "None" | "Square" | "Diamond" | "Triangle" | "X" | "Star" | "Dot" | "Dash" | "Circle" | "Plus" | "Picture"
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/10-chart/chart-series-markers.yaml\nawait Excel.run(async (context) => {\n    let sheet = context.workbook.worksheets.getItem(\"Sample\");\n    let salesTable = sheet.tables.getItem(\"SalesTable\");\n    let dataRange = sheet.getRange(\"A1:E7\");\n\n    // Create an XY scatter chart.\n    let chart = sheet.charts.add(\"XYScatterSmooth\", dataRange, \"Auto\");\n    chart.title.text = \"Bicycle Parts Quarterly Sales\"; \n  \n    let series = chart.series;\n    let series0 = series.getItemAt(0);\n    let series1 = series.getItemAt(1);\n    let series2 = series.getItemAt(2);\n    let series3 = series.getItemAt(3);\n\n    // Set markers.\n    series0.markerStyle = \"Dash\";\n    series0.markerForegroundColor = \"black\";\n    series1.markerStyle = \"Star\";\n    series1.markerForegroundColor = \"black\";\n    series2.markerStyle = \"X\";\n    series2.markerSize = 12;\n    series3.markerStyle = \"Triangle\";\n    series3.markerBackgroundColor = \"purple\";\n\n    await context.sync();\n});\n```"
- name: name
  uid: excel!Excel.ChartSeries#name:member
  package: excel!
  fullName: name
  summary: >-
    Gibt den Namen einer Datenreihe in einem Diagramm an. Die Länge des Namens darf nicht größer als 255 Zeichen sein.


    \[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'name: string;'
    return:
      type: string
- name: overlap
  uid: excel!Excel.ChartSeries#overlap:member
  package: excel!
  fullName: overlap
  summary: >-
    Gibt an, wie Balken und Spalten angeordnet sind. Kann ein Wert zwischen -100 und 100 sein. Gilt nur für 2D-Balken- und 2D-Säulendiagramme.


    \[[API-Satz: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'overlap: number;'
    return:
      type: number
- name: parentLabelStrategy
  uid: excel!Excel.ChartSeries#parentLabelStrategy:member
  package: excel!
  fullName: parentLabelStrategy
  summary: >-
    Gibt den Bereich der übergeordneten Beschriftungsstrategie der Datenreihe für ein Strukturdiagramm an.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'parentLabelStrategy: Excel.ChartParentLabelStrategy | "None" | "Banner" | "Overlapping";'
    return:
      type: <xref uid="excel!Excel.ChartParentLabelStrategy:enum" /> | "None" | "Banner" | "Overlapping"
- name: plotOrder
  uid: excel!Excel.ChartSeries#plotOrder:member
  package: excel!
  fullName: plotOrder
  summary: >-
    Gibt die Zeichnungsreihenfolge einer Diagrammreihe innerhalb der Diagrammgruppe an.


    \[[API-Satz: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'plotOrder: number;'
    return:
      type: number
- name: points
  uid: excel!Excel.ChartSeries#points:member
  package: excel!
  fullName: points
  summary: >-
    Gibt eine Auflistung aller Punkte in der Datenreihe zurück.


    \[[API-Satz: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly points: Excel.ChartPointsCollection;'
    return:
      type: <xref uid="excel!Excel.ChartPointsCollection:class" />
- name: secondPlotSize
  uid: excel!Excel.ChartSeries#secondPlotSize:member
  package: excel!
  fullName: secondPlotSize
  summary: >-
    Gibt die Größe des sekundären Abschnitts eines Kreis-aus-Kreis-Diagramms oder eines Balken-aus-Kreis-Diagramms als Prozentsatz der Größe des primären Kreises an. Dies kann ein Wert von 5 bis 200 sein.


    \[[API-Satz: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'secondPlotSize: number;'
    return:
      type: number
- name: showConnectorLines
  uid: excel!Excel.ChartSeries#showConnectorLines:member
  package: excel!
  fullName: showConnectorLines
  summary: >-
    Gibt an, ob Verbindungslinien in Wasserfalldiagrammen angezeigt werden.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'showConnectorLines: boolean;'
    return:
      type: boolean
- name: showLeaderLines
  uid: excel!Excel.ChartSeries#showLeaderLines:member
  package: excel!
  fullName: showLeaderLines
  summary: >-
    Gibt an, ob Führungslinien für jede Datenbeschriftung in der Datenreihe angezeigt werden.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'showLeaderLines: boolean;'
    return:
      type: boolean
- name: showShadow
  uid: excel!Excel.ChartSeries#showShadow:member
  package: excel!
  fullName: showShadow
  summary: >-
    Gibt an, ob die Datenreihe einen Schatten hat.


    \[[API-Satz: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'showShadow: boolean;'
    return:
      type: boolean
- name: smooth
  uid: excel!Excel.ChartSeries#smooth:member
  package: excel!
  fullName: smooth
  summary: >-
    Gibt an, ob die Datenreihe reibungslos verläuft. Gilt nur für Linien- und Punktdiagramme.


    \[[API-Satz: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'smooth: boolean;'
    return:
      type: boolean
- name: splitType
  uid: excel!Excel.ChartSeries#splitType:member
  package: excel!
  fullName: splitType
  summary: >-
    Gibt an, wie die beiden Abschnitte eines Kreis-aus-Kreis-Diagramms oder eines Balken-aus-Kreis-Diagramms geteilt werden.


    \[[API-Satz: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'splitType: Excel.ChartSplitType | "SplitByPosition" | "SplitByValue" | "SplitByPercentValue" | "SplitByCustomSplit";'
    return:
      type: <xref uid="excel!Excel.ChartSplitType:enum" /> | "SplitByPosition" | "SplitByValue" | "SplitByPercentValue" | "SplitByCustomSplit"
- name: splitValue
  uid: excel!Excel.ChartSeries#splitValue:member
  package: excel!
  fullName: splitValue
  summary: >-
    Gibt den Schwellenwert an, der zwei Abschnitte eines Kreis-aus-Kreis-Diagramms oder eines Balken-aus-Kreis-Diagramms trennt.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'splitValue: number;'
    return:
      type: number
- name: trendlines
  uid: excel!Excel.ChartSeries#trendlines:member
  package: excel!
  fullName: trendlines
  summary: >-
    Die Sammlung von Trendlinien in der Datenreihe.


    \[[API-Satz: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly trendlines: Excel.ChartTrendlineCollection;'
    return:
      type: <xref uid="excel!Excel.ChartTrendlineCollection:class" />
- name: varyByCategories
  uid: excel!Excel.ChartSeries#varyByCategories:member
  package: excel!
  fullName: varyByCategories
  summary: >-
    True, wenn Excel jeder Datenpunktmarkierung eine andere Farbe oder ein anderes Muster zuweist. Das Diagramm darf nur eine Datenreihe enthalten.


    \[[API-Satz: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'varyByCategories: boolean;'
    return:
      type: boolean
- name: xErrorBars
  uid: excel!Excel.ChartSeries#xErrorBars:member
  package: excel!
  fullName: xErrorBars
  summary: >-
    Stellt das Fehlerbalkenobjekt für eine Datenreihe dar.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly xErrorBars: Excel.ChartErrorBars;'
    return:
      type: <xref uid="excel!Excel.ChartErrorBars:class" />
- name: yErrorBars
  uid: excel!Excel.ChartSeries#yErrorBars:member
  package: excel!
  fullName: yErrorBars
  summary: >-
    Stellt das Fehlerbalkenobjekt für eine Datenreihe dar.


    \[[API-Satz: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly yErrorBars: Excel.ChartErrorBars;'
    return:
      type: <xref uid="excel!Excel.ChartErrorBars:class" />
methods:
- name: delete()
  uid: excel!Excel.ChartSeries#delete:member(1)
  package: excel!
  fullName: delete()
  summary: >-
    Löscht die Diagrammreihen.


    \[[API-Satz: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/10-chart/chart-series.yaml\nawait Excel.run(async (context) => {\n  const sheet = context.workbook.worksheets.getItem(\"Sample\");\n  const seriesCollection = sheet.charts.getItemAt(0).series;\n  seriesCollection.load(\"count\");\n  await context.sync();\n\n  if (seriesCollection.count > 0) {\n    const series = seriesCollection.getItemAt(0);\n\n    // Delete the first series.\n    series.delete();\n  }\n\n  await context.sync();\n});\n```"
- name: getDimensionValues(dimension)
  uid: excel!Excel.ChartSeries#getDimensionValues:member(1)
  package: excel!
  fullName: getDimensionValues(dimension)
  summary: >-
    Ruft die Werte aus einer einzelnen Dimension der Diagrammreihe ab. Dabei kann es sich entweder um Kategoriewerte oder Datenwerte handeln, abhängig von der angegebenen Dimension und der Art und Weise, wie die Daten für die Diagrammdatenreihe zugeordnet werden.


    \[[API-Satz: ExcelApi 1.12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getDimensionValues(dimension: Excel.ChartSeriesDimension): OfficeExtension.ClientResult<string[]>;'
    parameters:
    - id: dimension
      description: Die Dimension der Achse, von der die Daten stammen.
      type: <xref uid="excel!Excel.ChartSeriesDimension:enum" />
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string[]&gt;
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/10-chart/chart-bubble-chart.yaml\nawait Excel.run(async (context) => {\n  const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n  // The sample chart is of type `Excel.ChartType.bubble`.\n  const bubbleChart = sheet.charts.getItem(\"Product Chart\");\n\n  // Get the first series in the chart.\n  const firstSeries = bubbleChart.series.getItemAt(0);\n\n  // Get the values for the dimensions we're interested in.\n  const bubbleSize = firstSeries.getDimensionValues(Excel.ChartSeriesDimension.bubbleSizes);\n  const xValues = firstSeries.getDimensionValues(Excel.ChartSeriesDimension.xvalues);\n  const yValues = firstSeries.getDimensionValues(Excel.ChartSeriesDimension.yvalues);\n  const category = firstSeries.getDimensionValues(Excel.ChartSeriesDimension.categories);\n\n  await context.sync();\n\n  // Log the information.\n  console.log(`Series ${category.value} - X:${xValues.value},Y:${yValues.value},Bubble:${bubbleSize.value}`);\n});\n```"
- name: getDimensionValues(dimensionString)
  uid: excel!Excel.ChartSeries#getDimensionValues:member(2)
  package: excel!
  fullName: getDimensionValues(dimensionString)
  summary: >-
    Ruft die Werte aus einer einzelnen Dimension der Diagrammreihe ab. Dabei kann es sich entweder um Kategoriewerte oder Datenwerte handeln, abhängig von der angegebenen Dimension und der Art und Weise, wie die Daten für die Diagrammdatenreihe zugeordnet werden.


    \[[API-Satz: ExcelApi 1.12](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getDimensionValues(dimensionString: "Categories" | "Values" | "XValues" | "YValues" | "BubbleSizes"): OfficeExtension.ClientResult<string[]>;'
    parameters:
    - id: dimensionString
      description: Die Dimension der Achse, von der die Daten stammen.
      type: "\"Categories\" | \"Values\" | \"XValues\" | \"YValues\" | \"BubbleSizes\""
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string[]&gt;
      description: ''
- name: load(options)
  uid: excel!Excel.ChartSeries#load:member(1)
  package: excel!
  fullName: load(options)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.ChartSeriesLoadOptions): Excel.ChartSeries;'
    parameters:
    - id: options
      description: Stellt Optionen bereit, für welche Eigenschaften des Objekts geladen werden soll.
      type: <xref uid="excel!Excel.Interfaces.ChartSeriesLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.ChartSeries:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.ChartSeries#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.ChartSeries;'
    parameters:
    - id: propertyNames
      description: Eine durch Trennzeichen getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.ChartSeries:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Rename the 1st series of Chart1 to \"New Series Name\"\nExcel.run(function (ctx) { \n    var chart = ctx.workbook.worksheets.getItem(\"Sheet1\").charts.getItem(\"Chart1\");    \n    chart.series.getItemAt(0).name = \"New Series Name\";\n    return ctx.sync().then(function() {\n            console.log(\"Series1 Renamed\");\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.ChartSeries#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Excel.ChartSeries;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` ist eine durch Trennzeichen getrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und `propertyNamesAndPaths.expand` eine durch Trennzeichen getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="excel!Excel.ChartSeries:class" />
      description: ''
- name: set(properties, options)
  uid: excel!Excel.ChartSeries#set:member(1)
  package: excel!
  fullName: set(properties, options)
  summary: Legt mehrere Eigenschaften eines Objekts gleichzeitig fest. Sie können entweder ein einfaches Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs übergeben.
  remarks: >-
    Diese Methode hat die folgende zusätzliche Signatur:


    `set(properties: Excel.ChartSeries): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.ChartSeriesUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: Ein JavaScript-Objekt mit Eigenschaften, die isomorph zu den Eigenschaften des Objekts strukturiert sind, für das die Methode aufgerufen wird.
      type: <xref uid="excel!Excel.Interfaces.ChartSeriesUpdateData:interface" />
    - id: options
      description: Bietet eine Option zum Unterdrücken von Fehlern, wenn das Eigenschaftenobjekt versucht, schreibgeschützte Eigenschaften festzulegen.
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: excel!Excel.ChartSeries#set:member(2)
  package: excel!
  fullName: set(properties)
  summary: Legt mehrere Eigenschaften für das Objekt gleichzeitig fest, basierend auf einem vorhandenen geladenen Objekt.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Excel.ChartSeries): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="excel!Excel.ChartSeries:class" />
    return:
      type: void
      description: ''
- name: setBubbleSizes(sourceData)
  uid: excel!Excel.ChartSeries#setBubbleSizes:member(1)
  package: excel!
  fullName: setBubbleSizes(sourceData)
  summary: >-
    Legt die Blasengrößen für eine Diagrammreihe fest. Funktioniert nur für Blasendiagramme.


    \[[API-Satz: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setBubbleSizes(sourceData: Range): void;'
    parameters:
    - id: sourceData
      description: Das `Range` Objekt, das den Quelldaten entspricht.
      type: <xref uid="excel!Excel.Range:class" />
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/10-chart/chart-bubble-chart.yaml\nawait Excel.run(async (context) => {\n  /*\n    The table is expected to look like this:\n    Product, Inventory, Price, Current Market Share\n    Calamansi, 2000, $2.45, 10%\n    ...\n\n    We want each bubble to represent a single row.\n  */\n\n  // Get the worksheet and table data.\n  const sheet = context.workbook.worksheets.getItem(\"Sample\");\n  const table = sheet.tables.getItem(\"Sales\");\n  const dataRange = table.getDataBodyRange();\n\n  // Get the table data without the row names.\n  const valueRange = dataRange.getOffsetRange(0, 1).getResizedRange(0, -1);\n\n  // Create the chart.\n  const bubbleChart = sheet.charts.add(Excel.ChartType.bubble, valueRange);\n  bubbleChart.name = \"Product Chart\";\n\n  // Remove the default series, since we want a unique series for each row.\n  bubbleChart.series.getItemAt(0).delete();\n\n  // Load the data necessary to make a chart series.\n  dataRange.load([\"rowCount\", \"values\"]);\n  await context.sync();\n\n  // For each row, create a chart series (a bubble).\n  for (let i = 0; i < dataRange.rowCount; i++) {\n    const newSeries = bubbleChart.series.add(dataRange.values[i][0], i);\n    newSeries.setXAxisValues(dataRange.getCell(i, 1));\n    newSeries.setValues(dataRange.getCell(i, 2));\n    newSeries.setBubbleSizes(dataRange.getCell(i, 3));\n\n    // Show the product name and market share percentage.\n    newSeries.dataLabels.showSeriesName = true;\n    newSeries.dataLabels.showBubbleSize = true;\n    newSeries.dataLabels.showValue = false;\n  }\n\n  await context.sync();\n});\n```"
- name: setValues(sourceData)
  uid: excel!Excel.ChartSeries#setValues:member(1)
  package: excel!
  fullName: setValues(sourceData)
  summary: >-
    Legt die Werte für eine Diagrammreihe fest. Bei Punkt (XY)-Diagrammen bezieht er sich auf Y-Achsenwerte.


    \[[API-Satz: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setValues(sourceData: Range): void;'
    parameters:
    - id: sourceData
      description: Das `Range` Objekt, das den Quelldaten entspricht.
      type: <xref uid="excel!Excel.Range:class" />
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/excel/10-chart/chart-series.yaml\nawait Excel.run(async (context) => {\n  const sheet = context.workbook.worksheets.getItem(\"Sample\");\n\n  let seriesCollection = sheet.charts.getItemAt(0);\n  let rangeSelection = sheet.getRange(\"C2:C7\");\n  let xRangeSelection = sheet.getRange(\"A1:A7\");\n\n  // Add a series.\n  let newSeries = seriesCollection.series.add(\"Qtr2\");\n  newSeries.setValues(rangeSelection);\n  newSeries.setXAxisValues(xRangeSelection);\n\n  await context.sync();\n});\n```"
- name: setXAxisValues(sourceData)
  uid: excel!Excel.ChartSeries#setXAxisValues:member(1)
  package: excel!
  fullName: setXAxisValues(sourceData)
  summary: >-
    Legt die Werte der X-Achse für eine Diagrammreihe fest. Funktioniert nur bei Punktdiagrammen.


    \[[API-Satz: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setXAxisValues(sourceData: Range): void;'
    parameters:
    - id: sourceData
      description: Das `Range` Objekt, das den Quelldaten entspricht.
      type: <xref uid="excel!Excel.Range:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: excel!Excel.ChartSeries#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: Überschreibt die `toJSON()` JavaScript-Methode, um eine hilfreichere Ausgabe bereitzustellen, wenn ein API-Objekt an `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->ruft wiederum die Methode des Objekts auf, `toJSON` das an das Objekt übergeben wird.) Während die ursprüngliche Excel. ChartSeries-Objekt ist ein API-Objekt, die `toJSON` Methode gibt ein einfaches JavaScript-Objekt zurück (typisiert als`Excel.Interfaces.ChartSeriesData`<!-- -->), die flache Kopien aller geladenen untergeordneten Eigenschaften des ursprünglichen Objekts enthält.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.ChartSeriesData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.ChartSeriesData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: d02cac09a7af95cff2d392eb69d8e4031bafed65
  ms.sourcegitcommit: 1f63896cdaa3b8ac3bfcb506161116a564538837
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 07/02/2021
  ms.locfileid: "53262846"
