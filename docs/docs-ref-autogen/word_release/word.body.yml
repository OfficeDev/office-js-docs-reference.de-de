### YamlMime:UniversalReference
items:
  - uid: word_release.Word.Body
    summary: |-
      <span data-ttu-id="1b849-101">Steht für den Textkörper eines Dokuments oder Abschnitts.</span><span class="sxs-lookup"><span data-stu-id="1b849-101">Represents the body of a document or a section.</span></span>

      <span data-ttu-id="1b849-102">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-102">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: Word.Body
    fullName: Word.Body
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: word_release
    children:
      - word_release.Word.Body.clear
      - word_release.Word.Body.contentControls
      - word_release.Word.Body.context
      - word_release.Word.Body.font
      - word_release.Word.Body.getHtml
      - word_release.Word.Body.getOoxml
      - word_release.Word.Body.getRange
      - word_release.Word.Body.getRange_1
      - word_release.Word.Body.inlinePictures
      - word_release.Word.Body.insertBreak
      - word_release.Word.Body.insertBreak_1
      - word_release.Word.Body.insertContentControl
      - word_release.Word.Body.insertFileFromBase64
      - word_release.Word.Body.insertFileFromBase64_1
      - word_release.Word.Body.insertHtml
      - word_release.Word.Body.insertHtml_1
      - word_release.Word.Body.insertInlinePictureFromBase64
      - word_release.Word.Body.insertInlinePictureFromBase64_1
      - word_release.Word.Body.insertOoxml
      - word_release.Word.Body.insertOoxml_1
      - word_release.Word.Body.insertParagraph
      - word_release.Word.Body.insertParagraph_1
      - word_release.Word.Body.insertTable
      - word_release.Word.Body.insertTable_1
      - word_release.Word.Body.insertText
      - word_release.Word.Body.insertText_1
      - word_release.Word.Body.lists
      - word_release.Word.Body.load
      - word_release.Word.Body.load_1
      - word_release.Word.Body.load_2
      - word_release.Word.Body.paragraphs
      - word_release.Word.Body.parentBody
      - word_release.Word.Body.parentBodyOrNullObject
      - word_release.Word.Body.parentContentControl
      - word_release.Word.Body.parentContentControlOrNullObject
      - word_release.Word.Body.parentSection
      - word_release.Word.Body.parentSectionOrNullObject
      - word_release.Word.Body.search
      - word_release.Word.Body.select
      - word_release.Word.Body.select_1
      - word_release.Word.Body.set
      - word_release.Word.Body.set_1
      - word_release.Word.Body.style
      - word_release.Word.Body.styleBuiltIn
      - word_release.Word.Body.tables
      - word_release.Word.Body.text
      - word_release.Word.Body.toJSON
      - word_release.Word.Body.track
      - word_release.Word.Body.type
      - word_release.Word.Body.untrack
  - uid: word_release.Word.Body.clear
    summary: |-
      <span data-ttu-id="1b849-103">Löscht den Inhalt des Body-Objekts.</span><span class="sxs-lookup"><span data-stu-id="1b849-103">Clears the contents of the body object.</span></span> <span data-ttu-id="1b849-104">Der Benutzer kann den Rückgängig-Vorgang auf den gelöschten Inhalt durchführen.</span><span class="sxs-lookup"><span data-stu-id="1b849-104">The user can perform the undo operation on the cleared content.</span></span>

      <span data-ttu-id="1b849-105">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1b849-106">Beispiele</span><span class="sxs-lookup"><span data-stu-id="1b849-106">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to clear the contents of the body.
              body.clear();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Cleared the body contents.');
              });
          })
          .catch(function (error) {
              console.log("Error: " + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });

          // The Silly stories add-in sample shows how the 
          // clear method can be used to clear the contents of a document.
          // https://aka.ms/sillystorywordaddin
          ```
  - uid: word_release.Word.Body.contentControls
    summary: |-
      <span data-ttu-id="1b849-107">Ruft die Auflistung der Rich-Text-Inhaltssteuerelemente im Textkörper ab.</span><span class="sxs-lookup"><span data-stu-id="1b849-107">Gets the collection of rich text content control objects in the body.</span></span> <span data-ttu-id="1b849-108">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1b849-108">Read-only.</span></span>

      <span data-ttu-id="1b849-109">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-109">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: contentControls
    fullName: contentControls
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly contentControls: Word.ContentControlCollection;'
      return:
        type:
          - word.Word.ContentControlCollection
  - uid: word_release.Word.Body.context
    summary: '<span data-ttu-id="1b849-110">Der Anforderungskontext, der mit dem Objekt verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="1b849-110">The request context associated with the object.</span></span> <span data-ttu-id="1b849-111">Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="1b849-111">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: word_release.Word.Body.font
    summary: |-
      <span data-ttu-id="1b849-112">Ruft das Textformat des Textkörpers ab.</span><span class="sxs-lookup"><span data-stu-id="1b849-112">Gets the text format of the body.</span></span> <span data-ttu-id="1b849-113">Verwenden Sie diese Eigenschaft, um Schriftartnamen,-Größe,-Farbe und andere Eigenschaften abzurufen und festzulegen.</span><span class="sxs-lookup"><span data-stu-id="1b849-113">Use this to get and set font name, size, color and other properties.</span></span> <span data-ttu-id="1b849-114">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1b849-114">Read-only.</span></span>

      <span data-ttu-id="1b849-115">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-115">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Word.Font;'
      return:
        type:
          - word.Word.Font
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1b849-116">Beispiele</span><span class="sxs-lookup"><span data-stu-id="1b849-116">Examples</span></span>

          ```javascript
          // Get the style and the font size, font name, and font color properties on the body object.
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to load font and style information for the document body.
              context.load(body, 'font/size, font/name, font/color, style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  // Show the results of the load method. Here we show the
                  // property values on the body object.
                  var results = 'Font size: ' + body.font.size +
                                '; Font name: ' + body.font.name +
                                '; Font color: ' + body.font.color +
                                '; Body style: ' + body.style;

                  console.log(results);
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word_release.Word.Body.getHtml
    summary: |-
      <span data-ttu-id="1b849-117">Ruft eine HTML-Darstellung des Body-Objekts ab.</span><span class="sxs-lookup"><span data-stu-id="1b849-117">Gets an HTML representation of the body object.</span></span> <span data-ttu-id="1b849-118">Wenn die Formatierung in einer Webseite oder einem HTML-Viewer gerendert wird, entspricht Sie der Formatierung des Dokuments, ist jedoch nicht genau.</span><span class="sxs-lookup"><span data-stu-id="1b849-118">When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match to the formatting of the document.</span></span> <span data-ttu-id="1b849-119">Diese Methode gibt nicht exakt denselben HTML-Code für dasselbe Dokument auf unterschiedlichen Plattformen (Windows, Mac usw.) zurück.</span><span class="sxs-lookup"><span data-stu-id="1b849-119">This method does not return the exact same HTML for the same document on different platforms (Windows, Mac, etc.).</span></span> <span data-ttu-id="1b849-120">Wenn Sie exakte Genauigkeit oder Konsistenz plattformübergreifend benötigen, verwenden `Body.getOoxml()` und konvertieren Sie den zurückgegebenen XML-Code in HTML.</span><span class="sxs-lookup"><span data-stu-id="1b849-120">If you need exact fidelity, or consistency across platforms, use `Body.getOoxml()` and convert the returned XML to HTML.</span></span>

      <span data-ttu-id="1b849-121">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-121">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getHtml()
    fullName: getHtml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHtml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1b849-122">Beispiele</span><span class="sxs-lookup"><span data-stu-id="1b849-122">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to get the HTML contents of the body.
              var bodyHTML = body.getHtml();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log("Body HTML contents: " + bodyHTML.value);
              });
          })
          .catch(function (error) {
              console.log("Error: " + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word_release.Word.Body.getOoxml
    summary: |-
      <span data-ttu-id="1b849-123">Ruft die OOXML (Office Open XML)-Darstellung des Body-Objekts ab.</span><span class="sxs-lookup"><span data-stu-id="1b849-123">Gets the OOXML (Office Open XML) representation of the body object.</span></span>

      <span data-ttu-id="1b849-124">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-124">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getOoxml()
    fullName: getOoxml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1b849-125">Beispiele</span><span class="sxs-lookup"><span data-stu-id="1b849-125">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to get the OOXML contents of the body.
              var bodyOOXML = body.getOoxml();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log("Body OOXML contents: " + bodyOOXML.value);
              });
          })
          .catch(function (error) {
              console.log("Error: " + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word_release.Word.Body.getRange
    summary: |-
      <span data-ttu-id="1b849-126">Ruft den gesamten Text oder den Start- bzw. Endpunkt des Textkörpers als Bereich ab.</span><span class="sxs-lookup"><span data-stu-id="1b849-126">Gets the whole body, or the starting or ending point of the body, as a range.</span></span>

      <span data-ttu-id="1b849-127">\[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-127">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getRange(rangeLocation)
    fullName: getRange(rangeLocation)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(rangeLocation?: Word.RangeLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: rangeLocation
          description: '<span data-ttu-id="1b849-128">Optional.</span><span class="sxs-lookup"><span data-stu-id="1b849-128">Optional.</span></span> <span data-ttu-id="1b849-129">Die Bereichsposition kann "Whole", "Start", "End", "After" oder "Content" lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-129">The range location can be ''Whole'', ''Start'', ''End'', ''After'', or ''Content''.</span></span>'
          type:
            - word.Word.RangeLocation
  - uid: word_release.Word.Body.getRange_1
    summary: |-
      <span data-ttu-id="1b849-130">Ruft den gesamten Text oder den Start- bzw. Endpunkt des Textkörpers als Bereich ab.</span><span class="sxs-lookup"><span data-stu-id="1b849-130">Gets the whole body, or the starting or ending point of the body, as a range.</span></span>

      <span data-ttu-id="1b849-131">\[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-131">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getRange(rangeLocationString)
    fullName: getRange(rangeLocationString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(rangeLocationString?: "Whole" | "Start" | "End" | "Before" | "After" | "Content"): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: rangeLocationString
          description: '<span data-ttu-id="1b849-132">Optional.</span><span class="sxs-lookup"><span data-stu-id="1b849-132">Optional.</span></span> <span data-ttu-id="1b849-133">Die Bereichsposition kann "Whole", "Start", "End", "After" oder "Content" lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-133">The range location can be ''Whole'', ''Start'', ''End'', ''After'', or ''Content''.</span></span>'
          type:
            - '"Whole" | "Start" | "End" | "Before" | "After" | "Content"'
  - uid: word_release.Word.Body.inlinePictures
    summary: |-
      <span data-ttu-id="1b849-134">Ruft die Auflistung der Inline Picture-Objekte im Textkörper ab.</span><span class="sxs-lookup"><span data-stu-id="1b849-134">Gets the collection of InlinePicture objects in the body.</span></span> <span data-ttu-id="1b849-135">Die Sammlung enthält keinen schwebenden Bilder.</span><span class="sxs-lookup"><span data-stu-id="1b849-135">The collection does not include floating images.</span></span> <span data-ttu-id="1b849-136">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1b849-136">Read-only.</span></span>

      <span data-ttu-id="1b849-137">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-137">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: inlinePictures
    fullName: inlinePictures
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly inlinePictures: Word.InlinePictureCollection;'
      return:
        type:
          - word.Word.InlinePictureCollection
  - uid: word_release.Word.Body.insertBreak
    summary: |-
      <span data-ttu-id="1b849-138">Fügt an der angegebenen Position im Hauptdokument einen Umbruch ein.</span><span class="sxs-lookup"><span data-stu-id="1b849-138">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="1b849-139">Der insertLocation-Wert kann 'Start' oder 'End' lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-139">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="1b849-140">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-140">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakType, insertLocation)'
    fullName: 'insertBreak(breakType, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1b849-141">Beispiele</span><span class="sxs-lookup"><span data-stu-id="1b849-141">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (ctx) {

              // Create a proxy object for the document body.
              var body = ctx.document.body;

              // Queue a commmand to insert a page break at the start of the document body.
              body.insertBreak(Word.BreakType.page, Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return ctx.sync().then(function () {
                  console.log('Added a page break at the start of the document body.');
              });
          })
          .catch(function (error) {
              console.log("Error: " + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: breakType
          description: <span data-ttu-id="1b849-142">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-142">Required.</span></span> <span data-ttu-id="1b849-143">Der Typ des zum Textkörper hinzuzufügenden Umbruchs.</span><span class="sxs-lookup"><span data-stu-id="1b849-143">The break type to add to the body.</span></span>
          type:
            - word.Word.BreakType
        - id: insertLocation
          description: <span data-ttu-id="1b849-144">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-144">Required.</span></span> <span data-ttu-id="1b849-145">Der Wert kann „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-145">The value can be 'Start' or 'End'.</span></span>
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Body.insertBreak_1
    summary: |-
      <span data-ttu-id="1b849-146">Fügt an der angegebenen Position im Hauptdokument einen Umbruch ein.</span><span class="sxs-lookup"><span data-stu-id="1b849-146">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="1b849-147">Der insertLocation-Wert kann 'Start' oder 'End' lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-147">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="1b849-148">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-148">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakTypeString, insertLocation)'
    fullName: 'insertBreak(breakTypeString, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: breakTypeString
          description: <span data-ttu-id="1b849-149">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-149">Required.</span></span> <span data-ttu-id="1b849-150">Der Typ des zum Textkörper hinzuzufügenden Umbruchs.</span><span class="sxs-lookup"><span data-stu-id="1b849-150">The break type to add to the body.</span></span>
          type:
            - '"Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line"'
        - id: insertLocation
          description: <span data-ttu-id="1b849-151">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-151">Required.</span></span> <span data-ttu-id="1b849-152">Der Wert kann „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-152">The value can be 'Start' or 'End'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Body.insertContentControl
    summary: |-
      <span data-ttu-id="1b849-153">Umschließt das Body-Objekt mit einem Rich-Text-Inhaltssteuerelement.</span><span class="sxs-lookup"><span data-stu-id="1b849-153">Wraps the body object with a Rich Text content control.</span></span>

      <span data-ttu-id="1b849-154">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-154">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: insertContentControl()
    fullName: insertContentControl()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertContentControl(): Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1b849-155">Beispiele</span><span class="sxs-lookup"><span data-stu-id="1b849-155">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to wrap the body in a content control.
              body.insertContentControl();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Wrapped the body in a content control.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word_release.Word.Body.insertFileFromBase64
    summary: |-
      <span data-ttu-id="1b849-156">Fügt in den Textkörper an der angegebenen Position ein Dokument ein.</span><span class="sxs-lookup"><span data-stu-id="1b849-156">Inserts a document into the body at the specified location.</span></span> <span data-ttu-id="1b849-157">Der insertLocation-Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-157">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="1b849-158">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-158">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocation)'
    fullName: 'insertFileFromBase64(base64File, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1b849-159">Beispiele</span><span class="sxs-lookup"><span data-stu-id="1b849-159">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to insert base64 encoded .docx at the beginning of the content body.
              // You will need to implement getBase64() to pass in a string of a base64 encoded docx file.
              body.insertFileFromBase64(getBase64(), Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Added base64 encoded text to the beginning of the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: base64File
          description: <span data-ttu-id="1b849-160">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-160">Required.</span></span> <span data-ttu-id="1b849-161">Der Base64-codierte Inhalt einer DOCX-Datei.</span><span class="sxs-lookup"><span data-stu-id="1b849-161">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="1b849-162">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-162">Required.</span></span> <span data-ttu-id="1b849-163">Der Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-163">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Body.insertFileFromBase64_1
    summary: |-
      <span data-ttu-id="1b849-164">Fügt in den Textkörper an der angegebenen Position ein Dokument ein.</span><span class="sxs-lookup"><span data-stu-id="1b849-164">Inserts a document into the body at the specified location.</span></span> <span data-ttu-id="1b849-165">Der insertLocation-Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-165">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="1b849-166">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-166">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocationString)'
    fullName: 'insertFileFromBase64(base64File, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="1b849-167">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-167">Required.</span></span> <span data-ttu-id="1b849-168">Der Base64-codierte Inhalt einer DOCX-Datei.</span><span class="sxs-lookup"><span data-stu-id="1b849-168">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="1b849-169">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-169">Required.</span></span> <span data-ttu-id="1b849-170">Der Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-170">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Body.insertHtml
    summary: |-
      <span data-ttu-id="1b849-171">Fügt an der angegebenen Position HTML-Code ein.</span><span class="sxs-lookup"><span data-stu-id="1b849-171">Inserts HTML at the specified location.</span></span> <span data-ttu-id="1b849-172">Der insertLocation-Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-172">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="1b849-173">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-173">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocation)'
    fullName: 'insertHtml(html, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1b849-174">Beispiele</span><span class="sxs-lookup"><span data-stu-id="1b849-174">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to insert HTML in to the beginning of the body.
              body.insertHtml(
                  '<strong>This is text inserted with body.insertHtml()</strong>', Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('HTML added to the beginning of the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: html
          description: <span data-ttu-id="1b849-175">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-175">Required.</span></span> <span data-ttu-id="1b849-176">Der in das Dokument einzufügende HTML-Code.</span><span class="sxs-lookup"><span data-stu-id="1b849-176">The HTML to be inserted in the document.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="1b849-177">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-177">Required.</span></span> <span data-ttu-id="1b849-178">Der Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-178">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Body.insertHtml_1
    summary: |-
      <span data-ttu-id="1b849-179">Fügt an der angegebenen Position HTML-Code ein.</span><span class="sxs-lookup"><span data-stu-id="1b849-179">Inserts HTML at the specified location.</span></span> <span data-ttu-id="1b849-180">Der insertLocation-Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-180">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="1b849-181">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-181">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocationString)'
    fullName: 'insertHtml(html, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: html
          description: <span data-ttu-id="1b849-182">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-182">Required.</span></span> <span data-ttu-id="1b849-183">Der in das Dokument einzufügende HTML-Code.</span><span class="sxs-lookup"><span data-stu-id="1b849-183">The HTML to be inserted in the document.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="1b849-184">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-184">Required.</span></span> <span data-ttu-id="1b849-185">Der Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-185">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Body.insertInlinePictureFromBase64
    summary: |-
      <span data-ttu-id="1b849-186">Fügt in den Textkörper an der angegebenen Position ein Bild ein.</span><span class="sxs-lookup"><span data-stu-id="1b849-186">Inserts a picture into the body at the specified location.</span></span> <span data-ttu-id="1b849-187">Der insertLocation-Wert kann 'Start' oder 'End' lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-187">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="1b849-188">\[[API-Gruppe: WordApi 1,2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-188">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
      return:
        type:
          - word.Word.InlinePicture
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1b849-189">Beispiele</span><span class="sxs-lookup"><span data-stu-id="1b849-189">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to insert OOXML in to the beginning of the body.
              body.insertOoxml("<pkg:package xmlns:pkg='http://schemas.microsoft.com/office/2006/xmlPackage'><pkg:part pkg:name='/_rels/.rels' pkg:contentType='application/vnd.openxmlformats-package.relationships+xml' pkg:padding='512'><pkg:xmlData><Relationships xmlns='http://schemas.openxmlformats.org/package/2006/relationships'><Relationship Id='rId1' Type='http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument' Target='word/document.xml'/></Relationships></pkg:xmlData></pkg:part><pkg:part pkg:name='/word/document.xml' pkg:contentType='application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml'><pkg:xmlData><w:document xmlns:w='http://schemas.openxmlformats.org/wordprocessingml/2006/main' ><w:body><w:p><w:pPr><w:spacing w:before='360' w:after='0' w:line='480' w:lineRule='auto'/><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr></w:pPr><w:r><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr><w:t>This text has formatting directly applied to achieve its font size, color, line spacing, and paragraph spacing.</w:t></w:r></w:p></w:body></w:document></pkg:xmlData></pkg:part></pkg:package>", Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('OOXML added to the beginning of the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // Read "Create better add-ins for Word with Office Open XML" for guidance on working with OOXML.
          // https://docs.microsoft.com/office/dev/add-ins/word/create-better-add-ins-for-word-with-office-open-xml

          // The Word-Add-in-DocumentAssembly sample shows how you can use this API to assemble a document.
          // https://github.com/OfficeDev/Word-Add-in-DocumentAssembly
          ```
      parameters:
        - id: base64EncodedImage
          description: '<span data-ttu-id="1b849-190">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-190">Required.</span></span> <span data-ttu-id="1b849-191">Das base64-codierte Bild, das in den Textkörper eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="1b849-191">The base64 encoded image to be inserted in the body.</span></span>'
          type:
            - string
        - id: insertLocation
          description: <span data-ttu-id="1b849-192">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-192">Required.</span></span> <span data-ttu-id="1b849-193">Der Wert kann „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-193">The value can be 'Start' or 'End'.</span></span>
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Body.insertInlinePictureFromBase64_1
    summary: |-
      <span data-ttu-id="1b849-194">Fügt in den Textkörper an der angegebenen Position ein Bild ein.</span><span class="sxs-lookup"><span data-stu-id="1b849-194">Inserts a picture into the body at the specified location.</span></span> <span data-ttu-id="1b849-195">Der insertLocation-Wert kann 'Start' oder 'End' lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-195">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="1b849-196">\[[API-Gruppe: WordApi 1,2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-196">\[ [API set: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.InlinePicture;'
      return:
        type:
          - word.Word.InlinePicture
        description: ''
      parameters:
        - id: base64EncodedImage
          description: '<span data-ttu-id="1b849-197">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-197">Required.</span></span> <span data-ttu-id="1b849-198">Das base64-codierte Bild, das in den Textkörper eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="1b849-198">The base64 encoded image to be inserted in the body.</span></span>'
          type:
            - string
        - id: insertLocationString
          description: <span data-ttu-id="1b849-199">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-199">Required.</span></span> <span data-ttu-id="1b849-200">Der Wert kann „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-200">The value can be 'Start' or 'End'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Body.insertOoxml
    summary: |-
      <span data-ttu-id="1b849-201">Fügt an der angegebenen Position OOXML-Code ein.</span><span class="sxs-lookup"><span data-stu-id="1b849-201">Inserts OOXML at the specified location.</span></span> <span data-ttu-id="1b849-202">Der insertLocation-Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-202">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="1b849-203">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-203">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocation)'
    fullName: 'insertOoxml(ooxml, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="1b849-204">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-204">Required.</span></span> <span data-ttu-id="1b849-205">Der einzufügende OOXML-Code.</span><span class="sxs-lookup"><span data-stu-id="1b849-205">The OOXML to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="1b849-206">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-206">Required.</span></span> <span data-ttu-id="1b849-207">Der Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-207">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Body.insertOoxml_1
    summary: |-
      <span data-ttu-id="1b849-208">Fügt an der angegebenen Position OOXML-Code ein.</span><span class="sxs-lookup"><span data-stu-id="1b849-208">Inserts OOXML at the specified location.</span></span> <span data-ttu-id="1b849-209">Der insertLocation-Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-209">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="1b849-210">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-210">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocationString)'
    fullName: 'insertOoxml(ooxml, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="1b849-211">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-211">Required.</span></span> <span data-ttu-id="1b849-212">Der einzufügende OOXML-Code.</span><span class="sxs-lookup"><span data-stu-id="1b849-212">The OOXML to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="1b849-213">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-213">Required.</span></span> <span data-ttu-id="1b849-214">Der Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-214">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Body.insertParagraph
    summary: |-
      <span data-ttu-id="1b849-215">Fügt an der angegebenen Position einen Absatz ein.</span><span class="sxs-lookup"><span data-stu-id="1b849-215">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="1b849-216">Der insertLocation-Wert kann 'Start' oder 'End' lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-216">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="1b849-217">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-217">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1b849-218">Beispiele</span><span class="sxs-lookup"><span data-stu-id="1b849-218">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to insert the paragraph at the end of the document body.
              body.insertParagraph('Content of a new paragraph', Word.InsertLocation.end);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Paragraph added at the end of the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // The Word-Add-in-DocumentAssembly sample shows how you can use the insertParagraph method to assemble a document.
          // https://github.com/OfficeDev/Word-Add-in-DocumentAssembly
          ```
          ```typescript
          await Word.run(async (context) => {
              let paragraph = context.document.body.insertParagraph("Timeline", "End");
              paragraph.style = "Heading 2";
              let paragraph2 = context.document.body.insertParagraph("The Services shall commence on July 31, 2015, and shall continue through July 29, 2015.", "End");
              paragraph2.style = "Normal";
              let paragraph3 = context.document.body.insertParagraph("Project Costs by Phase", "End");
              paragraph3.style = "Heading 2";
              // Note a content control with the title of "ProjectCosts" is added. Content will be replaced later.
              let paragraph4 = context.document.body.insertParagraph("<Add Project Costs Here>", "End");
              paragraph4.style = "Normal";
              paragraph4.font.highlightColor = "#FFFF00";
              let contentControl = paragraph4.insertContentControl();
              contentControl.title = "ProjectCosts";
              let paragraph5 = context.document.body.insertParagraph("Project Team", "End");
              paragraph5.style = "Heading 2";
              paragraph5.font.highlightColor = "#FFFFFF";
              let paragraph6 = context.document.body.insertParagraph("Terms of Work", "End");
              paragraph6.style = "Heading 1";
              let paragraph7 = context.document.body.insertParagraph("Contractor shall provide the Services and Deliverable(s) as follows:", "End");
              paragraph7.style = "Normal";
              let paragraph8 = context.document.body.insertParagraph("Out-of-Pocket Expenses / Invoice Procedures", "End");
              paragraph8.style = "Heading 2";
              let paragraph9 = context.document.body.insertParagraph("Client will be invoiced monthly for the consulting services and T&L expenses. Standard Contractor invoicing is assumed to be acceptable. Invoices are due upon receipt. client will be invoiced all costs associated with out-of-pocket expenses (including, without limitation, costs and expenses associated with meals, lodging, local transportation and any other applicable business expenses) listed on the invoice as a separate line item. Reimbursement for out-of-pocket expenses in connection with performance of this SOW, when authorized and up to the limits set forth in this SOW, shall be in accordance with Client's then-current published policies governing travel and associated business expenses, which information shall be provided by the Client Project Manager.", "End");
              paragraph9.style = "Normal";
              // Insert a page break at the end of the document.
              context.document.body.insertBreak("Page", "End");

              await context.sync();
          });
          ```
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="1b849-219">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-219">Required.</span></span> <span data-ttu-id="1b849-220">Der einzufügende Absatztext.</span><span class="sxs-lookup"><span data-stu-id="1b849-220">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: <span data-ttu-id="1b849-221">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-221">Required.</span></span> <span data-ttu-id="1b849-222">Der Wert kann „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-222">The value can be 'Start' or 'End'.</span></span>
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Body.insertParagraph_1
    summary: |-
      <span data-ttu-id="1b849-223">Fügt an der angegebenen Position einen Absatz ein.</span><span class="sxs-lookup"><span data-stu-id="1b849-223">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="1b849-224">Der insertLocation-Wert kann 'Start' oder 'End' lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-224">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="1b849-225">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-225">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocationString)'
    fullName: 'insertParagraph(paragraphText, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: ''
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="1b849-226">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-226">Required.</span></span> <span data-ttu-id="1b849-227">Der einzufügende Absatztext.</span><span class="sxs-lookup"><span data-stu-id="1b849-227">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: <span data-ttu-id="1b849-228">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-228">Required.</span></span> <span data-ttu-id="1b849-229">Der Wert kann „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-229">The value can be 'Start' or 'End'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Body.insertTable
    summary: |-
      <span data-ttu-id="1b849-230">Fügt eine Tabelle mit der angegebenen Anzahl von Zeilen und Spalten ein.</span><span class="sxs-lookup"><span data-stu-id="1b849-230">Inserts a table with the specified number of rows and columns.</span></span> <span data-ttu-id="1b849-231">Der insertLocation-Wert kann "Start" oder "End" lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-231">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="1b849-232">\[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-232">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertTable(rowCount, columnCount, insertLocation, values)'
    fullName: 'insertTable(rowCount, columnCount, insertLocation, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertTable(rowCount: number, columnCount: number, insertLocation: Word.InsertLocation, values?: string[][]): Word.Table;'
      return:
        type:
          - Word.Table
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1b849-233">Beispiele</span><span class="sxs-lookup"><span data-stu-id="1b849-233">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Use a two-dimensional array to hold the initial table values.
            let data = [
              ["Tokyo", "Beijing", "Seattle"],
              ["Apple", "Orange", "Pineapple"]
            ];
            let table = context.document.body.insertTable(2, 3, "Start", data);
            table.styleBuiltIn = Word.Style.gridTable5Dark_Accent2;
            table.styleFirstColumn = false;

            await context.sync();
          });
          ```
      parameters:
        - id: rowCount
          description: <span data-ttu-id="1b849-234">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-234">Required.</span></span> <span data-ttu-id="1b849-235">Die Anzahl der Zeilen in der Tabelle.</span><span class="sxs-lookup"><span data-stu-id="1b849-235">The number of rows in the table.</span></span>
          type:
            - number
        - id: columnCount
          description: <span data-ttu-id="1b849-236">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-236">Required.</span></span> <span data-ttu-id="1b849-237">Die Anzahl der Spalten in der Tabelle.</span><span class="sxs-lookup"><span data-stu-id="1b849-237">The number of columns in the table.</span></span>
          type:
            - number
        - id: insertLocation
          description: <span data-ttu-id="1b849-238">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-238">Required.</span></span> <span data-ttu-id="1b849-239">Der Wert kann „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-239">The value can be 'Start' or 'End'.</span></span>
          type:
            - Word.InsertLocation
        - id: values
          description: '<span data-ttu-id="1b849-240">Optionales 2D-Array.</span><span class="sxs-lookup"><span data-stu-id="1b849-240">Optional 2D array.</span></span> <span data-ttu-id="1b849-241">Wenn die entsprechenden Zeichenfolgen im Array angegeben sind, werden die Zellen gefüllt.</span><span class="sxs-lookup"><span data-stu-id="1b849-241">Cells are filled if the corresponding strings are specified in the array.</span></span>'
          type:
            - 'string[][]'
  - uid: word_release.Word.Body.insertTable_1
    summary: |-
      <span data-ttu-id="1b849-242">Fügt eine Tabelle mit der angegebenen Anzahl von Zeilen und Spalten ein.</span><span class="sxs-lookup"><span data-stu-id="1b849-242">Inserts a table with the specified number of rows and columns.</span></span> <span data-ttu-id="1b849-243">Der insertLocation-Wert kann "Start" oder "End" lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-243">The insertLocation value can be 'Start' or 'End'.</span></span>

      <span data-ttu-id="1b849-244">\[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-244">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertTable(rowCount, columnCount, insertLocationString, values)'
    fullName: 'insertTable(rowCount, columnCount, insertLocationString, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertTable(rowCount: number, columnCount: number, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace", values?: string[][]): Word.Table;'
      return:
        type:
          - Word.Table
        description: ''
      parameters:
        - id: rowCount
          description: <span data-ttu-id="1b849-245">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-245">Required.</span></span> <span data-ttu-id="1b849-246">Die Anzahl der Zeilen in der Tabelle.</span><span class="sxs-lookup"><span data-stu-id="1b849-246">The number of rows in the table.</span></span>
          type:
            - number
        - id: columnCount
          description: <span data-ttu-id="1b849-247">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-247">Required.</span></span> <span data-ttu-id="1b849-248">Die Anzahl der Spalten in der Tabelle.</span><span class="sxs-lookup"><span data-stu-id="1b849-248">The number of columns in the table.</span></span>
          type:
            - number
        - id: insertLocationString
          description: <span data-ttu-id="1b849-249">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-249">Required.</span></span> <span data-ttu-id="1b849-250">Der Wert kann „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-250">The value can be 'Start' or 'End'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
        - id: values
          description: '<span data-ttu-id="1b849-251">Optionales 2D-Array.</span><span class="sxs-lookup"><span data-stu-id="1b849-251">Optional 2D array.</span></span> <span data-ttu-id="1b849-252">Wenn die entsprechenden Zeichenfolgen im Array angegeben sind, werden die Zellen gefüllt.</span><span class="sxs-lookup"><span data-stu-id="1b849-252">Cells are filled if the corresponding strings are specified in the array.</span></span>'
          type:
            - 'string[][]'
  - uid: word_release.Word.Body.insertText
    summary: |-
      <span data-ttu-id="1b849-253">Fügt in den Textkörper an der angegebenen Position Text ein.</span><span class="sxs-lookup"><span data-stu-id="1b849-253">Inserts text into the body at the specified location.</span></span> <span data-ttu-id="1b849-254">Der insertLocation-Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-254">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="1b849-255">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-255">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocation)'
    fullName: 'insertText(text, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1b849-256">Beispiele</span><span class="sxs-lookup"><span data-stu-id="1b849-256">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to insert text in to the beginning of the body.
              body.insertText('This is text inserted with body.insertText()', Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Text added to the beginning of the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: text
          description: <span data-ttu-id="1b849-257">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-257">Required.</span></span> <span data-ttu-id="1b849-258">Der einzufügende Text.</span><span class="sxs-lookup"><span data-stu-id="1b849-258">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="1b849-259">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-259">Required.</span></span> <span data-ttu-id="1b849-260">Der Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-260">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Body.insertText_1
    summary: |-
      <span data-ttu-id="1b849-261">Fügt in den Textkörper an der angegebenen Position Text ein.</span><span class="sxs-lookup"><span data-stu-id="1b849-261">Inserts text into the body at the specified location.</span></span> <span data-ttu-id="1b849-262">Der insertLocation-Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-262">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="1b849-263">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-263">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocationString)'
    fullName: 'insertText(text, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: text
          description: <span data-ttu-id="1b849-264">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-264">Required.</span></span> <span data-ttu-id="1b849-265">Der einzufügende Text.</span><span class="sxs-lookup"><span data-stu-id="1b849-265">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="1b849-266">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-266">Required.</span></span> <span data-ttu-id="1b849-267">Der Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="1b849-267">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Body.lists
    summary: |-
      <span data-ttu-id="1b849-268">Ruft die Sammlung von Listenobjekten im Textkörper ab.</span><span class="sxs-lookup"><span data-stu-id="1b849-268">Gets the collection of list objects in the body.</span></span> <span data-ttu-id="1b849-269">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1b849-269">Read-only.</span></span>

      <span data-ttu-id="1b849-270">\[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-270">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: lists
    fullName: lists
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly lists: Word.ListCollection;'
      return:
        type:
          - word.Word.ListCollection
  - uid: word_release.Word.Body.load
    summary: <span data-ttu-id="1b849-271">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="1b849-271">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1b849-272">Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.</span><span class="sxs-lookup"><span data-stu-id="1b849-272">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="1b849-273">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="1b849-273">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="1b849-274">`load(option?: string | string[]): Word.Body`-Wobei Option eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="1b849-274">`load(option?: string | string[]): Word.Body` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="1b849-275">`load(option?: { select?: string; expand?: string; }): Word.Body`-Bei Option. Select handelt es sich um eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="1b849-275">`load(option?: { select?: string; expand?: string; }): Word.Body` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="1b849-276">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Body`Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="1b849-276">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Body` - Only available on collection types.</span></span> <span data-ttu-id="1b849-277">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="1b849-277">It is similar to the preceding signature.</span></span> <span data-ttu-id="1b849-278">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis einbezogen werden können.</span><span class="sxs-lookup"><span data-stu-id="1b849-278">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="1b849-279">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="1b849-279">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="1b849-280">Wenn Option. Top angegeben ist, wird das Resultset gestartet, nachdem die angegebene Anzahl von Elementen übersprungen wurde.</span><span class="sxs-lookup"><span data-stu-id="1b849-280">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.BodyLoadOptions): Word.Body;'
      return:
        type:
          - Word.Body
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - word.Word.Interfaces.BodyLoadOptions
  - uid: word_release.Word.Body.load_1
    summary: <span data-ttu-id="1b849-281">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="1b849-281">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1b849-282">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="1b849-282">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.Body;'
      return:
        type:
          - Word.Body
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="1b849-283">Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="1b849-283">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: word_release.Word.Body.load_2
    summary: <span data-ttu-id="1b849-284">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="1b849-284">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="1b849-285">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="1b849-285">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.Body;'
      return:
        type:
          - Word.Body
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="1b849-286">Dabei ist propertyNamesAndPaths. Select eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="1b849-286">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: word_release.Word.Body.paragraphs
    summary: |-
      <span data-ttu-id="1b849-287">Ruft die Auflistung von Paragraph-Objekten im Textkörper ab.</span><span class="sxs-lookup"><span data-stu-id="1b849-287">Gets the collection of paragraph objects in the body.</span></span> <span data-ttu-id="1b849-288">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1b849-288">Read-only.</span></span>

      <span data-ttu-id="1b849-289">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-289">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: paragraphs
    fullName: paragraphs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraphs: Word.ParagraphCollection;'
      return:
        type:
          - Word.ParagraphCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1b849-290">Beispiele</span><span class="sxs-lookup"><span data-stu-id="1b849-290">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            let paragraphs = context.document.body.paragraphs;
            paragraphs.load("text");
            await context.sync();

            let text = [];
            paragraphs.items.forEach((item) => {
              let paragraph = item.text.trim();
              if (paragraph) {
                paragraph.split(" ").forEach((term) => {
                  let currentTerm = term.trim();
                  if (currentTerm) {
                    text.push(currentTerm);
                  }
                });
              }
            });

            let makeTextDistinct = new Set(text);
            let distinctText = Array.from(makeTextDistinct);
            let allSearchResults = [];

            for (let i = 0; i < distinctText.length; i++) {
              let results = context.document.body.search(distinctText[i], { matchCase: true, matchWholeWord: true });
              results.load("text");

              // Map search term with its results.
              let correlatedResults = {
                searchTerm: distinctText[i],
                hits: results
              };

              allSearchResults.push(correlatedResults);
            }

            await context.sync();

            // Display counts.
            allSearchResults.forEach((result) => {
              let length = result.hits.items.length;

              console.log("Search term: " + result.searchTerm + " => Count: " + length);
            });
          });
          ```
  - uid: word_release.Word.Body.parentBody
    summary: |-
      <span data-ttu-id="1b849-p167">Ruft den übergeordneten Textkörper des Textkörpers ab. Beispielsweise kann der übergeordnete Textkörper des Textkörpers einer Tabellenzelle ein Header sein. Wird ausgelöst, wenn kein übergeordneter Textkörper vorhanden ist. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1b849-p167">Gets the parent body of the body. For example, a table cell body's parent body could be a header. Throws if there isn't a parent body. Read-only.</span></span>

      <span data-ttu-id="1b849-295">\[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-295">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentBody
    fullName: parentBody
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentBody: Word.Body;'
      return:
        type:
          - Word.Body
  - uid: word_release.Word.Body.parentBodyOrNullObject
    summary: |-
      <span data-ttu-id="1b849-p168">Ruft den übergeordneten Textkörper des Textkörpers ab. Beispielsweise kann der übergeordnete Textkörper des Textkörpers einer Tabellenzelle ein Header sein. Gibt ein NULL-Objekt zurück, wenn kein übergeordneter Textkörper vorhanden ist. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1b849-p168">Gets the parent body of the body. For example, a table cell body's parent body could be a header. Returns a null object if there isn't a parent body. Read-only.</span></span>

      <span data-ttu-id="1b849-300">\[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-300">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentBodyOrNullObject
    fullName: parentBodyOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentBodyOrNullObject: Word.Body;'
      return:
        type:
          - Word.Body
  - uid: word_release.Word.Body.parentContentControl
    summary: |-
      <span data-ttu-id="1b849-301">Ruft das Inhaltssteuerelement ab, das den Textkörper enthält.</span><span class="sxs-lookup"><span data-stu-id="1b849-301">Gets the content control that contains the body.</span></span> <span data-ttu-id="1b849-302">Löst, wenn kein übergeordnetes Inhaltssteuerelement vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="1b849-302">Throws if there isn't a parent content control.</span></span> <span data-ttu-id="1b849-303">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1b849-303">Read-only.</span></span>

      <span data-ttu-id="1b849-304">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-304">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentContentControl
    fullName: parentContentControl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControl: Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
  - uid: word_release.Word.Body.parentContentControlOrNullObject
    summary: |-
      <span data-ttu-id="1b849-305">Ruft das Inhaltssteuerelement ab, das den Textkörper enthält.</span><span class="sxs-lookup"><span data-stu-id="1b849-305">Gets the content control that contains the body.</span></span> <span data-ttu-id="1b849-306">Gibt ein NULL-Objekt zurück, wenn kein übergeordnetes Inhaltssteuerelement vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="1b849-306">Returns a null object if there isn't a parent content control.</span></span> <span data-ttu-id="1b849-307">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1b849-307">Read-only.</span></span>

      <span data-ttu-id="1b849-308">\[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-308">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentContentControlOrNullObject
    fullName: parentContentControlOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControlOrNullObject: Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
  - uid: word_release.Word.Body.parentSection
    summary: |-
      <span data-ttu-id="1b849-309">Ruft den übergeordneten Abschnitt des Texts ab.</span><span class="sxs-lookup"><span data-stu-id="1b849-309">Gets the parent section of the body.</span></span> <span data-ttu-id="1b849-310">Löst, wenn kein übergeordneter Abschnitt vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="1b849-310">Throws if there isn't a parent section.</span></span> <span data-ttu-id="1b849-311">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1b849-311">Read-only.</span></span>

      <span data-ttu-id="1b849-312">\[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-312">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentSection
    fullName: parentSection
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentSection: Word.Section;'
      return:
        type:
          - Word.Section
  - uid: word_release.Word.Body.parentSectionOrNullObject
    summary: |-
      <span data-ttu-id="1b849-313">Ruft den übergeordneten Abschnitt des Texts ab.</span><span class="sxs-lookup"><span data-stu-id="1b849-313">Gets the parent section of the body.</span></span> <span data-ttu-id="1b849-314">Gibt ein NULL-Objekt zurück, wenn kein übergeordneter Abschnitt vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="1b849-314">Returns a null object if there isn't a parent section.</span></span> <span data-ttu-id="1b849-315">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1b849-315">Read-only.</span></span>

      <span data-ttu-id="1b849-316">\[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-316">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentSectionOrNullObject
    fullName: parentSectionOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentSectionOrNullObject: Word.Section;'
      return:
        type:
          - Word.Section
  - uid: word_release.Word.Body.search
    summary: |-
      <span data-ttu-id="1b849-317">Führt eine Suche mit den angegebenen SearchOptions für den Bereich des Body-Objekts aus.</span><span class="sxs-lookup"><span data-stu-id="1b849-317">Performs a search with the specified SearchOptions on the scope of the body object.</span></span> <span data-ttu-id="1b849-318">Die Suchergebnisse sind eine Sammlung von Bereichsobjekten.</span><span class="sxs-lookup"><span data-stu-id="1b849-318">The search results are a collection of range objects.</span></span>

      <span data-ttu-id="1b849-319">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-319">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'search(searchText, searchOptions)'
    fullName: 'search(searchText, searchOptions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        search(searchText: string, searchOptions?: Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }): Word.RangeCollection;
      return:
        type:
          - Word.RangeCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1b849-320">Beispiele</span><span class="sxs-lookup"><span data-stu-id="1b849-320">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to search the document.
              var searchResults = context.document.body.search('video', {matchCase: false});

              // Queue a commmand to load the results.
              context.load(searchResults, 'text, font');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  var results = 'Found count: ' + searchResults.items.length +
                                '; we highlighted the results.';

                  // Queue a command to change the font for each found item.
                  for (var i = 0; i < searchResults.items.length; i++) {
                    searchResults.items[i].font.color = '#FF0000'    // Change color to Red
                    searchResults.items[i].font.highlightColor = '#FFFF00';
                    searchResults.items[i].font.bold = true;
                  }

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log(results);
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // The Word-Add-in-DocumentAssembly sample provides another example of how to search a document.
          // https://github.com/OfficeDev/Word-Add-in-DocumentAssembly
          ```
          ```typescript
          await Word.run(async (context) => {
            let results = context.document.body.search("Online");
            results.load("length");

            await context.sync();

            // Let's traverse the search results... and highlight...
            for (let i = 0; i < results.items.length; i++) {
              results.items[i].font.highlightColor = "yellow";
            }

            await context.sync();
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // Check out how wildcard expression are built, also use the second parameter of the search method to include search modes
            // (i.e. use wildcards).
            let results = context.document.body.search("$*.[0-9][0-9]", { matchWildcards: true });
            results.load("length");

            await context.sync();

            // Let's traverse the search results... and highlight...
            for (let i = 0; i < results.items.length; i++) {
              results.items[i].font.highlightColor = "red";
              results.items[i].font.color = "white";
            }

            await context.sync();
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            let paragraphs = context.document.body.paragraphs;
            paragraphs.load("text");
            await context.sync();

            let text = [];
            paragraphs.items.forEach((item) => {
              let paragraph = item.text.trim();
              if (paragraph) {
                paragraph.split(" ").forEach((term) => {
                  let currentTerm = term.trim();
                  if (currentTerm) {
                    text.push(currentTerm);
                  }
                });
              }
            });

            let makeTextDistinct = new Set(text);
            let distinctText = Array.from(makeTextDistinct);
            let allSearchResults = [];

            for (let i = 0; i < distinctText.length; i++) {
              let results = context.document.body.search(distinctText[i], { matchCase: true, matchWholeWord: true });
              results.load("text");

              // Map search term with its results.
              let correlatedResults = {
                searchTerm: distinctText[i],
                hits: results
              };

              allSearchResults.push(correlatedResults);
            }

            await context.sync();

            // Display counts.
            allSearchResults.forEach((result) => {
              let length = result.hits.items.length;

              console.log("Search term: " + result.searchTerm + " => Count: " + length);
            });
          });
          ```
      parameters:
        - id: searchText
          description: <span data-ttu-id="1b849-321">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="1b849-321">Required.</span></span> <span data-ttu-id="1b849-322">Der Suchtext.</span><span class="sxs-lookup"><span data-stu-id="1b849-322">The search text.</span></span> <span data-ttu-id="1b849-323">Kann maximal 255 Zeichen lang sein.</span><span class="sxs-lookup"><span data-stu-id="1b849-323">Can be a maximum of 255 characters.</span></span>
          type:
            - string
        - id: searchOptions
          description: <span data-ttu-id="1b849-324">Optional.</span><span class="sxs-lookup"><span data-stu-id="1b849-324">Optional.</span></span> <span data-ttu-id="1b849-325">Optionen für die Suche.</span><span class="sxs-lookup"><span data-stu-id="1b849-325">Options for the search.</span></span>
          type:
            - |-
              Word.SearchOptions | {
                          ignorePunct?: boolean;
                          ignoreSpace?: boolean;
                          matchCase?: boolean;
                          matchPrefix?: boolean;
                          matchSuffix?: boolean;
                          matchWholeWord?: boolean;
                          matchWildcards?: boolean;
                      }
  - uid: word_release.Word.Body.select
    summary: |-
      <span data-ttu-id="1b849-326">Wählt den Textkörper und navigiert die Word-Benutzeroberfläche an diese Position.</span><span class="sxs-lookup"><span data-stu-id="1b849-326">Selects the body and navigates the Word UI to it.</span></span>

      <span data-ttu-id="1b849-327">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-327">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionMode)
    fullName: select(selectionMode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionMode?: Word.SelectionMode): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1b849-328">Beispiele</span><span class="sxs-lookup"><span data-stu-id="1b849-328">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to select the document body. The Word UI will
              // move to the selected document body.
              body.select();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Selected the document body.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: selectionMode
          description: '<span data-ttu-id="1b849-329">Optional.</span><span class="sxs-lookup"><span data-stu-id="1b849-329">Optional.</span></span> <span data-ttu-id="1b849-330">Der Auswahlmodus kann „Select“, „Start“ oder „End“ sein.</span><span class="sxs-lookup"><span data-stu-id="1b849-330">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="1b849-331">„Select“ ist die Standardeinstellung.</span><span class="sxs-lookup"><span data-stu-id="1b849-331">''Select'' is the default.</span></span>'
          type:
            - Word.SelectionMode
  - uid: word_release.Word.Body.select_1
    summary: |-
      <span data-ttu-id="1b849-332">Wählt den Textkörper und navigiert die Word-Benutzeroberfläche an diese Position.</span><span class="sxs-lookup"><span data-stu-id="1b849-332">Selects the body and navigates the Word UI to it.</span></span>

      <span data-ttu-id="1b849-333">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-333">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionModeString)
    fullName: select(selectionModeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: selectionModeString
          description: '<span data-ttu-id="1b849-334">Optional.</span><span class="sxs-lookup"><span data-stu-id="1b849-334">Optional.</span></span> <span data-ttu-id="1b849-335">Der Auswahlmodus kann „Select“, „Start“ oder „End“ sein.</span><span class="sxs-lookup"><span data-stu-id="1b849-335">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="1b849-336">„Select“ ist die Standardeinstellung.</span><span class="sxs-lookup"><span data-stu-id="1b849-336">''Select'' is the default.</span></span>'
          type:
            - '"Select" | "Start" | "End"'
  - uid: word_release.Word.Body.set
    summary: '<span data-ttu-id="1b849-337">Legt mehrere Eigenschaften eines Objekts gleichzeitig fest.</span><span class="sxs-lookup"><span data-stu-id="1b849-337">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="1b849-338">Sie können entweder ein einfaches Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs übergeben.</span><span class="sxs-lookup"><span data-stu-id="1b849-338">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="1b849-339">Diese Methode hat die folgende zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="1b849-339">This method has the following additional signature:</span></span>

      `set(properties: Word.Body): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.BodyUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="1b849-340">Ein JavaScript-Objekt mit Eigenschaften, die isomorphically für die Eigenschaften des Objekts strukturiert sind, für das die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="1b849-340">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.BodyUpdateData
        - id: options
          description: '<span data-ttu-id="1b849-341">Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.</span><span class="sxs-lookup"><span data-stu-id="1b849-341">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: word_release.Word.Body.set_1
    summary: '<span data-ttu-id="1b849-342">Legt mehrere Eigenschaften für das Objekt gleichzeitig basierend auf einem vorhandenen geladenen Objekt fest.</span><span class="sxs-lookup"><span data-stu-id="1b849-342">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.Body): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - Word.Body
  - uid: word_release.Word.Body.style
    summary: |-
      <span data-ttu-id="1b849-p179">Ruft den Namen der Formatvorlage für den Textkörper ab oder legt ihn fest. Verwenden Sie diese Eigenschaft für benutzerdefinierte Formatvorlagen und lokalisierte Formatvorlagennamen. Informationen zur Verwendung der integrierten Formatvorlagen, die zwischen Gebietsschemas portabel sind, finden Sie unter der Eigenschaft „styleBuiltIn“.</span><span class="sxs-lookup"><span data-stu-id="1b849-p179">Gets or sets the style name for the body. Use this property for custom styles and localized style names. To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.</span></span>

      <span data-ttu-id="1b849-346">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-346">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: word_release.Word.Body.styleBuiltIn
    summary: |-
      <span data-ttu-id="1b849-p180">Ruft den Namen der integrierten Formatvorlage für den Text ab oder legt ihn fest. Verwenden Sie diese Eigenschaft für integrierte Formatvorlagen, die zwischen Gebietsschemas portabel sind. Informationen zum Verwenden benutzerdefinierter Formatvorlagen oder lokalisierter Namen finden Sie unter der Eigenschaft "style".</span><span class="sxs-lookup"><span data-stu-id="1b849-p180">Gets or sets the built-in style name for the body. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.</span></span>

      <span data-ttu-id="1b849-350">\[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-350">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: styleBuiltIn
    fullName: styleBuiltIn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styleBuiltIn: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";'
      return:
        type:
          - Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"
  - uid: word_release.Word.Body.tables
    summary: |-
      <span data-ttu-id="1b849-351">Ruft die Sammlung von Tabellenobjekten im Text ab.</span><span class="sxs-lookup"><span data-stu-id="1b849-351">Gets the collection of table objects in the body.</span></span> <span data-ttu-id="1b849-352">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1b849-352">Read-only.</span></span>

      <span data-ttu-id="1b849-353">\[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-353">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: tables
    fullName: tables
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly tables: Word.TableCollection;'
      return:
        type:
          - Word.TableCollection
  - uid: word_release.Word.Body.text
    summary: |-
      <span data-ttu-id="1b849-354">Ruft den Textkörper ab.</span><span class="sxs-lookup"><span data-stu-id="1b849-354">Gets the text of the body.</span></span> <span data-ttu-id="1b849-355">Verwenden Sie die InsertText-Methode zum Einfügen von Text.</span><span class="sxs-lookup"><span data-stu-id="1b849-355">Use the insertText method to insert text.</span></span> <span data-ttu-id="1b849-356">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1b849-356">Read-only.</span></span>

      <span data-ttu-id="1b849-357">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-357">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="1b849-358">Beispiele</span><span class="sxs-lookup"><span data-stu-id="1b849-358">Examples</span></span>

          ```javascript
          // Get the text property on the body object
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the document body.
              var body = context.document.body;

              // Queue a commmand to load the text in document body.
              context.load(body, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log("Body contents: " + body.text);
              });
          })
          .catch(function (error) {
              console.log("Error: " + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word_release.Word.Body.toJSON
    summary: '<span data-ttu-id="1b849-359">Überschreibt die `toJSON()` JavaScript-Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird.`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="1b849-359">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="1b849-360">.</span><span class="sxs-lookup"><span data-stu-id="1b849-360"></span></span> <span data-ttu-id="1b849-361">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="1b849-361"></span></span><!-- --><span data-ttu-id="1b849-362">wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche Word. Body-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`Word.Interfaces.BodyData`</span><span class="sxs-lookup"><span data-stu-id="1b849-362">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Word.Body object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.BodyData`</span></span><!-- --><span data-ttu-id="1b849-363">), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="1b849-363">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.BodyData;'
      return:
        type:
          - word.Word.Interfaces.BodyData
        description: ''
  - uid: word_release.Word.Body.track
    summary: '<span data-ttu-id="1b849-364">Nachverfolgung des Objekts zwecks automatischer Anpassung auf der Grundlage der umgebenden Änderungen im Dokument.</span><span class="sxs-lookup"><span data-stu-id="1b849-364">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="1b849-365">Dieser Aufruf ist eine Kurzschreibweise für context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="1b849-365">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="1b849-366">Wenn Sie dieses Objekt übergreifend für ".sync"-Aufrufe und außerhalb der sequenziellen Ausführung eines ".run"-Stapels verwenden und beim Festlegen einer Eigenschaft oder Aufrufen einer Methode für das Objekt ein "InvalidObjectPath"-Fehler zurückgegeben wird, hätte das Objekt der nachverfolgten Objektsammlung hinzugefügt werden müssen, in der das Objekt ursprünglich erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="1b849-366">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.Body;'
      return:
        type:
          - Word.Body
        description: ''
  - uid: word_release.Word.Body.type
    summary: |-
      <span data-ttu-id="1b849-367">Ruft den Typ des Texts ab.</span><span class="sxs-lookup"><span data-stu-id="1b849-367">Gets the type of the body.</span></span> <span data-ttu-id="1b849-368">Der Typ kann "MainDoc", "Section", "Header", "Footer" oder "TableCell" sein.</span><span class="sxs-lookup"><span data-stu-id="1b849-368">The type can be 'MainDoc', 'Section', 'Header', 'Footer', or 'TableCell'.</span></span> <span data-ttu-id="1b849-369">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="1b849-369">Read-only.</span></span>

      <span data-ttu-id="1b849-370">\[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="1b849-370">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: Word.BodyType | "Unknown" | "MainDoc" | "Section" | "Header" | "Footer" | "TableCell";'
      return:
        type:
          - Word.BodyType | "Unknown" | "MainDoc" | "Section" | "Header" | "Footer" | "TableCell"
  - uid: word_release.Word.Body.untrack
    summary: '<span data-ttu-id="1b849-371">Gibt den diesem Objekt zugewiesenen Arbeitsspeicher frei, wenn das Objekt zuvor nachverfolgt wurde.</span><span class="sxs-lookup"><span data-stu-id="1b849-371">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="1b849-372">Dieser Aufruf stellt eine Kurzschreibweise für context.trackedObjects.remove(thisObject) dar.</span><span class="sxs-lookup"><span data-stu-id="1b849-372">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="1b849-373">Viele nachverfolgte Objekte verlangsamen die Ausführung der Hostanwendung, also achten Sie darauf, alle hinzugefügten Objekte nach abgeschlossener Verwendung freizugeben.</span><span class="sxs-lookup"><span data-stu-id="1b849-373">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="1b849-374">Sie müssen "context.sync()" aufrufen, damit die Freigabe des Arbeitsspeichers wirksam wird.</span><span class="sxs-lookup"><span data-stu-id="1b849-374">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.Body;'
      return:
        type:
          - Word.Body
        description: ''