### YamlMime:UniversalReference
items:
  - uid: word_release.Word.Paragraph
    summary: |-
      <span data-ttu-id="77522-101">Stellt einen einzelnen Absatz in einer Auswahl, einem Bereich, Inhaltssteuerelement oder Hauptteil des Dokuments dar.</span><span class="sxs-lookup"><span data-stu-id="77522-101">Represents a single paragraph in a selection, range, content control, or document body.</span></span>

      <span data-ttu-id="77522-102">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-102">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: Word.Paragraph
    fullName: Word.Paragraph
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: word_release
    children:
      - word_release.Word.Paragraph.alignment
      - word_release.Word.Paragraph.attachToList
      - word_release.Word.Paragraph.clear
      - word_release.Word.Paragraph.contentControls
      - word_release.Word.Paragraph.context
      - word_release.Word.Paragraph.delete
      - word_release.Word.Paragraph.detachFromList
      - word_release.Word.Paragraph.firstLineIndent
      - word_release.Word.Paragraph.font
      - word_release.Word.Paragraph.getHtml
      - word_release.Word.Paragraph.getNext
      - word_release.Word.Paragraph.getNextOrNullObject
      - word_release.Word.Paragraph.getOoxml
      - word_release.Word.Paragraph.getPrevious
      - word_release.Word.Paragraph.getPreviousOrNullObject
      - word_release.Word.Paragraph.getRange
      - word_release.Word.Paragraph.getRange_1
      - word_release.Word.Paragraph.getTextRanges
      - word_release.Word.Paragraph.inlinePictures
      - word_release.Word.Paragraph.insertBreak
      - word_release.Word.Paragraph.insertBreak_1
      - word_release.Word.Paragraph.insertContentControl
      - word_release.Word.Paragraph.insertFileFromBase64
      - word_release.Word.Paragraph.insertFileFromBase64_1
      - word_release.Word.Paragraph.insertHtml
      - word_release.Word.Paragraph.insertHtml_1
      - word_release.Word.Paragraph.insertInlinePictureFromBase64
      - word_release.Word.Paragraph.insertInlinePictureFromBase64_1
      - word_release.Word.Paragraph.insertOoxml
      - word_release.Word.Paragraph.insertOoxml_1
      - word_release.Word.Paragraph.insertParagraph
      - word_release.Word.Paragraph.insertParagraph_1
      - word_release.Word.Paragraph.insertTable
      - word_release.Word.Paragraph.insertTable_1
      - word_release.Word.Paragraph.insertText
      - word_release.Word.Paragraph.insertText_1
      - word_release.Word.Paragraph.isLastParagraph
      - word_release.Word.Paragraph.isListItem
      - word_release.Word.Paragraph.leftIndent
      - word_release.Word.Paragraph.lineSpacing
      - word_release.Word.Paragraph.lineUnitAfter
      - word_release.Word.Paragraph.lineUnitBefore
      - word_release.Word.Paragraph.list
      - word_release.Word.Paragraph.listItem
      - word_release.Word.Paragraph.listItemOrNullObject
      - word_release.Word.Paragraph.listOrNullObject
      - word_release.Word.Paragraph.load
      - word_release.Word.Paragraph.load_1
      - word_release.Word.Paragraph.load_2
      - word_release.Word.Paragraph.outlineLevel
      - word_release.Word.Paragraph.parentBody
      - word_release.Word.Paragraph.parentContentControl
      - word_release.Word.Paragraph.parentContentControlOrNullObject
      - word_release.Word.Paragraph.parentTable
      - word_release.Word.Paragraph.parentTableCell
      - word_release.Word.Paragraph.parentTableCellOrNullObject
      - word_release.Word.Paragraph.parentTableOrNullObject
      - word_release.Word.Paragraph.rightIndent
      - word_release.Word.Paragraph.search
      - word_release.Word.Paragraph.select
      - word_release.Word.Paragraph.select_1
      - word_release.Word.Paragraph.set
      - word_release.Word.Paragraph.set_1
      - word_release.Word.Paragraph.spaceAfter
      - word_release.Word.Paragraph.spaceBefore
      - word_release.Word.Paragraph.split
      - word_release.Word.Paragraph.startNewList
      - word_release.Word.Paragraph.style
      - word_release.Word.Paragraph.styleBuiltIn
      - word_release.Word.Paragraph.tableNestingLevel
      - word_release.Word.Paragraph.text
      - word_release.Word.Paragraph.toJSON
      - word_release.Word.Paragraph.track
      - word_release.Word.Paragraph.untrack
  - uid: word_release.Word.Paragraph.alignment
    summary: |-
      <span data-ttu-id="77522-103">Ruft die Ausrichtung für einen Absatz ab oder legt sie fest.</span><span class="sxs-lookup"><span data-stu-id="77522-103">Gets or sets the alignment for a paragraph.</span></span> <span data-ttu-id="77522-104">Der Wert kann "left", "centered", "right" oder "justified" lauten.</span><span class="sxs-lookup"><span data-stu-id="77522-104">The value can be 'left', 'centered', 'right', or 'justified'.</span></span>

      <span data-ttu-id="77522-105">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: alignment
    fullName: alignment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'alignment: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";'
      return:
        type:
          - Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"
        description: |-


          #### <a name="examples"></a><span data-ttu-id="77522-106">Beispiele</span><span class="sxs-lookup"><span data-stu-id="77522-106">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Centers last paragraph alignment.
            context.document.body.paragraphs.getLast().alignment = "Centered";

            await context.sync();
          });
          ```
  - uid: word_release.Word.Paragraph.attachToList
    summary: |-
      <span data-ttu-id="77522-p102">Fügt den Absatz zu einer vorhandenen Liste auf der angegebenen Ebene hinzu. Führt zu einem Fehler, wenn der Absatz nicht in die Liste aufgenommen werden kann oder der Absatz bereits ein Listenelement ist.</span><span class="sxs-lookup"><span data-stu-id="77522-p102">Lets the paragraph join an existing list at the specified level. Fails if the paragraph cannot join the list or if the paragraph is already a list item.</span></span>

      <span data-ttu-id="77522-109">\[[API-Satz: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-109">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'attachToList(listId, level)'
    fullName: 'attachToList(listId, level)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'attachToList(listId: number, level: number): Word.List;'
      return:
        type:
          - word.Word.List
        description: ''
      parameters:
        - id: listId
          description: <span data-ttu-id="77522-110">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-110">Required.</span></span> <span data-ttu-id="77522-111">Die ID einer vorhandenen Liste.</span><span class="sxs-lookup"><span data-stu-id="77522-111">The ID of an existing list.</span></span>
          type:
            - number
        - id: level
          description: <span data-ttu-id="77522-112">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-112">Required.</span></span> <span data-ttu-id="77522-113">Die Ebene in der Liste.</span><span class="sxs-lookup"><span data-stu-id="77522-113">The level in the list.</span></span>
          type:
            - number
  - uid: word_release.Word.Paragraph.clear
    summary: |-
      <span data-ttu-id="77522-114">Löscht den Inhalt des Abschnittsobjekts.</span><span class="sxs-lookup"><span data-stu-id="77522-114">Clears the contents of the paragraph object.</span></span> <span data-ttu-id="77522-115">Der Benutzer kann den Rückgängig-Vorgang auf den gelöschten Inhalt durchführen.</span><span class="sxs-lookup"><span data-stu-id="77522-115">The user can perform the undo operation on the cleared content.</span></span>

      <span data-ttu-id="77522-116">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-116">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="77522-117">Beispiele</span><span class="sxs-lookup"><span data-stu-id="77522-117">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the style property for all of the paragraphs.
              context.load(paragraphs, 'style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to clear the contents of the first paragraph.
                  paragraphs.items[0].clear();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Cleared the contents of the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word_release.Word.Paragraph.contentControls
    summary: |-
      <span data-ttu-id="77522-118">Ruft die Auflistung der Inhaltssteuerelemente im Absatz ab.</span><span class="sxs-lookup"><span data-stu-id="77522-118">Gets the collection of content control objects in the paragraph.</span></span> <span data-ttu-id="77522-119">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="77522-119">Read-only.</span></span>

      <span data-ttu-id="77522-120">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-120">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: contentControls
    fullName: contentControls
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly contentControls: Word.ContentControlCollection;'
      return:
        type:
          - word.Word.ContentControlCollection
  - uid: word_release.Word.Paragraph.context
    summary: <span data-ttu-id="77522-121">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="77522-121">The request context associated with the object.</span></span> <span data-ttu-id="77522-122">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="77522-122">This connects the add-in's process to the Office host application's process.</span></span>
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: word_release.Word.Paragraph.delete
    summary: |-
      <span data-ttu-id="77522-123">Löscht den Absatz und seinen Inhalt aus dem Dokument.</span><span class="sxs-lookup"><span data-stu-id="77522-123">Deletes the paragraph and its content from the document.</span></span>

      <span data-ttu-id="77522-124">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-124">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="77522-125">Beispiele</span><span class="sxs-lookup"><span data-stu-id="77522-125">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the text property for all of the paragraphs.
              context.load(paragraphs, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to delete the first paragraph.
                  paragraphs.items[0].delete();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Deleted the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word_release.Word.Paragraph.detachFromList
    summary: |-
      <span data-ttu-id="77522-126">Verschiebt diesen Absatz aus der Liste, falls der Absatz ein Listenelement ist.</span><span class="sxs-lookup"><span data-stu-id="77522-126">Moves this paragraph out of its list, if the paragraph is a list item.</span></span>

      <span data-ttu-id="77522-127">\[[API-Satz: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-127">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: detachFromList()
    fullName: detachFromList()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'detachFromList(): void;'
      return:
        type:
          - void
        description: ''
  - uid: word_release.Word.Paragraph.firstLineIndent
    summary: |-
      <span data-ttu-id="77522-p108">Ruft den Wert in Punkten für einen Erstzeileneinzug oder einen hängenden Einzug ab, oder legt ihn fest. Verwenden Sie zum Festlegen eines Erstzeileneinzugs einen positiven Wert, und verwenden Sie für einen negativen Wert für einen hängenden Einzug.</span><span class="sxs-lookup"><span data-stu-id="77522-p108">Gets or sets the value, in points, for a first line or hanging indent. Use a positive value to set a first-line indent, and use a negative value to set a hanging indent.</span></span>

      <span data-ttu-id="77522-130">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-130">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: firstLineIndent
    fullName: firstLineIndent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'firstLineIndent: number;'
      return:
        type:
          - number
  - uid: word_release.Word.Paragraph.font
    summary: |-
      <span data-ttu-id="77522-131">Ruft das Textformat des Abschnitts ab.</span><span class="sxs-lookup"><span data-stu-id="77522-131">Gets the text format of the paragraph.</span></span> <span data-ttu-id="77522-132">Verwenden Sie diese Option zum Abrufen und Festlegen der Schriftart, Größe, Farbe und anderer Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="77522-132">Use this to get and set font name, size, color, and other properties.</span></span> <span data-ttu-id="77522-133">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="77522-133">Read-only.</span></span>

      <span data-ttu-id="77522-134">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-134">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Word.Font;'
      return:
        type:
          - word.Word.Font
  - uid: word_release.Word.Paragraph.getHtml
    summary: |-
      <span data-ttu-id="77522-135">Ruft eine HTML-Darstellung des Paragraph-Objekts ab.</span><span class="sxs-lookup"><span data-stu-id="77522-135">Gets an HTML representation of the paragraph object.</span></span> <span data-ttu-id="77522-136">Wenn Sie in einer Webseite oder in einem HTML-Viewer gerendert werden, ist die Formatierung für die Formatierung des Dokuments eng, aber nicht genau.</span><span class="sxs-lookup"><span data-stu-id="77522-136">When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match for of the formatting of the document.</span></span> <span data-ttu-id="77522-137">Bei dieser Methode wird nicht genau derselbe HTML-Code für dasselbe Dokument auf verschiedenen Plattformen (Windows, Mac, Word Online usw.) zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="77522-137">This method does not return the exact same HTML for the same document on different platforms (Windows, Mac, Word Online, etc.).</span></span> <span data-ttu-id="77522-138">Wenn Sie exakte Genauigkeit oder Konsistenz über Plattformen hinweg benötigen, `Paragraph.getOoxml()` verwenden Sie die zurückgegebene XML in HTML, und konvertieren Sie Sie.</span><span class="sxs-lookup"><span data-stu-id="77522-138">If you need exact fidelity, or consistency across platforms, use `Paragraph.getOoxml()` and convert the returned XML to HTML.</span></span>

      <span data-ttu-id="77522-139">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-139">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getHtml()
    fullName: getHtml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHtml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="77522-140">Beispiele</span><span class="sxs-lookup"><span data-stu-id="77522-140">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the style property for all of the paragraphs.
              context.load(paragraphs, 'style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a a set of commands to get the HTML of the first paragraph.
                  var html = paragraphs.items[0].getHtml();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Paragraph HTML: ' + html.value);
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word_release.Word.Paragraph.getNext
    summary: |-
      <span data-ttu-id="77522-141">Ruft den nächsten Absatz ab.</span><span class="sxs-lookup"><span data-stu-id="77522-141">Gets the next paragraph.</span></span> <span data-ttu-id="77522-142">Wird ausgelöst, wenn der Absatz der letzte ist.</span><span class="sxs-lookup"><span data-stu-id="77522-142">Throws if the paragraph is the last one.</span></span>

      <span data-ttu-id="77522-143">\[[API-Satz: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-143">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getNext()
    fullName: getNext()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNext(): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: ''
  - uid: word_release.Word.Paragraph.getNextOrNullObject
    summary: |-
      <span data-ttu-id="77522-144">Ruft den nächsten Absatz ab.</span><span class="sxs-lookup"><span data-stu-id="77522-144">Gets the next paragraph.</span></span> <span data-ttu-id="77522-145">Gibt ein NULL-Objekt zurück, wenn der Absatz der letzte ist.</span><span class="sxs-lookup"><span data-stu-id="77522-145">Returns a null object if the paragraph is the last one.</span></span>

      <span data-ttu-id="77522-146">\[[API-Satz: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-146">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getNextOrNullObject()
    fullName: getNextOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNextOrNullObject(): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: ''
  - uid: word_release.Word.Paragraph.getOoxml
    summary: |-
      <span data-ttu-id="77522-147">Ruft die Office Open XML (OOXML)-Darstellung des Abschnittsobjekts ab.</span><span class="sxs-lookup"><span data-stu-id="77522-147">Gets the Office Open XML (OOXML) representation of the paragraph object.</span></span>

      <span data-ttu-id="77522-148">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-148">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getOoxml()
    fullName: getOoxml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="77522-149">Beispiele</span><span class="sxs-lookup"><span data-stu-id="77522-149">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the style property for the top 2 paragraphs.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a a set of commands to get the OOXML of the first paragraph.
                  var ooxml = paragraphs.items[0].getOoxml();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Paragraph OOXML: ' + ooxml.value);
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word_release.Word.Paragraph.getPrevious
    summary: |-
      <span data-ttu-id="77522-150">Ruft den vorherigen Absatz ab.</span><span class="sxs-lookup"><span data-stu-id="77522-150">Gets the previous paragraph.</span></span> <span data-ttu-id="77522-151">Throws, wenn der Absatz der erste ist.</span><span class="sxs-lookup"><span data-stu-id="77522-151">Throws if the paragraph is the first one.</span></span>

      <span data-ttu-id="77522-152">\[[API-Satz: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-152">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getPrevious()
    fullName: getPrevious()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPrevious(): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: ''
  - uid: word_release.Word.Paragraph.getPreviousOrNullObject
    summary: |-
      <span data-ttu-id="77522-153">Ruft den vorherigen Absatz ab.</span><span class="sxs-lookup"><span data-stu-id="77522-153">Gets the previous paragraph.</span></span> <span data-ttu-id="77522-154">Gibt ein NULL-Objekt zurück, wenn der Absatz der erste ist.</span><span class="sxs-lookup"><span data-stu-id="77522-154">Returns a null object if the paragraph is the first one.</span></span>

      <span data-ttu-id="77522-155">\[[API-Satz: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-155">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getPreviousOrNullObject()
    fullName: getPreviousOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPreviousOrNullObject(): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: |-


          #### <a name="examples"></a><span data-ttu-id="77522-156">Beispiele</span><span class="sxs-lookup"><span data-stu-id="77522-156">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the text property for all of the paragraphs.
              context.load(paragraphs, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue commands to create a proxy object for the next-to-last paragraph.
                  var indexOfLastParagraph = paragraphs.items.length - 1;
                  var precedingParagraph = paragraphs.items[indexOfLastParagraph].getPreviousOrNullObject();

                  // Queue a command to load the text of the preceding paragraph.
                  context.load(precedingParagraph, 'text');

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      if (precedingParagraph.isNullObject) {
                          console.log('There are no paragraphs before the current one.');
                      } else {
                          console.log('The preceding paragraph is: ' + precedingParagraph.text);
                      }
                  });
              });
          }).catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word_release.Word.Paragraph.getRange
    summary: |-
      <span data-ttu-id="77522-157">Ruft den gesamten Absatz oder den Start- bzw. Endpunkt des Absatzes als Bereich ab.</span><span class="sxs-lookup"><span data-stu-id="77522-157">Gets the whole paragraph, or the starting or ending point of the paragraph, as a range.</span></span>

      <span data-ttu-id="77522-158">\[[API-Satz: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-158">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getRange(rangeLocation)
    fullName: getRange(rangeLocation)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(rangeLocation?: Word.RangeLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: rangeLocation
          description: '<span data-ttu-id="77522-159">Optional.</span><span class="sxs-lookup"><span data-stu-id="77522-159">Optional.</span></span> <span data-ttu-id="77522-160">Der Bereich kann "vollständig", "Start", "Ende", "nach" oder "Inhalt" sein.</span><span class="sxs-lookup"><span data-stu-id="77522-160">The range location can be ''Whole'', ''Start'', ''End'', ''After'', or ''Content''.</span></span>'
          type:
            - word.Word.RangeLocation
  - uid: word_release.Word.Paragraph.getRange_1
    summary: |-
      <span data-ttu-id="77522-161">Ruft den gesamten Absatz oder den Start- bzw. Endpunkt des Absatzes als Bereich ab.</span><span class="sxs-lookup"><span data-stu-id="77522-161">Gets the whole paragraph, or the starting or ending point of the paragraph, as a range.</span></span>

      <span data-ttu-id="77522-162">\[[API-Satz: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-162">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getRange(rangeLocationString)
    fullName: getRange(rangeLocationString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(rangeLocationString?: "Whole" | "Start" | "End" | "Before" | "After" | "Content"): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: rangeLocationString
          description: '<span data-ttu-id="77522-163">Optional.</span><span class="sxs-lookup"><span data-stu-id="77522-163">Optional.</span></span> <span data-ttu-id="77522-164">Der Bereich kann "vollständig", "Start", "Ende", "nach" oder "Inhalt" sein.</span><span class="sxs-lookup"><span data-stu-id="77522-164">The range location can be ''Whole'', ''Start'', ''End'', ''After'', or ''Content''.</span></span>'
          type:
            - '"Whole" | "Start" | "End" | "Before" | "After" | "Content"'
  - uid: word_release.Word.Paragraph.getTextRanges
    summary: |-
      <span data-ttu-id="77522-165">Ruft die Textbereiche im Absatz mithilfe von Satzzeichen und/oder anderen Endmarkierungen ab.</span><span class="sxs-lookup"><span data-stu-id="77522-165">Gets the text ranges in the paragraph by using punctuation marks and/or other ending marks.</span></span>

      <span data-ttu-id="77522-166">\[[API-Satz: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-166">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'getTextRanges(endingMarks, trimSpacing)'
    fullName: 'getTextRanges(endingMarks, trimSpacing)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTextRanges(endingMarks: string[], trimSpacing?: boolean): Word.RangeCollection;'
      return:
        type:
          - Word.RangeCollection
        description: ''
      parameters:
        - id: endingMarks
          description: <span data-ttu-id="77522-167">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-167">Required.</span></span> <span data-ttu-id="77522-168">Die Satzzeichen und/oder andere Endmarkierungen als ein Array von Zeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="77522-168">The punctuation marks and/or other ending marks as an array of strings.</span></span>
          type:
            - 'string[]'
        - id: trimSpacing
          description: '<span data-ttu-id="77522-169">Optional.</span><span class="sxs-lookup"><span data-stu-id="77522-169">Optional.</span></span> <span data-ttu-id="77522-170">Gibt an, ob Abstandszeichen (Räume, Tabstopps, Spaltenumbrüche und Absatz Endpunkte) vom Anfang und Ende der in der Range-Auflistung zurückgegebenen Bereiche abgeschnitten werden sollen.</span><span class="sxs-lookup"><span data-stu-id="77522-170">Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the ranges returned in the range collection.</span></span> <span data-ttu-id="77522-171">Der Standardwert ist false, was bedeutet, dass Leerzeichen am Anfang und Ende der Bereiche in der Bereichsauflistung enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="77522-171">Default is false which indicates that spacing characters at the start and end of the ranges are included in the range collection.</span></span>'
          type:
            - boolean
  - uid: word_release.Word.Paragraph.inlinePictures
    summary: |-
      <span data-ttu-id="77522-172">Ruft die Auflistung der Inline Picture-Objekte im Absatz ab.</span><span class="sxs-lookup"><span data-stu-id="77522-172">Gets the collection of InlinePicture objects in the paragraph.</span></span> <span data-ttu-id="77522-173">Die Sammlung enthält keinen schwebenden Bilder.</span><span class="sxs-lookup"><span data-stu-id="77522-173">The collection does not include floating images.</span></span> <span data-ttu-id="77522-174">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="77522-174">Read-only.</span></span>

      <span data-ttu-id="77522-175">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-175">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: inlinePictures
    fullName: inlinePictures
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly inlinePictures: Word.InlinePictureCollection;'
      return:
        type:
          - word.Word.InlinePictureCollection
  - uid: word_release.Word.Paragraph.insertBreak
    summary: |-
      <span data-ttu-id="77522-176">Fügt an der angegebenen Position im Hauptdokument einen Umbruch ein.</span><span class="sxs-lookup"><span data-stu-id="77522-176">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="77522-177">Der insertLocation-Wert kann "Before" oder "After" lauten.</span><span class="sxs-lookup"><span data-stu-id="77522-177">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="77522-178">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-178">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakType, insertLocation)'
    fullName: 'insertBreak(breakType, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="77522-179">Beispiele</span><span class="sxs-lookup"><span data-stu-id="77522-179">Examples</span></span>

          ```typescript
          Word.run(async (context) => {
            context.document.body.paragraphs.getFirst().insertBreak(Word.BreakType.line, "After");

            await context.sync();
            console.log("success");
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            context.document.body.paragraphs.getFirst().insertBreak(Word.BreakType.page, "After");

            await context.sync();
            console.log("success");
          });
          ```
      parameters:
        - id: breakType
          description: <span data-ttu-id="77522-180">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-180">Required.</span></span> <span data-ttu-id="77522-181">Der zum Dokument hinzuzufügende Umbruchtyp.</span><span class="sxs-lookup"><span data-stu-id="77522-181">The break type to add to the document.</span></span>
          type:
            - word.Word.BreakType
        - id: insertLocation
          description: <span data-ttu-id="77522-182">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-182">Required.</span></span> <span data-ttu-id="77522-183">Der Wert kann „Before“ oder „After“ lauten.</span><span class="sxs-lookup"><span data-stu-id="77522-183">The value can be 'Before' or 'After'.</span></span>
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Paragraph.insertBreak_1
    summary: |-
      <span data-ttu-id="77522-184">Fügt an der angegebenen Position im Hauptdokument einen Umbruch ein.</span><span class="sxs-lookup"><span data-stu-id="77522-184">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="77522-185">Der insertLocation-Wert kann "Before" oder "After" lauten.</span><span class="sxs-lookup"><span data-stu-id="77522-185">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="77522-186">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-186">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakTypeString, insertLocation)'
    fullName: 'insertBreak(breakTypeString, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="77522-187">Beispiele</span><span class="sxs-lookup"><span data-stu-id="77522-187">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to insert a page break after the first paragraph.
                  paragraph.insertBreak('page', 'After');

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Inserted a page break after the paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: breakTypeString
          description: <span data-ttu-id="77522-188">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-188">Required.</span></span> <span data-ttu-id="77522-189">Der zum Dokument hinzuzufügende Umbruchtyp.</span><span class="sxs-lookup"><span data-stu-id="77522-189">The break type to add to the document.</span></span>
          type:
            - '"Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line"'
        - id: insertLocation
          description: <span data-ttu-id="77522-190">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-190">Required.</span></span> <span data-ttu-id="77522-191">Der Wert kann „Before“ oder „After“ lauten.</span><span class="sxs-lookup"><span data-stu-id="77522-191">The value can be 'Before' or 'After'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Paragraph.insertContentControl
    summary: |-
      <span data-ttu-id="77522-192">Umschließt das Abschnittsobjekt mit einem Rich-Text-Inhaltssteuerelement.</span><span class="sxs-lookup"><span data-stu-id="77522-192">Wraps the paragraph object with a rich text content control.</span></span>

      <span data-ttu-id="77522-193">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-193">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: insertContentControl()
    fullName: insertContentControl()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertContentControl(): Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
        description: |-


          #### <a name="examples"></a><span data-ttu-id="77522-194">Beispiele</span><span class="sxs-lookup"><span data-stu-id="77522-194">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to wrap the first paragraph in a rich text content control.
                  paragraph.insertContentControl();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Wrapped the first paragraph in a content control.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word_release.Word.Paragraph.insertFileFromBase64
    summary: |-
      <span data-ttu-id="77522-195">Fügt ein Dokument an der angegebenen Position in den Absatz ein.</span><span class="sxs-lookup"><span data-stu-id="77522-195">Inserts a document into the paragraph at the specified location.</span></span> <span data-ttu-id="77522-196">Der insertLocation-Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="77522-196">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="77522-197">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-197">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocation)'
    fullName: 'insertFileFromBase64(base64File, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="77522-198">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-198">Required.</span></span> <span data-ttu-id="77522-199">Der Base64-codierte Inhalt einer DOCX-Datei.</span><span class="sxs-lookup"><span data-stu-id="77522-199">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="77522-200">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-200">Required.</span></span> <span data-ttu-id="77522-201">Der Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="77522-201">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Paragraph.insertFileFromBase64_1
    summary: |-
      <span data-ttu-id="77522-202">Fügt ein Dokument an der angegebenen Position in den Absatz ein.</span><span class="sxs-lookup"><span data-stu-id="77522-202">Inserts a document into the paragraph at the specified location.</span></span> <span data-ttu-id="77522-203">Der insertLocation-Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="77522-203">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="77522-204">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-204">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocationString)'
    fullName: 'insertFileFromBase64(base64File, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="77522-205">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-205">Required.</span></span> <span data-ttu-id="77522-206">Der Base64-codierte Inhalt einer DOCX-Datei.</span><span class="sxs-lookup"><span data-stu-id="77522-206">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="77522-207">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-207">Required.</span></span> <span data-ttu-id="77522-208">Der Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="77522-208">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Paragraph.insertHtml
    summary: |-
      <span data-ttu-id="77522-209">Fügt in den aktuellen Abschnitt an der angegebenen Position HTML-Code ein.</span><span class="sxs-lookup"><span data-stu-id="77522-209">Inserts HTML into the paragraph at the specified location.</span></span> <span data-ttu-id="77522-210">Der insertLocation-Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="77522-210">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="77522-211">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-211">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocation)'
    fullName: 'insertHtml(html, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="77522-212">Beispiele</span><span class="sxs-lookup"><span data-stu-id="77522-212">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to insert HTML content at the end of the first paragraph.
                  paragraph.insertHtml('<strong>Inserted HTML.</strong>', Word.InsertLocation.end);

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Inserted HTML content at the end of the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: html
          description: <span data-ttu-id="77522-213">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-213">Required.</span></span> <span data-ttu-id="77522-214">Der in den Abschnitt einzufügende HTML-Code.</span><span class="sxs-lookup"><span data-stu-id="77522-214">The HTML to be inserted in the paragraph.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="77522-215">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-215">Required.</span></span> <span data-ttu-id="77522-216">Der Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="77522-216">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Paragraph.insertHtml_1
    summary: |-
      <span data-ttu-id="77522-217">Fügt in den aktuellen Abschnitt an der angegebenen Position HTML-Code ein.</span><span class="sxs-lookup"><span data-stu-id="77522-217">Inserts HTML into the paragraph at the specified location.</span></span> <span data-ttu-id="77522-218">Der insertLocation-Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="77522-218">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="77522-219">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-219">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocationString)'
    fullName: 'insertHtml(html, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: html
          description: <span data-ttu-id="77522-220">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-220">Required.</span></span> <span data-ttu-id="77522-221">Der in den Abschnitt einzufügende HTML-Code.</span><span class="sxs-lookup"><span data-stu-id="77522-221">The HTML to be inserted in the paragraph.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="77522-222">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-222">Required.</span></span> <span data-ttu-id="77522-223">Der Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="77522-223">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Paragraph.insertInlinePictureFromBase64
    summary: |-
      <span data-ttu-id="77522-224">Fügt in den aktuellen Abschnitt an der angegebenen Position ein Bild ein.</span><span class="sxs-lookup"><span data-stu-id="77522-224">Inserts a picture into the paragraph at the specified location.</span></span> <span data-ttu-id="77522-225">Der insertLocation-Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="77522-225">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="77522-226">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-226">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
      return:
        type:
          - word.Word.InlinePicture
        description: |-


          #### <a name="examples"></a><span data-ttu-id="77522-227">Beispiele</span><span class="sxs-lookup"><span data-stu-id="77522-227">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the style property for all of the paragraphs.
              context.load(paragraphs, 'style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  var b64encodedImg = "iVBORw0KGgoAAAANSUhEUgAAAB4AAAANCAIAAAAxEEnAAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAACFSURBVDhPtY1BEoQwDMP6/0+XgIMTBAeYoTqso9Rkx1zG+tNj1H94jgGzeNSjteO5vtQQuG2seO0av8LzGbe3anzRoJ4ybm/VeKEerAEbAUpW4aWQCmrGFWykRzGBCnYy2ha3oAIq2MloW9yCCqhgJ6NtcQsqoIKdjLbFLaiACnYyf2fODbrjZcXfr2F4AAAAAElFTkSuQmCC";

                  // Queue a command to insert a base64 encoded image at the beginning of the first paragraph.
                  paragraph.insertInlinePictureFromBase64(b64encodedImg, Word.InsertLocation.start);

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Added an image to the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: base64EncodedImage
          description: '<span data-ttu-id="77522-228">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-228">Required.</span></span> <span data-ttu-id="77522-229">Das Base64-codierte Bild, das eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="77522-229">The base64 encoded image to be inserted.</span></span>'
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="77522-230">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-230">Required.</span></span> <span data-ttu-id="77522-231">Der Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="77522-231">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Paragraph.insertInlinePictureFromBase64_1
    summary: |-
      <span data-ttu-id="77522-232">Fügt in den aktuellen Abschnitt an der angegebenen Position ein Bild ein.</span><span class="sxs-lookup"><span data-stu-id="77522-232">Inserts a picture into the paragraph at the specified location.</span></span> <span data-ttu-id="77522-233">Der insertLocation-Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="77522-233">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="77522-234">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-234">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    fullName: 'insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.InlinePicture;'
      return:
        type:
          - word.Word.InlinePicture
        description: ''
      parameters:
        - id: base64EncodedImage
          description: '<span data-ttu-id="77522-235">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-235">Required.</span></span> <span data-ttu-id="77522-236">Das Base64-codierte Bild, das eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="77522-236">The base64 encoded image to be inserted.</span></span>'
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="77522-237">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-237">Required.</span></span> <span data-ttu-id="77522-238">Der Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="77522-238">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Paragraph.insertOoxml
    summary: |-
      <span data-ttu-id="77522-239">Fügt OOXML in den Absatz an der angegebenen Position ein.</span><span class="sxs-lookup"><span data-stu-id="77522-239">Inserts OOXML into the paragraph at the specified location.</span></span> <span data-ttu-id="77522-240">Der insertLocation-Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="77522-240">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="77522-241">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-241">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocation)'
    fullName: 'insertOoxml(ooxml, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: ooxml
          description: '<span data-ttu-id="77522-242">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-242">Required.</span></span> <span data-ttu-id="77522-243">Das OOXML, das in den Absatz eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="77522-243">The OOXML to be inserted in the paragraph.</span></span>'
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="77522-244">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-244">Required.</span></span> <span data-ttu-id="77522-245">Der Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="77522-245">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Paragraph.insertOoxml_1
    summary: |-
      <span data-ttu-id="77522-246">Fügt OOXML in den Absatz an der angegebenen Position ein.</span><span class="sxs-lookup"><span data-stu-id="77522-246">Inserts OOXML into the paragraph at the specified location.</span></span> <span data-ttu-id="77522-247">Der insertLocation-Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="77522-247">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="77522-248">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-248">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocationString)'
    fullName: 'insertOoxml(ooxml, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: ooxml
          description: '<span data-ttu-id="77522-249">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-249">Required.</span></span> <span data-ttu-id="77522-250">Das OOXML, das in den Absatz eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="77522-250">The OOXML to be inserted in the paragraph.</span></span>'
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="77522-251">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-251">Required.</span></span> <span data-ttu-id="77522-252">Der Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="77522-252">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Paragraph.insertParagraph
    summary: |-
      <span data-ttu-id="77522-253">Fügt an der angegebenen Position einen Absatz ein.</span><span class="sxs-lookup"><span data-stu-id="77522-253">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="77522-254">Der insertLocation-Wert kann 'Before' oder 'After' lauten.</span><span class="sxs-lookup"><span data-stu-id="77522-254">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="77522-255">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-255">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: |-


          #### <a name="examples"></a><span data-ttu-id="77522-256">Beispiele</span><span class="sxs-lookup"><span data-stu-id="77522-256">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to insert the paragraph after the current paragraph.
                  paragraph.insertParagraph('Content of a new paragraph', Word.InsertLocation.after);

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Inserted a new paragraph at the end of the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // Second sentence, let's insert it as a paragraph after the previously inserted one.
            let secondSentence = context.document.body.insertParagraph(
              "This is the first text with a custom style.",
              "End"
            );
            secondSentence.font.set({
              bold: false,
              italic: true,
              name: "Berlin Sans FB",
              color: "blue",
              size: 30
            });

            await context.sync();
          });
          ```
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="77522-257">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-257">Required.</span></span> <span data-ttu-id="77522-258">Der einzufügende Absatztext.</span><span class="sxs-lookup"><span data-stu-id="77522-258">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: <span data-ttu-id="77522-259">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-259">Required.</span></span> <span data-ttu-id="77522-260">Der Wert kann „Before“ oder „After“ lauten.</span><span class="sxs-lookup"><span data-stu-id="77522-260">The value can be 'Before' or 'After'.</span></span>
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Paragraph.insertParagraph_1
    summary: |-
      <span data-ttu-id="77522-261">Fügt an der angegebenen Position einen Absatz ein.</span><span class="sxs-lookup"><span data-stu-id="77522-261">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="77522-262">Der insertLocation-Wert kann 'Before' oder 'After' lauten.</span><span class="sxs-lookup"><span data-stu-id="77522-262">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="77522-263">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-263">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocationString)'
    fullName: 'insertParagraph(paragraphText, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: ''
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="77522-264">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-264">Required.</span></span> <span data-ttu-id="77522-265">Der einzufügende Absatztext.</span><span class="sxs-lookup"><span data-stu-id="77522-265">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: <span data-ttu-id="77522-266">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-266">Required.</span></span> <span data-ttu-id="77522-267">Der Wert kann „Before“ oder „After“ lauten.</span><span class="sxs-lookup"><span data-stu-id="77522-267">The value can be 'Before' or 'After'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Paragraph.insertTable
    summary: |-
      <span data-ttu-id="77522-268">Fügt eine Tabelle mit der angegebenen Anzahl von Zeilen und Spalten ein.</span><span class="sxs-lookup"><span data-stu-id="77522-268">Inserts a table with the specified number of rows and columns.</span></span> <span data-ttu-id="77522-269">Der insertLocation-Wert kann 'Before' oder 'After' lauten.</span><span class="sxs-lookup"><span data-stu-id="77522-269">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="77522-270">\[[API-Satz: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-270">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertTable(rowCount, columnCount, insertLocation, values)'
    fullName: 'insertTable(rowCount, columnCount, insertLocation, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertTable(rowCount: number, columnCount: number, insertLocation: Word.InsertLocation, values?: string[][]): Word.Table;'
      return:
        type:
          - Word.Table
        description: ''
      parameters:
        - id: rowCount
          description: <span data-ttu-id="77522-271">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-271">Required.</span></span> <span data-ttu-id="77522-272">Die Anzahl der Zeilen in der Tabelle.</span><span class="sxs-lookup"><span data-stu-id="77522-272">The number of rows in the table.</span></span>
          type:
            - number
        - id: columnCount
          description: <span data-ttu-id="77522-273">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-273">Required.</span></span> <span data-ttu-id="77522-274">Die Anzahl der Spalten in der Tabelle.</span><span class="sxs-lookup"><span data-stu-id="77522-274">The number of columns in the table.</span></span>
          type:
            - number
        - id: insertLocation
          description: <span data-ttu-id="77522-275">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-275">Required.</span></span> <span data-ttu-id="77522-276">Der Wert kann „Before“ oder „After“ lauten.</span><span class="sxs-lookup"><span data-stu-id="77522-276">The value can be 'Before' or 'After'.</span></span>
          type:
            - Word.InsertLocation
        - id: values
          description: '<span data-ttu-id="77522-277">Optionales 2D-Array.</span><span class="sxs-lookup"><span data-stu-id="77522-277">Optional 2D array.</span></span> <span data-ttu-id="77522-278">Wenn die entsprechenden Zeichenfolgen im Array angegeben sind, werden die Zellen gefüllt.</span><span class="sxs-lookup"><span data-stu-id="77522-278">Cells are filled if the corresponding strings are specified in the array.</span></span>'
          type:
            - 'string[][]'
  - uid: word_release.Word.Paragraph.insertTable_1
    summary: |-
      <span data-ttu-id="77522-279">Fügt eine Tabelle mit der angegebenen Anzahl von Zeilen und Spalten ein.</span><span class="sxs-lookup"><span data-stu-id="77522-279">Inserts a table with the specified number of rows and columns.</span></span> <span data-ttu-id="77522-280">Der insertLocation-Wert kann 'Before' oder 'After' lauten.</span><span class="sxs-lookup"><span data-stu-id="77522-280">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="77522-281">\[[API-Satz: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-281">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertTable(rowCount, columnCount, insertLocationString, values)'
    fullName: 'insertTable(rowCount, columnCount, insertLocationString, values)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertTable(rowCount: number, columnCount: number, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace", values?: string[][]): Word.Table;'
      return:
        type:
          - Word.Table
        description: ''
      parameters:
        - id: rowCount
          description: <span data-ttu-id="77522-282">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-282">Required.</span></span> <span data-ttu-id="77522-283">Die Anzahl der Zeilen in der Tabelle.</span><span class="sxs-lookup"><span data-stu-id="77522-283">The number of rows in the table.</span></span>
          type:
            - number
        - id: columnCount
          description: <span data-ttu-id="77522-284">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-284">Required.</span></span> <span data-ttu-id="77522-285">Die Anzahl der Spalten in der Tabelle.</span><span class="sxs-lookup"><span data-stu-id="77522-285">The number of columns in the table.</span></span>
          type:
            - number
        - id: insertLocationString
          description: <span data-ttu-id="77522-286">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-286">Required.</span></span> <span data-ttu-id="77522-287">Der Wert kann „Before“ oder „After“ lauten.</span><span class="sxs-lookup"><span data-stu-id="77522-287">The value can be 'Before' or 'After'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
        - id: values
          description: '<span data-ttu-id="77522-288">Optionales 2D-Array.</span><span class="sxs-lookup"><span data-stu-id="77522-288">Optional 2D array.</span></span> <span data-ttu-id="77522-289">Wenn die entsprechenden Zeichenfolgen im Array angegeben sind, werden die Zellen gefüllt.</span><span class="sxs-lookup"><span data-stu-id="77522-289">Cells are filled if the corresponding strings are specified in the array.</span></span>'
          type:
            - 'string[][]'
  - uid: word_release.Word.Paragraph.insertText
    summary: |-
      <span data-ttu-id="77522-290">Fügt in den Abschnitt an der angegebenen Position Text ein.</span><span class="sxs-lookup"><span data-stu-id="77522-290">Inserts text into the paragraph at the specified location.</span></span> <span data-ttu-id="77522-291">Der insertLocation-Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="77522-291">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="77522-292">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-292">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocation)'
    fullName: 'insertText(text, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - Word.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="77522-293">Beispiele</span><span class="sxs-lookup"><span data-stu-id="77522-293">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the style property for the top 2 paragraphs.
              // We never perform an empty load. We always must request a property.
              context.load(paragraphs, {select: 'style', top: 2} );

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the first paragraph.
                  var paragraph = paragraphs.items[0];

                  // Queue a command to insert text into the end of the paragraph.
                  paragraph.insertText('New text inserted into the paragraph.', Word.InsertLocation.end);

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Inserted text at the end of the first paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // Replace the last paragraph.
            let range = context.document.body.paragraphs.getLast().insertText("Just replaced the last paragraph!", "Replace");
            range.font.highlightColor = "black";
            range.font.color = "white";

            await context.sync();
          });
          ```
      parameters:
        - id: text
          description: <span data-ttu-id="77522-294">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-294">Required.</span></span> <span data-ttu-id="77522-295">Der einzufügende Text.</span><span class="sxs-lookup"><span data-stu-id="77522-295">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="77522-296">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-296">Required.</span></span> <span data-ttu-id="77522-297">Der Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="77522-297">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - Word.InsertLocation
  - uid: word_release.Word.Paragraph.insertText_1
    summary: |-
      <span data-ttu-id="77522-298">Fügt in den Abschnitt an der angegebenen Position Text ein.</span><span class="sxs-lookup"><span data-stu-id="77522-298">Inserts text into the paragraph at the specified location.</span></span> <span data-ttu-id="77522-299">Der insertLocation-Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="77522-299">The insertLocation value can be 'Replace', 'Start', or 'End'.</span></span>

      <span data-ttu-id="77522-300">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-300">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocationString)'
    fullName: 'insertText(text, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - Word.Range
        description: ''
      parameters:
        - id: text
          description: <span data-ttu-id="77522-301">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-301">Required.</span></span> <span data-ttu-id="77522-302">Der einzufügende Text.</span><span class="sxs-lookup"><span data-stu-id="77522-302">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="77522-303">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-303">Required.</span></span> <span data-ttu-id="77522-304">Der Wert kann „Replace“, „Start“ oder „End“ lauten.</span><span class="sxs-lookup"><span data-stu-id="77522-304">The value can be ''Replace'', ''Start'', or ''End''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word_release.Word.Paragraph.isLastParagraph
    summary: |-
      <span data-ttu-id="77522-305">Gibt an, dass es sich bei dem Absatz um den letzten innerhalb seines übergeordneten Texts handelt.</span><span class="sxs-lookup"><span data-stu-id="77522-305">Indicates the paragraph is the last one inside its parent body.</span></span> <span data-ttu-id="77522-306">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="77522-306">Read-only.</span></span>

      <span data-ttu-id="77522-307">\[[API-Satz: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-307">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: isLastParagraph
    fullName: isLastParagraph
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isLastParagraph: boolean;'
      return:
        type:
          - boolean
  - uid: word_release.Word.Paragraph.isListItem
    summary: |-
      <span data-ttu-id="77522-308">Überprüft, ob der Absatz ein Listenelement ist.</span><span class="sxs-lookup"><span data-stu-id="77522-308">Checks whether the paragraph is a list item.</span></span> <span data-ttu-id="77522-309">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="77522-309">Read-only.</span></span>

      <span data-ttu-id="77522-310">\[[API-Satz: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-310">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: isListItem
    fullName: isListItem
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly isListItem: boolean;'
      return:
        type:
          - boolean
  - uid: word_release.Word.Paragraph.leftIndent
    summary: |-
      <span data-ttu-id="77522-311">Ruft den linken Einzugswert für den Abschnitt in Punkten ab oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="77522-311">Gets or sets the left indent value, in points, for the paragraph.</span></span>

      <span data-ttu-id="77522-312">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-312">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: leftIndent
    fullName: leftIndent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'leftIndent: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="77522-313">Beispiele</span><span class="sxs-lookup"><span data-stu-id="77522-313">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Indents the first paragraph.
            context.document.body.paragraphs.getFirst().leftIndent = 75; //units = points

            return context.sync();
          });
          ```
  - uid: word_release.Word.Paragraph.lineSpacing
    summary: |-
      <span data-ttu-id="77522-314">Ruft den Zeilenabstand für den angegebenen Abschnitt in Punkten ab, oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="77522-314">Gets or sets the line spacing, in points, for the specified paragraph.</span></span> <span data-ttu-id="77522-315">Auf der Word-Benutzeroberfläche wird dieser Wert durch 12 dividiert.</span><span class="sxs-lookup"><span data-stu-id="77522-315">In the Word UI, this value is divided by 12.</span></span>

      <span data-ttu-id="77522-316">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-316">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: lineSpacing
    fullName: lineSpacing
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lineSpacing: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="77522-317">Beispiele</span><span class="sxs-lookup"><span data-stu-id="77522-317">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Adjusts line spacing.
            context.document.body.paragraphs.getFirst().lineSpacing = 20;

            await context.sync();
          });
          ```
  - uid: word_release.Word.Paragraph.lineUnitAfter
    summary: |-
      <span data-ttu-id="77522-318">Ruft den Abstand nach dem Absatz in Rasterlinien ab oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="77522-318">Gets or sets the amount of spacing, in grid lines, after the paragraph.</span></span>

      <span data-ttu-id="77522-319">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-319">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: lineUnitAfter
    fullName: lineUnitAfter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lineUnitAfter: number;'
      return:
        type:
          - number
  - uid: word_release.Word.Paragraph.lineUnitBefore
    summary: |-
      <span data-ttu-id="77522-320">Ruft den Abstand vor dem Abschnitt in Rasterlinien ab, oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="77522-320">Gets or sets the amount of spacing, in grid lines, before the paragraph.</span></span>

      <span data-ttu-id="77522-321">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-321">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: lineUnitBefore
    fullName: lineUnitBefore
    langs:
      - typeScript
    type: property
    syntax:
      content: 'lineUnitBefore: number;'
      return:
        type:
          - number
  - uid: word_release.Word.Paragraph.list
    summary: |-
      <span data-ttu-id="77522-322">Ruft die Liste ab, zu der dieser Absatz gehört.</span><span class="sxs-lookup"><span data-stu-id="77522-322">Gets the List to which this paragraph belongs.</span></span> <span data-ttu-id="77522-323">Löst, wenn der Absatz nicht in einer Liste ist.</span><span class="sxs-lookup"><span data-stu-id="77522-323">Throws if the paragraph is not in a list.</span></span> <span data-ttu-id="77522-324">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="77522-324">Read-only.</span></span>

      <span data-ttu-id="77522-325">\[[API-Satz: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-325">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: list
    fullName: list
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly list: Word.List;'
      return:
        type:
          - word.Word.List
  - uid: word_release.Word.Paragraph.listItem
    summary: |-
      <span data-ttu-id="77522-326">Ruft das ListItem für den Absatz ab.</span><span class="sxs-lookup"><span data-stu-id="77522-326">Gets the ListItem for the paragraph.</span></span> <span data-ttu-id="77522-327">Wird ausgelöst, wenn der Absatz nicht Teil einer Liste ist.</span><span class="sxs-lookup"><span data-stu-id="77522-327">Throws if the paragraph is not part of a list.</span></span> <span data-ttu-id="77522-328">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="77522-328">Read-only.</span></span>

      <span data-ttu-id="77522-329">\[[API-Satz: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-329">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: listItem
    fullName: listItem
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly listItem: Word.ListItem;'
      return:
        type:
          - word.Word.ListItem
  - uid: word_release.Word.Paragraph.listItemOrNullObject
    summary: |-
      <span data-ttu-id="77522-330">Ruft das ListItem für den Absatz ab.</span><span class="sxs-lookup"><span data-stu-id="77522-330">Gets the ListItem for the paragraph.</span></span> <span data-ttu-id="77522-331">Gibt ein NULL-Objekt zurück, wenn der Absatz nicht Teil einer Liste ist.</span><span class="sxs-lookup"><span data-stu-id="77522-331">Returns a null object if the paragraph is not part of a list.</span></span> <span data-ttu-id="77522-332">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="77522-332">Read-only.</span></span>

      <span data-ttu-id="77522-333">\[[API-Satz: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-333">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: listItemOrNullObject
    fullName: listItemOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly listItemOrNullObject: Word.ListItem;'
      return:
        type:
          - word.Word.ListItem
  - uid: word_release.Word.Paragraph.listOrNullObject
    summary: |-
      <span data-ttu-id="77522-334">Ruft die Liste ab, zu der dieser Absatz gehört.</span><span class="sxs-lookup"><span data-stu-id="77522-334">Gets the List to which this paragraph belongs.</span></span> <span data-ttu-id="77522-335">Gibt ein NULL-Objekt zurück, wenn sich der Absatz nicht in einer Liste befindet.</span><span class="sxs-lookup"><span data-stu-id="77522-335">Returns a null object if the paragraph is not in a list.</span></span> <span data-ttu-id="77522-336">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="77522-336">Read-only.</span></span>

      <span data-ttu-id="77522-337">\[[API-Satz: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-337">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: listOrNullObject
    fullName: listOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly listOrNullObject: Word.List;'
      return:
        type:
          - word.Word.List
  - uid: word_release.Word.Paragraph.load
    summary: <span data-ttu-id="77522-338">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="77522-338">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="77522-339">Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.</span><span class="sxs-lookup"><span data-stu-id="77522-339">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="77522-340">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="77522-340">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="77522-341">`load(option?: string | string[]): Word.Paragraph`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="77522-341">`load(option?: string | string[]): Word.Paragraph` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="77522-342">`load(option?: { select?: string; expand?: string; }): Word.Paragraph`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="77522-342">`load(option?: { select?: string; expand?: string; }): Word.Paragraph` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="77522-343">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Paragraph`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="77522-343">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Paragraph` - Only available on collection types.</span></span> <span data-ttu-id="77522-344">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="77522-344">It is similar to the preceding signature.</span></span> <span data-ttu-id="77522-345">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="77522-345">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="77522-346">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="77522-346">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="77522-347">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="77522-347">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.ParagraphLoadOptions): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Word.Interfaces.ParagraphLoadOptions
  - uid: word_release.Word.Paragraph.load_1
    summary: <span data-ttu-id="77522-348">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="77522-348">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="77522-349">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="77522-349">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="77522-350">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="77522-350">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: word_release.Word.Paragraph.load_2
    summary: <span data-ttu-id="77522-351">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="77522-351">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="77522-352">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="77522-352">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="77522-353">Wobei propertyNamesAndPaths. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="77522-353">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: word_release.Word.Paragraph.outlineLevel
    summary: |-
      <span data-ttu-id="77522-354">Ruft die Gliederungsebene für den Absatz fest oder ruft sie ab.</span><span class="sxs-lookup"><span data-stu-id="77522-354">Gets or sets the outline level for the paragraph.</span></span>

      <span data-ttu-id="77522-355">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-355">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: outlineLevel
    fullName: outlineLevel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'outlineLevel: number;'
      return:
        type:
          - number
  - uid: word_release.Word.Paragraph.parentBody
    summary: |-
      <span data-ttu-id="77522-356">Ruft den übergeordneten Text des Absatzes ab.</span><span class="sxs-lookup"><span data-stu-id="77522-356">Gets the parent body of the paragraph.</span></span> <span data-ttu-id="77522-357">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="77522-357">Read-only.</span></span>

      <span data-ttu-id="77522-358">\[[API-Satz: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-358">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentBody
    fullName: parentBody
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentBody: Word.Body;'
      return:
        type:
          - Word.Body
  - uid: word_release.Word.Paragraph.parentContentControl
    summary: |-
      <span data-ttu-id="77522-359">Ruft das Inhaltssteuerelement ab, das den Abschnitt enthält.</span><span class="sxs-lookup"><span data-stu-id="77522-359">Gets the content control that contains the paragraph.</span></span> <span data-ttu-id="77522-360">Throws, wenn kein übergeordnetes Inhaltssteuerelement vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="77522-360">Throws if there isn't a parent content control.</span></span> <span data-ttu-id="77522-361">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="77522-361">Read-only.</span></span>

      <span data-ttu-id="77522-362">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-362">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentContentControl
    fullName: parentContentControl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControl: Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
  - uid: word_release.Word.Paragraph.parentContentControlOrNullObject
    summary: |-
      <span data-ttu-id="77522-363">Ruft das Inhaltssteuerelement ab, das den Abschnitt enthält.</span><span class="sxs-lookup"><span data-stu-id="77522-363">Gets the content control that contains the paragraph.</span></span> <span data-ttu-id="77522-364">Gibt ein NULL-Objekt zurück, wenn kein übergeordnetes Inhaltssteuerelement vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="77522-364">Returns a null object if there isn't a parent content control.</span></span> <span data-ttu-id="77522-365">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="77522-365">Read-only.</span></span>

      <span data-ttu-id="77522-366">\[[API-Satz: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-366">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentContentControlOrNullObject
    fullName: parentContentControlOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControlOrNullObject: Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
  - uid: word_release.Word.Paragraph.parentTable
    summary: |-
      <span data-ttu-id="77522-367">Ruft die Tabelle ab, die den Absatz enthält.</span><span class="sxs-lookup"><span data-stu-id="77522-367">Gets the table that contains the paragraph.</span></span> <span data-ttu-id="77522-368">Throws, wenn es nicht in einer Tabelle enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="77522-368">Throws if it is not contained in a table.</span></span> <span data-ttu-id="77522-369">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="77522-369">Read-only.</span></span>

      <span data-ttu-id="77522-370">\[[API-Satz: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-370">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentTable
    fullName: parentTable
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTable: Word.Table;'
      return:
        type:
          - Word.Table
  - uid: word_release.Word.Paragraph.parentTableCell
    summary: |-
      <span data-ttu-id="77522-371">Ruft die Tabellenzelle ab, die den Absatz enthält.</span><span class="sxs-lookup"><span data-stu-id="77522-371">Gets the table cell that contains the paragraph.</span></span> <span data-ttu-id="77522-372">Throws, wenn es nicht in einer Tabellenzelle enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="77522-372">Throws if it is not contained in a table cell.</span></span> <span data-ttu-id="77522-373">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="77522-373">Read-only.</span></span>

      <span data-ttu-id="77522-374">\[[API-Satz: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-374">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentTableCell
    fullName: parentTableCell
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTableCell: Word.TableCell;'
      return:
        type:
          - Word.TableCell
  - uid: word_release.Word.Paragraph.parentTableCellOrNullObject
    summary: |-
      <span data-ttu-id="77522-375">Ruft die Tabellenzelle ab, die den Absatz enthält.</span><span class="sxs-lookup"><span data-stu-id="77522-375">Gets the table cell that contains the paragraph.</span></span> <span data-ttu-id="77522-376">Gibt ein NULL-Objekt zurück, wenn es nicht in einer Tabellenzelle enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="77522-376">Returns a null object if it is not contained in a table cell.</span></span> <span data-ttu-id="77522-377">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="77522-377">Read-only.</span></span>

      <span data-ttu-id="77522-378">\[[API-Satz: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-378">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentTableCellOrNullObject
    fullName: parentTableCellOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTableCellOrNullObject: Word.TableCell;'
      return:
        type:
          - Word.TableCell
  - uid: word_release.Word.Paragraph.parentTableOrNullObject
    summary: |-
      <span data-ttu-id="77522-379">Ruft die Tabelle ab, die den Absatz enthält.</span><span class="sxs-lookup"><span data-stu-id="77522-379">Gets the table that contains the paragraph.</span></span> <span data-ttu-id="77522-380">Gibt ein NULL-Objekt zurück, wenn es nicht in einer Tabelle enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="77522-380">Returns a null object if it is not contained in a table.</span></span> <span data-ttu-id="77522-381">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="77522-381">Read-only.</span></span>

      <span data-ttu-id="77522-382">\[[API-Satz: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-382">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentTableOrNullObject
    fullName: parentTableOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentTableOrNullObject: Word.Table;'
      return:
        type:
          - Word.Table
  - uid: word_release.Word.Paragraph.rightIndent
    summary: |-
      <span data-ttu-id="77522-383">Ruft den rechten Einzugswert für den Abschnitt in Punkten ab oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="77522-383">Gets or sets the right indent value, in points, for the paragraph.</span></span>

      <span data-ttu-id="77522-384">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-384">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: rightIndent
    fullName: rightIndent
    langs:
      - typeScript
    type: property
    syntax:
      content: 'rightIndent: number;'
      return:
        type:
          - number
  - uid: word_release.Word.Paragraph.search
    summary: |-
      <span data-ttu-id="77522-385">Führt eine Suche mit den angegebenen SearchOptions für den Bereich des Paragraph-Objekts durch.</span><span class="sxs-lookup"><span data-stu-id="77522-385">Performs a search with the specified SearchOptions on the scope of the paragraph object.</span></span> <span data-ttu-id="77522-386">Die Suchergebnisse sind eine Sammlung von Bereichsobjekten.</span><span class="sxs-lookup"><span data-stu-id="77522-386">The search results are a collection of range objects.</span></span>

      <span data-ttu-id="77522-387">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-387">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'search(searchText, searchOptions)'
    fullName: 'search(searchText, searchOptions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        search(searchText: string, searchOptions?: Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }): Word.RangeCollection;
      return:
        type:
          - Word.RangeCollection
        description: ''
      parameters:
        - id: searchText
          description: <span data-ttu-id="77522-388">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-388">Required.</span></span> <span data-ttu-id="77522-389">Der Suchtext.</span><span class="sxs-lookup"><span data-stu-id="77522-389">The search text.</span></span>
          type:
            - string
        - id: searchOptions
          description: <span data-ttu-id="77522-390">Optional.</span><span class="sxs-lookup"><span data-stu-id="77522-390">Optional.</span></span> <span data-ttu-id="77522-391">Optionen für die Suche.</span><span class="sxs-lookup"><span data-stu-id="77522-391">Options for the search.</span></span>
          type:
            - |-
              Word.SearchOptions | {
                          ignorePunct?: boolean;
                          ignoreSpace?: boolean;
                          matchCase?: boolean;
                          matchPrefix?: boolean;
                          matchSuffix?: boolean;
                          matchWholeWord?: boolean;
                          matchWildcards?: boolean;
                      }
  - uid: word_release.Word.Paragraph.select
    summary: |-
      <span data-ttu-id="77522-392">Wählt und navigiert die Word-Benutzeroberfläche zu diesem Absatz.</span><span class="sxs-lookup"><span data-stu-id="77522-392">Selects and navigates the Word UI to the paragraph.</span></span>

      <span data-ttu-id="77522-393">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-393">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionMode)
    fullName: select(selectionMode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionMode?: Word.SelectionMode): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="77522-394">Beispiele</span><span class="sxs-lookup"><span data-stu-id="77522-394">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the paragraphs collection.
              var paragraphs = context.document.body.paragraphs;

              // Queue a commmand to load the style property for all of the paragraphs.
              context.load(paragraphs, 'style');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {

                  // Queue a command to get the last paragraph a create a
                  // proxy paragraph object.
                  var paragraph = paragraphs.items[paragraphs.items.length - 1];

                  // Queue a command to select the paragraph. The Word UI will
                  // move to the selected paragraph.
                  paragraph.select();

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync().then(function () {
                      console.log('Selected the last paragraph.');
                  });
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // If select is called with no parameters, it selects the object.
            context.document.body.paragraphs.getLast().select();

            await context.sync();
          });
          ```
          ```typescript
          await Word.run(async (context) => {
            // Select can be at the start or end of a range; this by definition moves the insertion point without selecting the range.
            context.document.body.paragraphs.getLast().select("End");

            await context.sync();
          });
          ```
      parameters:
        - id: selectionMode
          description: '<span data-ttu-id="77522-395">Optional.</span><span class="sxs-lookup"><span data-stu-id="77522-395">Optional.</span></span> <span data-ttu-id="77522-396">Der Auswahlmodus kann „Select“, „Start“ oder „End“ sein.</span><span class="sxs-lookup"><span data-stu-id="77522-396">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="77522-397">„Select“ ist die Standardeinstellung.</span><span class="sxs-lookup"><span data-stu-id="77522-397">''Select'' is the default.</span></span>'
          type:
            - Word.SelectionMode
  - uid: word_release.Word.Paragraph.select_1
    summary: |-
      <span data-ttu-id="77522-398">Wählt und navigiert die Word-Benutzeroberfläche zu diesem Absatz.</span><span class="sxs-lookup"><span data-stu-id="77522-398">Selects and navigates the Word UI to the paragraph.</span></span>

      <span data-ttu-id="77522-399">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-399">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionModeString)
    fullName: select(selectionModeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: selectionModeString
          description: '<span data-ttu-id="77522-400">Optional.</span><span class="sxs-lookup"><span data-stu-id="77522-400">Optional.</span></span> <span data-ttu-id="77522-401">Der Auswahlmodus kann „Select“, „Start“ oder „End“ sein.</span><span class="sxs-lookup"><span data-stu-id="77522-401">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="77522-402">„Select“ ist die Standardeinstellung.</span><span class="sxs-lookup"><span data-stu-id="77522-402">''Select'' is the default.</span></span>'
          type:
            - '"Select" | "Start" | "End"'
  - uid: word_release.Word.Paragraph.set
    summary: '<span data-ttu-id="77522-403">Legt mehrere Eigenschaften eines Objekts gleichzeitig fest.</span><span class="sxs-lookup"><span data-stu-id="77522-403">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="77522-404">Sie können entweder ein plain-Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs weitergeben.</span><span class="sxs-lookup"><span data-stu-id="77522-404">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="77522-405">Diese Methode hat die folgende zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="77522-405">This method has the following additional signature:</span></span>

      `set(properties: Word.Paragraph): void`

      #### <a name="examples"></a><span data-ttu-id="77522-406">Beispiele</span><span class="sxs-lookup"><span data-stu-id="77522-406">Examples</span></span>

      ```typescript
      await Word.run(async (context) => {
        const paragraph = context.document.body.paragraphs.getFirst();
        paragraph.set({
          leftIndent: 30,
          font: {
            bold: true,
            color: "red"
          }
        });

        await context.sync();
      });
      ```
      ```typescript
      await Word.run(async (context) => {
        const firstParagraph = context.document.body.paragraphs.getFirst();
        const secondParagraph = firstParagraph.getNext();
        firstParagraph.load("text, font/color, font/bold, leftIndent");

        await context.sync();

        secondParagraph.set(firstParagraph);

        await context.sync();
      });
      ```
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ParagraphUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="77522-407">Ein JavaScript-Objekt mit Eigenschaften, die isomorphically strukturiert sind, um die Eigenschaften des Objekts, für das die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="77522-407">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.ParagraphUpdateData
        - id: options
          description: '<span data-ttu-id="77522-408">Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.</span><span class="sxs-lookup"><span data-stu-id="77522-408">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: word_release.Word.Paragraph.set_1
    summary: '<span data-ttu-id="77522-409">Legt mehrere Eigenschaften für das Objekt auf der Grundlage eines vorhandenen geladenen Objekts zur gleichen Zeit fest.</span><span class="sxs-lookup"><span data-stu-id="77522-409">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.Paragraph): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - Word.Paragraph
  - uid: word_release.Word.Paragraph.spaceAfter
    summary: |-
      <span data-ttu-id="77522-410">Ruft den Abstand nach dem Abschnitt in Punkten ab.</span><span class="sxs-lookup"><span data-stu-id="77522-410">Gets or sets the spacing, in points, after the paragraph.</span></span>

      <span data-ttu-id="77522-411">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-411">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: spaceAfter
    fullName: spaceAfter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'spaceAfter: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="77522-412">Beispiele</span><span class="sxs-lookup"><span data-stu-id="77522-412">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // Adjust space between paragraphs.
            context.document.body.paragraphs.getFirst().spaceAfter = 20;

            await context.sync();
          });
          ```
  - uid: word_release.Word.Paragraph.spaceBefore
    summary: |-
      <span data-ttu-id="77522-413">Ruft den Abstand vor dem Abschnitt in Punkten ab.</span><span class="sxs-lookup"><span data-stu-id="77522-413">Gets or sets the spacing, in points, before the paragraph.</span></span>

      <span data-ttu-id="77522-414">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-414">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: spaceBefore
    fullName: spaceBefore
    langs:
      - typeScript
    type: property
    syntax:
      content: 'spaceBefore: number;'
      return:
        type:
          - number
  - uid: word_release.Word.Paragraph.split
    summary: |-
      <span data-ttu-id="77522-415">Teilt den Absatz mithilfe von Trennzeichen in untergeordnete Bereiche.</span><span class="sxs-lookup"><span data-stu-id="77522-415">Splits the paragraph into child ranges by using delimiters.</span></span>

      <span data-ttu-id="77522-416">\[[API-Satz: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-416">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'split(delimiters, trimDelimiters, trimSpacing)'
    fullName: 'split(delimiters, trimDelimiters, trimSpacing)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'split(delimiters: string[], trimDelimiters?: boolean, trimSpacing?: boolean): Word.RangeCollection;'
      return:
        type:
          - Word.RangeCollection
        description: |-


          #### <a name="examples"></a><span data-ttu-id="77522-417">Beispiele</span><span class="sxs-lookup"><span data-stu-id="77522-417">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            let paragraph = context.document.body.paragraphs.getFirst();
            let words = paragraph.split([" "], true /* trimDelimiters*/, true /* trimSpaces */);
            words.load("text");

            await context.sync();

            for (let i = 0; i < words.items.length; i++) {
              if (i >= 1) {
                words.items[i - 1].font.highlightColor = "#FFFFFF";
              }
              words.items[i].font.highlightColor = "#FFFF00";

              await context.sync();
              await pause(200);
            }
          });
          ```
      parameters:
        - id: delimiters
          description: <span data-ttu-id="77522-418">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77522-418">Required.</span></span> <span data-ttu-id="77522-419">Die Trennzeichen als ein String-Array.</span><span class="sxs-lookup"><span data-stu-id="77522-419">The delimiters as an array of strings.</span></span>
          type:
            - 'string[]'
        - id: trimDelimiters
          description: '<span data-ttu-id="77522-420">Optional.</span><span class="sxs-lookup"><span data-stu-id="77522-420">Optional.</span></span> <span data-ttu-id="77522-421">Gibt an, ob Trennzeichen aus den Bereichen in der Range-Auflistung zugeschnitten werden sollen.</span><span class="sxs-lookup"><span data-stu-id="77522-421">Indicates whether to trim delimiters from the ranges in the range collection.</span></span> <span data-ttu-id="77522-422">Der Standardwert ist false, was bedeutet, dass die Trennzeichen in den Bereichen enthalten sind, die in der Range-Auflistung zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="77522-422">Default is false which indicates that the delimiters are included in the ranges returned in the range collection.</span></span>'
          type:
            - boolean
        - id: trimSpacing
          description: '<span data-ttu-id="77522-423">Optional.</span><span class="sxs-lookup"><span data-stu-id="77522-423">Optional.</span></span> <span data-ttu-id="77522-424">Gibt an, ob Abstandszeichen (Räume, Tabstopps, Spaltenumbrüche und Absatz Endpunkte) vom Anfang und Ende der in der Range-Auflistung zurückgegebenen Bereiche abgeschnitten werden sollen.</span><span class="sxs-lookup"><span data-stu-id="77522-424">Indicates whether to trim spacing characters (spaces, tabs, column breaks, and paragraph end marks) from the start and end of the ranges returned in the range collection.</span></span> <span data-ttu-id="77522-425">Der Standardwert ist false, was bedeutet, dass Leerzeichen am Anfang und Ende der Bereiche in der Bereichsauflistung enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="77522-425">Default is false which indicates that spacing characters at the start and end of the ranges are included in the range collection.</span></span>'
          type:
            - boolean
  - uid: word_release.Word.Paragraph.startNewList
    summary: |-
      <span data-ttu-id="77522-426">Beginnt eine neue Liste mit diesem Absatz.</span><span class="sxs-lookup"><span data-stu-id="77522-426">Starts a new list with this paragraph.</span></span> <span data-ttu-id="77522-427">Führt zu einem Fehler, wenn der Absatz bereits ein Listenelement ist.</span><span class="sxs-lookup"><span data-stu-id="77522-427">Fails if the paragraph is already a list item.</span></span>

      <span data-ttu-id="77522-428">\[[API-Satz: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-428">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: startNewList()
    fullName: startNewList()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'startNewList(): Word.List;'
      return:
        type:
          - word.Word.List
        description: |-


          #### <a name="examples"></a><span data-ttu-id="77522-429">Beispiele</span><span class="sxs-lookup"><span data-stu-id="77522-429">Examples</span></span>

          ```typescript
          // This example starts a new list stating with the second paragraph.
          await Word.run(async (context) => {
            let paragraphs = context.document.body.paragraphs;
            paragraphs.load("$none"); // No properties needed.

            await context.sync();

            var list = paragraphs.items[1].startNewList(); // Indicates new list to be started in the second paragraph.
            list.load("$none"); // No properties needed.

            await context.sync();

            // To add new items to the list use start/end on the insert location parameter.
            list.insertParagraph("New list item on top of the list", "Start");
            let paragraph = list.insertParagraph("New list item at the end of the list (4th level)", "End");
            paragraph.listItem.level = 4; // Sets up list level for the lsit item.
            // To add paragraphs outside the list use before/after:
            list.insertParagraph("New paragraph goes after (not part of the list)", "After");

            await context.sync();
          });
          ```
  - uid: word_release.Word.Paragraph.style
    summary: |-
      <span data-ttu-id="77522-430">Ruft den Formatvorlagennamen für den Absatz ab oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="77522-430">Gets or sets the style name for the paragraph.</span></span> <span data-ttu-id="77522-431">Verwenden Sie diese Eigenschaft für benutzerdefinierte Formatvorlagen und lokalisierte Formatvorlagennamen.</span><span class="sxs-lookup"><span data-stu-id="77522-431">Use this property for custom styles and localized style names.</span></span> <span data-ttu-id="77522-432">Informationen zur Verwendung der integrierten Formatvorlagen, die zwischen Gebietsschemas portabel sind, finden Sie unter der Eigenschaft "styleBuiltIn".</span><span class="sxs-lookup"><span data-stu-id="77522-432">To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.</span></span>

      <span data-ttu-id="77522-433">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-433">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: word_release.Word.Paragraph.styleBuiltIn
    summary: |-
      <span data-ttu-id="77522-p201">Ruft den Namen der integrierten Formatvorlage für den Absatz ab oder legt ihn fest. Verwenden Sie diese Eigenschaft für integrierte Formatvorlagen, die zwischen Gebietsschemas portabel sind. Informationen zum Verwenden benutzerdefinierter Formatvorlagen oder lokalisierter Namen finden Sie unter der Eigenschaft "style".</span><span class="sxs-lookup"><span data-stu-id="77522-p201">Gets or sets the built-in style name for the paragraph. Use this property for built-in styles that are portable between locales. To use custom styles or localized style names, see the "style" property.</span></span>

      <span data-ttu-id="77522-437">\[[API-Satz: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-437">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: styleBuiltIn
    fullName: styleBuiltIn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'styleBuiltIn: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";'
      return:
        type:
          - Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"
  - uid: word_release.Word.Paragraph.tableNestingLevel
    summary: |-
      <span data-ttu-id="77522-438">Ruft die Ebene der Tabelle des Absatzes ab.</span><span class="sxs-lookup"><span data-stu-id="77522-438">Gets the level of the paragraph's table.</span></span> <span data-ttu-id="77522-439">Gibt 0 zurück, wenn sich der Absatz nicht in einer Tabelle befindet.</span><span class="sxs-lookup"><span data-stu-id="77522-439">It returns 0 if the paragraph is not in a table.</span></span> <span data-ttu-id="77522-440">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="77522-440">Read-only.</span></span>

      <span data-ttu-id="77522-441">\[[API-Satz: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-441">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: tableNestingLevel
    fullName: tableNestingLevel
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly tableNestingLevel: number;'
      return:
        type:
          - number
  - uid: word_release.Word.Paragraph.text
    summary: |-
      <span data-ttu-id="77522-442">Ruft den Text des Absatzes ab.</span><span class="sxs-lookup"><span data-stu-id="77522-442">Gets the text of the paragraph.</span></span> <span data-ttu-id="77522-443">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="77522-443">Read-only.</span></span>

      <span data-ttu-id="77522-444">\[[API-Satz: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77522-444">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="77522-445">Beispiele</span><span class="sxs-lookup"><span data-stu-id="77522-445">Examples</span></span>

          ```typescript
          await Word.run(async (context) => {
            // The collection of paragraphs of the current selection returns the full paragraphs contained in it.
            let paragraph = context.document.getSelection().paragraphs.getFirst();
            paragraph.load("text");

            await context.sync();
            console.log(paragraph.text);
          });
          ```
  - uid: word_release.Word.Paragraph.toJSON
    summary: '<span data-ttu-id="77522-446">Überschreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API-Objekt an`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="77522-446">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="77522-447">.</span><span class="sxs-lookup"><span data-stu-id="77522-447"></span></span> <span data-ttu-id="77522-448">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="77522-448"></span></span><!-- --><span data-ttu-id="77522-449">Ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche Wort. Paragraph-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt zurück (typisiert als`Word.Interfaces.ParagraphData`</span><span class="sxs-lookup"><span data-stu-id="77522-449">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Word.Paragraph object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ParagraphData`</span></span><!-- --><span data-ttu-id="77522-450">), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="77522-450">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.ParagraphData;'
      return:
        type:
          - Word.Interfaces.ParagraphData
        description: ''
  - uid: word_release.Word.Paragraph.track
    summary: '<span data-ttu-id="77522-451">Nachverfolgung des Objekts zwecks automatischer Anpassung auf der Grundlage der umgebenden Änderungen im Dokument.</span><span class="sxs-lookup"><span data-stu-id="77522-451">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="77522-452">Dieser Aufruf ist eine Kurzschreibweise für context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="77522-452">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="77522-453">Wenn Sie dieses Objekt übergreifend für ".sync"-Aufrufe und außerhalb der sequenziellen Ausführung eines ".run"-Stapels verwenden und beim Festlegen einer Eigenschaft oder Aufrufen einer Methode für das Objekt ein "InvalidObjectPath"-Fehler zurückgegeben wird, hätte das Objekt der nachverfolgten Objektsammlung hinzugefügt werden müssen, in der das Objekt ursprünglich erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="77522-453">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: ''
  - uid: word_release.Word.Paragraph.untrack
    summary: '<span data-ttu-id="77522-454">Gibt den diesem Objekt zugewiesenen Arbeitsspeicher frei, wenn das Objekt zuvor nachverfolgt wurde.</span><span class="sxs-lookup"><span data-stu-id="77522-454">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="77522-455">Dieser Aufruf stellt eine Kurzschreibweise für context.trackedObjects.remove(thisObject) dar.</span><span class="sxs-lookup"><span data-stu-id="77522-455">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="77522-456">Viele nachverfolgte Objekte verlangsamen die Ausführung der Hostanwendung, also achten Sie darauf, alle hinzugefügten Objekte nach abgeschlossener Verwendung freizugeben.</span><span class="sxs-lookup"><span data-stu-id="77522-456">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="77522-457">Sie müssen "context.sync()" aufrufen, damit die Freigabe des Arbeitsspeichers wirksam wird.</span><span class="sxs-lookup"><span data-stu-id="77522-457">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.Paragraph;'
      return:
        type:
          - Word.Paragraph
        description: ''