### YamlMime:UniversalReference
items:
  - uid: 'custom-functions-runtime!CustomFunctions.Invocation:interface'
    summary: Enthält Informationen zum Aufruf einer benutzerdefinierten Funktion.
    name: CustomFunctions.Invocation
    fullName: CustomFunctions.Invocation
    langs:
      - typeScript
    type: interface
    package: custom-functions-runtime!
    children:
      - 'custom-functions-runtime!CustomFunctions.Invocation#address:member'
      - 'custom-functions-runtime!CustomFunctions.Invocation#parameterAddresses:member'
  - uid: 'custom-functions-runtime!CustomFunctions.Invocation#address:member'
    summary: |-
      Die Zelladresse, in der die Funktion aufgerufen wird, falls erforderlich, andernfalls undefined.

      Um die Adresse für die Funktion anzufordern, müssen in der JSON-Datei der Metadaten die Funktionsoptionen Folgendes angeben: `{ "requiresAddress": true }`

      Wenn die JSON-Metadaten-Datei aus JSDoc-Kommentaren generiert wird, schließen Sie das-Tag `@requiresAddress`<!-- -->. \[[API-Gruppe: CustomFunctionsRuntime 1,1](/office/dev/add-ins/excel/custom-functions-requirement-sets)\]
    name: address
    fullName: address
    langs:
      - typeScript
    type: property
    syntax:
      content: 'address?: string;'
      return:
        type:
          - string
  - uid: 'custom-functions-runtime!CustomFunctions.Invocation#parameterAddresses:member'
    summary: |-
      Die Bereichsadressen, in denen sich die Funktionsparameter befinden, falls erforderlich, andernfalls undefined.

      Um die Parameter Adressen für die Funktion in der JSON-Datei der Metadaten anzufordern, sollten die Funktionsoptionen Folgendes angeben: `{ "requiresParameterAddresses": true }`

      Wenn die JSON-Metadaten-Datei aus JSDoc-Kommentaren generiert wird, schließen Sie das-Tag `@requiresParameterAddresses`<!-- -->. \[[API-Gruppe: CustomFunctionsRuntime 1,3](/office/dev/add-ins/excel/custom-functions-requirement-sets)\]
    name: parameterAddresses
    fullName: parameterAddresses
    langs:
      - typeScript
    type: property
    syntax:
      content: 'parameterAddresses?: string[];'
      return:
        type:
          - 'string[]'