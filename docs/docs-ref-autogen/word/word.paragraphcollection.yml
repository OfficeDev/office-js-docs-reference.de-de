### YamlMime:UniversalReference
ms.openlocfilehash: b14f789b9c9cec21f9ea20e53167183abfa267e4
ms.sourcegitcommit: 3771b97cffd6e0510fd4e9c6288db696cd0c0ca9
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 11/30/2018
ms.locfileid: "26995031"
items:
- uid: word.Word.ParagraphCollection
  summary: >-
    Enthält eine Auflistung von [Word.Paragraph](xref:word.Word.Paragraph) -Objekten.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: Word.ParagraphCollection
  fullName: Word.ParagraphCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: word
  children:
  - word.Word.ParagraphCollection.getFirst
  - word.Word.ParagraphCollection.getFirstOrNullObject
  - word.Word.ParagraphCollection.getLast
  - word.Word.ParagraphCollection.getLastOrNullObject
  - word.Word.ParagraphCollection.items
  - word.Word.ParagraphCollection.load
  - word.Word.ParagraphCollection.toJSON
  - word.Word.ParagraphCollection.track
  - word.Word.ParagraphCollection.untrack
- uid: word.Word.ParagraphCollection.getFirst
  summary: >-
    Ruft den ersten Absatz in dieser Sammlung ab. Wird ausgelöst, wenn die Sammlung leer ist.


    \[[API-Satz: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: getFirst()
  fullName: getFirst
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getFirst(): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: ''
- uid: word.Word.ParagraphCollection.getFirstOrNullObject
  summary: >-
    Ruft den ersten Absatz in dieser Sammlung ab. Gibt ein NULL-Objekt zurück, wenn die Sammlung leer ist.


    \[[API-Satz: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: getFirstOrNullObject()
  fullName: getFirstOrNullObject
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getFirstOrNullObject(): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: ''
- uid: word.Word.ParagraphCollection.getLast
  summary: >-
    Ruft den letzten Absatz in dieser Sammlung ab. Wird ausgelöst, wenn die Sammlung leer ist.


    \[[API-Satz: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: getLast()
  fullName: getLast
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getLast(): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: ''
- uid: word.Word.ParagraphCollection.getLastOrNullObject
  summary: >-
    Ruft den letzten Absatz in dieser Sammlung ab. Gibt ein NULL-Objekt zurück, wenn die Sammlung leer ist.


    \[[API-Satz: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  name: getLastOrNullObject()
  fullName: getLastOrNullObject
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getLastOrNullObject(): Word.Paragraph;'
    return:
      type:
      - Word.Paragraph
      description: ''
- uid: word.Word.ParagraphCollection.items
  summary: Ruft die geladene untergeordnete Elemente in dieser Auflistung ab.
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Word.Paragraph[];'
    return:
      type:
      - Word.Paragraph[]
- uid: word.Word.ParagraphCollection.load
  summary: Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts. Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.
  remarks: "Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:\n\n`load(option?: { select?: string; expand?: string; }): Word.ParagraphCollection`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.\n\n`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.ParagraphCollection`-Nur auf Auflistungstypen verfügbar. Es ist ähnlich wie die jeweils vorhergehende Signatur. Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können. Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen. Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// This example shows how to get the paragraphs in the Word document\n// along with their text and font size properties.\n// \n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a commmand to load the text and font properties.\n    // It is best practice to always specify the property set. Otherwise, all properties are\n    // returned in on the object.\n    context.load(paragraphs, 'text, font/size');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n    // Insert code that works with the paragraphs loaded by context.load().\n    })\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Word.ParagraphCollection;'
    return:
      type:
      - Word.ParagraphCollection
      description: ''
    parameters:
    - id: option
      description: Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.
      type:
      - string | string[]
- uid: word.Word.ParagraphCollection.toJSON
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Word.Interfaces.ParagraphCollectionData;'
    return:
      type:
      - Word.Interfaces.ParagraphCollectionData
      description: ''
- uid: word.Word.ParagraphCollection.track
  summary: Nachverfolgen Sie das Objekt für die automatische Anpassung basierend auf Änderungen im Dokument umgebenden. Dieser Aufruf ist eine Abkürzung für context.trackedObjects.add(thisObject). Wenn Sie mithilfe dieses Objekts hinweg "Sync" Anrufe und außerhalb der sequenzielle Ausführung eines ".run" Batch und Get "InvalidObjectPath" Fehler beim Festlegen einer Eigenschaft oder Aufrufen einer Methode für das Objekt, mussten Sie das Objekt nachverfolgten Objekts hinzugefügt haben Auflistung, wenn das Objekt erstellt wurde.
  name: track()
  fullName: track
  langs:
  - typeScript
  type: method
  syntax:
    content: 'track(): Word.ParagraphCollection;'
    return:
      type:
      - Word.ParagraphCollection
      description: ''
- uid: word.Word.ParagraphCollection.untrack
  summary: Lösen Sie den Speicher, die mit diesem Objekt verknüpft ist, wenn es zuvor erzeugt wurde. Dieses Anrufs ist die Abkürzung für context.trackedObjects.remove(thisObject). Viele nachverfolgte Objekte verlangsamt der Host-Anwendung, also denken Sie alle Objekte frei Sie hinzufügen, sobald Sie fertig sind deren Verwendung. Sie müssen "context.sync()" aufrufen, bevor die Speicher Version wirksam wird.
  name: untrack()
  fullName: untrack
  langs:
  - typeScript
  type: method
  syntax:
    content: 'untrack(): Word.ParagraphCollection;'
    return:
      type:
      - Word.ParagraphCollection
      description: ''
