### YamlMime:UniversalReference
items:
  - uid: word.Word.SettingCollection
    summary: |-
      <span data-ttu-id="77d41-101">Enthält die Auflistung von [Word. Setting](xref:word.Word.Setting) -Objekten.</span><span class="sxs-lookup"><span data-stu-id="77d41-101">Contains the collection of [Word.Setting](xref:word.Word.Setting) objects.</span></span>

      <span data-ttu-id="77d41-102">\[[API-Satz: WordApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77d41-102">\[ [API set: WordApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    isPreview: true
    name: Word.SettingCollection
    fullName: Word.SettingCollection
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: word
    children:
      - word.Word.SettingCollection.add
      - word.Word.SettingCollection.context
      - word.Word.SettingCollection.deleteAll
      - word.Word.SettingCollection.getCount
      - word.Word.SettingCollection.getItem
      - word.Word.SettingCollection.getItemOrNullObject
      - word.Word.SettingCollection.items
      - word.Word.SettingCollection.load
      - word.Word.SettingCollection.load_1
      - word.Word.SettingCollection.load_2
      - word.Word.SettingCollection.toJSON
      - word.Word.SettingCollection.track
      - word.Word.SettingCollection.untrack
  - uid: word.Word.SettingCollection.add
    summary: |-
      <span data-ttu-id="77d41-103">Erstellt eine neue Einstellung oder legt eine vorhandene Einstellung fest.</span><span class="sxs-lookup"><span data-stu-id="77d41-103">Creates a new setting or sets an existing setting.</span></span>

      <span data-ttu-id="77d41-104">\[[API-Satz: WordApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77d41-104">\[ [API set: WordApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    isPreview: true
    name: 'add(key, value)'
    fullName: 'add(key, value)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(key: string, value: any): Word.Setting;'
      return:
        type:
          - Word.Setting
        description: ''
      parameters:
        - id: key
          description: '<span data-ttu-id="77d41-105">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77d41-105">Required.</span></span> <span data-ttu-id="77d41-106">Der Schlüssel der Einstellung, bei dem die Groß-/Kleinschreibung beachtet wird.</span><span class="sxs-lookup"><span data-stu-id="77d41-106">The setting''s key, which is case-sensitive.</span></span>'
          type:
            - string
        - id: value
          description: <span data-ttu-id="77d41-107">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77d41-107">Required.</span></span> <span data-ttu-id="77d41-108">Der Wert der Einstellung.</span><span class="sxs-lookup"><span data-stu-id="77d41-108">The setting's value.</span></span>
          type:
            - any
  - uid: word.Word.SettingCollection.context
    summary: <span data-ttu-id="77d41-109">Der dem Objekt zugeordnete Anforderungskontext.</span><span class="sxs-lookup"><span data-stu-id="77d41-109">The request context associated with the object.</span></span> <span data-ttu-id="77d41-110">Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="77d41-110">This connects the add-in's process to the Office host application's process.</span></span>
    isPreview: true
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - RequestContext
  - uid: word.Word.SettingCollection.deleteAll
    summary: |-
      <span data-ttu-id="77d41-111">Löscht alle Einstellungen in diesem Add-in.</span><span class="sxs-lookup"><span data-stu-id="77d41-111">Deletes all settings in this add-in.</span></span>

      <span data-ttu-id="77d41-112">\[[API-Satz: WordApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77d41-112">\[ [API set: WordApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    isPreview: true
    name: deleteAll()
    fullName: deleteAll()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'deleteAll(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="77d41-113">Beispiele</span><span class="sxs-lookup"><span data-stu-id="77d41-113">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue commands add a setting.
              var settings = context.document.settings;
              settings.add('startMonth', { month: 'March', year: 1998 });

              // Queue a command to get the count of settings.
              var count = settings.getCount();

              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log(count.value);

                  // Queue a command to delete all settings.
                  settings.deleteAll();

                  // Queue a command to get the new count of settings.
                  count = settings.getCount();
              })

              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              .then(context.sync)
              .then(function () {
                  console.log(count.value);
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word.Word.SettingCollection.getCount
    summary: |-
      <span data-ttu-id="77d41-114">Ruft die Anzahl der Einstellungen ab.</span><span class="sxs-lookup"><span data-stu-id="77d41-114">Gets the count of settings.</span></span>

      <span data-ttu-id="77d41-115">\[[API-Satz: WordApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77d41-115">\[ [API set: WordApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - OfficeExtension.ClientResult<number>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="77d41-116">Beispiele</span><span class="sxs-lookup"><span data-stu-id="77d41-116">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue commands add a setting.
              var settings = context.document.settings;
              settings.add('startMonth', { month: 'March', year: 1998 });

              // Queue a command to get the count of settings.
              var count = settings.getCount();

              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log(count.value);

                  // Queue a command to delete all settings.
                  settings.deleteAll();

                  // Queue a command to get the new count of settings.
                  count = settings.getCount();
              })

              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              .then(context.sync)
              .then(function () {
                  console.log(count.value);
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word.Word.SettingCollection.getItem
    summary: |-
      <span data-ttu-id="77d41-117">Ruft ein Setting-Objekt anhand des Schlüssels ab, bei dem die Groß-/Kleinschreibung beachtet wird.</span><span class="sxs-lookup"><span data-stu-id="77d41-117">Gets a setting object by its key, which is case-sensitive.</span></span> <span data-ttu-id="77d41-118">Wird ausgelöst, wenn die Einstellung nicht vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="77d41-118">Throws if the setting does not exist.</span></span>

      <span data-ttu-id="77d41-119">\[[API-Satz: WordApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77d41-119">\[ [API set: WordApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Word.Setting;'
      return:
        type:
          - Word.Setting
        description: |-


          #### <a name="examples"></a><span data-ttu-id="77d41-120">Beispiele</span><span class="sxs-lookup"><span data-stu-id="77d41-120">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue commands add a setting.
              var settings = context.document.settings;
              settings.add('startMonth', { month: 'March', year: 1998 });

              // Queue a command to retrieve a setting.
              var startMonth = settings.getItem('startMonth');

              // Queue a command to load the setting.
              context.load(startMonth);

              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log(JSON.stringify(startMonth.value));
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue commands add a setting.
              var settings = context.document.settings;
              settings.add('startMonth', { month: 'March', year: 1998 });
              
              // Queue commands to retrieve settings.
              var startMonth = settings.getItemOrNullObject('startMonth');
              var endMonth = settings.getItemOrNullObject('endMonth');

              // Queue commands to load settings.
              context.load(startMonth);
              context.load(endMonth);

              // Synchronize the document state by executing the queued commands, 
              // and return a promise to indicate task completion.
                 return context.sync().then(function () {
                     if (startMonth.isNullObject) {
                         console.log("No such setting.");
                     }
                     else {
                         console.log(JSON.stringify(startMonth.value));
                     }
                      if (endMonth.isNullObject) {
                         console.log("No such setting.");
                     }
                     else {
                         console.log(JSON.stringify(endMonth.value));
                     }
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: key
          description: '<span data-ttu-id="77d41-121">Der Schlüssel, der das Setting-Objekt identifiziert.</span><span class="sxs-lookup"><span data-stu-id="77d41-121">The key that identifies the setting object.</span></span>'
          type:
            - string
  - uid: word.Word.SettingCollection.getItemOrNullObject
    summary: |-
      <span data-ttu-id="77d41-122">Ruft ein Setting-Objekt anhand des Schlüssels ab, bei dem die Groß-/Kleinschreibung beachtet wird.</span><span class="sxs-lookup"><span data-stu-id="77d41-122">Gets a setting object by its key, which is case-sensitive.</span></span> <span data-ttu-id="77d41-123">Gibt ein NULL-Objekt zurück, wenn die Einstellung nicht vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="77d41-123">Returns a null object if the setting does not exist.</span></span>

      <span data-ttu-id="77d41-124">\[[API-Satz: WordApi Beta (nur Vorschau)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="77d41-124">\[ [API set: WordApi BETA (PREVIEW ONLY)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    isPreview: true
    name: getItemOrNullObject(key)
    fullName: getItemOrNullObject(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(key: string): Word.Setting;'
      return:
        type:
          - Word.Setting
        description: ''
      parameters:
        - id: key
          description: '<span data-ttu-id="77d41-125">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="77d41-125">Required.</span></span> <span data-ttu-id="77d41-126">Der Schlüssel, der das Setting-Objekt identifiziert.</span><span class="sxs-lookup"><span data-stu-id="77d41-126">The key that identifies the setting object.</span></span>'
          type:
            - string
  - uid: word.Word.SettingCollection.items
    summary: <span data-ttu-id="77d41-127">Ruft die geladenen untergeordneten Elemente in dieser Sammlung ab.</span><span class="sxs-lookup"><span data-stu-id="77d41-127">Gets the loaded child items in this collection.</span></span>
    isPreview: true
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Word.Setting[];'
      return:
        type:
          - 'Word.Setting[]'
  - uid: word.Word.SettingCollection.load
    summary: <span data-ttu-id="77d41-128">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="77d41-128">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="77d41-129">Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.</span><span class="sxs-lookup"><span data-stu-id="77d41-129">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="77d41-130">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="77d41-130">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="77d41-131">`load(option?: string | string[]): Word.SettingCollection`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="77d41-131">`load(option?: string | string[]): Word.SettingCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="77d41-132">`load(option?: { select?: string; expand?: string; }): Word.SettingCollection`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="77d41-132">`load(option?: { select?: string; expand?: string; }): Word.SettingCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="77d41-133">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.SettingCollection`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="77d41-133">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.SettingCollection` - Only available on collection types.</span></span> <span data-ttu-id="77d41-134">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="77d41-134">It is similar to the preceding signature.</span></span> <span data-ttu-id="77d41-135">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="77d41-135">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="77d41-136">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="77d41-136">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="77d41-137">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="77d41-137">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.SettingCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.SettingCollection;'
      return:
        type:
          - Word.SettingCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Word.Interfaces.SettingCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions
  - uid: word.Word.SettingCollection.load_1
    summary: <span data-ttu-id="77d41-138">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="77d41-138">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="77d41-139">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="77d41-139">You must call `context.sync()` before reading the properties.</span></span>
    isPreview: true
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.SettingCollection;'
      return:
        type:
          - Word.SettingCollection
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="77d41-140">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="77d41-140">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: word.Word.SettingCollection.load_2
    isPreview: true
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Word.SettingCollection;'
      return:
        type:
          - Word.SettingCollection
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - office.OfficeExtension.LoadOption
  - uid: word.Word.SettingCollection.toJSON
    summary: '<span data-ttu-id="77d41-141">Überschreibt die `toJSON()` JavaScript-Methode, um eine nützlichere Ausgabe bereitzustellen, wenn ein API-Objekt an`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="77d41-141">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="77d41-142">.</span><span class="sxs-lookup"><span data-stu-id="77d41-142"></span></span> <span data-ttu-id="77d41-143">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="77d41-143"></span></span><!-- --><span data-ttu-id="77d41-144">Ruft wiederum die `toJSON` Methode des Objekts auf, das übergeben wird.) Während das ursprüngliche `Word.SettingCollection` Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`Word.Interfaces.SettingCollectionData`</span><span class="sxs-lookup"><span data-stu-id="77d41-144">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Word.SettingCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.SettingCollectionData`</span></span><!-- --><span data-ttu-id="77d41-145">), die ein Array "Items" mit flachen Kopien aller geladenen Eigenschaften aus den Elementen der Auflistung enthält.</span><span class="sxs-lookup"><span data-stu-id="77d41-145">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    isPreview: true
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.SettingCollectionData;'
      return:
        type:
          - Word.Interfaces.SettingCollectionData
        description: ''
  - uid: word.Word.SettingCollection.track
    summary: '<span data-ttu-id="77d41-146">Nachverfolgung des Objekts zwecks automatischer Anpassung auf der Grundlage der umgebenden Änderungen im Dokument.</span><span class="sxs-lookup"><span data-stu-id="77d41-146">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="77d41-147">Dieser Aufruf ist eine Kurzschreibweise für context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="77d41-147">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="77d41-148">Wenn Sie dieses Objekt übergreifend für ".sync"-Aufrufe und außerhalb der sequenziellen Ausführung eines ".run"-Stapels verwenden und beim Festlegen einer Eigenschaft oder Aufrufen einer Methode für das Objekt ein "InvalidObjectPath"-Fehler zurückgegeben wird, hätte das Objekt der nachverfolgten Objektsammlung hinzugefügt werden müssen, in der das Objekt ursprünglich erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="77d41-148">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    isPreview: true
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.SettingCollection;'
      return:
        type:
          - Word.SettingCollection
        description: ''
  - uid: word.Word.SettingCollection.untrack
    summary: '<span data-ttu-id="77d41-149">Gibt den diesem Objekt zugewiesenen Arbeitsspeicher frei, wenn das Objekt zuvor nachverfolgt wurde.</span><span class="sxs-lookup"><span data-stu-id="77d41-149">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="77d41-150">Dieser Aufruf stellt eine Kurzschreibweise für context.trackedObjects.remove(thisObject) dar.</span><span class="sxs-lookup"><span data-stu-id="77d41-150">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="77d41-151">Viele nachverfolgte Objekte verlangsamen die Ausführung der Hostanwendung, also achten Sie darauf, alle hinzugefügten Objekte nach abgeschlossener Verwendung freizugeben.</span><span class="sxs-lookup"><span data-stu-id="77d41-151">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="77d41-152">Sie müssen "context.sync()" aufrufen, damit die Freigabe des Arbeitsspeichers wirksam wird.</span><span class="sxs-lookup"><span data-stu-id="77d41-152">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    isPreview: true
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.SettingCollection;'
      return:
        type:
          - Word.SettingCollection
        description: ''