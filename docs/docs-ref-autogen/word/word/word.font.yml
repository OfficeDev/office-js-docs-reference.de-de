### YamlMime:TSType
name: Word.Font
uid: word!Word.Font:class
package: word!
fullName: Word.Font
summary: >-
  Stellt eine Schriftart dar.


  \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: bold
  uid: word!Word.Font#bold:member
  package: word!
  fullName: bold
  summary: >-
    Ruft einen Wert ab, der angibt, ob die Schriftart fett formatiert ist, oder legt diesen fest. True, wenn die Schriftart fett formatiert ist, andernfalls false.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'bold: boolean;'
    return:
      type: boolean
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Bold format text\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a range proxy object for the current selection.\n    var selection = context.document.getSelection();\n\n    // Queue a command to make the current selection bold.\n    selection.font.bold = true;\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('The selection is now bold.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: color
  uid: word!Word.Font#color:member
  package: word!
  fullName: color
  summary: >-
    Ruft die Farbe für die angegebene Schriftart ab, oder legt diese fest. Sie können den Wert im Format \# "RRGGBB" oder im Farbnamen bereitstellen.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'color: string;'
    return:
      type: string
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Change the font color\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a range proxy object for the current selection.\n    var selection = context.document.getSelection();\n\n    // Queue a command to change the font color of the current selection.\n    selection.font.color = 'blue';\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('The font color of the selection has been changed.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: context
  uid: word!Word.Font#context:member
  package: word!
  fullName: context
  summary: Der Dem Objekt zugeordnete Anforderungskontext. Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="word!Word.RequestContext:class" />
- name: doubleStrikeThrough
  uid: word!Word.Font#doubleStrikeThrough:member
  package: word!
  fullName: doubleStrikeThrough
  summary: >-
    Ruft einen Wert ab, der angibt, ob die Schriftart einen doppelten Durchstrich besitzt, oder legt einen Wert fest. True, wenn der Text doppelt durchgestrichen ist, andernfalls false.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'doubleStrikeThrough: boolean;'
    return:
      type: boolean
- name: highlightColor
  uid: word!Word.Font#highlightColor:member
  package: word!
  fullName: highlightColor
  summary: >-
    Ruft die Hervorhebungsfarbe ab oder legt sie fest. Verwenden Sie zum Festlegen einen Wert entweder im \# Format "RRGGBB" oder im Farbnamen. Legen Sie zum Entfernen der Hervorhebungsfarbe null. Die zurückgegebene Hervorhebungsfarbe kann im Format "RRGGBB", eine leere Zeichenfolge für gemischte Hervorhebungsfarben oder null für \# keine Hervorhebungsfarbe vorliegen. *Hinweis**: In Office für Windows Desktop sind nur die Standardmäßigen Hervorhebungsfarben verfügbar. Dies sind "Gelb", "Lime", "Türkis", "Pink", "Blau", "Rot", "DarkBlue", "Teal", "Grün", "Lila", "DarkRed", "Oliv", "Grau", "LightGray" und "Schwarz". Wenn das Add-In in Office für Windows Desktop ausgeführt wird, wird jede andere Farbe in die nächste Farbe konvertiert, wenn sie auf die Schriftart angewendet wird.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'highlightColor: string;'
    return:
      type: string
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Highlight selected text\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a range proxy object for the current selection.\n    var selection = context.document.getSelection();\n\n    // Queue a command to highlight the current selection.\n    selection.font.highlightColor = '#FFFF00'; // Yellow\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('The selection has been highlighted.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: italic
  uid: word!Word.Font#italic:member
  package: word!
  fullName: italic
  summary: >-
    Ruft einen Wert ab, der angibt, ob die Schriftart kursiv ist, oder legt diesen fest. True, wenn die Schriftart kursiv ist, andernfalls false.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'italic: boolean;'
    return:
      type: boolean
- name: name
  uid: word!Word.Font#name:member
  package: word!
  fullName: name
  summary: >-
    Ruft einen Wert ab, der den Namen der Schriftart angibt, oder legt diesen fest.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'name: string;'
    return:
      type: string
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Change the font name\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a range proxy object for the current selection.\n    var selection = context.document.getSelection();\n\n    // Queue a command to change the current selection's font name.\n    selection.font.name = 'Arial';\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('The font name has changed.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: size
  uid: word!Word.Font#size:member
  package: word!
  fullName: size
  summary: >-
    Ruft einen Wert ab, der den Schriftgrad in Punkten angibt, oder legt diesen fest.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'size: number;'
    return:
      type: number
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Change the font size\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a range proxy object for the current selection.\n    var selection = context.document.getSelection();\n\n    // Queue a command to change the current selection's font size.\n    selection.font.size = 20;\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('The font size has changed.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: strikeThrough
  uid: word!Word.Font#strikeThrough:member
  package: word!
  fullName: strikeThrough
  summary: >-
    Ruft einen Wert ab, der angibt, ob die Schriftart eine durchgestrichene Schriftart enthält, oder legt sie fest. True, wenn der Text durchgestrichen ist, andernfalls false.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'strikeThrough: boolean;'
    return:
      type: boolean
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Strike format text\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a range proxy object for the current selection.\n    var selection = context.document.getSelection();\n\n    // Queue a command to strikethrough the font of the current selection.\n    selection.font.strikeThrough = true;\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('The selection now has a strikethrough.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: subscript
  uid: word!Word.Font#subscript:member
  package: word!
  fullName: subscript
  summary: >-
    Ruft einen Wert ab, der angibt, ob die Schriftart tiefgestellt ist, oder legt diesen fest. True, wenn die Schriftart tiefgestellt ist, andernfalls false.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'subscript: boolean;'
    return:
      type: boolean
- name: superscript
  uid: word!Word.Font#superscript:member
  package: word!
  fullName: superscript
  summary: >-
    Ruft einen Wert ab, der angibt, ob die Schriftart hochgestellt ist, oder legt diesen fest. True, wenn die Schriftart hochgestellt ist, andernfalls false.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'superscript: boolean;'
    return:
      type: boolean
- name: underline
  uid: word!Word.Font#underline:member
  package: word!
  fullName: underline
  summary: >-
    Ruft einen Wert ab, der den auf die Schriftart angewendete Art der Unterstreichung angibt, oder legt diesen fest. "Keine", wenn die Schriftart nicht unterstrichen ist.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'underline: Word.UnderlineType | "Mixed" | "None" | "Hidden" | "DotLine" | "Single" | "Word" | "Double" | "Thick" | "Dotted" | "DottedHeavy" | "DashLine" | "DashLineHeavy" | "DashLineLong" | "DashLineLongHeavy" | "DotDashLine" | "DotDashLineHeavy" | "TwoDotDashLine" | "TwoDotDashLineHeavy" | "Wave" | "WaveHeavy" | "WaveDouble";'
    return:
      type: <xref uid="word!Word.UnderlineType:enum" /> | "Mixed" | "None" | "Hidden" | "DotLine" | "Single" | "Word" | "Double" | "Thick" | "Dotted" | "DottedHeavy" | "DashLine" | "DashLineHeavy" | "DashLineLong" | "DashLineLongHeavy" | "DotDashLine" | "DotDashLineHeavy" | "TwoDotDashLine" | "TwoDotDashLineHeavy" | "Wave" | "WaveHeavy" | "WaveDouble"
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Underline format text\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a range proxy object for the current selection.\n    var selection = context.document.getSelection();\n\n    // Queue a command to underline the current selection.\n    selection.font.underline = Word.UnderlineType.single;\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('The selection now has an underline style.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
methods:
- name: load(options)
  uid: word!Word.Font#load:member(1)
  package: word!
  fullName: load(options)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Word.Interfaces.FontLoadOptions): Word.Font;'
    parameters:
    - id: options
      description: Stellt Optionen für die Eigenschaften des zu ladenden Objekts zur Verfügung.
      type: <xref uid="word!Word.Interfaces.FontLoadOptions:interface" />
    return:
      type: <xref uid="word!Word.Font:class" />
      description: ''
- name: load(propertyNames)
  uid: word!Word.Font#load:member(2)
  package: word!
  fullName: load(propertyNames)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Word.Font;'
    parameters:
    - id: propertyNames
      description: Eine durch Trennzeichen getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.
      type: string | string[]
    return:
      type: <xref uid="word!Word.Font:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: word!Word.Font#load:member(3)
  package: word!
  fullName: load(propertyNamesAndPaths)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Word.Font;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` ist eine durch Trennzeichen getrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und eine durch Kommas getrennte Zeichenfolge, die die zu ladenden `propertyNamesAndPaths.expand` Navigationseigenschaften angibt.'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="word!Word.Font:class" />
      description: ''
- name: set(properties, options)
  uid: word!Word.Font#set:member(1)
  package: word!
  fullName: set(properties, options)
  summary: Legt mehrere Eigenschaften eines Objekts gleichzeitig fest. Sie können entweder ein einfaches Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs übergeben.
  remarks: >-
    Diese Methode verfügt über die folgende zusätzliche Signatur:


    `set(properties: Word.Font): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.FontUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: Ein JavaScript-Objekt mit Eigenschaften, die isomorph zu den Eigenschaften des Objekts strukturiert sind, für das die Methode aufgerufen wird.
      type: <xref uid="word!Word.Interfaces.FontUpdateData:interface" />
    - id: options
      description: Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften zu setzen.
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: word!Word.Font#set:member(2)
  package: word!
  fullName: set(properties)
  summary: Legt mehrere Eigenschaften für das Objekt gleichzeitig fest, basierend auf einem vorhandenen geladenen Objekt.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Word.Font): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="word!Word.Font:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: word!Word.Font#toJSON:member(1)
  package: word!
  fullName: toJSON()
  summary: 'Überschreibt die JavaScript-Methode, um eine nützlichere Ausgabe zu `toJSON()` bieten, wenn ein API-Objekt an übergeben wird `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->ruft wiederum die Methode `toJSON` des Objekts auf, das an das Objekt übergeben wird.) Während das ursprüngliche Word.Font-Objekt ein API-Objekt ist, gibt die Methode ein `toJSON` einfaches JavaScript-Objekt zurück (Typ: `Word.Interfaces.FontData`<!-- -->), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Word.Interfaces.FontData;'
    return:
      type: <xref uid="word!Word.Interfaces.FontData:interface" />
      description: ''
- name: track()
  uid: word!Word.Font#track:member(1)
  package: word!
  fullName: track()
  summary: Nachverfolgung des Objekts zwecks automatischer Anpassung auf der Grundlage der umgebenden Änderungen im Dokument. Dieser Anruf ist eine Kurzhand für `context.trackedObjects.add(thisObject)`<!-- -->. Wenn Sie dieses Objekt für aufrufe und außerhalb der sequenziellen Ausführung eines Batches ".run" verwenden und beim Festlegen einer Eigenschaft oder aufrufen einer Methode für das Objekt den Fehler "InvalidObjectPath" erhalten, mussten Sie das Objekt der nachverfolgten Objektsammlung hinzugefügt haben, als das Objekt zum ersten Mal erstellt `.sync` wurde.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'track(): Word.Font;'
    return:
      type: <xref uid="word!Word.Font:class" />
      description: ''
- name: untrack()
  uid: word!Word.Font#untrack:member(1)
  package: word!
  fullName: untrack()
  summary: Gibt den diesem Objekt zugewiesenen Arbeitsspeicher frei, wenn das Objekt zuvor nachverfolgt wurde. Dieser Anruf ist kurz `context.trackedObjects.remove(thisObject)`<!-- -->. Viele nachverfolgte Objekte verlangsamen die Ausführung der Hostanwendung, also achten Sie darauf, alle hinzugefügten Objekte nach abgeschlossener Verwendung freizugeben. Sie müssen aufrufen, `context.sync()` bevor die Speicherfreigabe wirksam wird.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'untrack(): Word.Font;'
    return:
      type: <xref uid="word!Word.Font:class" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 66833d350f7e5acef2382beb3cd2bacd606be120
  ms.sourcegitcommit: a8a86cfcaff5ad7dacc653d63502c76b1fedbebe
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 03/26/2021
  ms.locfileid: "51357864"
