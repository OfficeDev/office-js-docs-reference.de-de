### YamlMime:TSType
name: Word.SettingCollection
uid: word!Word.SettingCollection:class
package: word!
fullName: Word.SettingCollection
summary: >-
  Enthält die Auflistung von [Word.Setting-Objekten.](xref:word!Word.Setting:class)


  \[[API-Satz: WordApi BETA (NUR VORSCHAU)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
remarks: ''
isPreview: true
isDeprecated: false
type: class
properties:
- name: context
  uid: word!Word.SettingCollection#context:member
  package: word!
  fullName: context
  summary: Der Dem Objekt zugeordnete Anforderungskontext. Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="word!Word.RequestContext:class" />
- name: items
  uid: word!Word.SettingCollection#items:member
  package: word!
  fullName: items
  summary: Ruft die geladenen untergeordneten Elemente in dieser Sammlung ab.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'readonly items: Word.Setting[];'
    return:
      type: <xref uid="word!Word.Setting:class" />[]
methods:
- name: add(key, value)
  uid: word!Word.SettingCollection#add:member(1)
  package: word!
  fullName: add(key, value)
  summary: >-
    Erstellt eine neue Einstellung oder legt eine vorhandene Einstellung fest.


    \[[API-Satz: WordApi BETA (NUR VORSCHAU)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'add(key: string, value: any): Word.Setting;'
    parameters:
    - id: key
      description: Erforderlich. Der Schlüssel der Einstellung, bei dem die Kleinschreibung beachtet wird.
      type: string
    - id: value
      description: Erforderlich. Der Wert der Einstellung.
      type: any
    return:
      type: <xref uid="word!Word.Setting:class" />
      description: ''
- name: deleteAll()
  uid: word!Word.SettingCollection#deleteAll:member(1)
  package: word!
  fullName: deleteAll()
  summary: >-
    Löscht alle Einstellungen in diesem Add-In.


    \[[API-Satz: WordApi BETA (NUR VORSCHAU)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'deleteAll(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Queue commands add a setting.\n    var settings = context.document.settings;\n    settings.add('startMonth', { month: 'March', year: 1998 });\n\n    // Queue a command to get the count of settings.\n    var count = settings.getCount();\n\n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log(count.value);\n\n        // Queue a command to delete all settings.\n        settings.deleteAll();\n\n        // Queue a command to get the new count of settings.\n        count = settings.getCount();\n    })\n\n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    .then(context.sync)\n    .then(function () {\n        console.log(count.value);\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getCount()
  uid: word!Word.SettingCollection#getCount:member(1)
  package: word!
  fullName: getCount()
  summary: >-
    Ruft die Anzahl der Einstellungen ab.


    \[[API-Satz: WordApi BETA (NUR VORSCHAU)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;number&gt;
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Queue commands add a setting.\n    var settings = context.document.settings;\n    settings.add('startMonth', { month: 'March', year: 1998 });\n\n    // Queue a command to get the count of settings.\n    var count = settings.getCount();\n\n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log(count.value);\n\n        // Queue a command to delete all settings.\n        settings.deleteAll();\n\n        // Queue a command to get the new count of settings.\n        count = settings.getCount();\n    })\n\n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    .then(context.sync)\n    .then(function () {\n        console.log(count.value);\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getItem(key)
  uid: word!Word.SettingCollection#getItem:member(1)
  package: word!
  fullName: getItem(key)
  summary: >-
    Ruft ein Einstellungsobjekt nach seinem Schlüssel ab, bei dem die Zwischen-/Kleinschreibung beachtet wird. Gibt einen Fehler zurück, wenn die Einstellung nicht vorhanden ist.


    \[[API-Satz: WordApi BETA (NUR VORSCHAU)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getItem(key: string): Word.Setting;'
    parameters:
    - id: key
      description: Der Schlüssel, der das Einstellungsobjekt identifiziert.
      type: string
    return:
      type: <xref uid="word!Word.Setting:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Queue commands add a setting.\n    var settings = context.document.settings;\n    settings.add('startMonth', { month: 'March', year: 1998 });\n\n    // Queue a command to retrieve a setting.\n    var startMonth = settings.getItem('startMonth');\n\n    // Queue a command to load the setting.\n    context.load(startMonth);\n\n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log(JSON.stringify(startMonth.value));\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getItemOrNullObject(key)
  uid: word!Word.SettingCollection#getItemOrNullObject:member(1)
  package: word!
  fullName: getItemOrNullObject(key)
  summary: >-
    Ruft ein Einstellungsobjekt nach seinem Schlüssel ab, bei dem die Zwischen-/Kleinschreibung beachtet wird. Gibt ein Null-Objekt zurück, wenn die Einstellung nicht vorhanden ist.


    \[[API-Satz: WordApi BETA (NUR VORSCHAU)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getItemOrNullObject(key: string): Word.Setting;'
    parameters:
    - id: key
      description: Erforderlich. Der Schlüssel, der das Einstellungsobjekt identifiziert.
      type: string
    return:
      type: <xref uid="word!Word.Setting:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Queue commands add a setting.\n    var settings = context.document.settings;\n    settings.add('startMonth', { month: 'March', year: 1998 });\n    \n    // Queue commands to retrieve settings.\n    var startMonth = settings.getItemOrNullObject('startMonth');\n    var endMonth = settings.getItemOrNullObject('endMonth');\n\n    // Queue commands to load settings.\n    context.load(startMonth);\n    context.load(endMonth);\n\n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n       return context.sync().then(function () {\n           if (startMonth.isNullObject) {\n               console.log(\"No such setting.\");\n           }\n           else {\n               console.log(JSON.stringify(startMonth.value));\n           }\n            if (endMonth.isNullObject) {\n               console.log(\"No such setting.\");\n           }\n           else {\n               console.log(JSON.stringify(endMonth.value));\n           }\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(options)
  uid: word!Word.SettingCollection#load:member(1)
  package: word!
  fullName: load(options)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'load(options?: Word.Interfaces.SettingCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.SettingCollection;'
    parameters:
    - id: options
      description: Stellt Optionen für die Eigenschaften des zu ladenden Objekts zur Verfügung.
      type: <xref uid="word!Word.Interfaces.SettingCollectionLoadOptions:interface" /> & <xref uid="word!Word.Interfaces.CollectionLoadOptions:interface" />
    return:
      type: <xref uid="word!Word.SettingCollection:class" />
      description: ''
- name: load(propertyNames)
  uid: word!Word.SettingCollection#load:member(2)
  package: word!
  fullName: load(propertyNames)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Word.SettingCollection;'
    parameters:
    - id: propertyNames
      description: Eine durch Trennzeichen getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.
      type: string | string[]
    return:
      type: <xref uid="word!Word.SettingCollection:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: word!Word.SettingCollection#load:member(3)
  package: word!
  fullName: load(propertyNamesAndPaths)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Word.SettingCollection;'
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` ist eine durch Trennzeichen getrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und eine durch Kommas getrennte Zeichenfolge, die die zu ladenden `propertyNamesAndPaths.expand` Navigationseigenschaften angibt.'
      type: <xref uid="office!OfficeExtension.LoadOption:interface" />
    return:
      type: <xref uid="word!Word.SettingCollection:class" />
      description: ''
- name: toJSON()
  uid: word!Word.SettingCollection#toJSON:member(1)
  package: word!
  fullName: toJSON()
  summary: Überschreibt die JavaScript-Methode, um eine nützlichere Ausgabe zu `toJSON()` bieten, wenn ein API-Objekt an übergeben wird `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->ruft wiederum die Methode `toJSON` des Objekts auf, das an das Objekt übergeben wird.) Während das ursprüngliche Objekt ein API-Objekt ist, gibt die Methode `Word.SettingCollection` `toJSON` ein einfaches JavaScript-Objekt zurück (typisiert als `Word.Interfaces.SettingCollectionData`<!-- -->), das ein "Items"-Array mit flachen Kopien aller geladenen Eigenschaften aus den Elementen der Auflistung enthält.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'toJSON(): Word.Interfaces.SettingCollectionData;'
    return:
      type: <xref uid="word!Word.Interfaces.SettingCollectionData:interface" />
      description: ''
- name: track()
  uid: word!Word.SettingCollection#track:member(1)
  package: word!
  fullName: track()
  summary: Nachverfolgung des Objekts zwecks automatischer Anpassung auf der Grundlage der umgebenden Änderungen im Dokument. Dieser Anruf ist eine Kurzhand für `context.trackedObjects.add(thisObject)`<!-- -->. Wenn Sie dieses Objekt für aufrufe und außerhalb der sequenziellen Ausführung eines Batches ".run" verwenden und beim Festlegen einer Eigenschaft oder aufrufen einer Methode für das Objekt den Fehler "InvalidObjectPath" erhalten, mussten Sie das Objekt der nachverfolgten Objektsammlung hinzugefügt haben, als das Objekt zum ersten Mal erstellt `.sync` wurde.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'track(): Word.SettingCollection;'
    return:
      type: <xref uid="word!Word.SettingCollection:class" />
      description: ''
- name: untrack()
  uid: word!Word.SettingCollection#untrack:member(1)
  package: word!
  fullName: untrack()
  summary: Gibt den diesem Objekt zugewiesenen Arbeitsspeicher frei, wenn das Objekt zuvor nachverfolgt wurde. Dieser Anruf ist kurz `context.trackedObjects.remove(thisObject)`<!-- -->. Viele nachverfolgte Objekte verlangsamen die Ausführung der Hostanwendung, also achten Sie darauf, alle hinzugefügten Objekte nach abgeschlossener Verwendung freizugeben. Sie müssen aufrufen, `context.sync()` bevor die Speicherfreigabe wirksam wird.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'untrack(): Word.SettingCollection;'
    return:
      type: <xref uid="word!Word.SettingCollection:class" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: a65b6a20ba824b093ef02c840ecbe76cd01879f9
  ms.sourcegitcommit: a8a86cfcaff5ad7dacc653d63502c76b1fedbebe
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 03/26/2021
  ms.locfileid: "51368520"
