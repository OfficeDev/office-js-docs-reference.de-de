### YamlMime:TSType
name: Word.Paragraph
uid: word!Word.Paragraph:class
package: word!
fullName: Word.Paragraph
summary: >-
  Stellt einen einzelnen Absatz in einer Auswahl, einem Bereich, Inhaltssteuerelement oder Hauptteil des Dokuments dar.


  \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: alignment
  uid: word!Word.Paragraph#alignment:member
  package: word!
  fullName: alignment
  summary: >-
    Ruft die Ausrichtung für einen Absatz ab oder legt sie fest. Der Wert kann "left", "centered", "right" oder "justified" lauten.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'alignment: Word.Alignment | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified";'
    return:
      type: <xref uid="word!Word.Alignment:enum" /> | "Mixed" | "Unknown" | "Left" | "Centered" | "Right" | "Justified"
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/25-paragraph/paragraph-properties.yaml\nawait Word.run(async (context) => {\n  // Centers last paragraph alignment.\n  context.document.body.paragraphs.getLast().alignment = \"Centered\";\n\n  await context.sync();\n});\n```"
- name: contentControls
  uid: word!Word.Paragraph#contentControls:member
  package: word!
  fullName: contentControls
  summary: >-
    Ruft die Auflistung der Inhaltssteuerelement-Objekte im Absatz ab. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly contentControls: Word.ContentControlCollection;'
    return:
      type: <xref uid="word!Word.ContentControlCollection:class" />
- name: context
  uid: word!Word.Paragraph#context:member
  package: word!
  fullName: context
  summary: Der Anforderungskontext, der mit dem Objekt verknüpft ist. Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="word!Word.RequestContext:class" />
- name: firstLineIndent
  uid: word!Word.Paragraph#firstLineIndent:member
  package: word!
  fullName: firstLineIndent
  summary: >-
    Ruft den Wert in Punkten für einen Erstzeileneinzug oder einen hängenden Einzug ab, oder legt ihn fest. Verwenden Sie zum Festlegen eines Erstzeileneinzugs einen positiven Wert, und verwenden Sie für einen negativen Wert für einen hängenden Einzug.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'firstLineIndent: number;'
    return:
      type: number
- name: font
  uid: word!Word.Paragraph#font:member
  package: word!
  fullName: font
  summary: >-
    Ruft das Textformat des Abschnitts ab. Verwenden Sie diese Option zum Abrufen und Festlegen der Schriftart, Größe, Farbe und anderer Eigenschaften. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly font: Word.Font;'
    return:
      type: <xref uid="word!Word.Font:class" />
- name: inlinePictures
  uid: word!Word.Paragraph#inlinePictures:member
  package: word!
  fullName: inlinePictures
  summary: >-
    Ruft die Auflistung der Inline Picture-Objekte im Absatz ab. Die Sammlung enthält keinen schwebenden Bilder. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly inlinePictures: Word.InlinePictureCollection;'
    return:
      type: <xref uid="word!Word.InlinePictureCollection:class" />
- name: isLastParagraph
  uid: word!Word.Paragraph#isLastParagraph:member
  package: word!
  fullName: isLastParagraph
  summary: >-
    Gibt an, dass es sich bei dem Absatz um den letzten innerhalb seines übergeordneten Texts handelt. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly isLastParagraph: boolean;'
    return:
      type: boolean
- name: isListItem
  uid: word!Word.Paragraph#isListItem:member
  package: word!
  fullName: isListItem
  summary: >-
    Überprüft, ob der Absatz ein Listenelement ist. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly isListItem: boolean;'
    return:
      type: boolean
- name: leftIndent
  uid: word!Word.Paragraph#leftIndent:member
  package: word!
  fullName: leftIndent
  summary: >-
    Ruft den linken Einzugswert für den Abschnitt in Punkten ab oder legt ihn fest.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'leftIndent: number;'
    return:
      type: number
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/25-paragraph/paragraph-properties.yaml\nawait Word.run(async (context) => {\n  // Indents the first paragraph.\n  context.document.body.paragraphs.getFirst().leftIndent = 75; //units = points\n\n  return context.sync();\n});\n```"
- name: lineSpacing
  uid: word!Word.Paragraph#lineSpacing:member
  package: word!
  fullName: lineSpacing
  summary: >-
    Ruft den Zeilenabstand für den angegebenen Abschnitt in Punkten ab, oder legt ihn fest. Auf der Word-Benutzeroberfläche wird dieser Wert durch 12 dividiert.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'lineSpacing: number;'
    return:
      type: number
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/25-paragraph/paragraph-properties.yaml\nawait Word.run(async (context) => {\n  // Adjusts line spacing.\n  context.document.body.paragraphs.getFirst().lineSpacing = 20;\n\n  await context.sync();\n});\n```"
- name: lineUnitAfter
  uid: word!Word.Paragraph#lineUnitAfter:member
  package: word!
  fullName: lineUnitAfter
  summary: >-
    Ruft den Abstand nach dem Absatz in Rasterlinien ab oder legt ihn fest.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'lineUnitAfter: number;'
    return:
      type: number
- name: lineUnitBefore
  uid: word!Word.Paragraph#lineUnitBefore:member
  package: word!
  fullName: lineUnitBefore
  summary: >-
    Ruft den Abstand vor dem Abschnitt in Rasterlinien ab, oder legt ihn fest.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'lineUnitBefore: number;'
    return:
      type: number
- name: list
  uid: word!Word.Paragraph#list:member
  package: word!
  fullName: list
  summary: >-
    Ruft die Liste ab, zu der dieser Absatz gehört. Löst einen Fehler aus, wenn sich der Absatz nicht in einer Liste befindet. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly list: Word.List;'
    return:
      type: <xref uid="word!Word.List:class" />
- name: listItem
  uid: word!Word.Paragraph#listItem:member
  package: word!
  fullName: listItem
  summary: >-
    Ruft das ListItem für den Absatz ab. Löst einen Fehler aus, wenn der Absatz nicht Teil einer Liste ist. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly listItem: Word.ListItem;'
    return:
      type: <xref uid="word!Word.ListItem:class" />
- name: listItemOrNullObject
  uid: word!Word.Paragraph#listItemOrNullObject:member
  package: word!
  fullName: listItemOrNullObject
  summary: >-
    Ruft das ListItem für den Absatz ab. Gibt ein NULL-Objekt zurück, wenn der Absatz nicht Teil einer Liste ist. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly listItemOrNullObject: Word.ListItem;'
    return:
      type: <xref uid="word!Word.ListItem:class" />
- name: listOrNullObject
  uid: word!Word.Paragraph#listOrNullObject:member
  package: word!
  fullName: listOrNullObject
  summary: >-
    Ruft die Liste ab, zu der dieser Absatz gehört. Gibt ein NULL-Objekt zurück, wenn sich der Absatz nicht in einer Liste befindet. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly listOrNullObject: Word.List;'
    return:
      type: <xref uid="word!Word.List:class" />
- name: outlineLevel
  uid: word!Word.Paragraph#outlineLevel:member
  package: word!
  fullName: outlineLevel
  summary: >-
    Ruft die Gliederungsebene für den Absatz fest oder ruft sie ab.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'outlineLevel: number;'
    return:
      type: number
- name: parentBody
  uid: word!Word.Paragraph#parentBody:member
  package: word!
  fullName: parentBody
  summary: >-
    Ruft den übergeordneten Text des Absatzes ab. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentBody: Word.Body;'
    return:
      type: <xref uid="word!Word.Body:class" />
- name: parentContentControl
  uid: word!Word.Paragraph#parentContentControl:member
  package: word!
  fullName: parentContentControl
  summary: >-
    Ruft das Inhaltssteuerelement ab, das den Abschnitt enthält. Löst einen Fehler aus, wenn kein übergeordnetes Inhaltssteuerelement vorhanden ist. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentContentControl: Word.ContentControl;'
    return:
      type: <xref uid="word!Word.ContentControl:class" />
- name: parentContentControlOrNullObject
  uid: word!Word.Paragraph#parentContentControlOrNullObject:member
  package: word!
  fullName: parentContentControlOrNullObject
  summary: >-
    Ruft das Inhaltssteuerelement ab, das den Abschnitt enthält. Gibt ein NULL-Objekt zurück, wenn kein übergeordnetes Inhaltssteuerelement vorhanden ist. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentContentControlOrNullObject: Word.ContentControl;'
    return:
      type: <xref uid="word!Word.ContentControl:class" />
- name: parentTable
  uid: word!Word.Paragraph#parentTable:member
  package: word!
  fullName: parentTable
  summary: >-
    Ruft die Tabelle ab, die den Absatz enthält. Löst einen Fehler aus, wenn er nicht in einer Tabelle enthalten ist. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentTable: Word.Table;'
    return:
      type: <xref uid="word!Word.Table:class" />
- name: parentTableCell
  uid: word!Word.Paragraph#parentTableCell:member
  package: word!
  fullName: parentTableCell
  summary: >-
    Ruft die Tabellenzelle ab, die den Absatz enthält. Löst einen Fehler aus, wenn er nicht in einer Tabellenzelle enthalten ist. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentTableCell: Word.TableCell;'
    return:
      type: <xref uid="word!Word.TableCell:class" />
- name: parentTableCellOrNullObject
  uid: word!Word.Paragraph#parentTableCellOrNullObject:member
  package: word!
  fullName: parentTableCellOrNullObject
  summary: >-
    Ruft die Tabellenzelle ab, die den Absatz enthält. Gibt ein NULL-Objekt zurück, wenn es nicht in einer Tabellenzelle enthalten ist. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentTableCellOrNullObject: Word.TableCell;'
    return:
      type: <xref uid="word!Word.TableCell:class" />
- name: parentTableOrNullObject
  uid: word!Word.Paragraph#parentTableOrNullObject:member
  package: word!
  fullName: parentTableOrNullObject
  summary: >-
    Ruft die Tabelle ab, die den Absatz enthält. Gibt ein NULL-Objekt zurück, wenn es nicht in einer Tabelle enthalten ist. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentTableOrNullObject: Word.Table;'
    return:
      type: <xref uid="word!Word.Table:class" />
- name: rightIndent
  uid: word!Word.Paragraph#rightIndent:member
  package: word!
  fullName: rightIndent
  summary: >-
    Ruft den rechten Einzugswert für den Abschnitt in Punkten ab oder legt ihn fest.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'rightIndent: number;'
    return:
      type: number
- name: spaceAfter
  uid: word!Word.Paragraph#spaceAfter:member
  package: word!
  fullName: spaceAfter
  summary: >-
    Ruft den Abstand nach dem Abschnitt in Punkten ab.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'spaceAfter: number;'
    return:
      type: number
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/25-paragraph/paragraph-properties.yaml\nawait Word.run(async (context) => {\n  // Adjust space between paragraphs.\n  context.document.body.paragraphs.getFirst().spaceAfter = 20;\n\n  await context.sync();\n});\n```"
- name: spaceBefore
  uid: word!Word.Paragraph#spaceBefore:member
  package: word!
  fullName: spaceBefore
  summary: >-
    Ruft den Abstand vor dem Abschnitt in Punkten ab.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'spaceBefore: number;'
    return:
      type: number
- name: style
  uid: word!Word.Paragraph#style:member
  package: word!
  fullName: style
  summary: >-
    Ruft den Formatvorlagennamen für den Absatz ab oder legt ihn fest. Verwenden Sie diese Eigenschaft für benutzerdefinierte Formatvorlagen und lokalisierte Formatvorlagennamen. Informationen zur Verwendung der integrierten Formatvorlagen, die zwischen Gebietsschemas portabel sind, finden Sie unter der Eigenschaft "styleBuiltIn".


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'style: string;'
    return:
      type: string
- name: styleBuiltIn
  uid: word!Word.Paragraph#styleBuiltIn:member
  package: word!
  fullName: styleBuiltIn
  summary: >-
    Ruft den Namen der integrierten Formatvorlage für den Absatz ab oder legt ihn fest. Verwenden Sie diese Eigenschaft für integrierte Formatvorlagen, die zwischen Gebietsschemas portabel sind. Informationen zum Verwenden benutzerdefinierter Formatvorlagen oder lokalisierter Namen finden Sie unter der Eigenschaft "style".


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'styleBuiltIn: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";'
    return:
      type: <xref uid="word!Word.Style:enum" /> | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"
- name: tableNestingLevel
  uid: word!Word.Paragraph#tableNestingLevel:member
  package: word!
  fullName: tableNestingLevel
  summary: >-
    Ruft die Ebene der Tabelle des Absatzes ab. Gibt 0 zurück, wenn sich der Absatz nicht in einer Tabelle befindet. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly tableNestingLevel: number;'
    return:
      type: number
- name: text
  uid: word!Word.Paragraph#text:member
  package: word!
  fullName: text
  summary: >-
    Ruft den Text des Absatzes ab. Schreibgeschützt.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly text: string;'
    return:
      type: string
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/25-paragraph/get-paragraph-on-insertion-point.yaml\nawait Word.run(async (context) => {\n  // The collection of paragraphs of the current selection returns the full paragraphs contained in it.\n  let paragraph = context.document.getSelection().paragraphs.getFirst();\n  paragraph.load(\"text\");\n\n  await context.sync();\n  console.log(paragraph.text);\n});\n```"
methods:
- name: attachToList(listId, level)
  uid: word!Word.Paragraph#attachToList:member(1)
  package: word!
  fullName: attachToList(listId, level)
  summary: >-
    Fügt den Absatz zu einer vorhandenen Liste auf der angegebenen Ebene hinzu. Führt zu einem Fehler, wenn der Absatz nicht in die Liste aufgenommen werden kann oder der Absatz bereits ein Listenelement ist.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'attachToList(listId: number, level: number): Word.List;'
    parameters:
    - id: listId
      description: Erforderlich. Die ID einer vorhandenen Liste.
      type: number
    - id: level
      description: Erforderlich. Die Ebene in der Liste.
      type: number
    return:
      type: <xref uid="word!Word.List:class" />
      description: ''
- name: clear()
  uid: word!Word.Paragraph#clear:member(1)
  package: word!
  fullName: clear()
  summary: >-
    Löscht den Inhalt des Abschnittsobjekts. Der Benutzer kann den Rückgängig-Vorgang auf den gelöschten Inhalt durchführen.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'clear(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a command to load the style property for all of the paragraphs.\n    context.load(paragraphs, 'style');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a command to clear the contents of the first paragraph.\n        paragraphs.items[0].clear();\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Cleared the contents of the first paragraph.');\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: delete()
  uid: word!Word.Paragraph#delete:member(1)
  package: word!
  fullName: delete()
  summary: >-
    Löscht den Absatz und seinen Inhalt aus dem Dokument.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a command to load the text property for all of the paragraphs.\n    context.load(paragraphs, 'text');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a command to delete the first paragraph.\n        paragraphs.items[0].delete();\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Deleted the first paragraph.');\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: detachFromList()
  uid: word!Word.Paragraph#detachFromList:member(1)
  package: word!
  fullName: detachFromList()
  summary: >-
    Verschiebt diesen Absatz aus der Liste, falls der Absatz ein Listenelement ist.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'detachFromList(): void;'
    return:
      type: void
      description: ''
- name: getHtml()
  uid: word!Word.Paragraph#getHtml:member(1)
  package: word!
  fullName: getHtml()
  summary: >-
    Ruft eine HTML-Darstellung des Paragraph-Objekts ab. Wenn die Formatierung in einer Webseite oder einem HTML-Viewer gerendert wird, entspricht Sie der Formatierung des Dokuments, ist jedoch nicht genau. Diese Methode gibt nicht exakt denselben HTML-Code für dasselbe Dokument auf unterschiedlichen Plattformen (Windows, Mac, Word im Internet usw.) zurück. Wenn Sie exakte Genauigkeit oder Konsistenz plattformübergreifend benötigen, verwenden `Paragraph.getOoxml()` und konvertieren Sie den zurückgegebenen XML-Code in HTML.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getHtml(): OfficeExtension.ClientResult<string>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string&gt;
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a command to load the style property for all of the paragraphs.\n    context.load(paragraphs, 'style');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a a set of commands to get the HTML of the first paragraph.\n        var html = paragraphs.items[0].getHtml();\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Paragraph HTML: ' + html.value);\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getNext()
  uid: word!Word.Paragraph#getNext:member(1)
  package: word!
  fullName: getNext()
  summary: >-
    Ruft den nächsten Absatz ab. Löst einen Fehler aus, wenn der Absatz der letzte ist.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getNext(): Word.Paragraph;'
    return:
      type: <xref uid="word!Word.Paragraph:class" />
      description: ''
- name: getNextOrNullObject()
  uid: word!Word.Paragraph#getNextOrNullObject:member(1)
  package: word!
  fullName: getNextOrNullObject()
  summary: >-
    Ruft den nächsten Absatz ab. Gibt ein NULL-Objekt zurück, wenn der Absatz der letzte ist.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getNextOrNullObject(): Word.Paragraph;'
    return:
      type: <xref uid="word!Word.Paragraph:class" />
      description: ''
- name: getOoxml()
  uid: word!Word.Paragraph#getOoxml:member(1)
  package: word!
  fullName: getOoxml()
  summary: >-
    Ruft die Office Open XML (OOXML)-Darstellung des Abschnittsobjekts ab.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string&gt;
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a command to load the style property for the top 2 paragraphs.\n    context.load(paragraphs, {select: 'style', top: 2} );\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a a set of commands to get the OOXML of the first paragraph.\n        var ooxml = paragraphs.items[0].getOoxml();\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Paragraph OOXML: ' + ooxml.value);\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getPrevious()
  uid: word!Word.Paragraph#getPrevious:member(1)
  package: word!
  fullName: getPrevious()
  summary: >-
    Ruft den vorherigen Absatz ab. Löst einen Fehler aus, wenn es sich bei dem ersten Absatz um einen handelt.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getPrevious(): Word.Paragraph;'
    return:
      type: <xref uid="word!Word.Paragraph:class" />
      description: ''
- name: getPreviousOrNullObject()
  uid: word!Word.Paragraph#getPreviousOrNullObject:member(1)
  package: word!
  fullName: getPreviousOrNullObject()
  summary: >-
    Ruft den vorherigen Absatz ab. Gibt ein NULL-Objekt zurück, wenn es sich bei dem ersten Absatz um einen handelt.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getPreviousOrNullObject(): Word.Paragraph;'
    return:
      type: <xref uid="word!Word.Paragraph:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a command to load the text property for all of the paragraphs.\n    context.load(paragraphs, 'text');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue commands to create a proxy object for the next-to-last paragraph.\n        var indexOfLastParagraph = paragraphs.items.length - 1;\n        var precedingParagraph = paragraphs.items[indexOfLastParagraph].getPreviousOrNullObject();\n\n        // Queue a command to load the text of the preceding paragraph.\n        context.load(precedingParagraph, 'text');\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            if (precedingParagraph.isNullObject) {\n                console.log('There are no paragraphs before the current one.');\n            } else {\n                console.log('The preceding paragraph is: ' + precedingParagraph.text);\n            }\n        });\n    });\n}).catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getRange(rangeLocation)
  uid: word!Word.Paragraph#getRange:member(1)
  package: word!
  fullName: getRange(rangeLocation)
  summary: >-
    Ruft den gesamten Absatz oder den Start- bzw. Endpunkt des Absatzes als Bereich ab.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRange(rangeLocation?: Word.RangeLocation): Word.Range;'
    parameters:
    - id: rangeLocation
      description: Optional. Die Bereichsposition kann "Whole", "Start", "End", "After" oder "Content" lauten.
      type: <xref uid="word!Word.RangeLocation:enum" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: getRange(rangeLocationString)
  uid: word!Word.Paragraph#getRange:member(2)
  package: word!
  fullName: getRange(rangeLocationString)
  summary: >-
    Ruft den gesamten Absatz oder den Start- bzw. Endpunkt des Absatzes als Bereich ab.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRange(rangeLocationString?: "Whole" | "Start" | "End" | "Before" | "After" | "Content"): Word.Range;'
    parameters:
    - id: rangeLocationString
      description: Optional. Die Bereichsposition kann "Whole", "Start", "End", "After" oder "Content" lauten.
      type: "\"Whole\" | \"Start\" | \"End\" | \"Before\" | \"After\" | \"Content\""
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: getTextRanges(endingMarks, trimSpacing)
  uid: word!Word.Paragraph#getTextRanges:member(1)
  package: word!
  fullName: getTextRanges(endingMarks, trimSpacing)
  summary: >-
    Ruft die Textbereiche im Absatz mithilfe von Satzzeichen und/oder anderen Endmarkierungen ab.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getTextRanges(endingMarks: string[], trimSpacing?: boolean): Word.RangeCollection;'
    parameters:
    - id: endingMarks
      description: Erforderlich. Die Satzzeichen und/oder andere Endzeichen als ein Array von Zeichenfolgen.
      type: string[]
    - id: trimSpacing
      description: Optional. Gibt an, ob Abstandszeichen (Leerzeichen, Tabstopps, Spaltenumbrüche und Absatzmarkierungen) vom Anfang und Ende der Bereiche abgeschnitten werden sollen, die in der Range-Auflistung zurückgegeben werden. Der Standardwert ist false und gibt an, dass Zeichenabstände am Anfang und am Ende des Bereichs in der Range-Auflistung enthalten sind.
      type: boolean
    return:
      type: <xref uid="word!Word.RangeCollection:class" />
      description: ''
- name: insertBreak(breakType, insertLocation)
  uid: word!Word.Paragraph#insertBreak:member(1)
  package: word!
  fullName: insertBreak(breakType, insertLocation)
  summary: >-
    Fügt an der angegebenen Position im Hauptdokument einen Umbruch ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
    parameters:
    - id: breakType
      description: Erforderlich. Der zum Dokument hinzuzufügende Umbruchtyp.
      type: <xref uid="word!Word.BreakType:enum" />
    - id: insertLocation
      description: Erforderlich. Der Wert kann „Before“ oder „After“ lauten.
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/25-paragraph/insert-line-and-page-breaks.yaml\nWord.run(async (context) => {\n  context.document.body.paragraphs.getFirst().insertBreak(Word.BreakType.line, \"After\");\n\n  await context.sync();\n  console.log(\"success\");\n});\n```"
- name: insertBreak(breakTypeString, insertLocation)
  uid: word!Word.Paragraph#insertBreak:member(2)
  package: word!
  fullName: insertBreak(breakTypeString, insertLocation)
  summary: >-
    Fügt an der angegebenen Position im Hauptdokument einen Umbruch ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
    parameters:
    - id: breakTypeString
      description: Erforderlich. Der zum Dokument hinzuzufügende Umbruchtyp.
      type: "\"Page\" | \"Next\" | \"SectionNext\" | \"SectionContinuous\" | \"SectionEven\" | \"SectionOdd\" | \"Line\""
    - id: insertLocation
      description: Erforderlich. Der Wert kann „Before“ oder „After“ lauten.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a command to load the style property for the top 2 paragraphs.\n    // We never perform an empty load. We always must request a property.\n    context.load(paragraphs, {select: 'style', top: 2} );\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a command to get the first paragraph.\n        var paragraph = paragraphs.items[0];\n\n        // Queue a command to insert a page break after the first paragraph.\n        paragraph.insertBreak('page', 'After');\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Inserted a page break after the paragraph.');\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertContentControl()
  uid: word!Word.Paragraph#insertContentControl:member(1)
  package: word!
  fullName: insertContentControl()
  summary: >-
    Umschließt das Abschnittsobjekt mit einem Rich-Text-Inhaltssteuerelement.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertContentControl(): Word.ContentControl;'
    return:
      type: <xref uid="word!Word.ContentControl:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a command to load the style property for the top 2 paragraphs.\n    // We never perform an empty load. We always must request a property.\n    context.load(paragraphs, {select: 'style', top: 2} );\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a command to get the first paragraph.\n        var paragraph = paragraphs.items[0];\n\n        // Queue a command to wrap the first paragraph in a rich text content control.\n        paragraph.insertContentControl();\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Wrapped the first paragraph in a content control.');\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertFileFromBase64(base64File, insertLocation)
  uid: word!Word.Paragraph#insertFileFromBase64:member(1)
  package: word!
  fullName: insertFileFromBase64(base64File, insertLocation)
  summary: >-
    Fügt ein Dokument in den Absatz an der angegebenen Position ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
    parameters:
    - id: base64File
      description: Erforderlich. Der Base64-codierte Inhalt einer DOCX-Datei.
      type: string
    - id: insertLocation
      description: Erforderlich. Der Wert kann „Replace“, „Start“ oder „End“ lauten.
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: insertFileFromBase64(base64File, insertLocationString)
  uid: word!Word.Paragraph#insertFileFromBase64:member(2)
  package: word!
  fullName: insertFileFromBase64(base64File, insertLocationString)
  summary: >-
    Fügt ein Dokument in den Absatz an der angegebenen Position ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    parameters:
    - id: base64File
      description: Erforderlich. Der Base64-codierte Inhalt einer DOCX-Datei.
      type: string
    - id: insertLocationString
      description: Erforderlich. Der Wert kann „Replace“, „Start“ oder „End“ lauten.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: insertHtml(html, insertLocation)
  uid: word!Word.Paragraph#insertHtml:member(1)
  package: word!
  fullName: insertHtml(html, insertLocation)
  summary: >-
    Fügt in den aktuellen Abschnitt an der angegebenen Position HTML-Code ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
    parameters:
    - id: html
      description: Erforderlich. Der in den Abschnitt einzufügende HTML-Code.
      type: string
    - id: insertLocation
      description: Erforderlich. Der Wert kann „Replace“, „Start“ oder „End“ lauten.
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a command to load the style property for the top 2 paragraphs.\n    // We never perform an empty load. We always must request a property.\n    context.load(paragraphs, {select: 'style', top: 2} );\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a command to get the first paragraph.\n        var paragraph = paragraphs.items[0];\n\n        // Queue a command to insert HTML content at the end of the first paragraph.\n        paragraph.insertHtml('<strong>Inserted HTML.</strong>', Word.InsertLocation.end);\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Inserted HTML content at the end of the first paragraph.');\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertHtml(html, insertLocationString)
  uid: word!Word.Paragraph#insertHtml:member(2)
  package: word!
  fullName: insertHtml(html, insertLocationString)
  summary: >-
    Fügt in den aktuellen Abschnitt an der angegebenen Position HTML-Code ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    parameters:
    - id: html
      description: Erforderlich. Der in den Abschnitt einzufügende HTML-Code.
      type: string
    - id: insertLocationString
      description: Erforderlich. Der Wert kann „Replace“, „Start“ oder „End“ lauten.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: insertInlinePictureFromBase64(base64EncodedImage, insertLocation)
  uid: word!Word.Paragraph#insertInlinePictureFromBase64:member(1)
  package: word!
  fullName: insertInlinePictureFromBase64(base64EncodedImage, insertLocation)
  summary: >-
    Fügt in den aktuellen Abschnitt an der angegebenen Position ein Bild ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
    parameters:
    - id: base64EncodedImage
      description: Erforderlich. Das Base64-codierte Bild, das eingefügt werden soll.
      type: string
    - id: insertLocation
      description: Erforderlich. Der Wert kann „Replace“, „Start“ oder „End“ lauten.
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.InlinePicture:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Create a proxy object for the paragraphs collection.\n    var paragraphs = context.document.body.paragraphs;\n\n    // Queue a command to load the style property for all of the paragraphs.\n    context.load(paragraphs, 'style');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n\n        // Queue a command to get the first paragraph.\n        var paragraph = paragraphs.items[0];\n\n        var b64encodedImg = \"iVBORw0KGgoAAAANSUhEUgAAAB4AAAANCAIAAAAxEEnAAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAACFSURBVDhPtY1BEoQwDMP6/0+XgIMTBAeYoTqso9Rkx1zG+tNj1H94jgGzeNSjteO5vtQQuG2seO0av8LzGbe3anzRoJ4ybm/VeKEerAEbAUpW4aWQCmrGFWykRzGBCnYy2ha3oAIq2MloW9yCCqhgJ6NtcQsqoIKdjLbFLaiACnYyf2fODbrjZcXfr2F4AAAAAElFTkSuQmCC\";\n\n        // Queue a command to insert a base64 encoded image at the beginning of the first paragraph.\n        paragraph.insertInlinePictureFromBase64(b64encodedImg, Word.InsertLocation.start);\n\n        // Synchronize the document state by executing the queued commands,\n        // and return a promise to indicate task completion.\n        return context.sync().then(function () {\n            console.log('Added an image to the first paragraph.');\n        });\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)
  uid: word!Word.Paragraph#insertInlinePictureFromBase64:member(2)
  package: word!
  fullName: insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)
  summary: >-
    Fügt in den aktuellen Abschnitt an der angegebenen Position ein Bild ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.InlinePicture;'
    parameters:
    - id: base64EncodedImage
      description: Erforderlich. Das Base64-codierte Bild, das eingefügt werden soll.
      type: string
    - id: insertLocationString
      description: Erforderlich. Der Wert kann „Replace“, „Start“ oder „End“ lauten.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.InlinePicture:class" />
      description: ''
- name: insertOoxml(ooxml, insertLocation)
  uid: word!Word.Paragraph#insertOoxml:member(1)
  package: word!
  fullName: insertOoxml(ooxml, insertLocation)
  summary: >-
    Fügt OOXML an der angegebenen Position in den Absatz ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
    parameters:
    - id: ooxml
      description: Erforderlich. Das in den Absatz einzufügende OOXML.
      type: string
    - id: insertLocation
      description: Erforderlich. Der Wert kann „Replace“, „Start“ oder „End“ lauten.
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: insertOoxml(ooxml, insertLocationString)
  uid: word!Word.Paragraph#insertOoxml:member(2)
  package: word!
  fullName: insertOoxml(ooxml, insertLocationString)
  summary: >-
    Fügt OOXML an der angegebenen Position in den Absatz ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    parameters:
    - id: ooxml
      description: Erforderlich. Das in den Absatz einzufügende OOXML.
      type: string
    - id: insertLocationString
      description: Erforderlich. Der Wert kann „Replace“, „Start“ oder „End“ lauten.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: insertParagraph(paragraphText, insertLocation)
  uid: word!Word.Paragraph#insertParagraph:member(1)
  package: word!
  fullName: insertParagraph(paragraphText, insertLocation)
  summary: >-
    Fügt an der angegebenen Position einen Absatz ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
    parameters:
    - id: paragraphText
      description: Erforderlich. Der einzufügende Absatztext.
      type: string
    - id: insertLocation
      description: Erforderlich. Der Wert kann „Before“ oder „After“ lauten.
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Paragraph:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/25-paragraph/insert-formatted-text.yaml\nawait Word.run(async (context) => {\n  // Second sentence, let's insert it as a paragraph after the previously inserted one.\n  let secondSentence = context.document.body.insertParagraph(\n    \"This is the first text with a custom style.\",\n    \"End\"\n  );\n  secondSentence.font.set({\n    bold: false,\n    italic: true,\n    name: \"Berlin Sans FB\",\n    color: \"blue\",\n    size: 30\n  });\n\n  await context.sync();\n});\n```"
- name: insertParagraph(paragraphText, insertLocationString)
  uid: word!Word.Paragraph#insertParagraph:member(2)
  package: word!
  fullName: insertParagraph(paragraphText, insertLocationString)
  summary: >-
    Fügt an der angegebenen Position einen Absatz ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
    parameters:
    - id: paragraphText
      description: Erforderlich. Der einzufügende Absatztext.
      type: string
    - id: insertLocationString
      description: Erforderlich. Der Wert kann „Before“ oder „After“ lauten.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Paragraph:class" />
      description: ''
- name: insertTable(rowCount, columnCount, insertLocation, values)
  uid: word!Word.Paragraph#insertTable:member(1)
  package: word!
  fullName: insertTable(rowCount, columnCount, insertLocation, values)
  summary: >-
    Fügt eine Tabelle mit der angegebenen Anzahl von Zeilen und Spalten ein.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertTable(rowCount: number, columnCount: number, insertLocation: Word.InsertLocation, values?: string[][]): Word.Table;'
    parameters:
    - id: rowCount
      description: Erforderlich. Die Anzahl der Zeilen in der Tabelle.
      type: number
    - id: columnCount
      description: Erforderlich. Die Anzahl der Spalten in der Tabelle.
      type: number
    - id: insertLocation
      description: Erforderlich. Der Wert kann „Before“ oder „After“ lauten.
      type: <xref uid="word!Word.InsertLocation:enum" />
    - id: values
      description: Optionales 2D-Array. Wenn die entsprechenden Zeichenfolgen im Array angegeben sind, werden die Zellen gefüllt.
      type: string[][]
    return:
      type: <xref uid="word!Word.Table:class" />
      description: ''
- name: insertTable(rowCount, columnCount, insertLocationString, values)
  uid: word!Word.Paragraph#insertTable:member(2)
  package: word!
  fullName: insertTable(rowCount, columnCount, insertLocationString, values)
  summary: >-
    Fügt eine Tabelle mit der angegebenen Anzahl von Zeilen und Spalten ein.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertTable(rowCount: number, columnCount: number, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace", values?: string[][]): Word.Table;'
    parameters:
    - id: rowCount
      description: Erforderlich. Die Anzahl der Zeilen in der Tabelle.
      type: number
    - id: columnCount
      description: Erforderlich. Die Anzahl der Spalten in der Tabelle.
      type: number
    - id: insertLocationString
      description: Erforderlich. Der Wert kann „Before“ oder „After“ lauten.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    - id: values
      description: Optionales 2D-Array. Wenn die entsprechenden Zeichenfolgen im Array angegeben sind, werden die Zellen gefüllt.
      type: string[][]
    return:
      type: <xref uid="word!Word.Table:class" />
      description: ''
- name: insertText(text, insertLocation)
  uid: word!Word.Paragraph#insertText:member(1)
  package: word!
  fullName: insertText(text, insertLocation)
  summary: >-
    Fügt in den Abschnitt an der angegebenen Position Text ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
    parameters:
    - id: text
      description: Erforderlich. Der einzufügende Text.
      type: string
    - id: insertLocation
      description: Erforderlich. Der Wert kann „Replace“, „Start“ oder „End“ lauten.
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/25-paragraph/insert-in-different-locations.yaml\nawait Word.run(async (context) => {\n  // Replace the last paragraph.\n  let range = context.document.body.paragraphs.getLast().insertText(\"Just replaced the last paragraph!\", \"Replace\");\n  range.font.highlightColor = \"black\";\n  range.font.color = \"white\";\n\n  await context.sync();\n});\n```"
- name: insertText(text, insertLocationString)
  uid: word!Word.Paragraph#insertText:member(2)
  package: word!
  fullName: insertText(text, insertLocationString)
  summary: >-
    Fügt in den Abschnitt an der angegebenen Position Text ein.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    parameters:
    - id: text
      description: Erforderlich. Der einzufügende Text.
      type: string
    - id: insertLocationString
      description: Erforderlich. Der Wert kann „Replace“, „Start“ oder „End“ lauten.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: load(options)
  uid: word!Word.Paragraph#load:member(1)
  package: word!
  fullName: load(options)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Word.Interfaces.ParagraphLoadOptions): Word.Paragraph;'
    parameters:
    - id: options
      description: Enthält Optionen für die Eigenschaften des zu ladenden Objekts.
      type: <xref uid="word!Word.Interfaces.ParagraphLoadOptions:interface" />
    return:
      type: <xref uid="word!Word.Paragraph:class" />
      description: ''
- name: load(propertyNames)
  uid: word!Word.Paragraph#load:member(2)
  package: word!
  fullName: load(propertyNames)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Word.Paragraph;'
    parameters:
    - id: propertyNames
      description: Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.
      type: string | string[]
    return:
      type: <xref uid="word!Word.Paragraph:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: word!Word.Paragraph#load:member(3)
  package: word!
  fullName: load(propertyNamesAndPaths)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Word.Paragraph;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und `propertyNamesAndPaths.expand` ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="word!Word.Paragraph:class" />
      description: ''
- name: search(searchText, searchOptions)
  uid: word!Word.Paragraph#search:member(1)
  package: word!
  fullName: search(searchText, searchOptions)
  summary: >-
    Führt eine Suche mit den angegebenen SearchOptions für den Bereich des Paragraph-Objekts aus. Die Suchergebnisse sind eine Sammlung von Bereichsobjekten.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      search(searchText: string, searchOptions?: Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }): Word.RangeCollection;
    parameters:
    - id: searchText
      description: Erforderlich. Der Suchtext.
      type: string
    - id: searchOptions
      description: Optional. Optionen für die Suche.
      type: >-
        <xref uid="word!Word.SearchOptions:class" /> | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }
    return:
      type: <xref uid="word!Word.RangeCollection:class" />
      description: ''
- name: select(selectionMode)
  uid: word!Word.Paragraph#select:member(1)
  package: word!
  fullName: select(selectionMode)
  summary: >-
    Wählt und navigiert die Word-Benutzeroberfläche zu diesem Absatz.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'select(selectionMode?: Word.SelectionMode): void;'
    parameters:
    - id: selectionMode
      description: Optional. Der Auswahlmodus kann „Select“, „Start“ oder „End“ sein. „Select“ ist die Standardeinstellung.
      type: <xref uid="word!Word.SelectionMode:enum" />
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/35-ranges/scroll-to-range.yaml\nawait Word.run(async (context) => {\n  // If select is called with no parameters, it selects the object.\n  context.document.body.paragraphs.getLast().select();\n\n  await context.sync();\n});\n```\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/35-ranges/scroll-to-range.yaml\nawait Word.run(async (context) => {\n  // Select can be at the start or end of a range; this by definition moves the insertion point without selecting the range.\n  context.document.body.paragraphs.getLast().select(\"End\");\n\n  await context.sync();\n});\n```"
- name: select(selectionModeString)
  uid: word!Word.Paragraph#select:member(2)
  package: word!
  fullName: select(selectionModeString)
  summary: >-
    Wählt und navigiert die Word-Benutzeroberfläche zu diesem Absatz.


    \[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
    parameters:
    - id: selectionModeString
      description: Optional. Der Auswahlmodus kann „Select“, „Start“ oder „End“ sein. „Select“ ist die Standardeinstellung.
      type: "\"Select\" | \"Start\" | \"End\""
    return:
      type: void
      description: ''
- name: set(properties, options)
  uid: word!Word.Paragraph#set:member(1)
  package: word!
  fullName: set(properties, options)
  summary: Legt mehrere Eigenschaften eines Objekts gleichzeitig fest. Sie können entweder ein einfaches Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs übergeben.
  remarks: >-
    Diese Methode hat die folgende zusätzliche Signatur:


    `set(properties: Word.Paragraph): void`


    #### <a name="examples"></a>Beispiele


    ```typescript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/90-scenarios/multiple-property-set.yaml

    await Word.run(async (context) => {
      const paragraph = context.document.body.paragraphs.getFirst();
      paragraph.set({
        leftIndent: 30,
        font: {
          bold: true,
          color: "red"
        }
      });

      await context.sync();
    });

    ```

    ```typescript

    // Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/90-scenarios/multiple-property-set.yaml

    await Word.run(async (context) => {
      const firstParagraph = context.document.body.paragraphs.getFirst();
      const secondParagraph = firstParagraph.getNext();
      firstParagraph.load("text, font/color, font/bold, leftIndent");

      await context.sync();

      secondParagraph.set(firstParagraph);

      await context.sync();
    });

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.ParagraphUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: Ein JavaScript-Objekt mit Eigenschaften, die isomorphically für die Eigenschaften des Objekts strukturiert sind, für das die Methode aufgerufen wird.
      type: <xref uid="word!Word.Interfaces.ParagraphUpdateData:interface" />
    - id: options
      description: Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: word!Word.Paragraph#set:member(2)
  package: word!
  fullName: set(properties)
  summary: Legt mehrere Eigenschaften für das Objekt gleichzeitig basierend auf einem vorhandenen geladenen Objekt fest.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Word.Paragraph): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="word!Word.Paragraph:class" />
    return:
      type: void
      description: ''
- name: split(delimiters, trimDelimiters, trimSpacing)
  uid: word!Word.Paragraph#split:member(1)
  package: word!
  fullName: split(delimiters, trimDelimiters, trimSpacing)
  summary: >-
    Teilt den Absatz mithilfe von Trennzeichen in untergeordnete Bereiche.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'split(delimiters: string[], trimDelimiters?: boolean, trimSpacing?: boolean): Word.RangeCollection;'
    parameters:
    - id: delimiters
      description: Erforderlich. Das Trennzeichen als ein Array von Zeichenfolgen.
      type: string[]
    - id: trimDelimiters
      description: Optional. Gibt an, ob Trennzeichen für die Bereiche in der Range-Auflistung abgeschnitten werden sollen. Der Standardwert ist false und gibt an, dass die Trennzeichen in den Bereichen enthalten sind, die in der Range-Auflistung zurückgegeben werden.
      type: boolean
    - id: trimSpacing
      description: Optional. Gibt an, ob Abstandszeichen (Leerzeichen, Tabstopps, Spaltenumbrüche und Absatzmarkierungen) vom Anfang und Ende der Bereiche abgeschnitten werden sollen, die in der Range-Auflistung zurückgegeben werden. Der Standardwert ist false und gibt an, dass Zeichenabstände am Anfang und am Ende des Bereichs in der Range-Auflistung enthalten sind.
      type: boolean
    return:
      type: <xref uid="word!Word.RangeCollection:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/35-ranges/split-words-of-first-paragraph.yaml\nawait Word.run(async (context) => {\n  let paragraph = context.document.body.paragraphs.getFirst();\n  let words = paragraph.split([\" \"], true /* trimDelimiters*/, true /* trimSpaces */);\n  words.load(\"text\");\n\n  await context.sync();\n\n  for (let i = 0; i < words.items.length; i++) {\n    if (i >= 1) {\n      words.items[i - 1].font.highlightColor = \"#FFFFFF\";\n    }\n    words.items[i].font.highlightColor = \"#FFFF00\";\n\n    await context.sync();\n    await pause(200);\n  }\n});\n```"
- name: startNewList()
  uid: word!Word.Paragraph#startNewList:member(1)
  package: word!
  fullName: startNewList()
  summary: >-
    Beginnt eine neue Liste mit diesem Absatz. Führt zu einem Fehler, wenn der Absatz bereits ein Listenelement ist.


    \[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'startNewList(): Word.List;'
    return:
      type: <xref uid="word!Word.List:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/word/20-lists/insert-list.yaml\n// This example starts a new list stating with the second paragraph.\nawait Word.run(async (context) => {\n  let paragraphs = context.document.body.paragraphs;\n  paragraphs.load(\"$none\"); // No properties needed.\n\n  await context.sync();\n\n  var list = paragraphs.items[1].startNewList(); // Indicates new list to be started in the second paragraph.\n  list.load(\"$none\"); // No properties needed.\n\n  await context.sync();\n\n  // To add new items to the list use start/end on the insert location parameter.\n  list.insertParagraph(\"New list item on top of the list\", \"Start\");\n  let paragraph = list.insertParagraph(\"New list item at the end of the list (4th level)\", \"End\");\n  paragraph.listItem.level = 4; // Sets up list level for the lsit item.\n  // To add paragraphs outside the list use before/after:\n  list.insertParagraph(\"New paragraph goes after (not part of the list)\", \"After\");\n\n  await context.sync();\n});\n```"
- name: toJSON()
  uid: word!Word.Paragraph#toJSON:member(1)
  package: word!
  fullName: toJSON()
  summary: Überschreibt die JavaScript `toJSON()` -Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird. `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche Word. Paragraph-Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt (typisiert als `Word.Interfaces.ParagraphData`<!-- -->), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Word.Interfaces.ParagraphData;'
    return:
      type: <xref uid="word!Word.Interfaces.ParagraphData:interface" />
      description: ''
- name: track()
  uid: word!Word.Paragraph#track:member(1)
  package: word!
  fullName: track()
  summary: Nachverfolgung des Objekts zwecks automatischer Anpassung auf der Grundlage der umgebenden Änderungen im Dokument. Dieser Aufruf ist eine Kurzform für `context.trackedObjects.add(thisObject)`<!-- -->. Wenn Sie dieses Objekt für `.sync` Aufrufe und außerhalb der sequenziellen Ausführung eines ". Run"-Batches verwenden und beim Festlegen einer Eigenschaft oder beim Aufrufen einer Methode für das Objekt einen "InvalidObjectPath"-Fehler erhalten, mussten Sie das Objekt der nachverfolgten Objektauflistung hinzugefügt haben, als das Objekt zum ersten Mal erstellt wurde.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'track(): Word.Paragraph;'
    return:
      type: <xref uid="word!Word.Paragraph:class" />
      description: ''
- name: untrack()
  uid: word!Word.Paragraph#untrack:member(1)
  package: word!
  fullName: untrack()
  summary: Gibt den diesem Objekt zugewiesenen Arbeitsspeicher frei, wenn das Objekt zuvor nachverfolgt wurde. Bei diesem Aufruf handelt es sich um eine Kurzform `context.trackedObjects.remove(thisObject)`<!-- -->. Viele nachverfolgte Objekte verlangsamen die Ausführung der Hostanwendung, also achten Sie darauf, alle hinzugefügten Objekte nach abgeschlossener Verwendung freizugeben. Sie müssen anrufen, `context.sync()` bevor die Speicherfreigabe wirksam wird.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'untrack(): Word.Paragraph;'
    return:
      type: <xref uid="word!Word.Paragraph:class" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 51a6c787ab6d3fc20c28155e6b703bf3364799a1
  ms.sourcegitcommit: 551d760f6b9e7ff22afdaf6ce8e0b2863946596d
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 12/04/2020
  ms.locfileid: "49570591"
