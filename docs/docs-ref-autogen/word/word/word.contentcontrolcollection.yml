### YamlMime:UniversalReference
items:
  - uid: 'word!Word.ContentControlCollection:class'
    summary: |-
      <span data-ttu-id="cac94-101">Enthält eine Auflistung von [Word. ContentControl](xref:word!Word.ContentControl:class) -Objekten.</span><span class="sxs-lookup"><span data-stu-id="cac94-101">Contains a collection of [Word.ContentControl](xref:word!Word.ContentControl:class) objects.</span></span> <span data-ttu-id="cac94-102">Inhaltssteuerelemente sind gebundene und möglicherweise mit Beschriftungen versehene Bereiche in einem Dokument, die als Container für bestimmte Typen von Inhalt dienen.</span><span class="sxs-lookup"><span data-stu-id="cac94-102">Content controls are bounded and potentially labeled regions in a document that serve as containers for specific types of content.</span></span> <span data-ttu-id="cac94-103">Einzelne Inhaltssteuerelemente können Inhalte wie Abbildungen, Tabellen oder Absätze mit formatiertem Text enthalten.</span><span class="sxs-lookup"><span data-stu-id="cac94-103">Individual content controls may contain contents such as images, tables, or paragraphs of formatted text.</span></span> <span data-ttu-id="cac94-104">Derzeit werden nur Rich-Text-Inhaltssteuerelemente unterstützt.</span><span class="sxs-lookup"><span data-stu-id="cac94-104">Currently, only rich text content controls are supported.</span></span>

      <span data-ttu-id="cac94-105">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cac94-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: Word.ContentControlCollection
    fullName: Word.ContentControlCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'word!OfficeExtension.ClientObject:class'
    package: word!
    children:
      - 'word!Word.ContentControlCollection#context:member'
      - 'word!Word.ContentControlCollection#getById:member(1)'
      - 'word!Word.ContentControlCollection#getByIdOrNullObject:member(1)'
      - 'word!Word.ContentControlCollection#getByTag:member(1)'
      - 'word!Word.ContentControlCollection#getByTitle:member(1)'
      - 'word!Word.ContentControlCollection#getByTypes:member(1)'
      - 'word!Word.ContentControlCollection#getFirst:member(1)'
      - 'word!Word.ContentControlCollection#getFirstOrNullObject:member(1)'
      - 'word!Word.ContentControlCollection#getItem:member(1)'
      - 'word!Word.ContentControlCollection#items:member'
      - 'word!Word.ContentControlCollection#load:member(1)'
      - 'word!Word.ContentControlCollection#load:member(2)'
      - 'word!Word.ContentControlCollection#load:member(3)'
      - 'word!Word.ContentControlCollection#toJSON:member(1)'
      - 'word!Word.ContentControlCollection#track:member(1)'
      - 'word!Word.ContentControlCollection#untrack:member(1)'
  - uid: 'word!Word.ContentControlCollection#context:member'
    summary: '<span data-ttu-id="cac94-106">Der Anforderungskontext, der mit dem Objekt verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="cac94-106">The request context associated with the object.</span></span> <span data-ttu-id="cac94-107">Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="cac94-107">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'word!Word.RequestContext:class'
  - uid: 'word!Word.ContentControlCollection#getById:member(1)'
    summary: |-
      <span data-ttu-id="cac94-108">Ruft ein Inhaltssteuerelement mithilfe der ID ab.</span><span class="sxs-lookup"><span data-stu-id="cac94-108">Gets a content control by its identifier.</span></span> <span data-ttu-id="cac94-109">Löst, wenn kein Inhaltssteuerelement mit dem Bezeichner in dieser Auflistung vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="cac94-109">Throws if there isn't a content control with the identifier in this collection.</span></span>

      <span data-ttu-id="cac94-110">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cac94-110">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getById(id)
    fullName: getById(id)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getById(id: number): Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="cac94-111">Beispiele</span><span class="sxs-lookup"><span data-stu-id="cac94-111">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the content control that contains a specific id.
              var contentControl = context.document.contentControls.getById(30086310);

              // Queue a command to load the text property for a content control.
              context.load(contentControl, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The content control with that Id has been found in this document.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the content control that contains a specific id.
              var contentControl = context.document.contentControls.getByIdOrNullObject(30086310);

              // Queue a command to load the text property for a content control.
              context.load(contentControl, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControl.isNullObject) {
                      console.log('There is no content control with that ID.')
                  } else {
                      console.log('The content control with that ID has been found in this document.');
                  }
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: id
          description: <span data-ttu-id="cac94-112">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="cac94-112">Required.</span></span> <span data-ttu-id="cac94-113">Eine Inhaltssteuerelement-ID.</span><span class="sxs-lookup"><span data-stu-id="cac94-113">A content control identifier.</span></span>
          type:
            - number
  - uid: 'word!Word.ContentControlCollection#getByIdOrNullObject:member(1)'
    summary: |-
      <span data-ttu-id="cac94-114">Ruft ein Inhaltssteuerelement mithilfe der ID ab.</span><span class="sxs-lookup"><span data-stu-id="cac94-114">Gets a content control by its identifier.</span></span> <span data-ttu-id="cac94-115">Gibt ein NULL-Objekt zurück, wenn kein Inhaltssteuerelement mit dem Bezeichner in dieser Auflistung vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="cac94-115">Returns a null object if there isn't a content control with the identifier in this collection.</span></span>

      <span data-ttu-id="cac94-116">\[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cac94-116">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getByIdOrNullObject(id)
    fullName: getByIdOrNullObject(id)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getByIdOrNullObject(id: number): Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="cac94-117">Beispiele</span><span class="sxs-lookup"><span data-stu-id="cac94-117">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the content control that contains a specific id.
              var contentControl = context.document.contentControls.getByIdOrNullObject(30086310);

              // Queue a command to load the text property for a content control.
              context.load(contentControl, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControl.isNullObject) {
                      console.log('There is no content control with that ID.')
                  } else {
                      console.log('The content control with that ID has been found in this document.');
                  }
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: id
          description: <span data-ttu-id="cac94-118">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="cac94-118">Required.</span></span> <span data-ttu-id="cac94-119">Eine Inhaltssteuerelement-ID.</span><span class="sxs-lookup"><span data-stu-id="cac94-119">A content control identifier.</span></span>
          type:
            - number
  - uid: 'word!Word.ContentControlCollection#getByTag:member(1)'
    summary: |-
      <span data-ttu-id="cac94-120">Ruft die Inhaltssteuerelemente ab, die das angegebene Tag enthalten.</span><span class="sxs-lookup"><span data-stu-id="cac94-120">Gets the content controls that have the specified tag.</span></span>

      <span data-ttu-id="cac94-121">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cac94-121">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getByTag(tag)
    fullName: getByTag(tag)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getByTag(tag: string): Word.ContentControlCollection;'
      return:
        type:
          - 'word!Word.ContentControlCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="cac94-122">Beispiele</span><span class="sxs-lookup"><span data-stu-id="cac94-122">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the content controls collection that contains a specific tag.
              var contentControlsWithTag = context.document.contentControls.getByTag('Customer-Address');

              // Queue a command to load the text property for all of content controls with a specific tag.
              context.load(contentControlsWithTag, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControlsWithTag.items.length === 0) {
                      console.log("There isn't a content control with a tag of Customer-Address in this document.");
                  } else {
                      console.log(
                          'The first content control with the tag of Customer-Address has this text: ' + 
                          contentControlsWithTag.items[0].text);
                  }

              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // The Word-Add-in-DocumentAssembly sample has another example of using the getByTag method.
          // https://github.com/OfficeDev/Word-Add-in-DocumentAssembly
          ```
          ```typescript
          await Word.run(async (context) => {
              let contentControls = context.document.contentControls.getByTag("customer");
              contentControls.load("text");

              await context.sync();

              for (let i = 0; i < contentControls.items.length; i++) {
                contentControls.items[i].insertText("Fabrikam", "Replace");
              }

              await context.sync();
          });
          ```
      parameters:
        - id: tag
          description: <span data-ttu-id="cac94-123">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="cac94-123">Required.</span></span> <span data-ttu-id="cac94-124">Ein für ein Inhaltssteuerelement festgelegtes Tag.</span><span class="sxs-lookup"><span data-stu-id="cac94-124">A tag set on a content control.</span></span>
          type:
            - string
  - uid: 'word!Word.ContentControlCollection#getByTitle:member(1)'
    summary: |-
      <span data-ttu-id="cac94-125">Ruft die Inhaltssteuerelemente ab, die den angegebenen Titel enthalten.</span><span class="sxs-lookup"><span data-stu-id="cac94-125">Gets the content controls that have the specified title.</span></span>

      <span data-ttu-id="cac94-126">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cac94-126">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getByTitle(title)
    fullName: getByTitle(title)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getByTitle(title: string): Word.ContentControlCollection;'
      return:
        type:
          - 'word!Word.ContentControlCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="cac94-127">Beispiele</span><span class="sxs-lookup"><span data-stu-id="cac94-127">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the content controls collection that contains a specific title.
              var contentControlsWithTitle = context.document.contentControls.getByTitle('Enter Customer Address Here');

              // Queue a command to load the text property for all of content controls with a specific title.
              context.load(contentControlsWithTitle, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControlsWithTitle.items.length === 0) {
                      console.log(
                          "There isn't a content control with a title of 'Enter Customer Address Here' in this document.");
                  } else {
                      console.log(
                          "The first content control with the title of 'Enter Customer Address Here' has this text: " + 
                          contentControlsWithTitle.items[0].text);
                  }

              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // The Word-Add-in-DocumentAssembly sample has another example of using the getByTitle method.
          // https://github.com/OfficeDev/Word-Add-in-DocumentAssembly
          ```
      parameters:
        - id: title
          description: <span data-ttu-id="cac94-128">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="cac94-128">Required.</span></span> <span data-ttu-id="cac94-129">Der Titel eines Inhaltssteuerelements.</span><span class="sxs-lookup"><span data-stu-id="cac94-129">The title of a content control.</span></span>
          type:
            - string
  - uid: 'word!Word.ContentControlCollection#getByTypes:member(1)'
    summary: |-
      <span data-ttu-id="cac94-130">Ruft die Inhaltssteuerelemente mit den angegebenen Typen und/oder Untertypen ab.</span><span class="sxs-lookup"><span data-stu-id="cac94-130">Gets the content controls that have the specified types and/or subtypes.</span></span>

      <span data-ttu-id="cac94-131">\[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cac94-131">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getByTypes(types)
    fullName: getByTypes(types)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getByTypes(types: Word.ContentControlType[]): Word.ContentControlCollection;'
      return:
        type:
          - 'word!Word.ContentControlCollection:class'
        description: ''
      parameters:
        - id: types
          description: <span data-ttu-id="cac94-132">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="cac94-132">Required.</span></span> <span data-ttu-id="cac94-133">Ein Array von inhaltssteuerelementtypen und/oder Untertypen.</span><span class="sxs-lookup"><span data-stu-id="cac94-133">An array of content control types and/or subtypes.</span></span>
          type:
            - 'word!Word.ContentControlCollection#getByTypes~0:complex'
  - uid: 'word!Word.ContentControlCollection#getFirst:member(1)'
    summary: |-
      <span data-ttu-id="cac94-134">Ruft das erste Inhaltssteuerelement in dieser Sammlung ab.</span><span class="sxs-lookup"><span data-stu-id="cac94-134">Gets the first content control in this collection.</span></span> <span data-ttu-id="cac94-135">Löst, wenn diese Auflistung leer ist.</span><span class="sxs-lookup"><span data-stu-id="cac94-135">Throws if this collection is empty.</span></span>

      <span data-ttu-id="cac94-136">\[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cac94-136">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getFirst()
    fullName: getFirst()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFirst(): Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="cac94-137">Beispiele</span><span class="sxs-lookup"><span data-stu-id="cac94-137">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Create a proxy object for the first content control in the document.
              var contentControl = context.document.contentControls.getFirstOrNullObject();

              // Queue a command to load the text property for a content control.
              context.load(contentControl, 'text');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  if (contentControl.isNullObject) {
                      console.log('There are no content controls in this document.')
                  } else {
                      console.log('The first content control has been found in this document.');
                  }
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'word!Word.ContentControlCollection#getFirstOrNullObject:member(1)'
    summary: |-
      <span data-ttu-id="cac94-138">Ruft das erste Inhaltssteuerelement in dieser Sammlung ab.</span><span class="sxs-lookup"><span data-stu-id="cac94-138">Gets the first content control in this collection.</span></span> <span data-ttu-id="cac94-139">Gibt ein NULL-Objekt zurück, wenn diese Auflistung leer ist.</span><span class="sxs-lookup"><span data-stu-id="cac94-139">Returns a null object if this collection is empty.</span></span>

      <span data-ttu-id="cac94-140">\[[API-Gruppe: WordApi 1,3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cac94-140">\[ [API set: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getFirstOrNullObject()
    fullName: getFirstOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFirstOrNullObject(): Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
        description: ''
  - uid: 'word!Word.ContentControlCollection#getItem:member(1)'
    summary: |-
      <span data-ttu-id="cac94-141">Ruft ein Inhaltssteuerelement nach dem Index in der Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="cac94-141">Gets a content control by its index in the collection.</span></span>

      <span data-ttu-id="cac94-142">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cac94-142">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getItem(index)
    fullName: getItem(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(index: number): Word.ContentControl;'
      return:
        type:
          - 'word!Word.ContentControl:class'
        description: ''
      parameters:
        - id: index
          description: <span data-ttu-id="cac94-143">Der Index.</span><span class="sxs-lookup"><span data-stu-id="cac94-143">The index.</span></span>
          type:
            - number
  - uid: 'word!Word.ContentControlCollection#items:member'
    summary: <span data-ttu-id="cac94-144">Ruft die geladenen untergeordneten Elemente in dieser Sammlung ab.</span><span class="sxs-lookup"><span data-stu-id="cac94-144">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Word.ContentControl[];'
      return:
        type:
          - 'word!Word.ContentControlCollection#items~0:complex'
  - uid: 'word!Word.ContentControlCollection#load:member(1)'
    summary: <span data-ttu-id="cac94-145">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="cac94-145">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="cac94-146">Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.</span><span class="sxs-lookup"><span data-stu-id="cac94-146">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="cac94-147">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="cac94-147">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="cac94-148">`load(option?: string | string[]): Word.ContentControlCollection`-Wobei Option eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="cac94-148">`load(option?: string | string[]): Word.ContentControlCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="cac94-149">`load(option?: { select?: string; expand?: string; }): Word.ContentControlCollection`-Bei Option. Select handelt es sich um eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="cac94-149">`load(option?: { select?: string; expand?: string; }): Word.ContentControlCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="cac94-150">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.ContentControlCollection`Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="cac94-150">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.ContentControlCollection` - Only available on collection types.</span></span> <span data-ttu-id="cac94-151">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="cac94-151">It is similar to the preceding signature.</span></span> <span data-ttu-id="cac94-152">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis einbezogen werden können.</span><span class="sxs-lookup"><span data-stu-id="cac94-152">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="cac94-153">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="cac94-153">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="cac94-154">Wenn Option. Top angegeben ist, wird das Resultset gestartet, nachdem die angegebene Anzahl von Elementen übersprungen wurde.</span><span class="sxs-lookup"><span data-stu-id="cac94-154">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

      #### <a name="examples"></a><span data-ttu-id="cac94-155">Beispiele</span><span class="sxs-lookup"><span data-stu-id="cac94-155">Examples</span></span>

      ```javascript
      // Run a batch operation against the Word object model.
      Word.run(function (context) {

          // Create a proxy object for the content controls collection.
          var contentControls = context.document.contentControls;

          // Queue a command to load the id property for all of the content controls.
          context.load(contentControls, 'id');

          // Synchronize the document state by executing the queued commands,
          // and return a promise to indicate task completion.
          return context.sync().then(function () {
              if (contentControls.items.length === 0) {
                  console.log('No content control found.');
              }
              else {
                  // Queue a command to load the properties on the first content control.
                  contentControls.items[0].load(  'appearance,' +
                                                  'cannotDelete,' +
                                                  'cannotEdit,' +
                                                  'id,' +
                                                  'placeHolderText,' +
                                                  'removeWhenEdited,' +
                                                  'title,' +
                                                  'text,' +
                                                  'type,' +
                                                  'style,' +
                                                  'tag,' +
                                                  'font/size,' +
                                                  'font/name,' +
                                                  'font/color');

                  // Synchronize the document state by executing the queued commands,
                  // and return a promise to indicate task completion.
                  return context.sync()
                      .then(function () {
                          console.log('Property values of the first content control:' +
                              '   ----- appearance: ' + contentControls.items[0].appearance +
                              '   ----- cannotDelete: ' + contentControls.items[0].cannotDelete +
                              '   ----- cannotEdit: ' + contentControls.items[0].cannotEdit +
                              '   ----- color: ' + contentControls.items[0].color +
                              '   ----- id: ' + contentControls.items[0].id +
                              '   ----- placeHolderText: ' + contentControls.items[0].placeholderText +
                              '   ----- removeWhenEdited: ' + contentControls.items[0].removeWhenEdited +
                              '   ----- title: ' + contentControls.items[0].title +
                              '   ----- text: ' + contentControls.items[0].text +
                              '   ----- type: ' + contentControls.items[0].type +
                              '   ----- style: ' + contentControls.items[0].style +
                              '   ----- tag: ' + contentControls.items[0].tag +
                              '   ----- font size: ' + contentControls.items[0].font.size +
                              '   ----- font name: ' + contentControls.items[0].font.name +
                              '   ----- font color: ' + contentControls.items[0].font.color);
                  });
              }
          });
      })
      .catch(function (error) {
          console.log('Error: ' + JSON.stringify(error));
          if (error instanceof OfficeExtension.Error) {
              console.log('Debug info: ' + JSON.stringify(error.debugInfo));
          }
      });

      // The Silly stories add-in sample shows how the load method is used
      // to load the content control collection with the tag and title properties.
      // https://aka.ms/sillystorywordaddin
      ```
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.ContentControlCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions): Word.ContentControlCollection;'
      return:
        type:
          - 'word!Word.ContentControlCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'word!Word.ContentControlCollection#load~0:complex'
  - uid: 'word!Word.ContentControlCollection#load:member(2)'
    summary: <span data-ttu-id="cac94-156">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="cac94-156">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="cac94-157">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="cac94-157">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.ContentControlCollection;'
      return:
        type:
          - 'word!Word.ContentControlCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="cac94-158">Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="cac94-158">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'word!Word.ContentControlCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Word.ContentControlCollection;'
      return:
        type:
          - 'word!Word.ContentControlCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'word!OfficeExtension.LoadOption:interface'
  - uid: 'word!Word.ContentControlCollection#toJSON:member(1)'
    summary: '<span data-ttu-id="cac94-159">Überschreibt die `toJSON()` JavaScript-Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird.`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="cac94-159">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="cac94-160">.</span><span class="sxs-lookup"><span data-stu-id="cac94-160"></span></span> <span data-ttu-id="cac94-161">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="cac94-161"></span></span><!-- --><span data-ttu-id="cac94-162">wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche `Word.ContentControlCollection` Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`Word.Interfaces.ContentControlCollectionData`</span><span class="sxs-lookup"><span data-stu-id="cac94-162">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Word.ContentControlCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.ContentControlCollectionData`</span></span><!-- --><span data-ttu-id="cac94-163">), die ein "Items"-Array mit flachen Kopien aller geladenen Eigenschaften aus den Elementen der Auflistung enthält.</span><span class="sxs-lookup"><span data-stu-id="cac94-163">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.ContentControlCollectionData;'
      return:
        type:
          - 'word!Word.Interfaces.ContentControlCollectionData:interface'
        description: ''
  - uid: 'word!Word.ContentControlCollection#track:member(1)'
    summary: '<span data-ttu-id="cac94-164">Nachverfolgung des Objekts zwecks automatischer Anpassung auf der Grundlage der umgebenden Änderungen im Dokument.</span><span class="sxs-lookup"><span data-stu-id="cac94-164">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="cac94-165">Dieser Aufruf ist eine Kurzschreibweise für context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="cac94-165">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="cac94-166">Wenn Sie dieses Objekt übergreifend für ".sync"-Aufrufe und außerhalb der sequenziellen Ausführung eines ".run"-Stapels verwenden und beim Festlegen einer Eigenschaft oder Aufrufen einer Methode für das Objekt ein "InvalidObjectPath"-Fehler zurückgegeben wird, hätte das Objekt der nachverfolgten Objektsammlung hinzugefügt werden müssen, in der das Objekt ursprünglich erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="cac94-166">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.ContentControlCollection;'
      return:
        type:
          - 'word!Word.ContentControlCollection:class'
        description: ''
  - uid: 'word!Word.ContentControlCollection#untrack:member(1)'
    summary: '<span data-ttu-id="cac94-167">Gibt den diesem Objekt zugewiesenen Arbeitsspeicher frei, wenn das Objekt zuvor nachverfolgt wurde.</span><span class="sxs-lookup"><span data-stu-id="cac94-167">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="cac94-168">Dieser Aufruf stellt eine Kurzschreibweise für context.trackedObjects.remove(thisObject) dar.</span><span class="sxs-lookup"><span data-stu-id="cac94-168">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="cac94-169">Viele nachverfolgte Objekte verlangsamen die Ausführung der Hostanwendung, also achten Sie darauf, alle hinzugefügten Objekte nach abgeschlossener Verwendung freizugeben.</span><span class="sxs-lookup"><span data-stu-id="cac94-169">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="cac94-170">Sie müssen "context.sync()" aufrufen, damit die Freigabe des Arbeitsspeichers wirksam wird.</span><span class="sxs-lookup"><span data-stu-id="cac94-170">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.ContentControlCollection;'
      return:
        type:
          - 'word!Word.ContentControlCollection:class'
        description: ''
references:
  - uid: 'word!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'word!Word.RequestContext:class'
    name: RequestContext
  - uid: 'word!Word.ContentControl:class'
    name: Word.ContentControl
  - uid: 'word!Word.ContentControlCollection:class'
    name: Word.ContentControlCollection
  - uid: 'word!Word.ContentControlCollection#getByTypes~0:complex'
    name: 'Word.ContentControlType[]'
    fullName: 'Word.ContentControlType[]'
    spec.typeScript:
      - uid: 'word!Word.ContentControlType:enum'
        name: Word.ContentControlType
        fullName: Word.ContentControlType
      - name: '[]'
        fullName: '[]'
  - uid: 'word!Word.ContentControlCollection#items~0:complex'
    name: 'Word.ContentControl[]'
    fullName: 'Word.ContentControl[]'
    spec.typeScript:
      - uid: 'word!Word.ContentControl:class'
        name: Word.ContentControl
        fullName: Word.ContentControl
      - name: '[]'
        fullName: '[]'
  - uid: 'word!Word.ContentControlCollection#load~0:complex'
    name: Word.Interfaces.ContentControlCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions
    fullName: Word.Interfaces.ContentControlCollectionLoadOptions & Word.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'word!Word.Interfaces.ContentControlCollectionLoadOptions:interface'
        name: Word.Interfaces.ContentControlCollectionLoadOptions
        fullName: Word.Interfaces.ContentControlCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'word!Word.Interfaces.CollectionLoadOptions:interface'
        name: Word.Interfaces.CollectionLoadOptions
        fullName: Word.Interfaces.CollectionLoadOptions
  - uid: 'word!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'word!Word.Interfaces.ContentControlCollectionData:interface'
    name: Word.Interfaces.ContentControlCollectionData