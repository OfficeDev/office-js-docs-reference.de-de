### YamlMime:TSType
name: Word.Range
uid: word!Word.Range:class
package: word!
fullName: Word.Range
summary: >-
  Stellt einen zusammenhängenden Bereich in einem Dokument dar.


  \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: contentControls
  uid: word!Word.Range#contentControls:member
  package: word!
  fullName: contentControls
  summary: >-
    Ruft die Auflistung von Inhaltssteuerelementobjekten im Bereich ab. Schreibgeschützt.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly contentControls: Word.ContentControlCollection;'
    return:
      type: <xref uid="word!Word.ContentControlCollection:class" />
- name: context
  uid: word!Word.Range#context:member
  package: word!
  fullName: context
  summary: Der Dem Objekt zugeordnete Anforderungskontext. Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="word!Word.RequestContext:class" />
- name: font
  uid: word!Word.Range#font:member
  package: word!
  fullName: font
  summary: >-
    Ruft das Textformat des Bereichs ab. Verwenden Sie diese Option zum Abrufen und Festlegen des Schriftartnamens, der Größe, Farbe und anderer Eigenschaften. Schreibgeschützt.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly font: Word.Font;'
    return:
      type: <xref uid="word!Word.Font:class" />
- name: hyperlink
  uid: word!Word.Range#hyperlink:member
  package: word!
  fullName: hyperlink
  summary: >-
    Ruft den ersten Link in dem Bereich ab oder legt einen Link für den Bereich fest. Wenn Sie einen neuen Link für den Bereich festlegen, werden alle Links im Bereich gelöscht. Verwenden Sie ein ' \# ' , um den Adressteil vom optionalen Speicherortteil zu trennen.


    \[[API-Satz: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'hyperlink: string;'
    return:
      type: string
- name: inlinePictures
  uid: word!Word.Range#inlinePictures:member
  package: word!
  fullName: inlinePictures
  summary: >-
    Ruft die Sammlung von Inlinebildobjekten im Bereich ab. Schreibgeschützt.


    \[[API-Satz: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly inlinePictures: Word.InlinePictureCollection;'
    return:
      type: <xref uid="word!Word.InlinePictureCollection:class" />
- name: isEmpty
  uid: word!Word.Range#isEmpty:member
  package: word!
  fullName: isEmpty
  summary: >-
    Überprüft, ob die Länge des Bereichs 0 ist. Schreibgeschützt.


    \[[API-Satz: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly isEmpty: boolean;'
    return:
      type: boolean
- name: lists
  uid: word!Word.Range#lists:member
  package: word!
  fullName: lists
  summary: >-
    Ruft die Sammlung von Listenobjekten im Bereich ab. Schreibgeschützt.


    \[[API-Satz: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly lists: Word.ListCollection;'
    return:
      type: <xref uid="word!Word.ListCollection:class" />
- name: paragraphs
  uid: word!Word.Range#paragraphs:member
  package: word!
  fullName: paragraphs
  summary: >-
    Ruft die Auflistung von Absatzobjekten im Bereich ab. Schreibgeschützt.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly paragraphs: Word.ParagraphCollection;'
    return:
      type: <xref uid="word!Word.ParagraphCollection:class" />
- name: parentBody
  uid: word!Word.Range#parentBody:member
  package: word!
  fullName: parentBody
  summary: >-
    Ruft den übergeordneten Text des Bereichs ab. Schreibgeschützt.


    \[[API-Satz: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentBody: Word.Body;'
    return:
      type: <xref uid="word!Word.Body:class" />
- name: parentContentControl
  uid: word!Word.Range#parentContentControl:member
  package: word!
  fullName: parentContentControl
  summary: >-
    Ruft das Inhaltssteuerelement ab, das den Bereich enthält. Gibt einen Fehler zurück, wenn kein übergeordnetes Inhaltssteuerelement vor ist. Schreibgeschützt.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentContentControl: Word.ContentControl;'
    return:
      type: <xref uid="word!Word.ContentControl:class" />
- name: parentContentControlOrNullObject
  uid: word!Word.Range#parentContentControlOrNullObject:member
  package: word!
  fullName: parentContentControlOrNullObject
  summary: >-
    Ruft das Inhaltssteuerelement ab, das den Bereich enthält. Gibt ein Null-Objekt zurück, wenn kein übergeordnetes Inhaltssteuerelement vorkommt. Schreibgeschützt.


    \[[API-Satz: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentContentControlOrNullObject: Word.ContentControl;'
    return:
      type: <xref uid="word!Word.ContentControl:class" />
- name: parentTable
  uid: word!Word.Range#parentTable:member
  package: word!
  fullName: parentTable
  summary: >-
    Ruft die Tabelle ab, die den Bereich enthält. Gibt einen Fehler zurück, wenn er nicht in einer Tabelle enthalten ist. Schreibgeschützt.


    \[[API-Satz: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentTable: Word.Table;'
    return:
      type: <xref uid="word!Word.Table:class" />
- name: parentTableCell
  uid: word!Word.Range#parentTableCell:member
  package: word!
  fullName: parentTableCell
  summary: >-
    Ruft die Tabellenzelle ab, die den Bereich enthält. Gibt einen Fehler zurück, wenn er nicht in einer Tabellenzelle enthalten ist. Schreibgeschützt.


    \[[API-Satz: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentTableCell: Word.TableCell;'
    return:
      type: <xref uid="word!Word.TableCell:class" />
- name: parentTableCellOrNullObject
  uid: word!Word.Range#parentTableCellOrNullObject:member
  package: word!
  fullName: parentTableCellOrNullObject
  summary: >-
    Ruft die Tabellenzelle ab, die den Bereich enthält. Gibt ein NULL-Objekt zurück, wenn es nicht in einer Tabellenzelle enthalten ist. Schreibgeschützt.


    \[[API-Satz: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentTableCellOrNullObject: Word.TableCell;'
    return:
      type: <xref uid="word!Word.TableCell:class" />
- name: parentTableOrNullObject
  uid: word!Word.Range#parentTableOrNullObject:member
  package: word!
  fullName: parentTableOrNullObject
  summary: >-
    Ruft die Tabelle ab, die den Bereich enthält. Gibt ein NULL-Objekt zurück, wenn es nicht in einer Tabelle enthalten ist. Schreibgeschützt.


    \[[API-Satz: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly parentTableOrNullObject: Word.Table;'
    return:
      type: <xref uid="word!Word.Table:class" />
- name: style
  uid: word!Word.Range#style:member
  package: word!
  fullName: style
  summary: >-
    Ruft den Formatnamen für den Bereich ab oder legt den Namen fest. Verwenden Sie diese Eigenschaft für benutzerdefinierte Formatvorlagen und lokalisierte Formatvorlagennamen. Informationen zur Verwendung der integrierten Formatvorlagen, die zwischen Gebietsschemas portabel sind, finden Sie unter der Eigenschaft "styleBuiltIn".


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'style: string;'
    return:
      type: string
- name: styleBuiltIn
  uid: word!Word.Range#styleBuiltIn:member
  package: word!
  fullName: styleBuiltIn
  summary: >-
    Ruft den Namen der integrierten Formatvorlage für den Bereich ab oder legt ihn fest. Verwenden Sie diese Eigenschaft für integrierte Formatvorlagen, die zwischen Gebietsschemas portabel sind. Informationen zum Verwenden benutzerdefinierter Formatvorlagen oder lokalisierter Namen finden Sie unter der Eigenschaft "style".


    \[[API-Satz: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'styleBuiltIn: Word.Style | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6";'
    return:
      type: <xref uid="word!Word.Style:enum" /> | "Other" | "Normal" | "Heading1" | "Heading2" | "Heading3" | "Heading4" | "Heading5" | "Heading6" | "Heading7" | "Heading8" | "Heading9" | "Toc1" | "Toc2" | "Toc3" | "Toc4" | "Toc5" | "Toc6" | "Toc7" | "Toc8" | "Toc9" | "FootnoteText" | "Header" | "Footer" | "Caption" | "FootnoteReference" | "EndnoteReference" | "EndnoteText" | "Title" | "Subtitle" | "Hyperlink" | "Strong" | "Emphasis" | "NoSpacing" | "ListParagraph" | "Quote" | "IntenseQuote" | "SubtleEmphasis" | "IntenseEmphasis" | "SubtleReference" | "IntenseReference" | "BookTitle" | "Bibliography" | "TocHeading" | "TableGrid" | "PlainTable1" | "PlainTable2" | "PlainTable3" | "PlainTable4" | "PlainTable5" | "TableGridLight" | "GridTable1Light" | "GridTable1Light_Accent1" | "GridTable1Light_Accent2" | "GridTable1Light_Accent3" | "GridTable1Light_Accent4" | "GridTable1Light_Accent5" | "GridTable1Light_Accent6" | "GridTable2" | "GridTable2_Accent1" | "GridTable2_Accent2" | "GridTable2_Accent3" | "GridTable2_Accent4" | "GridTable2_Accent5" | "GridTable2_Accent6" | "GridTable3" | "GridTable3_Accent1" | "GridTable3_Accent2" | "GridTable3_Accent3" | "GridTable3_Accent4" | "GridTable3_Accent5" | "GridTable3_Accent6" | "GridTable4" | "GridTable4_Accent1" | "GridTable4_Accent2" | "GridTable4_Accent3" | "GridTable4_Accent4" | "GridTable4_Accent5" | "GridTable4_Accent6" | "GridTable5Dark" | "GridTable5Dark_Accent1" | "GridTable5Dark_Accent2" | "GridTable5Dark_Accent3" | "GridTable5Dark_Accent4" | "GridTable5Dark_Accent5" | "GridTable5Dark_Accent6" | "GridTable6Colorful" | "GridTable6Colorful_Accent1" | "GridTable6Colorful_Accent2" | "GridTable6Colorful_Accent3" | "GridTable6Colorful_Accent4" | "GridTable6Colorful_Accent5" | "GridTable6Colorful_Accent6" | "GridTable7Colorful" | "GridTable7Colorful_Accent1" | "GridTable7Colorful_Accent2" | "GridTable7Colorful_Accent3" | "GridTable7Colorful_Accent4" | "GridTable7Colorful_Accent5" | "GridTable7Colorful_Accent6" | "ListTable1Light" | "ListTable1Light_Accent1" | "ListTable1Light_Accent2" | "ListTable1Light_Accent3" | "ListTable1Light_Accent4" | "ListTable1Light_Accent5" | "ListTable1Light_Accent6" | "ListTable2" | "ListTable2_Accent1" | "ListTable2_Accent2" | "ListTable2_Accent3" | "ListTable2_Accent4" | "ListTable2_Accent5" | "ListTable2_Accent6" | "ListTable3" | "ListTable3_Accent1" | "ListTable3_Accent2" | "ListTable3_Accent3" | "ListTable3_Accent4" | "ListTable3_Accent5" | "ListTable3_Accent6" | "ListTable4" | "ListTable4_Accent1" | "ListTable4_Accent2" | "ListTable4_Accent3" | "ListTable4_Accent4" | "ListTable4_Accent5" | "ListTable4_Accent6" | "ListTable5Dark" | "ListTable5Dark_Accent1" | "ListTable5Dark_Accent2" | "ListTable5Dark_Accent3" | "ListTable5Dark_Accent4" | "ListTable5Dark_Accent5" | "ListTable5Dark_Accent6" | "ListTable6Colorful" | "ListTable6Colorful_Accent1" | "ListTable6Colorful_Accent2" | "ListTable6Colorful_Accent3" | "ListTable6Colorful_Accent4" | "ListTable6Colorful_Accent5" | "ListTable6Colorful_Accent6" | "ListTable7Colorful" | "ListTable7Colorful_Accent1" | "ListTable7Colorful_Accent2" | "ListTable7Colorful_Accent3" | "ListTable7Colorful_Accent4" | "ListTable7Colorful_Accent5" | "ListTable7Colorful_Accent6"
- name: tables
  uid: word!Word.Range#tables:member
  package: word!
  fullName: tables
  summary: >-
    Ruft die Sammlung von Tabellenobjekten im Bereich ab. Schreibgeschützt.


    \[[API-Satz: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly tables: Word.TableCollection;'
    return:
      type: <xref uid="word!Word.TableCollection:class" />
- name: text
  uid: word!Word.Range#text:member
  package: word!
  fullName: text
  summary: >-
    Ruft den Text des Bereichs ab. Schreibgeschützt.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly text: string;'
    return:
      type: string
methods:
- name: clear()
  uid: word!Word.Range#clear:member(1)
  package: word!
  fullName: clear()
  summary: >-
    Löscht den Inhalt des Bereichsobjekts. Der Benutzer kann den Rückgängig-Vorgang auf den gelöschten Inhalt durchführen.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'clear(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Queue a command to get the current selection and then\n    // create a proxy range object with the results.\n    var range = context.document.getSelection();\n\n    // Queue a command to clear the contents of the proxy range object.\n    range.clear();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Cleared the selection (range object)');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: compareLocationWith(range)
  uid: word!Word.Range#compareLocationWith:member(1)
  package: word!
  fullName: compareLocationWith(range)
  summary: >-
    Vergleicht die Position dieses Bereichs mit der eines anderen Bereichs.


    \[[API-Satz: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'compareLocationWith(range: Word.Range): OfficeExtension.ClientResult<Word.LocationRelation>;'
    parameters:
    - id: range
      description: Erforderlich. Der Bereich, der mit diesem Bereich verglichen werden soll.
      type: <xref uid="word!Word.Range:class" />
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;<xref uid="word!Word.LocationRelation:enum" />&gt;
      description: ''
- name: delete()
  uid: word!Word.Range#delete:member(1)
  package: word!
  fullName: delete()
  summary: >-
    Löscht den Bereich und seinen Inhalt aus dem Dokument.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'delete(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Queue a command to get the current selection and then\n    // create a proxy range object with the results.\n    var range = context.document.getSelection();\n\n    // Queue a command to delete the range object.\n    range.delete();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Deleted the selection (range object)');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: expandTo(range)
  uid: word!Word.Range#expandTo:member(1)
  package: word!
  fullName: expandTo(range)
  summary: >-
    Gibt einen neuen Bereich zurück, der diesen Bereich in beide Richtungen erweitert, um einen anderen Bereich zu überdecken. Dieser Bereich wird nicht geändert. Gibt einen Fehler zurück, wenn die beiden Bereiche keine Vereinigung haben.


    \[[API-Satz: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'expandTo(range: Word.Range): Word.Range;'
    parameters:
    - id: range
      description: Erforderlich. Ein weiterer Bereich.
      type: <xref uid="word!Word.Range:class" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: expandToOrNullObject(range)
  uid: word!Word.Range#expandToOrNullObject:member(1)
  package: word!
  fullName: expandToOrNullObject(range)
  summary: >-
    Gibt einen neuen Bereich zurück, der diesen Bereich in beide Richtungen erweitert, um einen anderen Bereich zu überdecken. Dieser Bereich wird nicht geändert. Gibt ein Null-Objekt zurück, wenn die beiden Bereiche keine Union haben.


    \[[API-Satz: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'expandToOrNullObject(range: Word.Range): Word.Range;'
    parameters:
    - id: range
      description: Erforderlich. Ein weiterer Bereich.
      type: <xref uid="word!Word.Range:class" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: getBookmarks(includeHidden, includeAdjacent)
  uid: word!Word.Range#getBookmarks:member(1)
  package: word!
  fullName: getBookmarks(includeHidden, includeAdjacent)
  summary: >-
    Ruft die Namen aller Lesezeichen im Bereich ab oder überlappend. Eine Textmarke wird ausgeblendet, wenn ihr Name mit dem Unterstrichzeichen beginnt.


    \[[API-Satz: WordApi BETA (NUR VORSCHAU)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'getBookmarks(includeHidden?: boolean, includeAdjacent?: boolean): OfficeExtension.ClientResult<string[]>;'
    parameters:
    - id: includeHidden
      description: Optional. Gibt an, ob ausgeblendete Lesezeichen hinzugefügt werden. Der Standardwert ist false, der angibt, dass die ausgeblendeten Lesezeichen ausgeschlossen werden.
      type: boolean
    - id: includeAdjacent
      description: Optional. Gibt an, ob Textmarken hinzugefügt werden sollen, die sich neben dem Bereich befinden. Der Standardwert ist false, der angibt, dass die angrenzenden Lesezeichen ausgeschlossen werden.
      type: boolean
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string[]&gt;
      description: ''
- name: getHtml()
  uid: word!Word.Range#getHtml:member(1)
  package: word!
  fullName: getHtml()
  summary: >-
    Ruft eine HTML-Darstellung des Bereichsobjekts ab. Wenn sie in einer Webseite oder einem HTML-Viewer gerendert werden, ist die Formatierung eine enge, aber nicht genaue Übereinstimmung mit der Formatierung des Dokuments. Diese Methode gibt nicht den exakt gleichen HTML-Code für dasselbe Dokument auf verschiedenen Plattformen (Windows, Mac, Word im Web usw.) zurück. Wenn Sie eine genaue Genauigkeit oder Konsistenz über mehrere Plattformen hinweg benötigen, verwenden und konvertieren Sie die `Range.getOoxml()` zurückgegebene XML in HTML.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getHtml(): OfficeExtension.ClientResult<string>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string&gt;
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Queue a command to get the current selection and then\n    // create a proxy range object with the results.\n    var range = context.document.getSelection();\n\n    // Queue a command to get the HTML of the current selection.\n    var html = range.getHtml();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('The HTML read from the document was: ' + html.value);\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getHyperlinkRanges()
  uid: word!Word.Range#getHyperlinkRanges:member(1)
  package: word!
  fullName: getHyperlinkRanges()
  summary: >-
    Ruft untergeordnete Linkbereiche innerhalb des Bereichs ab.


    \[[API-Satz: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getHyperlinkRanges(): Word.RangeCollection;'
    return:
      type: <xref uid="word!Word.RangeCollection:class" />
      description: ''
- name: getNextTextRange(endingMarks, trimSpacing)
  uid: word!Word.Range#getNextTextRange:member(1)
  package: word!
  fullName: getNextTextRange(endingMarks, trimSpacing)
  summary: >-
    Ruft den nächsten Textbereich mithilfe von Satzzeichen und/oder anderen Endzeichen ab. Gibt einen Fehler zurück, wenn dieser Textbereich der letzte ist.


    \[[API-Satz: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getNextTextRange(endingMarks: string[], trimSpacing?: boolean): Word.Range;'
    parameters:
    - id: endingMarks
      description: Erforderlich. Die Interpunktion markiert und/oder andere Endmarkierungen als Array von Zeichenfolgen.
      type: string[]
    - id: trimSpacing
      description: Optional. Gibt an, ob Abstandszeichen (Leerzeichen, Registerkarten, Spaltenumbrüche und Absatzendzeichen) vom Anfang und Ende des zurückgegebenen Bereichs entfernt werden sollen. Der Standardwert ist false, der angibt, dass Abstandszeichen am Anfang und Ende des Bereichs enthalten sind.
      type: boolean
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: getNextTextRangeOrNullObject(endingMarks, trimSpacing)
  uid: word!Word.Range#getNextTextRangeOrNullObject:member(1)
  package: word!
  fullName: getNextTextRangeOrNullObject(endingMarks, trimSpacing)
  summary: >-
    Ruft den nächsten Textbereich mithilfe von Satzzeichen und/oder anderen Endzeichen ab. Gibt ein Null-Objekt zurück, wenn dieser Textbereich der letzte ist.


    \[[API-Satz: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getNextTextRangeOrNullObject(endingMarks: string[], trimSpacing?: boolean): Word.Range;'
    parameters:
    - id: endingMarks
      description: Erforderlich. Die Interpunktion markiert und/oder andere Endmarkierungen als Array von Zeichenfolgen.
      type: string[]
    - id: trimSpacing
      description: Optional. Gibt an, ob Abstandszeichen (Leerzeichen, Registerkarten, Spaltenumbrüche und Absatzendzeichen) vom Anfang und Ende des zurückgegebenen Bereichs entfernt werden sollen. Der Standardwert ist false, der angibt, dass Abstandszeichen am Anfang und Ende des Bereichs enthalten sind.
      type: boolean
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: getOoxml()
  uid: word!Word.Range#getOoxml:member(1)
  package: word!
  fullName: getOoxml()
  summary: >-
    Ruft die OOXML-Darstellung des Bereichsobjekts ab.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;string&gt;
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Queue a command to get the current selection and then\n    // create a proxy range object with the results.\n    var range = context.document.getSelection();\n\n    // Queue a command to get the OOXML of the current selection.\n    var ooxml = range.getOoxml();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('The OOXML read from the document was:  ' + ooxml.value);\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: getRange(rangeLocation)
  uid: word!Word.Range#getRange:member(1)
  package: word!
  fullName: getRange(rangeLocation)
  summary: >-
    Klont den Bereich oder ruft den Anfangs- bzw. Endpunkt des Bereichs als neuen Bereich ab.


    \[[API-Satz: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRange(rangeLocation?: Word.RangeLocation): Word.Range;'
    parameters:
    - id: rangeLocation
      description: Optional. Der Bereichsspeicherort kann "Whole", "Start", "End", "After" oder "Content" sein.
      type: <xref uid="word!Word.RangeLocation:enum" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: getRange(rangeLocationString)
  uid: word!Word.Range#getRange:member(2)
  package: word!
  fullName: getRange(rangeLocationString)
  summary: >-
    Klont den Bereich oder ruft den Anfangs- bzw. Endpunkt des Bereichs als neuen Bereich ab.


    \[[API-Satz: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getRange(rangeLocationString?: "Whole" | "Start" | "End" | "Before" | "After" | "Content"): Word.Range;'
    parameters:
    - id: rangeLocationString
      description: Optional. Der Bereichsspeicherort kann "Whole", "Start", "End", "After" oder "Content" sein.
      type: "\"Whole\" | \"Start\" | \"End\" | \"Before\" | \"After\" | \"Content\""
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: getTextRanges(endingMarks, trimSpacing)
  uid: word!Word.Range#getTextRanges:member(1)
  package: word!
  fullName: getTextRanges(endingMarks, trimSpacing)
  summary: >-
    Ruft die untergeordneten Textbereiche im Bereich mithilfe von Satzzeichen und/oder anderen Endzeichen ab.


    \[[API-Satz: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getTextRanges(endingMarks: string[], trimSpacing?: boolean): Word.RangeCollection;'
    parameters:
    - id: endingMarks
      description: Erforderlich. Die Interpunktion markiert und/oder andere Endmarkierungen als Array von Zeichenfolgen.
      type: string[]
    - id: trimSpacing
      description: Optional. Gibt an, ob Abstandszeichen (Leerzeichen, Registerkarten, Spaltenumbrüche und Absatzendmarken) vom Anfang und Ende der bereiche, die in der Bereichssammlung zurückgegeben werden, geblendet werden sollen. Der Standardwert ist false, der angibt, dass Abstandszeichen am Anfang und Ende der Bereiche in der Bereichssammlung enthalten sind.
      type: boolean
    return:
      type: <xref uid="word!Word.RangeCollection:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/25-paragraph/get-paragraph-on-insertion-point.yaml\nawait Word.run(async (context) => {\n  // Gets the complete sentence (as range) associated with the insertion point.\n  let sentences = context.document\n    .getSelection()\n    .getTextRanges([\".\"] /* Using the \".\" as delimiter */, false /*means without trimming spaces*/);\n  sentences.load(\"$none\");\n  await context.sync();\n\n  // Expands the range to the end of the paragraph to get all the complete sentences.\n  let sentencesToTheEndOfParagraph = sentences.items[0]\n    .getRange()\n    .expandTo(\n      context.document\n        .getSelection()\n        .paragraphs.getFirst()\n        .getRange(\"End\")\n    )\n    .getTextRanges([\".\"], false /* Don't trim spaces*/);\n  sentencesToTheEndOfParagraph.load(\"text\");\n  await context.sync();\n\n  for (let i = 0; i < sentencesToTheEndOfParagraph.items.length; i++) {\n    console.log(sentencesToTheEndOfParagraph.items[i].text);\n  }\n});\n```"
- name: insertBookmark(name)
  uid: word!Word.Range#insertBookmark:member(1)
  package: word!
  fullName: insertBookmark(name)
  summary: >-
    Fügt eine Textmarke in den Bereich ein. Wenn eine Textmarke mit demselben Namen an einer anderen Stelle vorhanden ist, wird sie zuerst gelöscht.


    \[[API-Satz: WordApi BETA (NUR VORSCHAU)](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'insertBookmark(name: string): void;'
    parameters:
    - id: name
      description: Erforderlich. Der Textmarkenname, bei dem die Groß-/Kleinschreibung nicht beachtet wird. Wenn der Name mit einem Unterstrichzeichen beginnt, ist die Textmarke ausgeblendet.
      type: string
    return:
      type: void
      description: ''
- name: insertBreak(breakType, insertLocation)
  uid: word!Word.Range#insertBreak:member(1)
  package: word!
  fullName: insertBreak(breakType, insertLocation)
  summary: >-
    Fügt an der angegebenen Position im Hauptdokument einen Umbruch ein.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
    parameters:
    - id: breakType
      description: Erforderlich. Der hinzuzufügende Unterbrechungstyp.
      type: <xref uid="word!Word.BreakType:enum" />
    - id: insertLocation
      description: Erforderlich. Der Wert kann „Before“ oder „After“ lauten.
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: void
      description: ''
- name: insertBreak(breakTypeString, insertLocation)
  uid: word!Word.Range#insertBreak:member(2)
  package: word!
  fullName: insertBreak(breakTypeString, insertLocation)
  summary: >-
    Fügt an der angegebenen Position im Hauptdokument einen Umbruch ein.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
    parameters:
    - id: breakTypeString
      description: Erforderlich. Der hinzuzufügende Unterbrechungstyp.
      type: "\"Page\" | \"Next\" | \"SectionNext\" | \"SectionContinuous\" | \"SectionEven\" | \"SectionOdd\" | \"Line\""
    - id: insertLocation
      description: Erforderlich. Der Wert kann „Before“ oder „After“ lauten.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Queue a command to get the current selection and then\n    // create a proxy range object with the results.\n    var range = context.document.getSelection();\n\n    // Queue a command to insert a page break after the selected text.\n    range.insertBreak('page', 'After');\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Inserted a page break after the selected text.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertContentControl()
  uid: word!Word.Range#insertContentControl:member(1)
  package: word!
  fullName: insertContentControl()
  summary: >-
    Umschließt das Bereichsobjekt mit einem Rich-Text-Inhaltssteuerelement.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertContentControl(): Word.ContentControl;'
    return:
      type: <xref uid="word!Word.ContentControl:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/prod/samples/word/90-scenarios/doc-assembly.yaml\nawait Word.run(async (context) => {\n    let results = context.document.body.search(\"Contractor\");\n    results.load(\"font/bold\");\n\n    // Check to make sure these content controls haven't been added yet.\n    let customerContentControls = context.document.contentControls.getByTag(\"customer\");\n    customerContentControls.load(\"text\");\n    await context.sync();\n\n  if (customerContentControls.items.length === 0) {\n    for (var i = 0; i < results.items.length; i++) { \n        results.items[i].font.bold = true;\n        var cc = results.items[i].insertContentControl();\n        cc.tag = \"customer\";  // This value is used in the next step of this sample.\n        cc.title = \"Customer Name \" + i;\n    }\n  }\n    await context.sync();\n});\n```"
- name: insertFileFromBase64(base64File, insertLocation)
  uid: word!Word.Range#insertFileFromBase64:member(1)
  package: word!
  fullName: insertFileFromBase64(base64File, insertLocation)
  summary: >-
    Fügt an der angegebenen Position ein Dokument ein.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
    parameters:
    - id: base64File
      description: Erforderlich. Der base64-codierte Inhalt einer DOCX-Datei.
      type: string
    - id: insertLocation
      description: Erforderlich. Der Wert kann "Replace", "Start", "End", "Before" oder "After" sein.
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Queue a command to get the current selection and then\n    // create a proxy range object with the results.\n    var range = context.document.getSelection();\n\n    // Queue a command to insert base64 encoded .docx at the beginning of the range.\n    // You'll need to implement getBase64() to make this work.\n    range.insertFileFromBase64(getBase64(), Word.InsertLocation.start);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Added base64 encoded text to the beginning of the range.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertFileFromBase64(base64File, insertLocationString)
  uid: word!Word.Range#insertFileFromBase64:member(2)
  package: word!
  fullName: insertFileFromBase64(base64File, insertLocationString)
  summary: >-
    Fügt an der angegebenen Position ein Dokument ein.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    parameters:
    - id: base64File
      description: Erforderlich. Der base64-codierte Inhalt einer DOCX-Datei.
      type: string
    - id: insertLocationString
      description: Erforderlich. Der Wert kann "Replace", "Start", "End", "Before" oder "After" sein.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: insertHtml(html, insertLocation)
  uid: word!Word.Range#insertHtml:member(1)
  package: word!
  fullName: insertHtml(html, insertLocation)
  summary: >-
    Fügt an der angegebenen Position HTML-Code ein.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
    parameters:
    - id: html
      description: Erforderlich. Der eingefügte HTML-Code.
      type: string
    - id: insertLocation
      description: Erforderlich. Der Wert kann "Replace", "Start", "End", "Before" oder "After" sein.
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Queue a command to get the current selection and then\n    // create a proxy range object with the results.\n    var range = context.document.getSelection();\n\n    // Queue a command to insert HTML in to the beginning of the range.\n    range.insertHtml('<strong>This is text inserted with range.insertHtml()</strong>', Word.InsertLocation.start);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('HTML added to the beginning of the range.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertHtml(html, insertLocationString)
  uid: word!Word.Range#insertHtml:member(2)
  package: word!
  fullName: insertHtml(html, insertLocationString)
  summary: >-
    Fügt an der angegebenen Position HTML-Code ein.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    parameters:
    - id: html
      description: Erforderlich. Der eingefügte HTML-Code.
      type: string
    - id: insertLocationString
      description: Erforderlich. Der Wert kann "Replace", "Start", "End", "Before" oder "After" sein.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: insertInlinePictureFromBase64(base64EncodedImage, insertLocation)
  uid: word!Word.Range#insertInlinePictureFromBase64:member(1)
  package: word!
  fullName: insertInlinePictureFromBase64(base64EncodedImage, insertLocation)
  summary: >-
    Fügt an der angegebenen Position ein Bild ein.


    \[[API-Satz: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocation: Word.InsertLocation): Word.InlinePicture;'
    parameters:
    - id: base64EncodedImage
      description: Erforderlich. Das zu einfügende base64-codierte Bild.
      type: string
    - id: insertLocation
      description: Erforderlich. Der Wert kann "Replace", "Start", "End", "Before" oder "After" sein.
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.InlinePicture:class" />
      description: ''
- name: insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)
  uid: word!Word.Range#insertInlinePictureFromBase64:member(2)
  package: word!
  fullName: insertInlinePictureFromBase64(base64EncodedImage, insertLocationString)
  summary: >-
    Fügt an der angegebenen Position ein Bild ein.


    \[[API-Satz: WordApi 1.2](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertInlinePictureFromBase64(base64EncodedImage: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.InlinePicture;'
    parameters:
    - id: base64EncodedImage
      description: Erforderlich. Das zu einfügende base64-codierte Bild.
      type: string
    - id: insertLocationString
      description: Erforderlich. Der Wert kann "Replace", "Start", "End", "Before" oder "After" sein.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.InlinePicture:class" />
      description: ''
- name: insertOoxml(ooxml, insertLocation)
  uid: word!Word.Range#insertOoxml:member(1)
  package: word!
  fullName: insertOoxml(ooxml, insertLocation)
  summary: >-
    Fügt an der angegebenen Position OOXML-Code ein.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
    parameters:
    - id: ooxml
      description: Erforderlich. Der einzufügende OOXML-Code.
      type: string
    - id: insertLocation
      description: Erforderlich. Der Wert kann "Replace", "Start", "End", "Before" oder "After" sein.
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Queue a command to get the current selection and then\n    // create a proxy range object with the results.\n    var range = context.document.getSelection();\n\n    // Queue a command to insert OOXML in to the beginning of the range.\n    range.insertOoxml(\"<pkg:package xmlns:pkg='http://schemas.microsoft.com/office/2006/xmlPackage'><pkg:part pkg:name='/_rels/.rels' pkg:contentType='application/vnd.openxmlformats-package.relationships+xml' pkg:padding='512'><pkg:xmlData><Relationships xmlns='http://schemas.openxmlformats.org/package/2006/relationships'><Relationship Id='rId1' Type='http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument' Target='word/document.xml'/></Relationships></pkg:xmlData></pkg:part><pkg:part pkg:name='/word/document.xml' pkg:contentType='application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml'><pkg:xmlData><w:document xmlns:w='http://schemas.openxmlformats.org/wordprocessingml/2006/main' ><w:body><w:p><w:pPr><w:spacing w:before='360' w:after='0' w:line='480' w:lineRule='auto'/><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr></w:pPr><w:r><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr><w:t>This text has formatting directly applied to achieve its font size, color, line spacing, and paragraph spacing.</w:t></w:r></w:p></w:body></w:document></pkg:xmlData></pkg:part></pkg:package>\", Word.InsertLocation.start);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('OOXML added to the beginning of the range.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n\n// Read \"Create better add-ins for Word with Office Open XML\" for guidance on working with OOXML.\n// https://docs.microsoft.com/office/dev/add-ins/word/create-better-add-ins-for-word-with-office-open-xml\n```"
- name: insertOoxml(ooxml, insertLocationString)
  uid: word!Word.Range#insertOoxml:member(2)
  package: word!
  fullName: insertOoxml(ooxml, insertLocationString)
  summary: >-
    Fügt an der angegebenen Position OOXML-Code ein.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    parameters:
    - id: ooxml
      description: Erforderlich. Der einzufügende OOXML-Code.
      type: string
    - id: insertLocationString
      description: Erforderlich. Der Wert kann "Replace", "Start", "End", "Before" oder "After" sein.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: insertParagraph(paragraphText, insertLocation)
  uid: word!Word.Range#insertParagraph:member(1)
  package: word!
  fullName: insertParagraph(paragraphText, insertLocation)
  summary: >-
    Fügt an der angegebenen Position einen Absatz ein.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
    parameters:
    - id: paragraphText
      description: Erforderlich. Der einzufügende Absatztext.
      type: string
    - id: insertLocation
      description: Erforderlich. Der Wert kann „Before“ oder „After“ lauten.
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Paragraph:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Queue a command to get the current selection and then\n    // create a proxy range object with the results.\n    var range = context.document.getSelection();\n\n    // Queue a command to insert the paragraph after the range.\n    range.insertParagraph('Content of a new paragraph', Word.InsertLocation.after);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Paragraph added to the end of the range.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertParagraph(paragraphText, insertLocationString)
  uid: word!Word.Range#insertParagraph:member(2)
  package: word!
  fullName: insertParagraph(paragraphText, insertLocationString)
  summary: >-
    Fügt an der angegebenen Position einen Absatz ein.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
    parameters:
    - id: paragraphText
      description: Erforderlich. Der einzufügende Absatztext.
      type: string
    - id: insertLocationString
      description: Erforderlich. Der Wert kann „Before“ oder „After“ lauten.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Paragraph:class" />
      description: ''
- name: insertTable(rowCount, columnCount, insertLocation, values)
  uid: word!Word.Range#insertTable:member(1)
  package: word!
  fullName: insertTable(rowCount, columnCount, insertLocation, values)
  summary: >-
    Fügt eine Tabelle mit der angegebenen Anzahl von Zeilen und Spalten ein.


    \[[API-Satz: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertTable(rowCount: number, columnCount: number, insertLocation: Word.InsertLocation, values?: string[][]): Word.Table;'
    parameters:
    - id: rowCount
      description: Erforderlich. Die Anzahl der Zeilen in der Tabelle.
      type: number
    - id: columnCount
      description: Erforderlich. Die Anzahl der Spalten in der Tabelle.
      type: number
    - id: insertLocation
      description: Erforderlich. Der Wert kann „Before“ oder „After“ lauten.
      type: <xref uid="word!Word.InsertLocation:enum" />
    - id: values
      description: Optionales 2D-Array. Wenn die entsprechenden Zeichenfolgen im Array angegeben sind, werden die Zellen gefüllt.
      type: string[][]
    return:
      type: <xref uid="word!Word.Table:class" />
      description: ''
- name: insertTable(rowCount, columnCount, insertLocationString, values)
  uid: word!Word.Range#insertTable:member(2)
  package: word!
  fullName: insertTable(rowCount, columnCount, insertLocationString, values)
  summary: >-
    Fügt eine Tabelle mit der angegebenen Anzahl von Zeilen und Spalten ein.


    \[[API-Satz: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertTable(rowCount: number, columnCount: number, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace", values?: string[][]): Word.Table;'
    parameters:
    - id: rowCount
      description: Erforderlich. Die Anzahl der Zeilen in der Tabelle.
      type: number
    - id: columnCount
      description: Erforderlich. Die Anzahl der Spalten in der Tabelle.
      type: number
    - id: insertLocationString
      description: Erforderlich. Der Wert kann „Before“ oder „After“ lauten.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    - id: values
      description: Optionales 2D-Array. Wenn die entsprechenden Zeichenfolgen im Array angegeben sind, werden die Zellen gefüllt.
      type: string[][]
    return:
      type: <xref uid="word!Word.Table:class" />
      description: ''
- name: insertText(text, insertLocation)
  uid: word!Word.Range#insertText:member(1)
  package: word!
  fullName: insertText(text, insertLocation)
  summary: >-
    Fügt an der angegebenen Position Text ein.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
    parameters:
    - id: text
      description: Erforderlich. Der einzufügende Text.
      type: string
    - id: insertLocation
      description: Erforderlich. Der Wert kann "Replace", "Start", "End", "Before" oder "After" sein.
      type: <xref uid="word!Word.InsertLocation:enum" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Queue a command to get the current selection and then\n    // create a proxy range object with the results.\n    var range = context.document.getSelection();\n\n    // Queue a command to insert the paragraph at the end of the range.\n    range.insertText('New text inserted into the range.', Word.InsertLocation.end);\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Text added to the end of the range.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: insertText(text, insertLocationString)
  uid: word!Word.Range#insertText:member(2)
  package: word!
  fullName: insertText(text, insertLocationString)
  summary: >-
    Fügt an der angegebenen Position Text ein.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
    parameters:
    - id: text
      description: Erforderlich. Der einzufügende Text.
      type: string
    - id: insertLocationString
      description: Erforderlich. Der Wert kann "Replace", "Start", "End", "Before" oder "After" sein.
      type: "\"Before\" | \"After\" | \"Start\" | \"End\" | \"Replace\""
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: intersectWith(range)
  uid: word!Word.Range#intersectWith:member(1)
  package: word!
  fullName: intersectWith(range)
  summary: >-
    Gibt einen neuen Bereich als Schnittmenge dieses Bereichs mit einem anderen Bereich zurück. Dieser Bereich wird nicht geändert. Gibt einen Fehler zurück, wenn die beiden Bereiche nicht überlappen oder nebeneinander liegen.


    \[[API-Satz: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'intersectWith(range: Word.Range): Word.Range;'
    parameters:
    - id: range
      description: Erforderlich. Ein weiterer Bereich.
      type: <xref uid="word!Word.Range:class" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: intersectWithOrNullObject(range)
  uid: word!Word.Range#intersectWithOrNullObject:member(1)
  package: word!
  fullName: intersectWithOrNullObject(range)
  summary: >-
    Gibt einen neuen Bereich als Schnittmenge dieses Bereichs mit einem anderen Bereich zurück. Dieser Bereich wird nicht geändert. Gibt ein Null-Objekt zurück, wenn die beiden Bereiche nicht überlappen oder nebeneinander liegen.


    \[[API-Satz: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'intersectWithOrNullObject(range: Word.Range): Word.Range;'
    parameters:
    - id: range
      description: Erforderlich. Ein weiterer Bereich.
      type: <xref uid="word!Word.Range:class" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: load(options)
  uid: word!Word.Range#load:member(1)
  package: word!
  fullName: load(options)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Word.Interfaces.RangeLoadOptions): Word.Range;'
    parameters:
    - id: options
      description: Stellt Optionen für die Eigenschaften des zu ladenden Objekts zur Verfügung.
      type: <xref uid="word!Word.Interfaces.RangeLoadOptions:interface" />
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: load(propertyNames)
  uid: word!Word.Range#load:member(2)
  package: word!
  fullName: load(propertyNames)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Word.Range;'
    parameters:
    - id: propertyNames
      description: Eine durch Trennzeichen getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.
      type: string | string[]
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: word!Word.Range#load:member(3)
  package: word!
  fullName: load(propertyNamesAndPaths)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Word.Range;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` ist eine durch Trennzeichen getrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und eine durch Kommas getrennte Zeichenfolge, die die zu ladenden `propertyNamesAndPaths.expand` Navigationseigenschaften angibt.'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: search(searchText, searchOptions)
  uid: word!Word.Range#search:member(1)
  package: word!
  fullName: search(searchText, searchOptions)
  summary: >-
    Führt eine Suche mit den angegebenen SearchOptions für den Bereich des Bereichsobjekts aus. Die Suchergebnisse sind eine Sammlung von Bereichsobjekten.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      search(searchText: string, searchOptions?: Word.SearchOptions | {
                  ignorePunct?: boolean;
                  ignoreSpace?: boolean;
                  matchCase?: boolean;
                  matchPrefix?: boolean;
                  matchSuffix?: boolean;
                  matchWholeWord?: boolean;
                  matchWildcards?: boolean;
              }): Word.RangeCollection;
    parameters:
    - id: searchText
      description: Erforderlich. Der Suchtext.
      type: string
    - id: searchOptions
      description: Optional. Optionen für die Suche.
      type: >-
        <xref uid="word!Word.SearchOptions:class" /> | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }
    return:
      type: <xref uid="word!Word.RangeCollection:class" />
      description: ''
- name: select(selectionMode)
  uid: word!Word.Range#select:member(1)
  package: word!
  fullName: select(selectionMode)
  summary: >-
    Wählt und navigiert die Word-Benutzeroberfläche zu diesem Bereich.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'select(selectionMode?: Word.SelectionMode): void;'
    parameters:
    - id: selectionMode
      description: Optional. Der Auswahlmodus kann „Select“, „Start“ oder „End“ sein. „Select“ ist die Standardeinstellung.
      type: <xref uid="word!Word.SelectionMode:enum" />
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Queue a command to get the current selection and then\n    // create a proxy range object with the results.\n    var range = context.document.getSelection();\n\n    // Queue a command to insert HTML in to the beginning of the range.\n    range.insertHtml('<strong>This is text inserted with range.insertHtml()</strong>', Word.InsertLocation.start);\n\n    // Queue a command to select the HTML that was inserted.\n    range.select();\n\n    // Synchronize the document state by executing the queued commands,\n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Selected the range.');\n    });\n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: select(selectionModeString)
  uid: word!Word.Range#select:member(2)
  package: word!
  fullName: select(selectionModeString)
  summary: >-
    Wählt und navigiert die Word-Benutzeroberfläche zu diesem Bereich.


    \[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
    parameters:
    - id: selectionModeString
      description: Optional. Der Auswahlmodus kann „Select“, „Start“ oder „End“ sein. „Select“ ist die Standardeinstellung.
      type: "\"Select\" | \"Start\" | \"End\""
    return:
      type: void
      description: ''
- name: set(properties, options)
  uid: word!Word.Range#set:member(1)
  package: word!
  fullName: set(properties, options)
  summary: Legt mehrere Eigenschaften eines Objekts gleichzeitig fest. Sie können entweder ein einfaches Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs übergeben.
  remarks: >-
    Diese Methode verfügt über die folgende zusätzliche Signatur:


    `set(properties: Word.Range): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.RangeUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: Ein JavaScript-Objekt mit Eigenschaften, die isomorph zu den Eigenschaften des Objekts strukturiert sind, für das die Methode aufgerufen wird.
      type: <xref uid="word!Word.Interfaces.RangeUpdateData:interface" />
    - id: options
      description: Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften zu setzen.
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: word!Word.Range#set:member(2)
  package: word!
  fullName: set(properties)
  summary: Legt mehrere Eigenschaften für das Objekt gleichzeitig fest, basierend auf einem vorhandenen geladenen Objekt.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Word.Range): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="word!Word.Range:class" />
    return:
      type: void
      description: ''
- name: split(delimiters, multiParagraphs, trimDelimiters, trimSpacing)
  uid: word!Word.Range#split:member(1)
  package: word!
  fullName: split(delimiters, multiParagraphs, trimDelimiters, trimSpacing)
  summary: >-
    Teilt den Bereich mithilfe von Trennzeichen in untergeordnete Bereiche.


    \[[API-Satz: WordApi 1.3](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'split(delimiters: string[], multiParagraphs?: boolean, trimDelimiters?: boolean, trimSpacing?: boolean): Word.RangeCollection;'
    parameters:
    - id: delimiters
      description: Erforderlich. Die Trennzeichen als Array von Zeichenfolgen.
      type: string[]
    - id: multiParagraphs
      description: Optional. Gibt an, ob ein zurückgegebener untergeordneter Bereich mehrere Absätze abdecken kann. Der Standardwert ist false, was angibt, dass die Absatzgrenzen auch als Trennzeichen verwendet werden.
      type: boolean
    - id: trimDelimiters
      description: Optional. Gibt an, ob Trennzeichen aus den Bereichen in der Bereichssammlung zuschneiden werden. Default is false which indicates that the delimiters are included in the ranges returned in the range collection.
      type: boolean
    - id: trimSpacing
      description: Optional. Gibt an, ob Abstandszeichen (Leerzeichen, Registerkarten, Spaltenumbrüche und Absatzendmarken) vom Anfang und Ende der bereiche, die in der Bereichssammlung zurückgegeben werden, geblendet werden sollen. Der Standardwert ist false, der angibt, dass Abstandszeichen am Anfang und Ende der Bereiche in der Bereichssammlung enthalten sind.
      type: boolean
    return:
      type: <xref uid="word!Word.RangeCollection:class" />
      description: ''
- name: toJSON()
  uid: word!Word.Range#toJSON:member(1)
  package: word!
  fullName: toJSON()
  summary: 'Überschreibt die JavaScript-Methode, um eine nützlichere Ausgabe zu `toJSON()` bieten, wenn ein API-Objekt an übergeben wird `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->ruft wiederum die Methode `toJSON` des Objekts auf, das an das Objekt übergeben wird.) Während das ursprüngliche Word.Range-Objekt ein API-Objekt ist, gibt die Methode ein `toJSON` einfaches JavaScript-Objekt zurück (Typ: `Word.Interfaces.RangeData`<!-- -->), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.'
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Word.Interfaces.RangeData;'
    return:
      type: <xref uid="word!Word.Interfaces.RangeData:interface" />
      description: ''
- name: track()
  uid: word!Word.Range#track:member(1)
  package: word!
  fullName: track()
  summary: Nachverfolgung des Objekts zwecks automatischer Anpassung auf der Grundlage der umgebenden Änderungen im Dokument. Dieser Anruf ist eine Kurzhand für `context.trackedObjects.add(thisObject)`<!-- -->. Wenn Sie dieses Objekt für aufrufe und außerhalb der sequenziellen Ausführung eines Batches ".run" verwenden und beim Festlegen einer Eigenschaft oder aufrufen einer Methode für das Objekt den Fehler "InvalidObjectPath" erhalten, mussten Sie das Objekt der nachverfolgten Objektsammlung hinzugefügt haben, als das Objekt zum ersten Mal erstellt `.sync` wurde.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'track(): Word.Range;'
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
- name: untrack()
  uid: word!Word.Range#untrack:member(1)
  package: word!
  fullName: untrack()
  summary: Gibt den diesem Objekt zugewiesenen Arbeitsspeicher frei, wenn das Objekt zuvor nachverfolgt wurde. Dieser Anruf ist kurz `context.trackedObjects.remove(thisObject)`<!-- -->. Viele nachverfolgte Objekte verlangsamen die Ausführung der Hostanwendung, also achten Sie darauf, alle hinzugefügten Objekte nach abgeschlossener Verwendung freizugeben. Sie müssen aufrufen, `context.sync()` bevor die Speicherfreigabe wirksam wird.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'untrack(): Word.Range;'
    return:
      type: <xref uid="word!Word.Range:class" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: 1b05e3843f0a0cb2d42a9418bad691803099f9e6
  ms.sourcegitcommit: a8a86cfcaff5ad7dacc653d63502c76b1fedbebe
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 03/26/2021
  ms.locfileid: "51351634"
