### YamlMime:UniversalReference
ms.openlocfilehash: 5f2515572a153917a287b2c7d7b09f20bda41aaa
ms.sourcegitcommit: 2dcedf6deec4167dca476a42dad411e28cc92a97
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 01/23/2019
ms.locfileid: "29384685"
items:
- uid: word.Word.SearchOptions
  summary: >-
    <span data-ttu-id="9c727-101">Gibt die Optionen an, die in einem Suchvorgang eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="9c727-101">Specifies the options to be included in a search operation.</span></span>


    <span data-ttu-id="9c727-102">\[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9c727-102">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: Word.SearchOptions
  fullName: Word.SearchOptions
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: word
  children:
  - word.Word.SearchOptions.context
  - word.Word.SearchOptions.ignorePunct
  - word.Word.SearchOptions.ignoreSpace
  - word.Word.SearchOptions.load
  - word.Word.SearchOptions.matchCase
  - word.Word.SearchOptions.matchPrefix
  - word.Word.SearchOptions.matchSuffix
  - word.Word.SearchOptions.matchWholeWord
  - word.Word.SearchOptions.matchWildcards
  - word.Word.SearchOptions.matchWildCards
  - word.Word.SearchOptions.newObject
  - word.Word.SearchOptions.toJSON
- uid: word.Word.SearchOptions.context
  summary: <span data-ttu-id="9c727-103">Der Anforderungskontext-zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="9c727-103">The request context associated with the object.</span></span> <span data-ttu-id="9c727-104">Dadurch wird das Add-in Prozess mit der Office-hostanwendung Prozess verbunden.</span><span class="sxs-lookup"><span data-stu-id="9c727-104">This connects the add-in's process to the Office host application's process.</span></span>
  name: context
  fullName: context
  langs:
  - typeScript
  type: property
  syntax:
    content: 'context: RequestContext;'
    return:
      type:
      - RequestContext
- uid: word.Word.SearchOptions.ignorePunct
  summary: >-
    <span data-ttu-id="9c727-p102">Ruft einen Wert ab oder legt ihn fest, um anzugeben, dass alle Interpunktionszeichen zwischen Wörtern ignoriert werden sollen. Entspricht dem Kontrollkästchen Interpunktionszeichen ignorieren im Dialogfeld Suchen und Ersetzen.</span><span class="sxs-lookup"><span data-stu-id="9c727-p102">Gets or sets a value that indicates whether to ignore all punctuation characters between words. Corresponds to the Ignore punctuation check box in the Find and Replace dialog box.</span></span>


    <span data-ttu-id="9c727-107">\[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9c727-107">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: ignorePunct
  fullName: ignorePunct
  langs:
  - typeScript
  type: property
  syntax:
    content: 'ignorePunct: boolean;'
    return:
      type:
      - boolean
- uid: word.Word.SearchOptions.ignoreSpace
  summary: >-
    <span data-ttu-id="9c727-p103">Ruft einen Wert ab, der angibt, ob alle Leerzeichen zwischen Wörtern ignoriert werden sollen, oder legt diesen fest. Entspricht dem Kontrollkästchen „Leerraumzeichen ignorieren“ im Dialogfeld „Suchen und Ersetzen“.</span><span class="sxs-lookup"><span data-stu-id="9c727-p103">Gets or sets a value that indicates whether to ignore all whitespace between words. Corresponds to the Ignore whitespace characters check box in the Find and Replace dialog box.</span></span>


    <span data-ttu-id="9c727-110">\[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9c727-110">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: ignoreSpace
  fullName: ignoreSpace
  langs:
  - typeScript
  type: property
  syntax:
    content: 'ignoreSpace: boolean;'
    return:
      type:
      - boolean
- uid: word.Word.SearchOptions.load
  summary: <span data-ttu-id="9c727-111">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="9c727-111">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="9c727-112">Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="9c727-112">You must call "context.sync()" before reading the properties.</span></span>
  remarks: "<span data-ttu-id=\"9c727-113\">Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:</span><span class=\"sxs-lookup\"><span data-stu-id=\"9c727-113\">In addition to this signature, this method has the following signatures:</span></span>\n\n<span data-ttu-id=\"9c727-114\">`load(option?: { select?: string; expand?: string; }): Word.SearchOptions`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9c727-114\">`load(option?: { select?: string; expand?: string; }): Word.SearchOptions` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>\n\n<span data-ttu-id=\"9c727-115\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.SearchOptions`-Nur auf Auflistungstypen verfügbar.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9c727-115\">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.SearchOptions` - Only available on collection types.</span></span> <span data-ttu-id=\"9c727-116\">Es ist ähnlich wie die jeweils vorhergehende Signatur.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9c727-116\">It is similar to the preceding signature.</span></span> <span data-ttu-id=\"9c727-117\">Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9c727-117\">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id=\"9c727-118\">Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9c727-118\">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id=\"9c727-119\">Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.</span><span class=\"sxs-lookup\"><span data-stu-id=\"9c727-119\">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>\n#### <a name=\"examples\"></a><span data-ttu-id=\"9c727-120\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"9c727-120\">Examples</span></span>\n\n```javascript\n// Ignore punctuation search\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Queue a command to search the document and ignore punctuation.\n    var searchResults = context.document.body.search('video you', {ignorePunct: true});\n\n    // Queue a command to load the search results and get the font property values.\n    context.load(searchResults, 'font');\n    \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Found count: ' + searchResults.items.length);\n\n        // Queue a set of commands to change the font for each found item.\n        for (var i = 0; i < searchResults.items.length; i++) {\n            searchResults.items[i].font.color = 'purple';\n            searchResults.items[i].font.highlightColor = '#FFFF00'; //Yellow\n            searchResults.items[i].font.bold = true;\n        }\n        \n        // Synchronize the document state by executing the queued commands, \n        // and return a promise to indicate task completion.\n        return context.sync();\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Search based on a prefix\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Queue a command to search the document based on a prefix.\n    var searchResults = context.document.body.search('vid', {matchPrefix: true});\n\n    // Queue a command to load the search results and get the font property values.\n    context.load(searchResults, 'font');\n    \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Found count: ' + searchResults.items.length);\n\n        // Queue a set of commands to change the font for each found item.\n        for (var i = 0; i < searchResults.items.length; i++) {\n            searchResults.items[i].font.color = 'purple';\n            searchResults.items[i].font.highlightColor = '#FFFF00'; //Yellow\n            searchResults.items[i].font.bold = true;\n        }\n        \n        // Synchronize the document state by executing the queued commands, \n        // and return a promise to indicate task completion.\n        return context.sync();\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Search based on a suffix\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n\n    // Queue a command to search the document for any string of characters after 'ly'.\n    var searchResults = context.document.body.search('ly', {matchSuffix: true});\n\n    // Queue a command to load the search results and get the font property values.\n    context.load(searchResults, 'font');\n    \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Found count: ' + searchResults.items.length);\n\n        // Queue a set of commands to change the font for each found item.\n        for (var i = 0; i < searchResults.items.length; i++) {\n            searchResults.items[i].font.color = 'orange';\n            searchResults.items[i].font.highlightColor = 'black';\n            searchResults.items[i].font.bold = true;\n        }\n        \n        // Synchronize the document state by executing the queued commands, \n        // and return a promise to indicate task completion.\n        return context.sync();\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```\n```javascript\n// Search using a wildcard\n// Run a batch operation against the Word object model.\nWord.run(function (context) {\n    \n    // Queue a command to search the document with a wildcard\n    // for any string of characters that starts with 'to' and ends with 'n'.\n    var searchResults = context.document.body.search('to*n', {matchWildCards: true});\n\n    // Queue a command to load the search results and get the font property values.\n    context.load(searchResults, 'font');\n    \n    // Synchronize the document state by executing the queued commands, \n    // and return a promise to indicate task completion.\n    return context.sync().then(function () {\n        console.log('Found count: ' + searchResults.items.length);\n\n        // Queue a set of commands to change the font for each found item.\n        for (var i = 0; i < searchResults.items.length; i++) {\n            searchResults.items[i].font.color = 'purple';\n            searchResults.items[i].font.highlightColor = 'pink';\n            searchResults.items[i].font.bold = true;\n        }\n        \n        // Synchronize the document state by executing the queued commands, \n        // and return a promise to indicate task completion.\n        return context.sync();\n    });  \n})\n.catch(function (error) {\n    console.log('Error: ' + JSON.stringify(error));\n    if (error instanceof OfficeExtension.Error) {\n        console.log('Debug info: ' + JSON.stringify(error.debugInfo));\n    }\n});\n```"
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Word.SearchOptions;'
    return:
      type:
      - word.Word.SearchOptions
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="9c727-121">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="9c727-121">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: word.Word.SearchOptions.matchCase
  summary: >-
    <span data-ttu-id="9c727-122">Dient zum Abrufen oder Festlegen eines Werts, das angibt, ob zwischen Groß-und Kleinschreibung gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="9c727-122">Gets or sets a value that indicates whether to perform a case sensitive search.</span></span> <span data-ttu-id="9c727-123">Entspricht dem Kontrollkästchen Übereinstimmung Groß-/Kleinschreibung im Dialogfeld Suchen und ersetzen.</span><span class="sxs-lookup"><span data-stu-id="9c727-123">Corresponds to the Match case check box in the Find and Replace dialog box.</span></span>


    <span data-ttu-id="9c727-124">\[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9c727-124">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: matchCase
  fullName: matchCase
  langs:
  - typeScript
  type: property
  syntax:
    content: 'matchCase: boolean;'
    return:
      type:
      - boolean
- uid: word.Word.SearchOptions.matchPrefix
  summary: >-
    <span data-ttu-id="9c727-p107">Ruft einen Wert ab oder legt ihn fest, um anzugeben, ob Wörter beachtet werden sollen, die mit der Suchzeichenfolge beginnen. Entspricht dem Kontrollkästchen Präfix beachten im Dialogfeld Suchen und Ersetzen (Menü Bearbeiten).</span><span class="sxs-lookup"><span data-stu-id="9c727-p107">Gets or sets a value that indicates whether to match words that begin with the search string. Corresponds to the Match prefix check box in the Find and Replace dialog box.</span></span>


    <span data-ttu-id="9c727-127">\[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9c727-127">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: matchPrefix
  fullName: matchPrefix
  langs:
  - typeScript
  type: property
  syntax:
    content: 'matchPrefix: boolean;'
    return:
      type:
      - boolean
- uid: word.Word.SearchOptions.matchSuffix
  summary: >-
    <span data-ttu-id="9c727-p108">Ruft einen Wert ab oder legt ihn fest, um anzugeben, ob Wörter beachtet werden sollen, die mit der Suchzeichenfolge enden. Entspricht dem Kontrollkästchen Suffix beachten im Dialogfeld Suchen und Ersetzen.</span><span class="sxs-lookup"><span data-stu-id="9c727-p108">Gets or sets a value that indicates whether to match words that end with the search string. Corresponds to the Match suffix check box in the Find and Replace dialog box.</span></span>


    <span data-ttu-id="9c727-130">\[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9c727-130">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: matchSuffix
  fullName: matchSuffix
  langs:
  - typeScript
  type: property
  syntax:
    content: 'matchSuffix: boolean;'
    return:
      type:
      - boolean
- uid: word.Word.SearchOptions.matchWholeWord
  summary: >-
    <span data-ttu-id="9c727-p109">Ruft einen Wert ab oder legt ihn fest, um anzugeben, dass nur ganze Wörter und nicht nach Textelementen in längeren Wörtern gesucht werden soll. Entspricht dem Kontrollkästchen Nur ganzes Wort suchen im Dialogfeld Suchen und Ersetzen.</span><span class="sxs-lookup"><span data-stu-id="9c727-p109">Gets or sets a value that indicates whether to find operation only entire words, not text that is part of a larger word. Corresponds to the Find whole words only check box in the Find and Replace dialog box.</span></span>


    <span data-ttu-id="9c727-133">\[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9c727-133">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: matchWholeWord
  fullName: matchWholeWord
  langs:
  - typeScript
  type: property
  syntax:
    content: 'matchWholeWord: boolean;'
    return:
      type:
      - boolean
- uid: word.Word.SearchOptions.matchWildcards
  summary: >-
    <span data-ttu-id="9c727-p110">Ruft einen Wert ab oder legt ihn fest, um anzugeben, ob die Suche mithilfe von speziellen Suchoperatoren ausgeführt wird. Entspricht dem Kontrollkästchen Platzhalter verwenden im Dialogfeld Suchen und Ersetzen.</span><span class="sxs-lookup"><span data-stu-id="9c727-p110">Gets or sets a value that indicates whether the search will be performed using special search operators. Corresponds to the Use wildcards check box in the Find and Replace dialog box.</span></span>


    <span data-ttu-id="9c727-136">\[[API-Satz: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="9c727-136">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
  name: matchWildcards
  fullName: matchWildcards
  langs:
  - typeScript
  type: property
  syntax:
    content: 'matchWildcards: boolean;'
    return:
      type:
      - boolean
- uid: word.Word.SearchOptions.matchWildCards
  name: matchWildCards
  fullName: matchWildCards
  langs:
  - typeScript
  type: property
  syntax:
    content: 'matchWildCards: boolean;'
    return:
      type:
      - boolean
- uid: word.Word.SearchOptions.newObject
  summary: <span data-ttu-id="9c727-137">Erstellt eine neue Instanz des Word.SearchOptions-Objekts</span><span class="sxs-lookup"><span data-stu-id="9c727-137">Create a new instance of Word.SearchOptions object</span></span>
  name: newObject(context)
  fullName: newObject
  langs:
  - typeScript
  type: method
  syntax:
    content: 'static newObject(context: OfficeExtension.ClientRequestContext): Word.SearchOptions;'
    return:
      type:
      - word.Word.SearchOptions
      description: ''
    parameters:
    - id: context
      description: ''
      type:
      - office.OfficeExtension.ClientRequestContext
- uid: word.Word.SearchOptions.toJSON
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Word.Interfaces.SearchOptionsData;'
    return:
      type:
      - word.Word.Interfaces.SearchOptionsData
      description: ''
