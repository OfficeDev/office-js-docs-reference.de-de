### YamlMime:TSPackage
uid: word!
name: word
type: package
summary: ''
enums:
- word!Word.Alignment:enum
- word!Word.BodyType:enum
- word!Word.BorderLocation:enum
- word!Word.BorderType:enum
- word!Word.BreakType:enum
- word!Word.CellPaddingLocation:enum
- word!Word.ContentControlAppearance:enum
- word!Word.ContentControlType:enum
- word!Word.DocumentPropertyType:enum
- word!Word.ErrorCodes:enum
- word!Word.EventType:enum
- word!Word.FileContentFormat:enum
- word!Word.HeaderFooterType:enum
- word!Word.ImageFormat:enum
- word!Word.InsertLocation:enum
- word!Word.ListBullet:enum
- word!Word.ListLevelType:enum
- word!Word.ListNumbering:enum
- word!Word.LocationRelation:enum
- word!Word.RangeLocation:enum
- word!Word.SelectionMode:enum
- word!Word.Style:enum
- word!Word.TapObjectType:enum
- word!Word.UnderlineType:enum
- word!Word.VerticalAlignment:enum
classes:
- word!Word.Body:class
- word!Word.ContentControl:class
- word!Word.ContentControlCollection:class
- word!Word.Document:class
- word!Word.Font:class
- word!Word.InlinePicture:class
- word!Word.InlinePictureCollection:class
- word!Word.Paragraph:class
- word!Word.ParagraphCollection:class
- word!Word.Range:class
- word!Word.RangeCollection:class
- word!Word.RequestContext:class
- word!Word.SearchOptions:class
- word!Word.Section:class
- word!Word.SectionCollection:class
interfaces:
- word!Word.Interfaces.BodyData:interface
- word!Word.Interfaces.BodyLoadOptions:interface
- word!Word.Interfaces.BodyUpdateData:interface
- word!Word.Interfaces.CollectionLoadOptions:interface
- word!Word.Interfaces.ContentControlCollectionData:interface
- word!Word.Interfaces.ContentControlCollectionLoadOptions:interface
- word!Word.Interfaces.ContentControlCollectionUpdateData:interface
- word!Word.Interfaces.ContentControlData:interface
- word!Word.Interfaces.ContentControlLoadOptions:interface
- word!Word.Interfaces.ContentControlUpdateData:interface
- word!Word.Interfaces.CustomPropertyCollectionData:interface
- word!Word.Interfaces.CustomPropertyCollectionUpdateData:interface
- word!Word.Interfaces.CustomPropertyData:interface
- word!Word.Interfaces.CustomPropertyUpdateData:interface
- word!Word.Interfaces.DocumentCreatedData:interface
- word!Word.Interfaces.DocumentCreatedUpdateData:interface
- word!Word.Interfaces.DocumentData:interface
- word!Word.Interfaces.DocumentLoadOptions:interface
- word!Word.Interfaces.DocumentPropertiesData:interface
- word!Word.Interfaces.DocumentPropertiesUpdateData:interface
- word!Word.Interfaces.DocumentUpdateData:interface
- word!Word.Interfaces.FontData:interface
- word!Word.Interfaces.FontLoadOptions:interface
- word!Word.Interfaces.FontUpdateData:interface
- word!Word.Interfaces.InlinePictureCollectionData:interface
- word!Word.Interfaces.InlinePictureCollectionLoadOptions:interface
- word!Word.Interfaces.InlinePictureCollectionUpdateData:interface
- word!Word.Interfaces.InlinePictureData:interface
- word!Word.Interfaces.InlinePictureLoadOptions:interface
- word!Word.Interfaces.InlinePictureUpdateData:interface
- word!Word.Interfaces.ListCollectionData:interface
- word!Word.Interfaces.ListCollectionUpdateData:interface
- word!Word.Interfaces.ListData:interface
- word!Word.Interfaces.ListItemData:interface
- word!Word.Interfaces.ListItemUpdateData:interface
- word!Word.Interfaces.ParagraphCollectionData:interface
- word!Word.Interfaces.ParagraphCollectionLoadOptions:interface
- word!Word.Interfaces.ParagraphCollectionUpdateData:interface
- word!Word.Interfaces.ParagraphData:interface
- word!Word.Interfaces.ParagraphLoadOptions:interface
- word!Word.Interfaces.ParagraphUpdateData:interface
- word!Word.Interfaces.RangeCollectionData:interface
- word!Word.Interfaces.RangeCollectionLoadOptions:interface
- word!Word.Interfaces.RangeCollectionUpdateData:interface
- word!Word.Interfaces.RangeData:interface
- word!Word.Interfaces.RangeLoadOptions:interface
- word!Word.Interfaces.RangeUpdateData:interface
- word!Word.Interfaces.SearchOptionsData:interface
- word!Word.Interfaces.SearchOptionsLoadOptions:interface
- word!Word.Interfaces.SearchOptionsUpdateData:interface
- word!Word.Interfaces.SectionCollectionData:interface
- word!Word.Interfaces.SectionCollectionLoadOptions:interface
- word!Word.Interfaces.SectionCollectionUpdateData:interface
- word!Word.Interfaces.SectionData:interface
- word!Word.Interfaces.SectionLoadOptions:interface
- word!Word.Interfaces.SectionUpdateData:interface
- word!Word.Interfaces.TableBorderData:interface
- word!Word.Interfaces.TableBorderUpdateData:interface
- word!Word.Interfaces.TableCellCollectionData:interface
- word!Word.Interfaces.TableCellCollectionUpdateData:interface
- word!Word.Interfaces.TableCellData:interface
- word!Word.Interfaces.TableCellUpdateData:interface
- word!Word.Interfaces.TableCollectionData:interface
- word!Word.Interfaces.TableCollectionUpdateData:interface
- word!Word.Interfaces.TableData:interface
- word!Word.Interfaces.TableRowCollectionData:interface
- word!Word.Interfaces.TableRowCollectionUpdateData:interface
- word!Word.Interfaces.TableRowData:interface
- word!Word.Interfaces.TableRowUpdateData:interface
- word!Word.Interfaces.TableUpdateData:interface
functions:
- name: Word.run(objects, batch)
  uid: word!Word.run:function(1)
  package: word!
  summary: Führt ein Batchskript aus, das Aktionen für das Word-Objektmodell mithilfe des RequestContext-Objekts der zuvor erstellten API-Objekte ausführt.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'export function run<T>(objects: OfficeExtension.ClientObject[], batch: (context: Word.RequestContext) => Promise<T>): Promise<T>;'
    parameters:
    - id: objects
      description: Ein Array von zuvor erstellten API-Objekten. Das Array wird überprüft, um sicherzustellen, dass alle Objekte denselben Kontext aufweisen. Der Batch verwendet dieses freigegebene RequestContext, was bedeutet, dass alle Änderungen, die auf diese Objekte angewendet werden, von "context. Sync ()" übernommen werden.
      type: <xref uid="office!OfficeExtension.ClientObject:class" />[]
    - id: batch
      description: Eine Funktion, die ein RequestContext-Element einnimmt und eine Zusage zurückgibt (in der Regel nur das Ergebnis von "context. Sync ()"). Der context-Parameter vereinfacht Anforderungen an die Word-Anwendung. Da das Office-Add-in und die Word-Anwendung in zwei verschiedenen Prozessen ausgeführt werden, ist das RequestContext erforderlich, um Zugriff auf das Word-Objektmodell aus dem Add-in zu erhalten.
      type: '(context: <xref uid="word!Word.RequestContext:class" />) =&gt; Promise&lt;T&gt;'
    return:
      type: Promise&lt;T&gt;
      description: ''
- name: Word.run(object, batch)
  uid: word!Word.run:function(2)
  package: word!
  summary: Führt ein Batchskript aus, das Aktionen für das Word-Objektmodell ausführt, wobei das RequestContext-Objekt eines zuvor erstellten API-Objekts verwendet wird. Wenn das Promise-Objekt aufgelöst wird, werden alle nachverfolgten Objekte freigegeben, die während der Ausführung automatisch zugewiesen wurden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'export function run<T>(object: OfficeExtension.ClientObject, batch: (context: Word.RequestContext) => Promise<T>): Promise<T>;'
    parameters:
    - id: object
      description: Ein zuvor erstelltes API-Objekt. Der Batch verwendet dasselbe RequestContext wie das übergebene Objekt, was bedeutet, dass alle Änderungen, die auf das Objekt angewendet werden, von "context. Sync ()" übernommen werden.
      type: <xref uid="office!OfficeExtension.ClientObject:class" />
    - id: batch
      description: Eine Funktion, die ein RequestContext-Element einnimmt und eine Zusage zurückgibt (in der Regel nur das Ergebnis von "context. Sync ()"). Der context-Parameter vereinfacht Anforderungen an die Word-Anwendung. Da das Office-Add-in und die Word-Anwendung in zwei verschiedenen Prozessen ausgeführt werden, ist das RequestContext erforderlich, um Zugriff auf das Word-Objektmodell aus dem Add-in zu erhalten.
      type: '(context: <xref uid="word!Word.RequestContext:class" />) =&gt; Promise&lt;T&gt;'
    return:
      type: Promise&lt;T&gt;
      description: ''
- name: Word.run(batch)
  uid: word!Word.run:function(3)
  package: word!
  summary: Führt ein Batchskript aus, das Aktionen für das Word-Objektmodell mithilfe eines neuen RequestContext ausführt. Wenn das Promise-Objekt aufgelöst wird, werden alle nachverfolgten Objekte freigegeben, die während der Ausführung automatisch zugewiesen wurden.
  remarks: >-
    Zusätzlich zu dieser Signatur verfügt die Methode auch über die folgenden Signaturen, mit denen Sie den Anforderungskontext von zuvor erstellten Objekten fortsetzen können:


    Run <T> (Objekt: OfficeExtension. clientobject, Batch: (context: Word. RequestContext) =<!-- -->&gt; Promise <T> ): Zusage <T> ;


    Run <T> (Objects: OfficeExtension. clientobject \[ \] , Batch: (context: Word. RequestContext) =<!-- -->&gt; Promise <T> ): Zusage <T> ;
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'export function run<T>(batch: (context: Word.RequestContext) => Promise<T>): Promise<T>;'
    parameters:
    - id: batch
      description: Eine Funktion, die ein RequestContext-Element einnimmt und eine Zusage zurückgibt (in der Regel nur das Ergebnis von "context. Sync ()"). Der context-Parameter vereinfacht Anforderungen an die Word-Anwendung. Da das Office-Add-in und die Word-Anwendung in zwei verschiedenen Prozessen ausgeführt werden, ist das RequestContext erforderlich, um Zugriff auf das Word-Objektmodell aus dem Add-in zu erhalten.
      type: '(context: <xref uid="word!Word.RequestContext:class" />) =&gt; Promise&lt;T&gt;'
    return:
      type: Promise&lt;T&gt;
      description: ''
metadata:
  ms.openlocfilehash: c02c3844f164e7c7ce70a14f23d9eb8e20672b01
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49249001"
