### YamlMime:UniversalReference
items:
  - uid: word.Word.Range
    summary: |-
      <span data-ttu-id="13909-101">Stellt einen zusammenhängenden Bereich in einem Dokument dar.</span><span class="sxs-lookup"><span data-stu-id="13909-101">Represents a contiguous area in a document.</span></span>

      <span data-ttu-id="13909-102">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13909-102">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: Word.Range
    fullName: Word.Range
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: word
    children:
      - word.Word.Range.clear
      - word.Word.Range.contentControls
      - word.Word.Range.context
      - word.Word.Range.delete
      - word.Word.Range.font
      - word.Word.Range.getHtml
      - word.Word.Range.getOoxml
      - word.Word.Range.insertBreak
      - word.Word.Range.insertBreak_1
      - word.Word.Range.insertContentControl
      - word.Word.Range.insertFileFromBase64
      - word.Word.Range.insertFileFromBase64_1
      - word.Word.Range.insertHtml
      - word.Word.Range.insertHtml_1
      - word.Word.Range.insertOoxml
      - word.Word.Range.insertOoxml_1
      - word.Word.Range.insertParagraph
      - word.Word.Range.insertParagraph_1
      - word.Word.Range.insertText
      - word.Word.Range.insertText_1
      - word.Word.Range.load
      - word.Word.Range.load_1
      - word.Word.Range.load_2
      - word.Word.Range.paragraphs
      - word.Word.Range.parentContentControl
      - word.Word.Range.search
      - word.Word.Range.select
      - word.Word.Range.select_1
      - word.Word.Range.set
      - word.Word.Range.set_1
      - word.Word.Range.style
      - word.Word.Range.text
      - word.Word.Range.toJSON
      - word.Word.Range.track
      - word.Word.Range.untrack
  - uid: word.Word.Range.clear
    summary: |-
      <span data-ttu-id="13909-103">Löscht den Inhalt des Bereichsobjekts.</span><span class="sxs-lookup"><span data-stu-id="13909-103">Clears the contents of the range object.</span></span> <span data-ttu-id="13909-104">Der Benutzer kann den Rückgängig-Vorgang auf den gelöschten Inhalt durchführen.</span><span class="sxs-lookup"><span data-stu-id="13909-104">The user can perform the undo operation on the cleared content.</span></span>

      <span data-ttu-id="13909-105">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13909-105">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="13909-106">Beispiele</span><span class="sxs-lookup"><span data-stu-id="13909-106">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to clear the contents of the proxy range object.
              range.clear();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Cleared the selection (range object)');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word.Word.Range.contentControls
    summary: |-
      <span data-ttu-id="13909-107">Ruft die Auflistung der Inhaltssteuerelement-Objekte im Bereich ab.</span><span class="sxs-lookup"><span data-stu-id="13909-107">Gets the collection of content control objects in the range.</span></span> <span data-ttu-id="13909-108">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="13909-108">Read-only.</span></span>

      <span data-ttu-id="13909-109">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13909-109">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: contentControls
    fullName: contentControls
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly contentControls: Word.ContentControlCollection;'
      return:
        type:
          - word.Word.ContentControlCollection
  - uid: word.Word.Range.context
    summary: '<span data-ttu-id="13909-110">Der Anforderungskontext, der mit dem Objekt verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="13909-110">The request context associated with the object.</span></span> <span data-ttu-id="13909-111">Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="13909-111">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - word.Word.RequestContext
  - uid: word.Word.Range.delete
    summary: |-
      <span data-ttu-id="13909-112">Löscht den Bereich und seinen Inhalt aus dem Dokument.</span><span class="sxs-lookup"><span data-stu-id="13909-112">Deletes the range and its content from the document.</span></span>

      <span data-ttu-id="13909-113">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13909-113">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="13909-114">Beispiele</span><span class="sxs-lookup"><span data-stu-id="13909-114">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to delete the range object.
              range.delete();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Deleted the selection (range object)');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word.Word.Range.font
    summary: |-
      <span data-ttu-id="13909-115">Ruft das Textformat des Bereichs ab.</span><span class="sxs-lookup"><span data-stu-id="13909-115">Gets the text format of the range.</span></span> <span data-ttu-id="13909-116">Verwenden Sie diese Option zum Abrufen und Festlegen des Schriftartnamens, der Größe, Farbe und anderer Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="13909-116">Use this to get and set font name, size, color, and other properties.</span></span> <span data-ttu-id="13909-117">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="13909-117">Read-only.</span></span>

      <span data-ttu-id="13909-118">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13909-118">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: font
    fullName: font
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly font: Word.Font;'
      return:
        type:
          - word.Word.Font
  - uid: word.Word.Range.getHtml
    summary: |-
      <span data-ttu-id="13909-119">Ruft eine HTML-Darstellung des Range-Objekts ab.</span><span class="sxs-lookup"><span data-stu-id="13909-119">Gets an HTML representation of the range object.</span></span> <span data-ttu-id="13909-120">Wenn die Formatierung in einer Webseite oder einem HTML-Viewer gerendert wird, entspricht Sie der Formatierung des Dokuments, ist jedoch nicht genau.</span><span class="sxs-lookup"><span data-stu-id="13909-120">When rendered in a web page or HTML viewer, the formatting will be a close, but not exact, match to the formatting of the document.</span></span> <span data-ttu-id="13909-121">Diese Methode gibt nicht exakt denselben HTML-Code für dasselbe Dokument auf unterschiedlichen Plattformen (Windows, Mac usw.) zurück.</span><span class="sxs-lookup"><span data-stu-id="13909-121">This method does not return the exact same HTML for the same document on different platforms (Windows, Mac, etc.).</span></span> <span data-ttu-id="13909-122">Wenn Sie exakte Genauigkeit oder Konsistenz plattformübergreifend benötigen, verwenden `Range.getOoxml()` und konvertieren Sie den zurückgegebenen XML-Code in HTML.</span><span class="sxs-lookup"><span data-stu-id="13909-122">If you need exact fidelity, or consistency across platforms, use `Range.getOoxml()` and convert the returned XML to HTML.</span></span>

      <span data-ttu-id="13909-123">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13909-123">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getHtml()
    fullName: getHtml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHtml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="13909-124">Beispiele</span><span class="sxs-lookup"><span data-stu-id="13909-124">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to get the HTML of the current selection.
              var html = range.getHtml();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The HTML read from the document was: ' + html.value);
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word.Word.Range.getOoxml
    summary: |-
      <span data-ttu-id="13909-125">Ruft die OOXML-Darstellung des Bereichsobjekts ab.</span><span class="sxs-lookup"><span data-stu-id="13909-125">Gets the OOXML representation of the range object.</span></span>

      <span data-ttu-id="13909-126">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13909-126">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: getOoxml()
    fullName: getOoxml()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getOoxml(): OfficeExtension.ClientResult<string>;'
      return:
        type:
          - OfficeExtension.ClientResult<string>
        description: |-


          #### <a name="examples"></a><span data-ttu-id="13909-127">Beispiele</span><span class="sxs-lookup"><span data-stu-id="13909-127">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to get the OOXML of the current selection.
              var ooxml = range.getOoxml();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('The OOXML read from the document was:  ' + ooxml.value);
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: word.Word.Range.insertBreak
    summary: |-
      <span data-ttu-id="13909-128">Fügt an der angegebenen Position im Hauptdokument einen Umbruch ein.</span><span class="sxs-lookup"><span data-stu-id="13909-128">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="13909-129">Der insertLocation-Wert kann "Before" oder "After" lauten.</span><span class="sxs-lookup"><span data-stu-id="13909-129">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="13909-130">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13909-130">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakType, insertLocation)'
    fullName: 'insertBreak(breakType, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakType: Word.BreakType, insertLocation: Word.InsertLocation): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: breakType
          description: <span data-ttu-id="13909-131">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="13909-131">Required.</span></span> <span data-ttu-id="13909-132">Der hinzuzufügende Break-Typ.</span><span class="sxs-lookup"><span data-stu-id="13909-132">The break type to add.</span></span>
          type:
            - word.Word.BreakType
        - id: insertLocation
          description: <span data-ttu-id="13909-133">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="13909-133">Required.</span></span> <span data-ttu-id="13909-134">Der Wert kann „Before“ oder „After“ lauten.</span><span class="sxs-lookup"><span data-stu-id="13909-134">The value can be 'Before' or 'After'.</span></span>
          type:
            - word.Word.InsertLocation
  - uid: word.Word.Range.insertBreak_1
    summary: |-
      <span data-ttu-id="13909-135">Fügt an der angegebenen Position im Hauptdokument einen Umbruch ein.</span><span class="sxs-lookup"><span data-stu-id="13909-135">Inserts a break at the specified location in the main document.</span></span> <span data-ttu-id="13909-136">Der insertLocation-Wert kann "Before" oder "After" lauten.</span><span class="sxs-lookup"><span data-stu-id="13909-136">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="13909-137">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13909-137">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertBreak(breakTypeString, insertLocation)'
    fullName: 'insertBreak(breakTypeString, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertBreak(breakTypeString: "Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line", insertLocation: "Before" | "After" | "Start" | "End" | "Replace"): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="13909-138">Beispiele</span><span class="sxs-lookup"><span data-stu-id="13909-138">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to insert a page break after the selected text.
              range.insertBreak('page', 'After');

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Inserted a page break after the selected text.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: breakTypeString
          description: <span data-ttu-id="13909-139">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="13909-139">Required.</span></span> <span data-ttu-id="13909-140">Der hinzuzufügende Break-Typ.</span><span class="sxs-lookup"><span data-stu-id="13909-140">The break type to add.</span></span>
          type:
            - '"Page" | "Next" | "SectionNext" | "SectionContinuous" | "SectionEven" | "SectionOdd" | "Line"'
        - id: insertLocation
          description: <span data-ttu-id="13909-141">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="13909-141">Required.</span></span> <span data-ttu-id="13909-142">Der Wert kann „Before“ oder „After“ lauten.</span><span class="sxs-lookup"><span data-stu-id="13909-142">The value can be 'Before' or 'After'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.Range.insertContentControl
    summary: |-
      <span data-ttu-id="13909-143">Umschließt das Bereichsobjekt mit einem Rich-Text-Inhaltssteuerelement.</span><span class="sxs-lookup"><span data-stu-id="13909-143">Wraps the range object with a rich text content control.</span></span>

      <span data-ttu-id="13909-144">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13909-144">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: insertContentControl()
    fullName: insertContentControl()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertContentControl(): Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
        description: |-


          #### <a name="examples"></a><span data-ttu-id="13909-145">Beispiele</span><span class="sxs-lookup"><span data-stu-id="13909-145">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to insert a content control around the selected text,
              // and create a proxy content control object. We'll update the properties
              // on the content control.
              var myContentControl = range.insertContentControl();
              myContentControl.tag = "Customer-Address";
              myContentControl.title = "Enter Customer Address Here:";
              myContentControl.style = "Normal";
              myContentControl.insertText("One Microsoft Way, Redmond, WA 98052", 'Replace');
              myContentControl.cannotEdit = true;

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Wrapped a content control around the selected text.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```typescript
          await Word.run(async (context) => {
              let results = context.document.body.search("Contractor");
              results.load("font/bold");

              // Check to make sure these content controls haven't been added yet.
              let customerContentControls = context.document.contentControls.getByTag("customer");
              customerContentControls.load("text");
              await context.sync();

            if (customerContentControls.items.length === 0) {
              for (var i = 0; i < results.items.length; i++) { 
                  results.items[i].font.bold = true;
                  var cc = results.items[i].insertContentControl();
                  cc.tag = "customer";  // This value is used in the next step of this sample.
                  cc.title = "Customer Name " + i;
              }
            }
              await context.sync();
          });
          ```
  - uid: word.Word.Range.insertFileFromBase64
    summary: |-
      <span data-ttu-id="13909-146">Fügt an der angegebenen Position ein Dokument ein.</span><span class="sxs-lookup"><span data-stu-id="13909-146">Inserts a document at the specified location.</span></span> <span data-ttu-id="13909-147">Der insertLocation-Wert kann "Replace", "Start", "End", "Before" oder "After" lauten.</span><span class="sxs-lookup"><span data-stu-id="13909-147">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="13909-148">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13909-148">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocation)'
    fullName: 'insertFileFromBase64(base64File, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="13909-149">Beispiele</span><span class="sxs-lookup"><span data-stu-id="13909-149">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to insert base64 encoded .docx at the beginning of the range.
              // You'll need to implement getBase64() to make this work.
              range.insertFileFromBase64(getBase64(), Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Added base64 encoded text to the beginning of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: base64File
          description: <span data-ttu-id="13909-150">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="13909-150">Required.</span></span> <span data-ttu-id="13909-151">Der Base64-codierte Inhalt einer DOCX-Datei.</span><span class="sxs-lookup"><span data-stu-id="13909-151">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="13909-152">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="13909-152">Required.</span></span> <span data-ttu-id="13909-153">Der Wert kann "Replace", "Start", "End", "Before" oder "After" lauten.</span><span class="sxs-lookup"><span data-stu-id="13909-153">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - word.Word.InsertLocation
  - uid: word.Word.Range.insertFileFromBase64_1
    summary: |-
      <span data-ttu-id="13909-154">Fügt an der angegebenen Position ein Dokument ein.</span><span class="sxs-lookup"><span data-stu-id="13909-154">Inserts a document at the specified location.</span></span> <span data-ttu-id="13909-155">Der insertLocation-Wert kann "Replace", "Start", "End", "Before" oder "After" lauten.</span><span class="sxs-lookup"><span data-stu-id="13909-155">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="13909-156">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13909-156">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertFileFromBase64(base64File, insertLocationString)'
    fullName: 'insertFileFromBase64(base64File, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertFileFromBase64(base64File: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: ''
      parameters:
        - id: base64File
          description: <span data-ttu-id="13909-157">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="13909-157">Required.</span></span> <span data-ttu-id="13909-158">Der Base64-codierte Inhalt einer DOCX-Datei.</span><span class="sxs-lookup"><span data-stu-id="13909-158">The base64 encoded content of a .docx file.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="13909-159">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="13909-159">Required.</span></span> <span data-ttu-id="13909-160">Der Wert kann "Replace", "Start", "End", "Before" oder "After" lauten.</span><span class="sxs-lookup"><span data-stu-id="13909-160">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.Range.insertHtml
    summary: |-
      <span data-ttu-id="13909-161">Fügt an der angegebenen Position HTML-Code ein.</span><span class="sxs-lookup"><span data-stu-id="13909-161">Inserts HTML at the specified location.</span></span> <span data-ttu-id="13909-162">Der insertLocation-Wert kann "Replace", "Start", "End", "Before" oder "After" lauten.</span><span class="sxs-lookup"><span data-stu-id="13909-162">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="13909-163">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13909-163">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocation)'
    fullName: 'insertHtml(html, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="13909-164">Beispiele</span><span class="sxs-lookup"><span data-stu-id="13909-164">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to insert HTML in to the beginning of the range.
              range.insertHtml('<strong>This is text inserted with range.insertHtml()</strong>', Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('HTML added to the beginning of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: html
          description: '<span data-ttu-id="13909-165">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="13909-165">Required.</span></span> <span data-ttu-id="13909-166">Der HTML-Code, der eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="13909-166">The HTML to be inserted.</span></span>'
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="13909-167">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="13909-167">Required.</span></span> <span data-ttu-id="13909-168">Der Wert kann "Replace", "Start", "End", "Before" oder "After" lauten.</span><span class="sxs-lookup"><span data-stu-id="13909-168">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - word.Word.InsertLocation
  - uid: word.Word.Range.insertHtml_1
    summary: |-
      <span data-ttu-id="13909-169">Fügt an der angegebenen Position HTML-Code ein.</span><span class="sxs-lookup"><span data-stu-id="13909-169">Inserts HTML at the specified location.</span></span> <span data-ttu-id="13909-170">Der insertLocation-Wert kann "Replace", "Start", "End", "Before" oder "After" lauten.</span><span class="sxs-lookup"><span data-stu-id="13909-170">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="13909-171">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13909-171">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertHtml(html, insertLocationString)'
    fullName: 'insertHtml(html, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertHtml(html: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: ''
      parameters:
        - id: html
          description: '<span data-ttu-id="13909-172">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="13909-172">Required.</span></span> <span data-ttu-id="13909-173">Der HTML-Code, der eingefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="13909-173">The HTML to be inserted.</span></span>'
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="13909-174">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="13909-174">Required.</span></span> <span data-ttu-id="13909-175">Der Wert kann "Replace", "Start", "End", "Before" oder "After" lauten.</span><span class="sxs-lookup"><span data-stu-id="13909-175">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.Range.insertOoxml
    summary: |-
      <span data-ttu-id="13909-176">Fügt an der angegebenen Position OOXML-Code ein.</span><span class="sxs-lookup"><span data-stu-id="13909-176">Inserts OOXML at the specified location.</span></span> <span data-ttu-id="13909-177">Der insertLocation-Wert kann "Replace", "Start", "End", "Before" oder "After" lauten.</span><span class="sxs-lookup"><span data-stu-id="13909-177">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="13909-178">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13909-178">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocation)'
    fullName: 'insertOoxml(ooxml, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="13909-179">Beispiele</span><span class="sxs-lookup"><span data-stu-id="13909-179">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to insert OOXML in to the beginning of the range.
              range.insertOoxml("<pkg:package xmlns:pkg='http://schemas.microsoft.com/office/2006/xmlPackage'><pkg:part pkg:name='/_rels/.rels' pkg:contentType='application/vnd.openxmlformats-package.relationships+xml' pkg:padding='512'><pkg:xmlData><Relationships xmlns='http://schemas.openxmlformats.org/package/2006/relationships'><Relationship Id='rId1' Type='http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument' Target='word/document.xml'/></Relationships></pkg:xmlData></pkg:part><pkg:part pkg:name='/word/document.xml' pkg:contentType='application/vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml'><pkg:xmlData><w:document xmlns:w='http://schemas.openxmlformats.org/wordprocessingml/2006/main' ><w:body><w:p><w:pPr><w:spacing w:before='360' w:after='0' w:line='480' w:lineRule='auto'/><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr></w:pPr><w:r><w:rPr><w:color w:val='70AD47' w:themeColor='accent6'/><w:sz w:val='28'/></w:rPr><w:t>This text has formatting directly applied to achieve its font size, color, line spacing, and paragraph spacing.</w:t></w:r></w:p></w:body></w:document></pkg:xmlData></pkg:part></pkg:package>", Word.InsertLocation.start);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('OOXML added to the beginning of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });

          // Read "Create better add-ins for Word with Office Open XML" for guidance on working with OOXML.
          // https://docs.microsoft.com/office/dev/add-ins/word/create-better-add-ins-for-word-with-office-open-xml
          ```
      parameters:
        - id: ooxml
          description: <span data-ttu-id="13909-180">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="13909-180">Required.</span></span> <span data-ttu-id="13909-181">Der einzufügende OOXML-Code.</span><span class="sxs-lookup"><span data-stu-id="13909-181">The OOXML to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="13909-182">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="13909-182">Required.</span></span> <span data-ttu-id="13909-183">Der Wert kann "Replace", "Start", "End", "Before" oder "After" lauten.</span><span class="sxs-lookup"><span data-stu-id="13909-183">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - word.Word.InsertLocation
  - uid: word.Word.Range.insertOoxml_1
    summary: |-
      <span data-ttu-id="13909-184">Fügt an der angegebenen Position OOXML-Code ein.</span><span class="sxs-lookup"><span data-stu-id="13909-184">Inserts OOXML at the specified location.</span></span> <span data-ttu-id="13909-185">Der insertLocation-Wert kann "Replace", "Start", "End", "Before" oder "After" lauten.</span><span class="sxs-lookup"><span data-stu-id="13909-185">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="13909-186">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13909-186">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertOoxml(ooxml, insertLocationString)'
    fullName: 'insertOoxml(ooxml, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertOoxml(ooxml: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: ''
      parameters:
        - id: ooxml
          description: <span data-ttu-id="13909-187">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="13909-187">Required.</span></span> <span data-ttu-id="13909-188">Der einzufügende OOXML-Code.</span><span class="sxs-lookup"><span data-stu-id="13909-188">The OOXML to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="13909-189">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="13909-189">Required.</span></span> <span data-ttu-id="13909-190">Der Wert kann "Replace", "Start", "End", "Before" oder "After" lauten.</span><span class="sxs-lookup"><span data-stu-id="13909-190">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.Range.insertParagraph
    summary: |-
      <span data-ttu-id="13909-191">Fügt an der angegebenen Position einen Absatz ein.</span><span class="sxs-lookup"><span data-stu-id="13909-191">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="13909-192">Der insertLocation-Wert kann 'Before' oder 'After' lauten.</span><span class="sxs-lookup"><span data-stu-id="13909-192">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="13909-193">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13909-193">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocation)'
    fullName: 'insertParagraph(paragraphText, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocation: Word.InsertLocation): Word.Paragraph;'
      return:
        type:
          - word.Word.Paragraph
        description: |-


          #### <a name="examples"></a><span data-ttu-id="13909-194">Beispiele</span><span class="sxs-lookup"><span data-stu-id="13909-194">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to insert the paragraph after the range.
              range.insertParagraph('Content of a new paragraph', Word.InsertLocation.after);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Paragraph added to the end of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="13909-195">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="13909-195">Required.</span></span> <span data-ttu-id="13909-196">Der einzufügende Absatztext.</span><span class="sxs-lookup"><span data-stu-id="13909-196">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: <span data-ttu-id="13909-197">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="13909-197">Required.</span></span> <span data-ttu-id="13909-198">Der Wert kann „Before“ oder „After“ lauten.</span><span class="sxs-lookup"><span data-stu-id="13909-198">The value can be 'Before' or 'After'.</span></span>
          type:
            - word.Word.InsertLocation
  - uid: word.Word.Range.insertParagraph_1
    summary: |-
      <span data-ttu-id="13909-199">Fügt an der angegebenen Position einen Absatz ein.</span><span class="sxs-lookup"><span data-stu-id="13909-199">Inserts a paragraph at the specified location.</span></span> <span data-ttu-id="13909-200">Der insertLocation-Wert kann 'Before' oder 'After' lauten.</span><span class="sxs-lookup"><span data-stu-id="13909-200">The insertLocation value can be 'Before' or 'After'.</span></span>

      <span data-ttu-id="13909-201">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13909-201">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertParagraph(paragraphText, insertLocationString)'
    fullName: 'insertParagraph(paragraphText, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertParagraph(paragraphText: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Paragraph;'
      return:
        type:
          - word.Word.Paragraph
        description: ''
      parameters:
        - id: paragraphText
          description: <span data-ttu-id="13909-202">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="13909-202">Required.</span></span> <span data-ttu-id="13909-203">Der einzufügende Absatztext.</span><span class="sxs-lookup"><span data-stu-id="13909-203">The paragraph text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: <span data-ttu-id="13909-204">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="13909-204">Required.</span></span> <span data-ttu-id="13909-205">Der Wert kann „Before“ oder „After“ lauten.</span><span class="sxs-lookup"><span data-stu-id="13909-205">The value can be 'Before' or 'After'.</span></span>
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.Range.insertText
    summary: |-
      <span data-ttu-id="13909-206">Fügt an der angegebenen Position Text ein.</span><span class="sxs-lookup"><span data-stu-id="13909-206">Inserts text at the specified location.</span></span> <span data-ttu-id="13909-207">Der insertLocation-Wert kann "Replace", "Start", "End", "Before" oder "After" lauten.</span><span class="sxs-lookup"><span data-stu-id="13909-207">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="13909-208">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13909-208">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocation)'
    fullName: 'insertText(text, insertLocation)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocation: Word.InsertLocation): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: |-


          #### <a name="examples"></a><span data-ttu-id="13909-209">Beispiele</span><span class="sxs-lookup"><span data-stu-id="13909-209">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to insert the paragraph at the end of the range.
              range.insertText('New text inserted into the range.', Word.InsertLocation.end);

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Text added to the end of the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: text
          description: <span data-ttu-id="13909-210">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="13909-210">Required.</span></span> <span data-ttu-id="13909-211">Der einzufügende Text.</span><span class="sxs-lookup"><span data-stu-id="13909-211">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocation
          description: '<span data-ttu-id="13909-212">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="13909-212">Required.</span></span> <span data-ttu-id="13909-213">Der Wert kann "Replace", "Start", "End", "Before" oder "After" lauten.</span><span class="sxs-lookup"><span data-stu-id="13909-213">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - word.Word.InsertLocation
  - uid: word.Word.Range.insertText_1
    summary: |-
      <span data-ttu-id="13909-214">Fügt an der angegebenen Position Text ein.</span><span class="sxs-lookup"><span data-stu-id="13909-214">Inserts text at the specified location.</span></span> <span data-ttu-id="13909-215">Der insertLocation-Wert kann "Replace", "Start", "End", "Before" oder "After" lauten.</span><span class="sxs-lookup"><span data-stu-id="13909-215">The insertLocation value can be 'Replace', 'Start', 'End', 'Before', or 'After'.</span></span>

      <span data-ttu-id="13909-216">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13909-216">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'insertText(text, insertLocationString)'
    fullName: 'insertText(text, insertLocationString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'insertText(text: string, insertLocationString: "Before" | "After" | "Start" | "End" | "Replace"): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: ''
      parameters:
        - id: text
          description: <span data-ttu-id="13909-217">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="13909-217">Required.</span></span> <span data-ttu-id="13909-218">Der einzufügende Text.</span><span class="sxs-lookup"><span data-stu-id="13909-218">Text to be inserted.</span></span>
          type:
            - string
        - id: insertLocationString
          description: '<span data-ttu-id="13909-219">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="13909-219">Required.</span></span> <span data-ttu-id="13909-220">Der Wert kann "Replace", "Start", "End", "Before" oder "After" lauten.</span><span class="sxs-lookup"><span data-stu-id="13909-220">The value can be ''Replace'', ''Start'', ''End'', ''Before'', or ''After''.</span></span>'
          type:
            - '"Before" | "After" | "Start" | "End" | "Replace"'
  - uid: word.Word.Range.load
    summary: <span data-ttu-id="13909-221">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="13909-221">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="13909-222">Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.</span><span class="sxs-lookup"><span data-stu-id="13909-222">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="13909-223">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="13909-223">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="13909-224">`load(option?: string | string[]): Word.Range`-Wobei Option eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="13909-224">`load(option?: string | string[]): Word.Range` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="13909-225">`load(option?: { select?: string; expand?: string; }): Word.Range`-Bei Option. Select handelt es sich um eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="13909-225">`load(option?: { select?: string; expand?: string; }): Word.Range` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="13909-226">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Range`Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="13909-226">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Word.Range` - Only available on collection types.</span></span> <span data-ttu-id="13909-227">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="13909-227">It is similar to the preceding signature.</span></span> <span data-ttu-id="13909-228">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis einbezogen werden können.</span><span class="sxs-lookup"><span data-stu-id="13909-228">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="13909-229">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="13909-229">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="13909-230">Wenn Option. Top angegeben ist, wird das Resultset gestartet, nachdem die angegebene Anzahl von Elementen übersprungen wurde.</span><span class="sxs-lookup"><span data-stu-id="13909-230">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Word.Interfaces.RangeLoadOptions): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - word.Word.Interfaces.RangeLoadOptions
  - uid: word.Word.Range.load_1
    summary: <span data-ttu-id="13909-231">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="13909-231">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="13909-232">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="13909-232">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="13909-233">Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="13909-233">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: word.Word.Range.load_2
    summary: <span data-ttu-id="13909-234">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="13909-234">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="13909-235">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="13909-235">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="13909-236">Dabei ist propertyNamesAndPaths. Select eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="13909-236">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: word.Word.Range.paragraphs
    summary: |-
      <span data-ttu-id="13909-237">Ruft die Auflistung von Paragraph-Objekten im Bereich ab.</span><span class="sxs-lookup"><span data-stu-id="13909-237">Gets the collection of paragraph objects in the range.</span></span> <span data-ttu-id="13909-238">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="13909-238">Read-only.</span></span>

      <span data-ttu-id="13909-239">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13909-239">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: paragraphs
    fullName: paragraphs
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly paragraphs: Word.ParagraphCollection;'
      return:
        type:
          - word.Word.ParagraphCollection
  - uid: word.Word.Range.parentContentControl
    summary: |-
      <span data-ttu-id="13909-240">Ruft das Inhaltssteuerelement ab, das den Bereich enthält.</span><span class="sxs-lookup"><span data-stu-id="13909-240">Gets the content control that contains the range.</span></span> <span data-ttu-id="13909-241">Löst, wenn kein übergeordnetes Inhaltssteuerelement vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="13909-241">Throws if there isn't a parent content control.</span></span> <span data-ttu-id="13909-242">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="13909-242">Read-only.</span></span>

      <span data-ttu-id="13909-243">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13909-243">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: parentContentControl
    fullName: parentContentControl
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly parentContentControl: Word.ContentControl;'
      return:
        type:
          - word.Word.ContentControl
  - uid: word.Word.Range.search
    summary: |-
      <span data-ttu-id="13909-244">Führt eine Suche mit den angegebenen SearchOptions für den Bereich des Range-Objekts aus.</span><span class="sxs-lookup"><span data-stu-id="13909-244">Performs a search with the specified SearchOptions on the scope of the range object.</span></span> <span data-ttu-id="13909-245">Die Suchergebnisse sind eine Sammlung von Bereichsobjekten.</span><span class="sxs-lookup"><span data-stu-id="13909-245">The search results are a collection of range objects.</span></span>

      <span data-ttu-id="13909-246">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13909-246">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: 'search(searchText, searchOptions)'
    fullName: 'search(searchText, searchOptions)'
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        search(searchText: string, searchOptions?: Word.SearchOptions | {
                    ignorePunct?: boolean;
                    ignoreSpace?: boolean;
                    matchCase?: boolean;
                    matchPrefix?: boolean;
                    matchSuffix?: boolean;
                    matchWholeWord?: boolean;
                    matchWildcards?: boolean;
                }): Word.RangeCollection;
      return:
        type:
          - word.Word.RangeCollection
        description: ''
      parameters:
        - id: searchText
          description: <span data-ttu-id="13909-247">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="13909-247">Required.</span></span> <span data-ttu-id="13909-248">Der Suchtext.</span><span class="sxs-lookup"><span data-stu-id="13909-248">The search text.</span></span>
          type:
            - string
        - id: searchOptions
          description: <span data-ttu-id="13909-249">Optional.</span><span class="sxs-lookup"><span data-stu-id="13909-249">Optional.</span></span> <span data-ttu-id="13909-250">Optionen für die Suche.</span><span class="sxs-lookup"><span data-stu-id="13909-250">Options for the search.</span></span>
          type:
            - |-
              Word.SearchOptions | {
                          ignorePunct?: boolean;
                          ignoreSpace?: boolean;
                          matchCase?: boolean;
                          matchPrefix?: boolean;
                          matchSuffix?: boolean;
                          matchWholeWord?: boolean;
                          matchWildcards?: boolean;
                      }
  - uid: word.Word.Range.select
    summary: |-
      <span data-ttu-id="13909-251">Wählt und navigiert die Word-Benutzeroberfläche zu diesem Bereich.</span><span class="sxs-lookup"><span data-stu-id="13909-251">Selects and navigates the Word UI to the range.</span></span>

      <span data-ttu-id="13909-252">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13909-252">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionMode)
    fullName: select(selectionMode)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionMode?: Word.SelectionMode): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="13909-253">Beispiele</span><span class="sxs-lookup"><span data-stu-id="13909-253">Examples</span></span>

          ```javascript
          // Run a batch operation against the Word object model.
          Word.run(function (context) {

              // Queue a command to get the current selection and then
              // create a proxy range object with the results.
              var range = context.document.getSelection();

              // Queue a commmand to insert HTML in to the beginning of the range.
              range.insertHtml('<strong>This is text inserted with range.insertHtml()</strong>', Word.InsertLocation.start);

              // Queue a command to select the HTML that was inserted.
              range.select();

              // Synchronize the document state by executing the queued commands,
              // and return a promise to indicate task completion.
              return context.sync().then(function () {
                  console.log('Selected the range.');
              });
          })
          .catch(function (error) {
              console.log('Error: ' + JSON.stringify(error));
              if (error instanceof OfficeExtension.Error) {
                  console.log('Debug info: ' + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: selectionMode
          description: '<span data-ttu-id="13909-254">Optional.</span><span class="sxs-lookup"><span data-stu-id="13909-254">Optional.</span></span> <span data-ttu-id="13909-255">Der Auswahlmodus kann „Select“, „Start“ oder „End“ sein.</span><span class="sxs-lookup"><span data-stu-id="13909-255">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="13909-256">„Select“ ist die Standardeinstellung.</span><span class="sxs-lookup"><span data-stu-id="13909-256">''Select'' is the default.</span></span>'
          type:
            - word.Word.SelectionMode
  - uid: word.Word.Range.select_1
    summary: |-
      <span data-ttu-id="13909-257">Wählt und navigiert die Word-Benutzeroberfläche zu diesem Bereich.</span><span class="sxs-lookup"><span data-stu-id="13909-257">Selects and navigates the Word UI to the range.</span></span>

      <span data-ttu-id="13909-258">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13909-258">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: select(selectionModeString)
    fullName: select(selectionModeString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'select(selectionModeString?: "Select" | "Start" | "End"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: selectionModeString
          description: '<span data-ttu-id="13909-259">Optional.</span><span class="sxs-lookup"><span data-stu-id="13909-259">Optional.</span></span> <span data-ttu-id="13909-260">Der Auswahlmodus kann „Select“, „Start“ oder „End“ sein.</span><span class="sxs-lookup"><span data-stu-id="13909-260">The selection mode can be ''Select'', ''Start'', or ''End''.</span></span> <span data-ttu-id="13909-261">„Select“ ist die Standardeinstellung.</span><span class="sxs-lookup"><span data-stu-id="13909-261">''Select'' is the default.</span></span>'
          type:
            - '"Select" | "Start" | "End"'
  - uid: word.Word.Range.set
    summary: '<span data-ttu-id="13909-262">Legt mehrere Eigenschaften eines Objekts gleichzeitig fest.</span><span class="sxs-lookup"><span data-stu-id="13909-262">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="13909-263">Sie können entweder ein einfaches Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs übergeben.</span><span class="sxs-lookup"><span data-stu-id="13909-263">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="13909-264">Diese Methode hat die folgende zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="13909-264">This method has the following additional signature:</span></span>

      `set(properties: Word.Range): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.RangeUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="13909-265">Ein JavaScript-Objekt mit Eigenschaften, die isomorphically für die Eigenschaften des Objekts strukturiert sind, für das die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="13909-265">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.RangeUpdateData
        - id: options
          description: '<span data-ttu-id="13909-266">Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.</span><span class="sxs-lookup"><span data-stu-id="13909-266">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - OfficeExtension.UpdateOptions
  - uid: word.Word.Range.set_1
    summary: '<span data-ttu-id="13909-267">Legt mehrere Eigenschaften für das Objekt gleichzeitig basierend auf einem vorhandenen geladenen Objekt fest.</span><span class="sxs-lookup"><span data-stu-id="13909-267">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Word.Range): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - word.Word.Range
  - uid: word.Word.Range.style
    summary: |-
      <span data-ttu-id="13909-268">Dient zum Abrufen oder Festlegen des Formatvorlagen namens für den Bereich.</span><span class="sxs-lookup"><span data-stu-id="13909-268">Gets or sets the style name for the range.</span></span> <span data-ttu-id="13909-269">Verwenden Sie diese Eigenschaft für benutzerdefinierte Formatvorlagen und lokalisierte Formatvorlagennamen.</span><span class="sxs-lookup"><span data-stu-id="13909-269">Use this property for custom styles and localized style names.</span></span> <span data-ttu-id="13909-270">Informationen zur Verwendung der integrierten Formatvorlagen, die zwischen Gebietsschemas portabel sind, finden Sie unter der Eigenschaft "styleBuiltIn".</span><span class="sxs-lookup"><span data-stu-id="13909-270">To use the built-in styles that are portable between locales, see the "styleBuiltIn" property.</span></span>

      <span data-ttu-id="13909-271">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13909-271">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: word.Word.Range.text
    summary: |-
      <span data-ttu-id="13909-272">Ruft den Text des Bereichs ab.</span><span class="sxs-lookup"><span data-stu-id="13909-272">Gets the text of the range.</span></span> <span data-ttu-id="13909-273">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="13909-273">Read-only.</span></span>

      <span data-ttu-id="13909-274">\[[API-Gruppe: WordApi 1,1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="13909-274">\[ [API set: WordApi 1.1](/office/dev/add-ins/reference/requirement-sets/word-api-requirement-sets) \]</span></span>
    name: text
    fullName: text
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly text: string;'
      return:
        type:
          - string
  - uid: word.Word.Range.toJSON
    summary: '<span data-ttu-id="13909-275">Überschreibt die `toJSON()` JavaScript-Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird.`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="13909-275">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="13909-276">.</span><span class="sxs-lookup"><span data-stu-id="13909-276"></span></span> <span data-ttu-id="13909-277">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="13909-277"></span></span><!-- --><span data-ttu-id="13909-278">wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche Word. Range-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`Word.Interfaces.RangeData`</span><span class="sxs-lookup"><span data-stu-id="13909-278">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Word.Range object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Word.Interfaces.RangeData`</span></span><!-- --><span data-ttu-id="13909-279">), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="13909-279">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Word.Interfaces.RangeData;'
      return:
        type:
          - word.Word.Interfaces.RangeData
        description: ''
  - uid: word.Word.Range.track
    summary: '<span data-ttu-id="13909-280">Nachverfolgung des Objekts zwecks automatischer Anpassung auf der Grundlage der umgebenden Änderungen im Dokument.</span><span class="sxs-lookup"><span data-stu-id="13909-280">Track the object for automatic adjustment based on surrounding changes in the document.</span></span> <span data-ttu-id="13909-281">Dieser Aufruf ist eine Kurzschreibweise für context.trackedObjects.add(thisObject).</span><span class="sxs-lookup"><span data-stu-id="13909-281">This call is a shorthand for context.trackedObjects.add(thisObject).</span></span> <span data-ttu-id="13909-282">Wenn Sie dieses Objekt übergreifend für ".sync"-Aufrufe und außerhalb der sequenziellen Ausführung eines ".run"-Stapels verwenden und beim Festlegen einer Eigenschaft oder Aufrufen einer Methode für das Objekt ein "InvalidObjectPath"-Fehler zurückgegeben wird, hätte das Objekt der nachverfolgten Objektsammlung hinzugefügt werden müssen, in der das Objekt ursprünglich erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="13909-282">If you are using this object across ".sync" calls and outside the sequential execution of a ".run" batch, and get an "InvalidObjectPath" error when setting a property or invoking a method on the object, you needed to have added the object to the tracked object collection when the object was first created.</span></span>'
    name: track()
    fullName: track()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'track(): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: ''
  - uid: word.Word.Range.untrack
    summary: '<span data-ttu-id="13909-283">Gibt den diesem Objekt zugewiesenen Arbeitsspeicher frei, wenn das Objekt zuvor nachverfolgt wurde.</span><span class="sxs-lookup"><span data-stu-id="13909-283">Release the memory associated with this object, if it has previously been tracked.</span></span> <span data-ttu-id="13909-284">Dieser Aufruf stellt eine Kurzschreibweise für context.trackedObjects.remove(thisObject) dar.</span><span class="sxs-lookup"><span data-stu-id="13909-284">This call is shorthand for context.trackedObjects.remove(thisObject).</span></span> <span data-ttu-id="13909-285">Viele nachverfolgte Objekte verlangsamen die Ausführung der Hostanwendung, also achten Sie darauf, alle hinzugefügten Objekte nach abgeschlossener Verwendung freizugeben.</span><span class="sxs-lookup"><span data-stu-id="13909-285">Having many tracked objects slows down the host application, so please remember to free any objects you add, once you''re done using them.</span></span> <span data-ttu-id="13909-286">Sie müssen "context.sync()" aufrufen, damit die Freigabe des Arbeitsspeichers wirksam wird.</span><span class="sxs-lookup"><span data-stu-id="13909-286">You will need to call "context.sync()" before the memory release takes effect.</span></span>'
    name: untrack()
    fullName: untrack()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'untrack(): Word.Range;'
      return:
        type:
          - word.Word.Range
        description: ''