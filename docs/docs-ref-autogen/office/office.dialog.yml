### YamlMime:UniversalReference
items:
  - uid: office.Office.Dialog
    summary: 'Das Objekt, das zurückgegeben `UI.displayDialogAsync` wird, wenn aufgerufen wird. Es werden Methoden zum Registrieren von Ereignishandlern und zum Schließen des Dialogfelds verfügbar gemacht.'
    remarks: '**Anforderungssatz**: [DialogAPI](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/dialog-api-requirement-sets)'
    name: Office.Dialog
    fullName: Office.Dialog
    langs:
      - typeScript
    type: interface
    package: office
    children:
      - office.Office.Dialog.addEventHandler
      - office.Office.Dialog.close
      - office.Office.Dialog.sendMessage
  - uid: office.Office.Dialog.addEventHandler
    summary: |-
      Registriert einen Ereignishandler. Die beiden unterstützten Ereignisse sind:

      - DialogMessageReceived. Wird ausgelöst, wenn das Dialogfeld eine Nachricht an das übergeordnete Element sendet.

      - DialogEventReceived. Wird ausgelöst, wenn das Dialogfeld geschlossen oder anderweitig entladen wurde.
    name: 'addEventHandler(eventType, handler)'
    fullName: 'addEventHandler(eventType, handler)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addEventHandler(eventType: Office.EventType, handler: Function): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: ''
          type:
            - Office.EventType
        - id: handler
          description: ''
          type:
            - Function
  - uid: office.Office.Dialog.close
    summary: 'Wird von einer übergeordneten Seite aufgerufen, um das entsprechende Dialogfeld zu schließen.'
    name: close()
    fullName: close()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'close(): void;'
      return:
        type:
          - void
        description: ''
  - uid: office.Office.Dialog.sendMessage
    summary: NUR ZUR INTERNEN VERWENDUNG. RUFEN SIE NICHT IN IHREM CODE AUF.
    name: sendMessage(name)
    fullName: sendMessage(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'sendMessage(name: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: name
          description: ''
          type:
            - string