### YamlMime:UniversalReference
items:
  - uid: office.OfficeExtension.ClientRequestContext
    summary: 'Ein abstraktes reQuestcontext-Objekt, das Anforderungen an die Host-Office-Anwendung erleichtert. Die `Excel.run` and `Word.run` -Methoden stellen einen Anforderungskontext bereit.'
    name: OfficeExtension.ClientRequestContext
    fullName: OfficeExtension.ClientRequestContext
    langs:
      - typeScript
    type: class
    package: office
    children:
      - office.OfficeExtension.ClientRequestContext.(constructor)
      - office.OfficeExtension.ClientRequestContext.debugInfo
      - office.OfficeExtension.ClientRequestContext.load
      - office.OfficeExtension.ClientRequestContext.loadRecursive
      - office.OfficeExtension.ClientRequestContext.requestHeaders
      - office.OfficeExtension.ClientRequestContext.sync
      - office.OfficeExtension.ClientRequestContext.trace
      - office.OfficeExtension.ClientRequestContext.trackedObjects
  - uid: office.OfficeExtension.ClientRequestContext.(constructor)
    summary: Erstellt eine neue Instanz der `ClientRequestContext` Klasse.
    name: (constructor)(url)
    fullName: (constructor)(url)
    langs:
      - typeScript
    type: constructor
    syntax:
      content: 'constructor(url?: string);'
      parameters:
        - id: url
          description: ''
          type:
            - string
  - uid: office.OfficeExtension.ClientRequestContext.debugInfo
    summary: Debuginformationen
    name: debugInfo
    fullName: debugInfo
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly debugInfo: RequestContextDebugInfo;'
      return:
        type:
          - office.OfficeExtension.RequestContextDebugInfo
  - uid: office.OfficeExtension.ClientRequestContext.load
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.
    name: 'load(object, option)'
    fullName: 'load(object, option)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(object: ClientObject, option?: string | string[] | LoadOption): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: object
          description: 'Das Objekt, dessen Eigenschaften geladen werden.'
          type:
            - office.OfficeExtension.ClientObject
        - id: option
          description: 'Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften oder ein [OfficeExtension. LoadOption](xref:office.OfficeExtension.LoadOption) -Objekt angibt.'
          type:
            - 'string | string[] | LoadOption'
  - uid: office.OfficeExtension.ClientRequestContext.loadRecursive
    summary: |-
      Warteschlangen bis ein Befehl, um die angegebenen Eigenschaften des Objekts und dessen Navigationseigenschaften rekursiv zu laden.

      Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.
    name: 'loadRecursive(object, options, maxDepth)'
    fullName: 'loadRecursive(object, options, maxDepth)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'loadRecursive(object: ClientObject, options: { [typeName: string]: string | string[] | LoadOption }, maxDepth?: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: object
          description: 'Das Objekt, das geladen werden soll.'
          type:
            - office.OfficeExtension.ClientObject
        - id: options
          description: 'Die Schlüssel-Wert-Kopplung der Ladeoptionen für die Typen, wie`{ "Workbook": "worksheets,tables",  "Worksheet": "tables",  "Tables": "name" }`'
          type:
            - '{ [typeName: string]: string | string[] | LoadOption }'
        - id: maxDepth
          description: Die maximale rekursive Tiefe.
          type:
            - number
  - uid: office.OfficeExtension.ClientRequestContext.requestHeaders
    summary: Anforderungsheader
    name: requestHeaders
    fullName: requestHeaders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'requestHeaders: { [name: string]: string };'
      return:
        type:
          - '{ [name: string]: string }'
  - uid: office.OfficeExtension.ClientRequestContext.sync
    summary: 'Synchronisiert den Status zwischen JavaScript-Proxyobjekten und dem Office-Dokument durch Ausführen von Anweisungen in der Warteschlange im Anforderungskontext und Abrufen von Eigenschaften von geladenen Office-Objekten zur Verwendung in Ihrem Code. Diese Methode gibt eine Zusage zurück, die aufgelöst wird, wenn die Synchronisierung abgeschlossen ist.'
    name: sync(passThroughValue)
    fullName: sync(passThroughValue)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'sync<T>(passThroughValue?: T): Promise<T>;'
      return:
        type:
          - Promise<T>
        description: ''
      parameters:
        - id: passThroughValue
          description: ''
          type:
            - T
  - uid: office.OfficeExtension.ClientRequestContext.trace
    summary: 'Fügt der Warteschlange eine Ablaufverfolgungsmeldung hinzu. Wenn die von `context.sync()` zurückgegebene Zusage aufgrund eines Fehlers zurückgewiesen wird, wird dem OfficeExtension. Error-Objekt ein ". traceMessages"-Array hinzugefügt, das alle ausgeführten Ablaufverfolgungsmeldungen enthält. Diese Nachrichten können Ihnen dabei helfen, die Programm Ausführungssequenz zu überwachen und die Ursache des Fehlers zu ermitteln.'
    name: trace(message)
    fullName: trace(message)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'trace(message: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: message
          description: ''
          type:
            - string
  - uid: office.OfficeExtension.ClientRequestContext.trackedObjects
    summary: 'Sammlung von Objekten, die basierend auf den umgebenden Änderungen im Dokument für automatische Anpassungen nachverfolgt werden.'
    name: trackedObjects
    fullName: trackedObjects
    langs:
      - typeScript
    type: property
    syntax:
      content: 'trackedObjects: TrackedObjects;'
      return:
        type:
          - office.OfficeExtension.TrackedObjects