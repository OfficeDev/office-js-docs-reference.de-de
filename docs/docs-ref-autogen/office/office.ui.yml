### YamlMime:UniversalReference
ms.openlocfilehash: cb4cce2896a75fb1f106b78b6f859cb17077f192
ms.sourcegitcommit: b0b614f5315ab2e5c1e0ea51c687498f87684a07
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/15/2019
ms.locfileid: "30056109"
items:
- uid: office.Office.UI
  summary: >-
    Stellt Objekte und Methoden bereit, die Sie verwenden können, um Benutzeroberflächenkomponenten wie Dialogfelder in Ihren Office-Add-Ins zu erstellen und zu bearbeiten.


    Weitere Informationen finden Sie unter "[Verwenden der Dialog Feld-API in Ihren Office-Add-ins](https://docs.microsoft.com/office/dev/add-ins/develop/dialog-api-in-office-add-ins)<!-- -->".
  name: Office.UI
  fullName: Office.UI
  langs:
  - typeScript
  type: interface
  package: office
  children:
  - office.Office.UI.closeContainer
  - office.Office.UI.displayDialogAsync
  - office.Office.UI.displayDialogAsync_1
  - office.Office.UI.messageParent
- uid: office.Office.UI.closeContainer
  summary: Schließt den UI-Container, in dem der JavaScript-Code ausgeführt wird.
  remarks: >-
    <table><tr><td>Hosts</td><td>Excel, Word, PowerPoint, Outlook (mindestanforderungs Satz: Postfach 1,5)</td></tr></table>


    Das Verhalten dieser Methode wird durch Folgendes festgelegt:


    - Aufgerufen von einer UI-less-Befehlsschaltfläche: keine Auswirkung. Jedes über displayDialogAsync geöffnete Dialogfeld bleibt geöffnet.


    - Aufgerufen aus einem Aufgabenbereich: der Aufgabenbereich wird geschlossen. Alle von displayDialogAsync geöffneten Dialogfelder werden ebenfalls geschlossen. Wenn der Aufgabenbereich das Anheften unterstützt und vom Benutzer angeheftet wurde, wird es nicht angeheftet.


    - Aufgerufen von einer Modul Erweiterung: keine Auswirkung.
  name: closeContainer()
  fullName: closeContainer()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'closeContainer(): void;'
    return:
      type:
      - void
      description: ''
- uid: office.Office.UI.displayDialogAsync
  summary: Zeigt ein Dialogfeld zum Anzeigen oder Erfassen von Informationen vom Benutzer oder zur Erleichterung der Webnavigation an.
  remarks: >-
    <table> <tr><td>Hosts</td><td>Word, Excel, Outlook, PowerPoint</td></tr> <tr><td>Anforderungssätze</td><td>DialogAPI, Postfach 1,4</td></tr> </table>


    Diese Methode ist im DialogApi-Anforderungssatz für Word-, Excel-oder PowerPoint-Add-Ins und im Post Fach Anforderungssatz 1,4 für Outlook verfügbar. Weitere Informationen zum Angeben eines Anforderungs Satzes in ihrem Manifest finden Sie unter [Angeben von Office-Hosts und API-Anforderungen](https://docs.microsoft.com/office/dev/add-ins/develop/specify-office-hosts-and-api-requirements)<!-- -->.


    Die ursprüngliche Seite muss sich in derselben Domäne wie die übergeordnete Seite befinden (der Parameter startAddress). Nachdem die Startseite geladen wurde, können Sie zu anderen Domänen wechseln.


    Jeder Seitenaufruf `office.context.ui.messageParent` muss sich auch in derselben Domäne wie die übergeordnete Seite befinden.


    **Entwurfsüberlegungen**:


    Die folgenden Entwurfsüberlegungen gelten für Dialogfelder:


    - Ein Office-Add-in-Aufgabenbereich kann immer nur ein Dialogfeld geöffnet haben. Mehrere Dialogfelder können gleichzeitig über Add-in-Befehle (benutzerdefinierte Menüband-Schaltflächen oder Menüelemente) geöffnet werden.


    - Jedes Dialogfeld kann vom Benutzer verschoben und in der Größe geändert werden.


    - Jedes Dialogfeld wird beim Öffnen auf dem Bildschirm zentriert.


    - Dialogfelder werden im Vordergrund der Hostanwendung und in der Reihenfolge angezeigt, in der sie erstellt wurden.


    Verwenden Sie ein Dialogfelder zu folgenden Zwecken:


    - Anzeigen von Authentifizierungsseiten zum Sammeln von Benutzeranmeldeinformationen


    - Zeigt einen Fehler/Fortschritt/Eingabebildschirm über einen ShowTaskpane-oder Ausführungsbefehl an.


    - Vorübergehende Vergrößerung der Oberfläche, die einem Benutzer zum Durchführen einer Aufgabe zur Verfügung steht.


    Verwenden Sie ein Dialogfeld nicht zur Interaktion mit einem Dokument. Verwenden Sie stattdessen einen Aufgabenbereich.


    Ein Entwurfsmuster, nach dem Sie ein Dialogfeld erstellen können, finden Sie unter [Client-Dialogfeld](https://github.com/OfficeDev/Office-Add-in-UX-Design-Patterns/blob/master/Patterns/Client_Dialog.md) im Repository „Office-Add-in-UX-Design-Patterns“ auf GitHub.


    **displayDialogAsync-Fehler**:


    <table> <tr> <th>Codenummer</th> <th>Bedeutung</th> </tr> <tr> <td>12004</td> <td>Die Domäne der an displayDialogAsync übergebenen URL ist nicht vertrauenswürdig. Bei der Domäne muss es sich um die gleiche Domäne wie die Hostseite (einschließlich Protokoll-und Anschlußnummer) handeln, oder Sie muss <AppDomains> im Abschnitt des Add-in-Manifests registriert sein.</td> </tr> <tr> <td>12005</td> <td>Die an displayDialogAsync übergebene URL verwendet das HTTP-Protokoll. HTTPS ist erforderlich. (In manchen Versionen von Office ist die Fehlermeldung, die für 12005 zurückgegeben wird, dieselbe wie für 12004.)</td> </tr> <tr> <td>12007</td> <td>Ein Dialogfeld ist bereits im Aufgabenbereich geöffnet. Für ein Aufgabenbereich-Add-In kann nur ein Dialogfeld geöffnet sein.</td> </tr> <tr> <td>12009</td> <td>Der Benutzer hat das Dialogfeld ignoriert. Dieser Fehler kann in Online-Versionen von Office auftreten, in denen Benutzer auswählen können, dass ein Add-In kein Dialogfeld präsentiert.</td> </tr> </table>


    In der an die displayDialogAsync-Methode übergebenen Rückruffunktion können Sie die Eigenschaften des AsyncResult-Objekts verwenden, um die folgenden Informationen zurückzugeben.


    <table> <tr> <th>Eigenschaft</th> <th>Verwendung</th> </tr> <tr> <td>AsyncResult.value</td> <td>Greift auf das DialogObjekt zu.</td> </tr> <tr> <td>AsyncResult.status</td> <td>Verwenden Sie diese Eigenschaft, um zu ermitteln, ob der Vorgang erfolgreich war.</td> </tr> <tr> <td>AsyncResult.error</td> <td>Verwenden Sie diese Eigenschaft, um auf ein Error-Objekt zuzugreifen, das Informationen zu dem Fehler bereitstellt, wenn der Vorgang fehlgeschlagen ist.</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>Greifen Sie auf das benutzerdefinierte Objekt oder den Wert zu, wenn Sie einen als AsyncContext-Parameter übergeben haben.</td> </tr> </table>
  name: displayDialogAsync(startAddress, options, callback)
  fullName: displayDialogAsync(startAddress, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'displayDialogAsync(startAddress: string, options?: DialogOptions, callback?: (result: AsyncResult<Dialog>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: startAddress
      description: Akzeptiert die anfängliche HTTPS-URL, die im Dialogfeld geöffnet wird.
      type:
      - string
    - id: options
      description: Optional. Akzeptiert ein [Office. dialogoptions](xref:office.Office.DialogOptions) -Objekt, um die Dialog Anzeige zu definieren.
      type:
      - office.Office.DialogOptions
    - id: callback
      description: Optional. Akzeptiert eine Rückrufmethode, die den Versuch der Dialogfelderstellung zu behandelt. Bei erfolgreicher Ausführung ist AsyncResult. Value ein Dialog-Objekt.
      type:
      - '(result: AsyncResult<Dialog>) => void'
- uid: office.Office.UI.displayDialogAsync_1
  summary: Zeigt ein Dialogfeld zum Anzeigen oder Erfassen von Informationen vom Benutzer oder zur Erleichterung der Webnavigation an.
  remarks: >-
    <table> <tr><td>Hosts</td><td>Word, Excel, Outlook, PowerPoint</td></tr> <tr><td>Anforderungssätze</td><td>DialogAPI, Postfach 1,4</td></tr> </table>


    Diese Methode ist im DialogApi-Anforderungssatz für Word-, Excel-oder PowerPoint-Add-Ins und im Post Fach Anforderungssatz 1,4 für Outlook verfügbar. Weitere Informationen zum Angeben eines Anforderungs Satzes in ihrem Manifest finden Sie unter [Angeben von Office-Hosts und API-Anforderungen](https://docs.microsoft.com/office/dev/add-ins/develop/specify-office-hosts-and-api-requirements)<!-- -->.


    Die ursprüngliche Seite muss sich in derselben Domäne wie die übergeordnete Seite befinden (der Parameter startAddress). Nachdem die Startseite geladen wurde, können Sie zu anderen Domänen wechseln.


    Jeder Seitenaufruf `office.context.ui.messageParent` muss sich auch in derselben Domäne wie die übergeordnete Seite befinden.


    **Entwurfsüberlegungen**:


    Die folgenden Entwurfsüberlegungen gelten für Dialogfelder:


    - Ein Office-Add-in-Aufgabenbereich kann immer nur ein Dialogfeld geöffnet haben. Mehrere Dialogfelder können gleichzeitig über Add-in-Befehle (benutzerdefinierte Menüband-Schaltflächen oder Menüelemente) geöffnet werden.


    - Jedes Dialogfeld kann vom Benutzer verschoben und in der Größe geändert werden.


    - Jedes Dialogfeld wird beim Öffnen auf dem Bildschirm zentriert.


    - Dialogfelder werden im Vordergrund der Hostanwendung und in der Reihenfolge angezeigt, in der sie erstellt wurden.


    Verwenden Sie ein Dialogfelder zu folgenden Zwecken:


    - Anzeigen von Authentifizierungsseiten zum Sammeln von Benutzeranmeldeinformationen


    - Zeigt einen Fehler/Fortschritt/Eingabebildschirm über einen ShowTaskpane-oder Ausführungsbefehl an.


    - Vorübergehende Vergrößerung der Oberfläche, die einem Benutzer zum Durchführen einer Aufgabe zur Verfügung steht.


    Verwenden Sie ein Dialogfeld nicht zur Interaktion mit einem Dokument. Verwenden Sie stattdessen einen Aufgabenbereich.


    Ein Entwurfsmuster, nach dem Sie ein Dialogfeld erstellen können, finden Sie unter [Client-Dialogfeld](https://github.com/OfficeDev/Office-Add-in-UX-Design-Patterns/blob/master/Patterns/Client_Dialog.md) im Repository „Office-Add-in-UX-Design-Patterns“ auf GitHub.


    **displayDialogAsync-Fehler**:


    <table> <tr> <th>Codenummer</th> <th>Bedeutung</th> </tr> <tr> <td>12004</td> <td>Die Domäne der an displayDialogAsync übergebenen URL ist nicht vertrauenswürdig. Bei der Domäne muss es sich um die gleiche Domäne wie die Hostseite (einschließlich Protokoll-und Anschlußnummer) handeln, oder Sie muss <AppDomains> im Abschnitt des Add-in-Manifests registriert sein.</td> </tr> <tr> <td>12005</td> <td>Die an displayDialogAsync übergebene URL verwendet das HTTP-Protokoll. HTTPS ist erforderlich. (In manchen Versionen von Office ist die Fehlermeldung, die für 12005 zurückgegeben wird, dieselbe wie für 12004.)</td> </tr> <tr> <td>12007</td> <td>Ein Dialogfeld ist bereits im Aufgabenbereich geöffnet. Für ein Aufgabenbereich-Add-In kann nur ein Dialogfeld geöffnet sein.</td> </tr> <tr> <td>12009</td> <td>Der Benutzer hat das Dialogfeld ignoriert. Dieser Fehler kann in Online-Versionen von Office auftreten, in denen Benutzer auswählen können, dass ein Add-In kein Dialogfeld präsentiert.</td> </tr> </table>


    In der an die displayDialogAsync-Methode übergebenen Rückruffunktion können Sie die Eigenschaften des AsyncResult-Objekts verwenden, um die folgenden Informationen zurückzugeben.


    <table> <tr> <th>Eigenschaft</th> <th>Verwendung</th> </tr> <tr> <td>AsyncResult.value</td> <td>Greift auf das DialogObjekt zu.</td> </tr> <tr> <td>AsyncResult.status</td> <td>Verwenden Sie diese Eigenschaft, um zu ermitteln, ob der Vorgang erfolgreich war.</td> </tr> <tr> <td>AsyncResult.error</td> <td>Verwenden Sie diese Eigenschaft, um auf ein Error-Objekt zuzugreifen, das Informationen zu dem Fehler bereitstellt, wenn der Vorgang fehlgeschlagen ist.</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>Greifen Sie auf das benutzerdefinierte Objekt oder den Wert zu, wenn Sie einen als AsyncContext-Parameter übergeben haben.</td> </tr> </table>
  name: displayDialogAsync(startAddress, callback)
  fullName: displayDialogAsync(startAddress, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'displayDialogAsync(startAddress: string, callback?: (result: AsyncResult<Dialog>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: startAddress
      description: Akzeptiert die anfängliche HTTPS-URL, die im Dialogfeld geöffnet wird.
      type:
      - string
    - id: callback
      description: Optional. Akzeptiert eine Rückrufmethode, die den Versuch der Dialogfelderstellung zu behandelt. Bei erfolgreicher Ausführung ist AsyncResult. Value ein Dialog-Objekt.
      type:
      - '(result: AsyncResult<Dialog>) => void'
- uid: office.Office.UI.messageParent
  summary: Übermittelt eine Nachricht vom Dialogfeld an die übergeordnete/öffnende Seite. Die Seite, die diese API aufruft, muss sich in derselben Domäne wie die übergeordnete Seite befinden.
  name: messageParent(message)
  fullName: messageParent(message)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'messageParent(message: boolean | string): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: message
      description: Akzeptiert eine Nachricht aus dem Dialogfeld, die an das Add-In übermittelt wird. Zusätzlich zu einem booleschen Wert können alle Elemente, die in eine Zeichenfolge serialisiert werden können, einschließlich JSON und XML gesendet werden.
      type:
      - boolean | string
