### YamlMime:UniversalReference
ms.openlocfilehash: 97693514969a93ac094cb1917e2a95e048161f36
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/13/2019
ms.locfileid: "29979302"
items:
- uid: office.Office.CustomXmlParts
  summary: <span data-ttu-id="17225-101">Stellt eine Auflistung von CustomXmlPart-Objekten dar.</span><span class="sxs-lookup"><span data-stu-id="17225-101">Represents a collection of CustomXmlPart objects.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="17225-102">Anforderungssätze</span><span class="sxs-lookup"><span data-stu-id="17225-102">Requirement Sets</span></span></td><td><span data-ttu-id="17225-103">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="17225-103">CustomXmlParts</span></span></td></tr></table>


    <span data-ttu-id="17225-104">**Supportdetails**</span><span class="sxs-lookup"><span data-stu-id="17225-104">**Support details**</span></span>


    <span data-ttu-id="17225-105">In der folgenden Matrix ein großes Y gibt an, dass diese Schnittstelle in der entsprechenden Office-hostanwendung unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="17225-105">A capital Y in the following matrix indicates that this interface is supported in the corresponding Office host application.</span></span> <span data-ttu-id="17225-106">Eine leere Zelle gibt an, dass die Office-hostanwendung diese Schnittstelle nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="17225-106">An empty cell indicates that the Office host application doesn't support this interface.</span></span>


    <span data-ttu-id="17225-107">Weitere Informationen zu Office-Host-Anwendung und Server-Anforderungen, finden Sie unter [Anforderungen für die Ausführung von Office-Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="17225-107">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="17225-108">*Unterstützte Hosts nach Plattform*</span><span class="sxs-lookup"><span data-stu-id="17225-108">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="17225-109">Office für Windows Desktop</span><span class="sxs-lookup"><span data-stu-id="17225-109">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="17225-110">Office Online (im Browser)</span><span class="sxs-lookup"><span data-stu-id="17225-110">Office Online (in browser)</span></span> </th><th> <span data-ttu-id="17225-111">Office für iPad</span><span class="sxs-lookup"><span data-stu-id="17225-111">Office for iPad</span></span> </th><th> <span data-ttu-id="17225-112">Office for Mac</span><span class="sxs-lookup"><span data-stu-id="17225-112">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id="17225-113"><strong>Word</strong></span><span class="sxs-lookup"><span data-stu-id="17225-113"><strong> Word </strong></span></span></td><td> <span data-ttu-id="17225-114">v</span><span class="sxs-lookup"><span data-stu-id="17225-114">Y</span></span> </td><td> </td><td> <span data-ttu-id="17225-115">v</span><span class="sxs-lookup"><span data-stu-id="17225-115">Y</span></span> </td><td> <span data-ttu-id="17225-116">v</span><span class="sxs-lookup"><span data-stu-id="17225-116">Y</span></span> </td></tr> </table>
  name: Office.CustomXmlParts
  fullName: Office.CustomXmlParts
  langs:
  - typeScript
  type: interface
  package: office
  children:
  - office.Office.CustomXmlParts.addAsync
  - office.Office.CustomXmlParts.addAsync_1
  - office.Office.CustomXmlParts.getByIdAsync
  - office.Office.CustomXmlParts.getByIdAsync_1
  - office.Office.CustomXmlParts.getByNamespaceAsync
  - office.Office.CustomXmlParts.getByNamespaceAsync_1
- uid: office.Office.CustomXmlParts.addAsync
  summary: <span data-ttu-id="17225-117">Fügt einer Datei asynchron eine neue benutzerdefinierte XML-Komponente hinzu.</span><span class="sxs-lookup"><span data-stu-id="17225-117">Asynchronously adds a new custom XML part to a file.</span></span>
  name: addAsync(xml, options, callback)
  fullName: addAsync(xml, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addAsync(xml: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlPart>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: xml
      description: <span data-ttu-id="17225-118">Die XML-so neu erstellten benutzerdefinierten XML-Komponente hinzu.</span><span class="sxs-lookup"><span data-stu-id="17225-118">The XML to add to the newly created custom XML part.</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="17225-119">Bietet die Möglichkeit zur Beibehaltung von Kontextdaten eines beliebigen Typs, die für die Verwendung in einem Rückruf unverändert.</span><span class="sxs-lookup"><span data-stu-id="17225-119">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="17225-120">Optional.</span><span class="sxs-lookup"><span data-stu-id="17225-120">Optional.</span></span> <span data-ttu-id="17225-121">Eine Funktion, die bei der Rückgabe des Rückrufs aufgerufen wird, dessen einziger Parameter vom Typ [Office.AsyncResult](xref:office.Office.AsyncResult)ist<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="17225-121">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="17225-122">Die `value` -Eigenschaft des Ergebnisses ist das neu erstellte CustomXmlPart-Objekt.</span><span class="sxs-lookup"><span data-stu-id="17225-122">The `value` property of the result is the newly created CustomXmlPart object.</span></span>
      type:
      - '(result: AsyncResult<CustomXmlPart>) => void'
- uid: office.Office.CustomXmlParts.addAsync_1
  summary: <span data-ttu-id="17225-123">Fügt einer Datei asynchron eine neue benutzerdefinierte XML-Komponente hinzu.</span><span class="sxs-lookup"><span data-stu-id="17225-123">Asynchronously adds a new custom XML part to a file.</span></span>
  name: addAsync(xml, callback)
  fullName: addAsync(xml, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addAsync(xml: string, callback?: (result: AsyncResult<CustomXmlPart>) => void): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"17225-124\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"17225-124\">Examples</span></span>\n\n```javascript\nfunction addXMLPart() {\n    Office.context.document.customXmlParts.addAsync(\n        '<root categoryId=\"1\" xmlns=\"http://tempuri.org\"><item name=\"Cheap Item\" price=\"$193.95\"/><item name=\"Expensive Item\" price=\"$931.88\"/></root>',\n        function (result) {});\n}\n\nfunction addXMLPartandHandler() {\n    Office.context.document.customXmlParts.addAsync(\n        \"<testns:book xmlns:testns='http://testns.com'><testns:page number='1'>Hello</testns:page><testns:page number='2'>world!</testns:page></testns:book>\",\n        function(r) { r.value.addHandlerAsync(Office.EventType.DataNodeDeleted,\n            function(a) {write(a.type)\n            },\n                function(s) {write(s.status)\n                });\n        });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message;\n}\n```"
    parameters:
    - id: xml
      description: <span data-ttu-id="17225-125">Die XML-so neu erstellten benutzerdefinierten XML-Komponente hinzu.</span><span class="sxs-lookup"><span data-stu-id="17225-125">The XML to add to the newly created custom XML part.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="17225-126">Optional.</span><span class="sxs-lookup"><span data-stu-id="17225-126">Optional.</span></span> <span data-ttu-id="17225-127">Eine Funktion, die bei der Rückgabe des Rückrufs aufgerufen wird, dessen einziger Parameter vom Typ [Office.AsyncResult](xref:office.Office.AsyncResult)ist<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="17225-127">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="17225-128">Die `value` -Eigenschaft des Ergebnisses ist das neu erstellte CustomXmlPart-Objekt.</span><span class="sxs-lookup"><span data-stu-id="17225-128">The `value` property of the result is the newly created CustomXmlPart object.</span></span>
      type:
      - '(result: AsyncResult<CustomXmlPart>) => void'
- uid: office.Office.CustomXmlParts.getByIdAsync
  summary: <span data-ttu-id="17225-129">Ruft asynchron angegebenen benutzerdefinierten XML-Komponente, anhand dessen Id.</span><span class="sxs-lookup"><span data-stu-id="17225-129">Asynchronously gets the specified custom XML part by its id.</span></span>
  name: getByIdAsync(id, options, callback)
  fullName: getByIdAsync(id, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getByIdAsync(id: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlPart>) => void): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"17225-130\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"17225-130\">Examples</span></span>\n\n```javascript\nfunction showXMLPartInnerXML() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getXmlAsync({}, function (eventArgs) {\n            write(eventArgs.value);\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
    parameters:
    - id: id
      description: <span data-ttu-id="17225-131">Die GUID des benutzerdefinierten XML-Komponente, einschließlich öffnende und schließende geschweifte Klammern.</span><span class="sxs-lookup"><span data-stu-id="17225-131">The GUID of the custom XML part, including opening and closing braces.</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="17225-132">Bietet die Möglichkeit zur Beibehaltung von Kontextdaten eines beliebigen Typs, die für die Verwendung in einem Rückruf unverändert.</span><span class="sxs-lookup"><span data-stu-id="17225-132">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="17225-133">Optional.</span><span class="sxs-lookup"><span data-stu-id="17225-133">Optional.</span></span> <span data-ttu-id="17225-134">Eine Funktion, die bei der Rückgabe des Rückrufs aufgerufen wird, dessen einziger Parameter vom Typ [Office.AsyncResult](xref:office.Office.AsyncResult)ist<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="17225-134">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="17225-135">Die `value` -Eigenschaft des Ergebnisses ist ein CustomXmlPart-Objekt, das die angegebene benutzerdefinierte XML-Komponente darstellt.</span><span class="sxs-lookup"><span data-stu-id="17225-135">The `value` property of the result is a CustomXmlPart object that represents the specified custom XML part.</span></span> <span data-ttu-id="17225-136">Wenn keine benutzerdefinierte XML-Komponente mit der angegebenen Id vorhanden ist, gibt die Methode null zurück.</span><span class="sxs-lookup"><span data-stu-id="17225-136">If there is no custom XML part with the specified id, the method returns null.</span></span>
      type:
      - '(result: AsyncResult<CustomXmlPart>) => void'
- uid: office.Office.CustomXmlParts.getByIdAsync_1
  summary: <span data-ttu-id="17225-137">Ruft asynchron angegebenen benutzerdefinierten XML-Komponente, anhand dessen Id.</span><span class="sxs-lookup"><span data-stu-id="17225-137">Asynchronously gets the specified custom XML part by its id.</span></span>
  name: getByIdAsync(id, callback)
  fullName: getByIdAsync(id, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getByIdAsync(id: string, callback?: (result: AsyncResult<CustomXmlPart>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: id
      description: <span data-ttu-id="17225-138">Die GUID des benutzerdefinierten XML-Komponente, einschließlich öffnende und schließende geschweifte Klammern.</span><span class="sxs-lookup"><span data-stu-id="17225-138">The GUID of the custom XML part, including opening and closing braces.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="17225-139">Optional.</span><span class="sxs-lookup"><span data-stu-id="17225-139">Optional.</span></span> <span data-ttu-id="17225-140">Eine Funktion, die bei der Rückgabe des Rückrufs aufgerufen wird, dessen einziger Parameter vom Typ [Office.AsyncResult](xref:office.Office.AsyncResult)ist<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="17225-140">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="17225-141">Die `value` -Eigenschaft des Ergebnisses ist ein CustomXmlPart-Objekt, das die angegebene benutzerdefinierte XML-Komponente darstellt.</span><span class="sxs-lookup"><span data-stu-id="17225-141">The `value` property of the result is a CustomXmlPart object that represents the specified custom XML part.</span></span> <span data-ttu-id="17225-142">Wenn keine benutzerdefinierte XML-Komponente mit der angegebenen Id vorhanden ist, gibt die Methode null zurück.</span><span class="sxs-lookup"><span data-stu-id="17225-142">If there is no custom XML part with the specified id, the method returns null.</span></span>
      type:
      - '(result: AsyncResult<CustomXmlPart>) => void'
- uid: office.Office.CustomXmlParts.getByNamespaceAsync
  summary: <span data-ttu-id="17225-143">Ruft asynchron die angegebene benutzerdefinierte XML-Teile durch ihren Namespace.</span><span class="sxs-lookup"><span data-stu-id="17225-143">Asynchronously gets the specified custom XML part(s) by its namespace.</span></span>
  name: getByNamespaceAsync(ns, options, callback)
  fullName: getByNamespaceAsync(ns, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getByNamespaceAsync(ns: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlPart[]>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: ns
      description: <span data-ttu-id="17225-144">Der Namespace-URI.</span><span class="sxs-lookup"><span data-stu-id="17225-144">The namespace URI.</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="17225-145">Bietet die Möglichkeit zur Beibehaltung von Kontextdaten eines beliebigen Typs, die für die Verwendung in einem Rückruf unverändert.</span><span class="sxs-lookup"><span data-stu-id="17225-145">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="17225-146">Optional.</span><span class="sxs-lookup"><span data-stu-id="17225-146">Optional.</span></span> <span data-ttu-id="17225-147">Eine Funktion, die bei der Rückgabe des Rückrufs aufgerufen wird, dessen einziger Parameter vom Typ [Office.AsyncResult](xref:office.Office.AsyncResult)ist<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="17225-147">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="17225-148">Die `value` -Eigenschaft des Ergebnisses ist ein Array von CustomXmlPart-Objekten, die dem angegebenen Namespace entsprechen.</span><span class="sxs-lookup"><span data-stu-id="17225-148">The `value` property of the result is an array of CustomXmlPart objects that match the specified namespace.</span></span>
      type:
      - '(result: AsyncResult<CustomXmlPart[]>) => void'
- uid: office.Office.CustomXmlParts.getByNamespaceAsync_1
  summary: <span data-ttu-id="17225-149">Ruft asynchron die angegebene benutzerdefinierte XML-Teile durch ihren Namespace.</span><span class="sxs-lookup"><span data-stu-id="17225-149">Asynchronously gets the specified custom XML part(s) by its namespace.</span></span>
  name: getByNamespaceAsync(ns, callback)
  fullName: getByNamespaceAsync(ns, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getByNamespaceAsync(ns: string, callback?: (result: AsyncResult<CustomXmlPart[]>) => void): void;'
    return:
      type:
      - void
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"17225-150\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"17225-150\">Examples</span></span>\n\n```javascript\nfunction showXMLPartsInNamespace() {\n    Office.context.document.customXmlParts.getByNamespaceAsync(\n        \"http://tempuri.org\", \n        function (eventArgs) {\n            write(\"Found \" + eventArgs.value.length + \" parts with this namespace\");\n    }); \n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
    parameters:
    - id: ns
      description: <span data-ttu-id="17225-151">Der Namespace-URI.</span><span class="sxs-lookup"><span data-stu-id="17225-151">The namespace URI.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="17225-152">Optional.</span><span class="sxs-lookup"><span data-stu-id="17225-152">Optional.</span></span> <span data-ttu-id="17225-153">Eine Funktion, die bei der Rückgabe des Rückrufs aufgerufen wird, dessen einziger Parameter vom Typ [Office.AsyncResult](xref:office.Office.AsyncResult)ist<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="17225-153">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="17225-154">Die `value` -Eigenschaft des Ergebnisses ist ein Array von CustomXmlPart-Objekten, die dem angegebenen Namespace entsprechen.</span><span class="sxs-lookup"><span data-stu-id="17225-154">The `value` property of the result is an array of CustomXmlPart objects that match the specified namespace.</span></span>
      type:
      - '(result: AsyncResult<CustomXmlPart[]>) => void'
