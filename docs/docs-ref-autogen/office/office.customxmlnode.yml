### YamlMime:UniversalReference
items:
  - uid: office.Office.CustomXmlNode
    summary: <span data-ttu-id="afc3e-101">Stellt einen XML-Knoten in einer Struktur in einem Dokument dar.</span><span class="sxs-lookup"><span data-stu-id="afc3e-101">Represents an XML node in a tree in a document.</span></span>
    remarks: '<span data-ttu-id="afc3e-102">**Hosts**: Word</span><span class="sxs-lookup"><span data-stu-id="afc3e-102">**Hosts**: Word</span></span>'
    name: Office.CustomXmlNode
    fullName: Office.CustomXmlNode
    langs:
      - typeScript
    type: interface
    package: office
    children:
      - office.Office.CustomXmlNode.getNodesAsync
      - office.Office.CustomXmlNode.getNodesAsync_1
      - office.Office.CustomXmlNode.getNodeValueAsync
      - office.Office.CustomXmlNode.getNodeValueAsync_1
      - office.Office.CustomXmlNode.getTextAsync
      - office.Office.CustomXmlNode.getTextAsync_1
      - office.Office.CustomXmlNode.getXmlAsync
      - office.Office.CustomXmlNode.getXmlAsync_1
      - office.Office.CustomXmlNode.setNodeValueAsync
      - office.Office.CustomXmlNode.setNodeValueAsync_1
      - office.Office.CustomXmlNode.setTextAsync
      - office.Office.CustomXmlNode.setTextAsync_1
      - office.Office.CustomXmlNode.setXmlAsync
      - office.Office.CustomXmlNode.setXmlAsync_1
      - office.Office.CustomXmlNode.baseName
      - office.Office.CustomXmlNode.namespaceUri
      - office.Office.CustomXmlNode.nodeType
  - uid: office.Office.CustomXmlNode.getNodesAsync
    summary: <span data-ttu-id="afc3e-103">Ruft die dem XPath-Ausdruck zugeordneten Knoten ab.</span><span class="sxs-lookup"><span data-stu-id="afc3e-103">Gets the nodes associated with the XPath expression.</span></span>
    remarks: '<span data-ttu-id="afc3e-104">**Anforderungssatz**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="afc3e-104">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'getNodesAsync(xPath, options, callback)'
    fullName: 'getNodesAsync(xPath, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodesAsync(xPath: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xPath
          description: '<span data-ttu-id="afc3e-105">Der XPath-Ausdruck, der die abzurufenden Knoten angibt.</span><span class="sxs-lookup"><span data-stu-id="afc3e-105">The XPath expression that specifies the nodes to get.</span></span> <span data-ttu-id="afc3e-106">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="afc3e-106">Required.</span></span>'
          type:
            - string
        - id: options
          description: '<span data-ttu-id="afc3e-107">Stellt eine Option zum Beibehalten von Kontextdaten eines beliebigen Typs unverändert zur Verwendung in einem Rückruf bereit.</span><span class="sxs-lookup"><span data-stu-id="afc3e-107">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="afc3e-108">Optional.</span><span class="sxs-lookup"><span data-stu-id="afc3e-108">Optional.</span></span> <span data-ttu-id="afc3e-109">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult ist.](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="afc3e-109">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="afc3e-110">.</span><span class="sxs-lookup"><span data-stu-id="afc3e-110"></span></span> <span data-ttu-id="afc3e-111">Die `value` Eigenschaft des Ergebnisses ist ein Array von CustomXmlNode-Objekten, die die Knoten darstellen, die durch den XPath- `xPath` Ausdruck angegeben werden, der an den Parameter übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="afc3e-111">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the `xPath` parameter.</span></span>'
          type:
            - '(result: AsyncResult<CustomXmlNode[]>) => void'
  - uid: office.Office.CustomXmlNode.getNodesAsync_1
    summary: <span data-ttu-id="afc3e-112">Ruft die dem XPath-Ausdruck zugeordneten Knoten ab.</span><span class="sxs-lookup"><span data-stu-id="afc3e-112">Gets the nodes associated with the XPath expression.</span></span>
    remarks: |-
      <span data-ttu-id="afc3e-113">**Anforderungssatz**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="afc3e-113">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="afc3e-114">Beispiele</span><span class="sxs-lookup"><span data-stu-id="afc3e-114">Examples</span></span>

      ```javascript
      function showXmlChildNodes() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getNodesAsync('*', function (nodeResults) {
                  for (i = 0; i < nodeResults.value.length; i++) {
                      var node = nodeResults.value[i];
                      node.getNodesAsync('*', function (nodeResults) {
                          write(nodeResults.value.length + " childNodes");
                      });
                  }
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'getNodesAsync(xPath, callback)'
    fullName: 'getNodesAsync(xPath, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodesAsync(xPath: string, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xPath
          description: '<span data-ttu-id="afc3e-115">Der XPath-Ausdruck, der die abzurufenden Knoten angibt.</span><span class="sxs-lookup"><span data-stu-id="afc3e-115">The XPath expression that specifies the nodes to get.</span></span> <span data-ttu-id="afc3e-116">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="afc3e-116">Required.</span></span>'
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="afc3e-117">Optional.</span><span class="sxs-lookup"><span data-stu-id="afc3e-117">Optional.</span></span> <span data-ttu-id="afc3e-118">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult ist.](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="afc3e-118">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="afc3e-119">.</span><span class="sxs-lookup"><span data-stu-id="afc3e-119"></span></span> <span data-ttu-id="afc3e-120">Die `value` Eigenschaft des Ergebnisses ist ein Array von CustomXmlNode-Objekten, die die Knoten darstellen, die durch den XPath- `xPath` Ausdruck angegeben werden, der an den Parameter übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="afc3e-120">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the `xPath` parameter.</span></span>'
          type:
            - '(result: AsyncResult<CustomXmlNode[]>) => void'
  - uid: office.Office.CustomXmlNode.getNodeValueAsync
    summary: <span data-ttu-id="afc3e-121">Ruft den Knotenwert ab.</span><span class="sxs-lookup"><span data-stu-id="afc3e-121">Gets the node value.</span></span>
    remarks: '<span data-ttu-id="afc3e-122">**Anforderungssatz**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="afc3e-122">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'getNodeValueAsync(options, callback)'
    fullName: 'getNodeValueAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodeValueAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="afc3e-123">Stellt eine Option zum Beibehalten von Kontextdaten eines beliebigen Typs unverändert zur Verwendung in einem Rückruf bereit.</span><span class="sxs-lookup"><span data-stu-id="afc3e-123">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="afc3e-124">Optional.</span><span class="sxs-lookup"><span data-stu-id="afc3e-124">Optional.</span></span> <span data-ttu-id="afc3e-125">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult ist.](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="afc3e-125">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="afc3e-126">.</span><span class="sxs-lookup"><span data-stu-id="afc3e-126"></span></span> <span data-ttu-id="afc3e-127">Die `value` Eigenschaft des Ergebnisses ist eine Zeichenfolge, die den Wert des referenzierten Knotens enthält.</span><span class="sxs-lookup"><span data-stu-id="afc3e-127">The `value` property of the result is a string that contains the value of the referenced node.</span></span>'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.CustomXmlNode.getNodeValueAsync_1
    summary: <span data-ttu-id="afc3e-128">Ruft den Knotenwert ab.</span><span class="sxs-lookup"><span data-stu-id="afc3e-128">Gets the node value.</span></span>
    remarks: |-
      <span data-ttu-id="afc3e-129">**Anforderungssatz**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="afc3e-129">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="afc3e-130">Beispiele</span><span class="sxs-lookup"><span data-stu-id="afc3e-130">Examples</span></span>

      ```javascript
      function showXmlNodeValues() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getNodesAsync('*/*', function (nodeResults) {
                  for (i = 0; i < nodeResults.value.length; i++) {
                      var node = nodeResults.value[i];
                      node.getNodeValueAsync(function (asyncResult) {
                          write(asyncResult.value);
                      });
                  }
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: getNodeValueAsync(callback)
    fullName: getNodeValueAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodeValueAsync(callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="afc3e-131">Optional.</span><span class="sxs-lookup"><span data-stu-id="afc3e-131">Optional.</span></span> <span data-ttu-id="afc3e-132">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult ist.](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="afc3e-132">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="afc3e-133">.</span><span class="sxs-lookup"><span data-stu-id="afc3e-133"></span></span> <span data-ttu-id="afc3e-134">Die `value` Eigenschaft des Ergebnisses ist eine Zeichenfolge, die den Wert des referenzierten Knotens enthält.</span><span class="sxs-lookup"><span data-stu-id="afc3e-134">The `value` property of the result is a string that contains the value of the referenced node.</span></span>'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.CustomXmlNode.getTextAsync
    summary: <span data-ttu-id="afc3e-135">Ruft den Text eines XML-Knotens in einer benutzerdefinierten XML-Komponente ab.</span><span class="sxs-lookup"><span data-stu-id="afc3e-135">Gets the text of an XML node in a custom XML part.</span></span>
    remarks: |-
      <span data-ttu-id="afc3e-136">**Anforderungssatz**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="afc3e-136">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="afc3e-137">Beispiele</span><span class="sxs-lookup"><span data-stu-id="afc3e-137">Examples</span></span>

      ```javascript
      // Get the built-in core properties XML part by using its ID. This results in a call to Word.
      Office.context.document.customXmlParts.getByIdAsync(
          "{6C3C8BC8-F283-45AE-878A-BAB7291924A1}", function (getByIdAsyncResult) {
          
          // Access the XML part.
          var xmlPart = getByIdAsyncResult.value;
          
          // Add namespaces to the namespace manager. These two calls result in two calls to Word.
          xmlPart.namespaceManager.addNamespaceAsync(
              'cp',
              'http://schemas.openxmlformats.org/package/2006/metadata/core-properties',
              function () {
              xmlPart.namespaceManager.addNamespaceAsync(
                  'dc', 
                  'http://purl.org/dc/elements/1.1/', 
                  function () {

                  // Get XML nodes by using an Xpath expression. This results in a call to Word.
                  xmlPart.getNodesAsync("/cp:coreProperties/dc:title", function (getNodesAsyncResult) {
                      
                      // Get the first node returned by using the Xpath expression. 
                      var node = getNodesAsyncResult.value[0];
                      
                      // Get the text value of the node and use the asyncContext. This results in a call to Word. 
                      // The results are logged to the browser console.
                      node.getTextAsync({asyncContext: "StateNormal"}, function (getTextAsyncResult) {
                        console.log("Text of the title element = " + getTextAsyncResult.value;
                        console.log("The asyncContext value = " + getTextAsyncResult.asyncContext;
                      });
                  });
              });
          });
      });
      ```
    name: 'getTextAsync(options, callback)'
    fullName: 'getTextAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTextAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="afc3e-138">Stellt eine Option zum Beibehalten von Kontextdaten eines beliebigen Typs unverändert zur Verwendung in einem Rückruf bereit.</span><span class="sxs-lookup"><span data-stu-id="afc3e-138">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="afc3e-139">Optional.</span><span class="sxs-lookup"><span data-stu-id="afc3e-139">Optional.</span></span> <span data-ttu-id="afc3e-140">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult ist.](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="afc3e-140">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="afc3e-141">.</span><span class="sxs-lookup"><span data-stu-id="afc3e-141"></span></span> <span data-ttu-id="afc3e-142">Die `value` Eigenschaft des Ergebnisses ist eine Zeichenfolge, die den inneren Text der referenzierten Knoten enthält.</span><span class="sxs-lookup"><span data-stu-id="afc3e-142">The `value` property of the result is a string that contains the inner text of the referenced nodes.</span></span>'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.CustomXmlNode.getTextAsync_1
    summary: <span data-ttu-id="afc3e-143">Ruft den Text eines XML-Knotens in einer benutzerdefinierten XML-Komponente ab.</span><span class="sxs-lookup"><span data-stu-id="afc3e-143">Gets the text of an XML node in a custom XML part.</span></span>
    remarks: '<span data-ttu-id="afc3e-144">**Anforderungssatz**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="afc3e-144">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: getTextAsync(callback)
    fullName: getTextAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTextAsync(callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="afc3e-145">Optional.</span><span class="sxs-lookup"><span data-stu-id="afc3e-145">Optional.</span></span> <span data-ttu-id="afc3e-146">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult ist.](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="afc3e-146">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="afc3e-147">.</span><span class="sxs-lookup"><span data-stu-id="afc3e-147"></span></span> <span data-ttu-id="afc3e-148">Die `value` Eigenschaft des Ergebnisses ist eine Zeichenfolge, die den inneren Text der referenzierten Knoten enthält.</span><span class="sxs-lookup"><span data-stu-id="afc3e-148">The `value` property of the result is a string that contains the inner text of the referenced nodes.</span></span>'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.CustomXmlNode.getXmlAsync
    summary: <span data-ttu-id="afc3e-149">Ruft den XML-Code des Knotens ab.</span><span class="sxs-lookup"><span data-stu-id="afc3e-149">Gets the node's XML.</span></span>
    remarks: '<span data-ttu-id="afc3e-150">**Anforderungssatz**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="afc3e-150">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'getXmlAsync(options, callback)'
    fullName: 'getXmlAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getXmlAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="afc3e-151">Stellt eine Option zum Beibehalten von Kontextdaten eines beliebigen Typs unverändert zur Verwendung in einem Rückruf bereit.</span><span class="sxs-lookup"><span data-stu-id="afc3e-151">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="afc3e-152">Optional.</span><span class="sxs-lookup"><span data-stu-id="afc3e-152">Optional.</span></span> <span data-ttu-id="afc3e-153">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult ist.](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="afc3e-153">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="afc3e-154">.</span><span class="sxs-lookup"><span data-stu-id="afc3e-154"></span></span> <span data-ttu-id="afc3e-155">Die `value` Eigenschaft des Ergebnisses ist eine Zeichenfolge, die den XML-Code des referenzierten Knotens enthält.</span><span class="sxs-lookup"><span data-stu-id="afc3e-155">The `value` property of the result is a string that contains the XML of the referenced node.</span></span>'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.CustomXmlNode.getXmlAsync_1
    summary: <span data-ttu-id="afc3e-156">Ruft den XML-Code des Knotens ab.</span><span class="sxs-lookup"><span data-stu-id="afc3e-156">Gets the node's XML.</span></span>
    remarks: |-
      <span data-ttu-id="afc3e-157">**Anforderungssatz**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="afc3e-157">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="afc3e-158">Beispiele</span><span class="sxs-lookup"><span data-stu-id="afc3e-158">Examples</span></span>

      ```javascript
      function showXmlNodeInnerXml() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getNodesAsync('*', function (nodeResults) {
                  for (i = 0; i < nodeResults.value.length; i++) {
                      var node = nodeResults.value[i];
                      node.getXmlAsync(function (asyncResult) {
                          write(asyncResult.value);
                      });
                  }
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: getXmlAsync(callback)
    fullName: getXmlAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getXmlAsync(callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="afc3e-159">Optional.</span><span class="sxs-lookup"><span data-stu-id="afc3e-159">Optional.</span></span> <span data-ttu-id="afc3e-160">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult ist.](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="afc3e-160">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="afc3e-161">.</span><span class="sxs-lookup"><span data-stu-id="afc3e-161"></span></span> <span data-ttu-id="afc3e-162">Die `value` Eigenschaft des Ergebnisses ist eine Zeichenfolge, die den XML-Code des referenzierten Knotens enthält.</span><span class="sxs-lookup"><span data-stu-id="afc3e-162">The `value` property of the result is a string that contains the XML of the referenced node.</span></span>'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.CustomXmlNode.setNodeValueAsync
    summary: <span data-ttu-id="afc3e-163">Legt den Knotenwert fest.</span><span class="sxs-lookup"><span data-stu-id="afc3e-163">Sets the node value.</span></span>
    remarks: '<span data-ttu-id="afc3e-164">**Anforderungssatz**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="afc3e-164">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'setNodeValueAsync(value, options, callback)'
    fullName: 'setNodeValueAsync(value, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setNodeValueAsync(value: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: value
          description: '<span data-ttu-id="afc3e-165">Der Wert, der für den Knoten festgelegt werden soll.</span><span class="sxs-lookup"><span data-stu-id="afc3e-165">The value to be set on the node</span></span>'
          type:
            - string
        - id: options
          description: '<span data-ttu-id="afc3e-166">Stellt eine Option zum Beibehalten von Kontextdaten eines beliebigen Typs unverändert zur Verwendung in einem Rückruf bereit.</span><span class="sxs-lookup"><span data-stu-id="afc3e-166">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="afc3e-167">Optional.</span><span class="sxs-lookup"><span data-stu-id="afc3e-167">Optional.</span></span> <span data-ttu-id="afc3e-168">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult ist.](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="afc3e-168">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="afc3e-169">.</span><span class="sxs-lookup"><span data-stu-id="afc3e-169"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlNode.setNodeValueAsync_1
    summary: <span data-ttu-id="afc3e-170">Legt den Knotenwert fest.</span><span class="sxs-lookup"><span data-stu-id="afc3e-170">Sets the node value.</span></span>
    remarks: |-
      <span data-ttu-id="afc3e-171">**Anforderungssatz**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="afc3e-171">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="afc3e-172">Beispiele</span><span class="sxs-lookup"><span data-stu-id="afc3e-172">Examples</span></span>

      ```javascript
      function setXmlNodeValue() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getNodesAsync('*/*', function (nodeResults) {
                  for (i = 0; i < nodeResults.value.length; i++) {
                      var node = nodeResults.value[i];
                      write(node);
                      node.setNodeValueAsync("item number" + i, function (result) { });
                  }
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'setNodeValueAsync(value, callback)'
    fullName: 'setNodeValueAsync(value, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setNodeValueAsync(value: string, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: value
          description: '<span data-ttu-id="afc3e-173">Der Wert, der für den Knoten festgelegt werden soll.</span><span class="sxs-lookup"><span data-stu-id="afc3e-173">The value to be set on the node</span></span>'
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="afc3e-174">Optional.</span><span class="sxs-lookup"><span data-stu-id="afc3e-174">Optional.</span></span> <span data-ttu-id="afc3e-175">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult ist.](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="afc3e-175">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="afc3e-176">.</span><span class="sxs-lookup"><span data-stu-id="afc3e-176"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlNode.setTextAsync
    summary: <span data-ttu-id="afc3e-177">Legt den Text eines XML-Knotens in einer benutzerdefinierten XML-Komponente asynchron fest.</span><span class="sxs-lookup"><span data-stu-id="afc3e-177">Asynchronously sets the text of an XML node in a custom XML part.</span></span>
    remarks: |-
      <span data-ttu-id="afc3e-178">**Anforderungssatz**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="afc3e-178">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="afc3e-179">Beispiele</span><span class="sxs-lookup"><span data-stu-id="afc3e-179">Examples</span></span>

      ```javascript
      // Learn how to set the text value of a node in a custom XML part from the following example.

      // Get the built-in core properties XML part by using its ID. This results in a call to Word.
      Office.context.document.customXmlParts.getByIdAsync(
          "{6C3C8BC8-F283-45AE-878A-BAB7291924A1}",
          function (getByIdAsyncResult) {
          
          // Access the XML part.
          var xmlPart = getByIdAsyncResult.value;
          
          // Add namespaces to the namespace manager. These two calls result in two calls to Word.
          xmlPart.namespaceManager.addNamespaceAsync(
              'cp', 
              'http://schemas.openxmlformats.org/package/2006/metadata/core-properties', 
              function () {
              xmlPart.namespaceManager.addNamespaceAsync(
                  'dc', 
                  'http://purl.org/dc/elements/1.1/', 
                  function () {

                  // Get XML nodes by using an Xpath expression. This results in a call to the host.
                  xmlPart.getNodesAsync("/cp:coreProperties/dc:subject", function (getNodesAsyncResult) {
                      
                      // Get the first node returned by using the Xpath expression.
                      // This will be the subject element in this example.
                      var subjectNode = getNodesAsyncResult.value[0];
                      
                      // Set the text value of the subject node and use the asyncContext. 
                      // This results in a call to the host.  The results are logged to the browser console.
                      subjectNode.setTextAsync(
                          "newSubject", 
                          {asyncContext: "StateNormal"}, 
                          function (setTextAsyncResult) {
                              console.log("The status of the call: " + setTextAsyncResult.status);
                              console.log("The asyncContext value = " + setTextAsyncResult.asyncContext);
                      });
                  });
              });
          });
      });
      ```
    name: 'setTextAsync(text, options, callback)'
    fullName: 'setTextAsync(text, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setTextAsync(text: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: text
          description: Erforderlich. <span data-ttu-id="afc3e-181">Der Textwert des XML-Knotens.</span><span class="sxs-lookup"><span data-stu-id="afc3e-181">The text value of the XML node.</span></span>
          type:
            - string
        - id: options
          description: '<span data-ttu-id="afc3e-182">Stellt eine Option zum Beibehalten von Kontextdaten eines beliebigen Typs unverändert zur Verwendung in einem Rückruf bereit.</span><span class="sxs-lookup"><span data-stu-id="afc3e-182">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="afc3e-183">Optional.</span><span class="sxs-lookup"><span data-stu-id="afc3e-183">Optional.</span></span> <span data-ttu-id="afc3e-184">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult ist.](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="afc3e-184">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="afc3e-185">.</span><span class="sxs-lookup"><span data-stu-id="afc3e-185"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlNode.setTextAsync_1
    summary: <span data-ttu-id="afc3e-186">Legt den Text eines XML-Knotens in einer benutzerdefinierten XML-Komponente asynchron fest.</span><span class="sxs-lookup"><span data-stu-id="afc3e-186">Asynchronously sets the text of an XML node in a custom XML part.</span></span>
    remarks: '<span data-ttu-id="afc3e-187">**Anforderungssatz**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="afc3e-187">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'setTextAsync(text, callback)'
    fullName: 'setTextAsync(text, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setTextAsync(text: string, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: text
          description: <span data-ttu-id="afc3e-188">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="afc3e-188">Required.</span></span> <span data-ttu-id="afc3e-189">Der Textwert des XML-Knotens.</span><span class="sxs-lookup"><span data-stu-id="afc3e-189">The text value of the XML node.</span></span>
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="afc3e-190">Optional.</span><span class="sxs-lookup"><span data-stu-id="afc3e-190">Optional.</span></span> <span data-ttu-id="afc3e-191">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult ist.](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="afc3e-191">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="afc3e-192">.</span><span class="sxs-lookup"><span data-stu-id="afc3e-192"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlNode.setXmlAsync
    summary: <span data-ttu-id="afc3e-193">Legt den XML-Knoten fest.</span><span class="sxs-lookup"><span data-stu-id="afc3e-193">Sets the node XML.</span></span>
    remarks: |-
      <span data-ttu-id="afc3e-194">**Anforderungssatz**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="afc3e-194">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="afc3e-195">Beispiele</span><span class="sxs-lookup"><span data-stu-id="afc3e-195">Examples</span></span>

      ```javascript
      function setXmlNodeInnerXml() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getNodesAsync('*', function (nodeResults) {
                  for (i = 0; i < nodeResults.value.length; i++) {
                      var node = nodeResults.value[i];
                      node.setXmlAsync("<childNode>" + i + "</childNode>");
                  }
              });
          });
      }
      ```
    name: 'setXmlAsync(xml, options, callback)'
    fullName: 'setXmlAsync(xml, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setXmlAsync(xml: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xml
          description: '<span data-ttu-id="afc3e-196">Der XML-Code, der für den Knoten festgelegt werden soll</span><span class="sxs-lookup"><span data-stu-id="afc3e-196">The XML to be set on the node</span></span>'
          type:
            - string
        - id: options
          description: '<span data-ttu-id="afc3e-197">Stellt eine Option zum Beibehalten von Kontextdaten eines beliebigen Typs unverändert zur Verwendung in einem Rückruf bereit.</span><span class="sxs-lookup"><span data-stu-id="afc3e-197">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="afc3e-198">Optional.</span><span class="sxs-lookup"><span data-stu-id="afc3e-198">Optional.</span></span> <span data-ttu-id="afc3e-199">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult ist.](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="afc3e-199">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="afc3e-200">.</span><span class="sxs-lookup"><span data-stu-id="afc3e-200"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlNode.setXmlAsync_1
    summary: <span data-ttu-id="afc3e-201">Legt den XML-Knoten fest.</span><span class="sxs-lookup"><span data-stu-id="afc3e-201">Sets the node XML.</span></span>
    remarks: '<span data-ttu-id="afc3e-202">**Anforderungssatz**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="afc3e-202">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'setXmlAsync(xml, callback)'
    fullName: 'setXmlAsync(xml, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setXmlAsync(xml: string, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xml
          description: '<span data-ttu-id="afc3e-203">Der XML-Code, der für den Knoten festgelegt werden soll</span><span class="sxs-lookup"><span data-stu-id="afc3e-203">The XML to be set on the node</span></span>'
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="afc3e-204">Optional.</span><span class="sxs-lookup"><span data-stu-id="afc3e-204">Optional.</span></span> <span data-ttu-id="afc3e-205">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult ist.](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="afc3e-205">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="afc3e-206">.</span><span class="sxs-lookup"><span data-stu-id="afc3e-206"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlNode.baseName
    summary: '<span data-ttu-id="afc3e-207">Ruft den Basisnamen des Knotens ohne Namespacepräfix ab, falls vorhanden.</span><span class="sxs-lookup"><span data-stu-id="afc3e-207">Gets the base name of the node without the namespace prefix, if one exists.</span></span>'
    name: baseName
    fullName: baseName
    langs:
      - typeScript
    type: property
    syntax:
      content: 'baseName: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="afc3e-208">Beispiele</span><span class="sxs-lookup"><span data-stu-id="afc3e-208">Examples</span></span>

          ```javascript
          function showXmlNodeBaseNames() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  xmlPart.getNodesAsync('*/*', function (nodeResults) {
                      for (i = 0; i < nodeResults.value.length; i++) {
                          var node = nodeResults.value[i];
                          write(node.baseName);
                      }
                  });
              });
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: office.Office.CustomXmlNode.namespaceUri
    summary: <span data-ttu-id="afc3e-209">Ruft die Zeichenfolgendarstellung der GUID des Objekts CustomXMLPart ab.</span><span class="sxs-lookup"><span data-stu-id="afc3e-209">Retrieves the string GUID of the CustomXMLPart.</span></span>
    name: namespaceUri
    fullName: namespaceUri
    langs:
      - typeScript
    type: property
    syntax:
      content: 'namespaceUri: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="afc3e-210">Beispiele</span><span class="sxs-lookup"><span data-stu-id="afc3e-210">Examples</span></span>

          ```javascript
          function showXmlNamespaceUri() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  xmlPart.getNodesAsync('*/*', function (nodeResults) {
                      for (i = 0; i < nodeResults.value.length; i++) {
                          var node = nodeResults.value[i];
                          write(node.namespaceUri);
                      }
                  });
              });
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: office.Office.CustomXmlNode.nodeType
    summary: <span data-ttu-id="afc3e-211">Ruft den Typ des CustomXMLNode-Objekts ab.</span><span class="sxs-lookup"><span data-stu-id="afc3e-211">Gets the type of the CustomXMLNode.</span></span>
    name: nodeType
    fullName: nodeType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'nodeType: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="afc3e-212">Beispiele</span><span class="sxs-lookup"><span data-stu-id="afc3e-212">Examples</span></span>

          ```javascript
          function showXmlNodeType() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  xmlPart.getNodesAsync('*/*', function (nodeResults) {
                      for (i = 0; i < nodeResults.value.length; i++) {
                          var node = nodeResults.value[i];
                          write(node.nodeType);
                      }
                  });
              });
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```