### YamlMime:UniversalReference
ms.openlocfilehash: 8e6f1c0b95578a9182695fba84f5bc90232a9d84
ms.sourcegitcommit: b0b614f5315ab2e5c1e0ea51c687498f87684a07
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/15/2019
ms.locfileid: "30055017"
items:
- uid: office.Office.CustomXmlNode
  summary: Stellt einen XML-Knoten in einer Struktur in einem Dokument dar.
  remarks: >-
    <table><tr><td>Anforderungs Sätze</td><td>CustomXmlParts</td></tr></table>


    **Supportdetails**


    Ein großes Y in der folgenden Matrix gibt an, dass diese Schnittstelle in der entsprechenden Office-Hostanwendung unterstützt wird. Eine leere Zelle gibt an, dass die Office-Hostanwendung diese Schnittstelle nicht unterstützt.


    Weitere Informationen zu den Anforderungen der Office-Hostanwendung und des Servers finden Sie unter [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.


    *Unterstützte Hosts nach Plattform* <table> <tr><th> </th><th> Office für Windows Desktop </th><th> Office Online (im Browser) </th><th> Office für iPad </th><th> Office for Mac </th></tr> <tr><td><strong>Wort</strong></td><td> v </td><td> v </td><td> v </td><td> v </td></tr> </table>
  name: Office.CustomXmlNode
  fullName: Office.CustomXmlNode
  langs:
  - typeScript
  type: interface
  package: office
  children:
  - office.Office.CustomXmlNode.getNodesAsync
  - office.Office.CustomXmlNode.getNodesAsync_1
  - office.Office.CustomXmlNode.getNodeValueAsync
  - office.Office.CustomXmlNode.getNodeValueAsync_1
  - office.Office.CustomXmlNode.getTextAsync
  - office.Office.CustomXmlNode.getTextAsync_1
  - office.Office.CustomXmlNode.getXmlAsync
  - office.Office.CustomXmlNode.getXmlAsync_1
  - office.Office.CustomXmlNode.setNodeValueAsync
  - office.Office.CustomXmlNode.setNodeValueAsync_1
  - office.Office.CustomXmlNode.setTextAsync
  - office.Office.CustomXmlNode.setTextAsync_1
  - office.Office.CustomXmlNode.setXmlAsync
  - office.Office.CustomXmlNode.setXmlAsync_1
  - office.Office.CustomXmlNode.baseName
  - office.Office.CustomXmlNode.namespaceUri
  - office.Office.CustomXmlNode.nodeType
- uid: office.Office.CustomXmlNode.getNodesAsync
  summary: Ruft die dem XPath-Ausdruck zugeordneten Knoten ab.
  remarks: <table><tr><td>Anforderungs Sätze</td><td>CustomXmlParts</td></tr></table>
  name: getNodesAsync(xPath, options, callback)
  fullName: getNodesAsync(xPath, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getNodesAsync(xPath: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: xPath
      description: Der XPath-Ausdruck, der die abzurufenden Knoten angibt. Erforderlich.
      type:
      - string
    - id: options
      description: Stellt eine Option zum Beibehalten von Kontextdaten eines beliebigen Typs unverändert zur Verwendung in einem Rückruf bereit.
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: Optional. Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->ist. Die `value` Eigenschaft des Ergebnisses ist ein Array von CustomXmlNode-Objekten, die die Knoten darstellen, die durch den XPath- `xPath` Ausdruck angegeben werden, der an den Parameter übergeben wird.
      type:
      - '(result: AsyncResult<CustomXmlNode[]>) => void'
- uid: office.Office.CustomXmlNode.getNodesAsync_1
  summary: Ruft die dem XPath-Ausdruck zugeordneten Knoten ab.
  remarks: "<table><tr><td>Anforderungs Sätze</td><td>CustomXmlParts</td></tr></table>\n#### Beispiele\n\n```javascript\nfunction showXmlChildNodes() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                node.getNodesAsync('*', function (nodeResults) {\n                    write(nodeResults.value.length + \" childNodes\");\n                });\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: getNodesAsync(xPath, callback)
  fullName: getNodesAsync(xPath, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getNodesAsync(xPath: string, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: xPath
      description: Der XPath-Ausdruck, der die abzurufenden Knoten angibt. Erforderlich.
      type:
      - string
    - id: callback
      description: Optional. Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->ist. Die `value` Eigenschaft des Ergebnisses ist ein Array von CustomXmlNode-Objekten, die die Knoten darstellen, die durch den XPath- `xPath` Ausdruck angegeben werden, der an den Parameter übergeben wird.
      type:
      - '(result: AsyncResult<CustomXmlNode[]>) => void'
- uid: office.Office.CustomXmlNode.getNodeValueAsync
  summary: Ruft den Knotenwert ab.
  remarks: <table><tr><td>Anforderungs Sätze</td><td>CustomXmlParts</td></tr></table>
  name: getNodeValueAsync(options, callback)
  fullName: getNodeValueAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getNodeValueAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: Stellt eine Option zum Beibehalten von Kontextdaten eines beliebigen Typs unverändert zur Verwendung in einem Rückruf bereit.
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: Optional. Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->ist. Die `value` Eigenschaft des Ergebnisses ist eine Zeichenfolge, die den Wert des referenzierten Knotens enthält.
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlNode.getNodeValueAsync_1
  summary: Ruft den Knotenwert ab.
  remarks: "<table><tr><td>Anforderungs Sätze</td><td>CustomXmlParts</td></tr></table>\n#### Beispiele\n\n```javascript\nfunction showXmlNodeValues() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                node.getNodeValueAsync(function (asyncResult) {\n                    write(asyncResult.value);\n                });\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: getNodeValueAsync(callback)
  fullName: getNodeValueAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getNodeValueAsync(callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: Optional. Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->ist. Die `value` Eigenschaft des Ergebnisses ist eine Zeichenfolge, die den Wert des referenzierten Knotens enthält.
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlNode.getTextAsync
  summary: Ruft den Text eines XML-Knotens in einer benutzerdefinierten XML-Komponente ab.
  remarks: "<table><tr><td>Anforderungs Sätze</td><td>CustomXmlParts</td></tr></table>\n#### Beispiele\n\n```javascript\n// Get the built-in core properties XML part by using its ID. This results in a call to Word.\nOffice.context.document.customXmlParts.getByIdAsync(\n    \"{6C3C8BC8-F283-45AE-878A-BAB7291924A1}\", function (getByIdAsyncResult) {\n    \n    // Access the XML part.\n    var xmlPart = getByIdAsyncResult.value;\n    \n    // Add namespaces to the namespace manager. These two calls result in two calls to Word.\n    xmlPart.namespaceManager.addNamespaceAsync(\n        'cp',\n        'http://schemas.openxmlformats.org/package/2006/metadata/core-properties',\n        function () {\n        xmlPart.namespaceManager.addNamespaceAsync(\n            'dc', \n            'http://purl.org/dc/elements/1.1/', \n            function () {\n\n            // Get XML nodes by using an Xpath expression. This results in a call to Word.\n            xmlPart.getNodesAsync(\"/cp:coreProperties/dc:title\", function (getNodesAsyncResult) {\n                \n                // Get the first node returned by using the Xpath expression. \n                var node = getNodesAsyncResult.value[0];\n                \n                // Get the text value of the node and use the asyncContext. This results in a call to Word. \n                // The results are logged to the browser console.\n                node.getTextAsync({asyncContext: \"StateNormal\"}, function (getTextAsyncResult) {\n                  console.log(\"Text of the title element = \" + getTextAsyncResult.value;\n                  console.log(\"The asyncContext value = \" + getTextAsyncResult.asyncContext;\n                });\n            });\n        });\n    });\n});\n```"
  name: getTextAsync(options, callback)
  fullName: getTextAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTextAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: Stellt eine Option zum Beibehalten von Kontextdaten eines beliebigen Typs unverändert zur Verwendung in einem Rückruf bereit.
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: Optional. Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->ist. Die `value` Eigenschaft des Ergebnisses ist eine Zeichenfolge, die den inneren Text der referenzierten Knoten enthält.
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlNode.getTextAsync_1
  summary: Ruft den Text eines XML-Knotens in einer benutzerdefinierten XML-Komponente ab.
  remarks: <table><tr><td>Anforderungs Sätze</td><td>CustomXmlParts</td></tr></table>
  name: getTextAsync(callback)
  fullName: getTextAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTextAsync(callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: Optional. Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->ist. Die `value` Eigenschaft des Ergebnisses ist eine Zeichenfolge, die den inneren Text der referenzierten Knoten enthält.
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlNode.getXmlAsync
  summary: Ruft den XML-Code des Knotens ab.
  remarks: <table><tr><td>Anforderungs Sätze</td><td>CustomXmlParts</td></tr></table>
  name: getXmlAsync(options, callback)
  fullName: getXmlAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getXmlAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: Stellt eine Option zum Beibehalten von Kontextdaten eines beliebigen Typs unverändert zur Verwendung in einem Rückruf bereit.
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: Optional. Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->ist. Die `value` Eigenschaft des Ergebnisses ist eine Zeichenfolge, die den XML-Code des referenzierten Knotens enthält.
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlNode.getXmlAsync_1
  summary: Ruft den XML-Code des Knotens ab.
  remarks: "<table><tr><td>Anforderungs Sätze</td><td>CustomXmlParts</td></tr></table>\n#### Beispiele\n\n```javascript\nfunction showXmlNodeInnerXml() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                node.getXmlAsync(function (asyncResult) {\n                    write(asyncResult.value);\n                });\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: getXmlAsync(callback)
  fullName: getXmlAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getXmlAsync(callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: Optional. Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->ist. Die `value` Eigenschaft des Ergebnisses ist eine Zeichenfolge, die den XML-Code des referenzierten Knotens enthält.
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlNode.setNodeValueAsync
  summary: Legt den Knotenwert fest.
  remarks: <table><tr><td>Anforderungs Sätze</td><td>CustomXmlParts</td></tr></table>
  name: setNodeValueAsync(value, options, callback)
  fullName: setNodeValueAsync(value, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setNodeValueAsync(value: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: value
      description: Der Wert, der für den Knoten festgelegt werden soll.
      type:
      - string
    - id: options
      description: Stellt eine Option zum Beibehalten von Kontextdaten eines beliebigen Typs unverändert zur Verwendung in einem Rückruf bereit.
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: Optional. Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->ist.
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlNode.setNodeValueAsync_1
  summary: Legt den Knotenwert fest.
  remarks: "<table><tr><td>Anforderungs Sätze</td><td>CustomXmlParts</td></tr></table>\n#### Beispiele\n\n```javascript\nfunction setXmlNodeValue() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                write(node);\n                node.setNodeValueAsync(\"item number\" + i, function (result) { });\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: setNodeValueAsync(value, callback)
  fullName: setNodeValueAsync(value, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setNodeValueAsync(value: string, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: value
      description: Der Wert, der für den Knoten festgelegt werden soll.
      type:
      - string
    - id: callback
      description: Optional. Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->ist.
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlNode.setTextAsync
  summary: Legt den Text eines XML-Knotens in einer benutzerdefinierten XML-Komponente asynchron fest.
  remarks: "<table> <tr><td>Hosts</td><td>Word</td></tr> <tr><td>Anforderungs Sätze</td><td>CustomXmlParts</td></tr> </table>\n#### Beispiele\n\n```javascript\n// Learn how to set the text value of a node in a custom XML part from the following example.\n\n// Get the built-in core properties XML part by using its ID. This results in a call to Word.\nOffice.context.document.customXmlParts.getByIdAsync(\n    \"{6C3C8BC8-F283-45AE-878A-BAB7291924A1}\",\n    function (getByIdAsyncResult) {\n    \n    // Access the XML part.\n    var xmlPart = getByIdAsyncResult.value;\n    \n    // Add namespaces to the namespace manager. These two calls result in two calls to Word.\n    xmlPart.namespaceManager.addNamespaceAsync(\n        'cp', \n        'http://schemas.openxmlformats.org/package/2006/metadata/core-properties', \n        function () {\n        xmlPart.namespaceManager.addNamespaceAsync(\n            'dc', \n            'http://purl.org/dc/elements/1.1/', \n            function () {\n\n            // Get XML nodes by using an Xpath expression. This results in a call to the host.\n            xmlPart.getNodesAsync(\"/cp:coreProperties/dc:subject\", function (getNodesAsyncResult) {\n                \n                // Get the first node returned by using the Xpath expression.\n                // This will be the subject element in this example.\n                var subjectNode = getNodesAsyncResult.value[0];\n                \n                // Set the text value of the subject node and use the asyncContext. \n                // This results in a call to the host.  The results are logged to the browser console.\n                subjectNode.setTextAsync(\n                    \"newSubject\", \n                    {asyncContext: \"StateNormal\"}, \n                    function (setTextAsyncResult) {\n                        console.log(\"The status of the call: \" + setTextAsyncResult.status);\n                        console.log(\"The asyncContext value = \" + setTextAsyncResult.asyncContext);\n                });\n            });\n        });\n    });\n});\n```"
  name: setTextAsync(text, options, callback)
  fullName: setTextAsync(text, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setTextAsync(text: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: text
      description: Erforderlich. Der Textwert des XML-Knotens.
      type:
      - string
    - id: options
      description: Stellt eine Option zum Beibehalten von Kontextdaten eines beliebigen Typs unverändert zur Verwendung in einem Rückruf bereit.
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: Optional. Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->ist.
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlNode.setTextAsync_1
  summary: Legt den Text eines XML-Knotens in einer benutzerdefinierten XML-Komponente asynchron fest.
  remarks: <table> <tr><td>Hosts</td><td>Word</td></tr> <tr><td>Anforderungs Sätze</td><td>CustomXmlParts</td></tr> </table>
  name: setTextAsync(text, callback)
  fullName: setTextAsync(text, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setTextAsync(text: string, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: text
      description: Erforderlich. Der Textwert des XML-Knotens.
      type:
      - string
    - id: callback
      description: Optional. Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->ist.
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlNode.setXmlAsync
  summary: Legt den XML-Knoten fest.
  remarks: >-
    <table><tr><td>Anforderungs Sätze</td><td>CustomXmlParts</td></tr></table>

    #### Beispiele


    ```javascript

    function setXmlNodeInnerXml() {
        Office.context.document.customXmlParts.getByIdAsync(
            "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
            var xmlPart = result.value;
            xmlPart.getNodesAsync('*', function (nodeResults) {
                for (i = 0; i < nodeResults.value.length; i++) {
                    var node = nodeResults.value[i];
                    node.setXmlAsync("<childNode>" + i + "</childNode>");
                }
            });
        });
    }

    ```
  name: setXmlAsync(xml, options, callback)
  fullName: setXmlAsync(xml, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setXmlAsync(xml: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: xml
      description: Der XML-Code, der für den Knoten festgelegt werden soll
      type:
      - string
    - id: options
      description: Stellt eine Option zum Beibehalten von Kontextdaten eines beliebigen Typs unverändert zur Verwendung in einem Rückruf bereit.
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: Optional. Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->ist.
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlNode.setXmlAsync_1
  summary: Legt den XML-Knoten fest.
  remarks: <table><tr><td>Anforderungs Sätze</td><td>CustomXmlParts</td></tr></table>
  name: setXmlAsync(xml, callback)
  fullName: setXmlAsync(xml, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setXmlAsync(xml: string, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: xml
      description: Der XML-Code, der für den Knoten festgelegt werden soll
      type:
      - string
    - id: callback
      description: Optional. Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->ist.
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlNode.baseName
  summary: Ruft den Basisnamen des Knotens ohne Namespacepräfix ab, falls vorhanden.
  remarks: "<table><tr><td>Anforderungs Sätze</td><td>CustomXmlParts</td></tr></table>\n#### Beispiele\n\n```javascript\nfunction showXmlNodeBaseNames() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                write(node.baseName);\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: baseName
  fullName: baseName
  langs:
  - typeScript
  type: property
  syntax:
    content: 'baseName: string;'
    return:
      type:
      - string
- uid: office.Office.CustomXmlNode.namespaceUri
  summary: Ruft die Zeichenfolgen-GUID des CustomXMLPart ab.
  remarks: "<table><tr><td>Anforderungs Sätze</td><td>CustomXmlParts</td></tr></table>\n#### Beispiele\n\n```javascript\nfunction showXmlNamespaceUri() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                write(node.namespaceUri);\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: namespaceUri
  fullName: namespaceUri
  langs:
  - typeScript
  type: property
  syntax:
    content: 'namespaceUri: string;'
    return:
      type:
      - string
- uid: office.Office.CustomXmlNode.nodeType
  summary: Ruft den Typ des CustomXMLNode-Objekts ab.
  remarks: "<table><tr><td>Anforderungs Sätze</td><td>CustomXmlParts</td></tr></table>\n#### Examples\n\n```javascript\nfunction showXmlNodeType() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                write(node.nodeType);\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: nodeType
  fullName: nodeType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'nodeType: string;'
    return:
      type:
      - string
