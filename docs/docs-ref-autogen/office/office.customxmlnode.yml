### YamlMime:UniversalReference
ms.openlocfilehash: 8e6f1c0b95578a9182695fba84f5bc90232a9d84
ms.sourcegitcommit: b0b614f5315ab2e5c1e0ea51c687498f87684a07
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/15/2019
ms.locfileid: "30055017"
items:
- uid: office.Office.CustomXmlNode
  summary: <span data-ttu-id="e02b1-101">Stellt einen XML-Knoten in einer Struktur in einem Dokument dar.</span><span class="sxs-lookup"><span data-stu-id="e02b1-101">Represents an XML node in a tree in a document.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="e02b1-102">Anforderungs Sätze</span><span class="sxs-lookup"><span data-stu-id="e02b1-102">Requirement Sets</span></span></td><td><span data-ttu-id="e02b1-103">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="e02b1-103">CustomXmlParts</span></span></td></tr></table>


    <span data-ttu-id="e02b1-104">**Supportdetails**</span><span class="sxs-lookup"><span data-stu-id="e02b1-104">**Support details**</span></span>


    <span data-ttu-id="e02b1-105">Ein großes Y in der folgenden Matrix gibt an, dass diese Schnittstelle in der entsprechenden Office-Hostanwendung unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="e02b1-105">A capital Y in the following matrix indicates that this interface is supported in the corresponding Office host application.</span></span> <span data-ttu-id="e02b1-106">Eine leere Zelle gibt an, dass die Office-Hostanwendung diese Schnittstelle nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="e02b1-106">An empty cell indicates that the Office host application doesn't support this interface.</span></span>


    <span data-ttu-id="e02b1-107">Weitere Informationen zu den Anforderungen der Office-Hostanwendung und des Servers finden Sie unter [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="e02b1-107">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="e02b1-108">*Unterstützte Hosts nach Plattform*</span><span class="sxs-lookup"><span data-stu-id="e02b1-108">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="e02b1-109">Office für Windows Desktop</span><span class="sxs-lookup"><span data-stu-id="e02b1-109">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="e02b1-110">Office Online (im Browser)</span><span class="sxs-lookup"><span data-stu-id="e02b1-110">Office Online (in browser)</span></span> </th><th> <span data-ttu-id="e02b1-111">Office für iPad</span><span class="sxs-lookup"><span data-stu-id="e02b1-111">Office for iPad</span></span> </th><th> <span data-ttu-id="e02b1-112">Office for Mac</span><span class="sxs-lookup"><span data-stu-id="e02b1-112">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id="e02b1-113"><strong>Wort</strong></span><span class="sxs-lookup"><span data-stu-id="e02b1-113"><strong> Word </strong></span></span></td><td> <span data-ttu-id="e02b1-114">v</span><span class="sxs-lookup"><span data-stu-id="e02b1-114">Y</span></span> </td><td> <span data-ttu-id="e02b1-115">v</span><span class="sxs-lookup"><span data-stu-id="e02b1-115">Y</span></span> </td><td> <span data-ttu-id="e02b1-116">v</span><span class="sxs-lookup"><span data-stu-id="e02b1-116">Y</span></span> </td><td> <span data-ttu-id="e02b1-117">v</span><span class="sxs-lookup"><span data-stu-id="e02b1-117">Y</span></span> </td></tr> </table>
  name: Office.CustomXmlNode
  fullName: Office.CustomXmlNode
  langs:
  - typeScript
  type: interface
  package: office
  children:
  - office.Office.CustomXmlNode.getNodesAsync
  - office.Office.CustomXmlNode.getNodesAsync_1
  - office.Office.CustomXmlNode.getNodeValueAsync
  - office.Office.CustomXmlNode.getNodeValueAsync_1
  - office.Office.CustomXmlNode.getTextAsync
  - office.Office.CustomXmlNode.getTextAsync_1
  - office.Office.CustomXmlNode.getXmlAsync
  - office.Office.CustomXmlNode.getXmlAsync_1
  - office.Office.CustomXmlNode.setNodeValueAsync
  - office.Office.CustomXmlNode.setNodeValueAsync_1
  - office.Office.CustomXmlNode.setTextAsync
  - office.Office.CustomXmlNode.setTextAsync_1
  - office.Office.CustomXmlNode.setXmlAsync
  - office.Office.CustomXmlNode.setXmlAsync_1
  - office.Office.CustomXmlNode.baseName
  - office.Office.CustomXmlNode.namespaceUri
  - office.Office.CustomXmlNode.nodeType
- uid: office.Office.CustomXmlNode.getNodesAsync
  summary: <span data-ttu-id="e02b1-118">Ruft die dem XPath-Ausdruck zugeordneten Knoten ab.</span><span class="sxs-lookup"><span data-stu-id="e02b1-118">Gets the nodes associated with the XPath expression.</span></span>
  remarks: <table><tr><td><span data-ttu-id="e02b1-119">Anforderungs Sätze</span><span class="sxs-lookup"><span data-stu-id="e02b1-119">Requirement Sets</span></span></td><td><span data-ttu-id="e02b1-120">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="e02b1-120">CustomXmlParts</span></span></td></tr></table>
  name: getNodesAsync(xPath, options, callback)
  fullName: getNodesAsync(xPath, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getNodesAsync(xPath: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: xPath
      description: <span data-ttu-id="e02b1-121">Der XPath-Ausdruck, der die abzurufenden Knoten angibt.</span><span class="sxs-lookup"><span data-stu-id="e02b1-121">The XPath expression that specifies the nodes to get.</span></span> <span data-ttu-id="e02b1-122">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="e02b1-122">Required.</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="e02b1-123">Stellt eine Option zum Beibehalten von Kontextdaten eines beliebigen Typs unverändert zur Verwendung in einem Rückruf bereit.</span><span class="sxs-lookup"><span data-stu-id="e02b1-123">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="e02b1-124">Optional.</span><span class="sxs-lookup"><span data-stu-id="e02b1-124">Optional.</span></span> <span data-ttu-id="e02b1-125">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->ist.</span><span class="sxs-lookup"><span data-stu-id="e02b1-125">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="e02b1-126">Die `value` Eigenschaft des Ergebnisses ist ein Array von CustomXmlNode-Objekten, die die Knoten darstellen, die durch den XPath- `xPath` Ausdruck angegeben werden, der an den Parameter übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="e02b1-126">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the `xPath` parameter.</span></span>
      type:
      - '(result: AsyncResult<CustomXmlNode[]>) => void'
- uid: office.Office.CustomXmlNode.getNodesAsync_1
  summary: <span data-ttu-id="e02b1-127">Ruft die dem XPath-Ausdruck zugeordneten Knoten ab.</span><span class="sxs-lookup"><span data-stu-id="e02b1-127">Gets the nodes associated with the XPath expression.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"e02b1-128\">Anforderungs Sätze</span><span class=\"sxs-lookup\"><span data-stu-id=\"e02b1-128\">Requirement Sets</span></span></td><td><span data-ttu-id=\"e02b1-129\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"e02b1-129\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"e02b1-130\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"e02b1-130\">Examples</span></span>\n\n```javascript\nfunction showXmlChildNodes() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                node.getNodesAsync('*', function (nodeResults) {\n                    write(nodeResults.value.length + \" childNodes\");\n                });\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: getNodesAsync(xPath, callback)
  fullName: getNodesAsync(xPath, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getNodesAsync(xPath: string, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: xPath
      description: <span data-ttu-id="e02b1-131">Der XPath-Ausdruck, der die abzurufenden Knoten angibt.</span><span class="sxs-lookup"><span data-stu-id="e02b1-131">The XPath expression that specifies the nodes to get.</span></span> <span data-ttu-id="e02b1-132">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="e02b1-132">Required.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="e02b1-133">Optional.</span><span class="sxs-lookup"><span data-stu-id="e02b1-133">Optional.</span></span> <span data-ttu-id="e02b1-134">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->ist.</span><span class="sxs-lookup"><span data-stu-id="e02b1-134">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="e02b1-135">Die `value` Eigenschaft des Ergebnisses ist ein Array von CustomXmlNode-Objekten, die die Knoten darstellen, die durch den XPath- `xPath` Ausdruck angegeben werden, der an den Parameter übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="e02b1-135">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the `xPath` parameter.</span></span>
      type:
      - '(result: AsyncResult<CustomXmlNode[]>) => void'
- uid: office.Office.CustomXmlNode.getNodeValueAsync
  summary: <span data-ttu-id="e02b1-136">Ruft den Knotenwert ab.</span><span class="sxs-lookup"><span data-stu-id="e02b1-136">Gets the node value.</span></span>
  remarks: <table><tr><td><span data-ttu-id="e02b1-137">Anforderungs Sätze</span><span class="sxs-lookup"><span data-stu-id="e02b1-137">Requirement Sets</span></span></td><td><span data-ttu-id="e02b1-138">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="e02b1-138">CustomXmlParts</span></span></td></tr></table>
  name: getNodeValueAsync(options, callback)
  fullName: getNodeValueAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getNodeValueAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="e02b1-139">Stellt eine Option zum Beibehalten von Kontextdaten eines beliebigen Typs unverändert zur Verwendung in einem Rückruf bereit.</span><span class="sxs-lookup"><span data-stu-id="e02b1-139">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="e02b1-140">Optional.</span><span class="sxs-lookup"><span data-stu-id="e02b1-140">Optional.</span></span> <span data-ttu-id="e02b1-141">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->ist.</span><span class="sxs-lookup"><span data-stu-id="e02b1-141">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="e02b1-142">Die `value` Eigenschaft des Ergebnisses ist eine Zeichenfolge, die den Wert des referenzierten Knotens enthält.</span><span class="sxs-lookup"><span data-stu-id="e02b1-142">The `value` property of the result is a string that contains the value of the referenced node.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlNode.getNodeValueAsync_1
  summary: <span data-ttu-id="e02b1-143">Ruft den Knotenwert ab.</span><span class="sxs-lookup"><span data-stu-id="e02b1-143">Gets the node value.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"e02b1-144\">Anforderungs Sätze</span><span class=\"sxs-lookup\"><span data-stu-id=\"e02b1-144\">Requirement Sets</span></span></td><td><span data-ttu-id=\"e02b1-145\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"e02b1-145\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"e02b1-146\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"e02b1-146\">Examples</span></span>\n\n```javascript\nfunction showXmlNodeValues() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                node.getNodeValueAsync(function (asyncResult) {\n                    write(asyncResult.value);\n                });\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: getNodeValueAsync(callback)
  fullName: getNodeValueAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getNodeValueAsync(callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: <span data-ttu-id="e02b1-147">Optional.</span><span class="sxs-lookup"><span data-stu-id="e02b1-147">Optional.</span></span> <span data-ttu-id="e02b1-148">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->ist.</span><span class="sxs-lookup"><span data-stu-id="e02b1-148">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="e02b1-149">Die `value` Eigenschaft des Ergebnisses ist eine Zeichenfolge, die den Wert des referenzierten Knotens enthält.</span><span class="sxs-lookup"><span data-stu-id="e02b1-149">The `value` property of the result is a string that contains the value of the referenced node.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlNode.getTextAsync
  summary: <span data-ttu-id="e02b1-150">Ruft den Text eines XML-Knotens in einer benutzerdefinierten XML-Komponente ab.</span><span class="sxs-lookup"><span data-stu-id="e02b1-150">Gets the text of an XML node in a custom XML part.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"e02b1-151\">Anforderungs Sätze</span><span class=\"sxs-lookup\"><span data-stu-id=\"e02b1-151\">Requirement Sets</span></span></td><td><span data-ttu-id=\"e02b1-152\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"e02b1-152\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"e02b1-153\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"e02b1-153\">Examples</span></span>\n\n```javascript\n// Get the built-in core properties XML part by using its ID. This results in a call to Word.\nOffice.context.document.customXmlParts.getByIdAsync(\n    \"{6C3C8BC8-F283-45AE-878A-BAB7291924A1}\", function (getByIdAsyncResult) {\n    \n    // Access the XML part.\n    var xmlPart = getByIdAsyncResult.value;\n    \n    // Add namespaces to the namespace manager. These two calls result in two calls to Word.\n    xmlPart.namespaceManager.addNamespaceAsync(\n        'cp',\n        'http://schemas.openxmlformats.org/package/2006/metadata/core-properties',\n        function () {\n        xmlPart.namespaceManager.addNamespaceAsync(\n            'dc', \n            'http://purl.org/dc/elements/1.1/', \n            function () {\n\n            // Get XML nodes by using an Xpath expression. This results in a call to Word.\n            xmlPart.getNodesAsync(\"/cp:coreProperties/dc:title\", function (getNodesAsyncResult) {\n                \n                // Get the first node returned by using the Xpath expression. \n                var node = getNodesAsyncResult.value[0];\n                \n                // Get the text value of the node and use the asyncContext. This results in a call to Word. \n                // The results are logged to the browser console.\n                node.getTextAsync({asyncContext: \"StateNormal\"}, function (getTextAsyncResult) {\n                  console.log(\"Text of the title element = \" + getTextAsyncResult.value;\n                  console.log(\"The asyncContext value = \" + getTextAsyncResult.asyncContext;\n                });\n            });\n        });\n    });\n});\n```"
  name: getTextAsync(options, callback)
  fullName: getTextAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTextAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="e02b1-154">Stellt eine Option zum Beibehalten von Kontextdaten eines beliebigen Typs unverändert zur Verwendung in einem Rückruf bereit.</span><span class="sxs-lookup"><span data-stu-id="e02b1-154">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="e02b1-155">Optional.</span><span class="sxs-lookup"><span data-stu-id="e02b1-155">Optional.</span></span> <span data-ttu-id="e02b1-156">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->ist.</span><span class="sxs-lookup"><span data-stu-id="e02b1-156">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="e02b1-157">Die `value` Eigenschaft des Ergebnisses ist eine Zeichenfolge, die den inneren Text der referenzierten Knoten enthält.</span><span class="sxs-lookup"><span data-stu-id="e02b1-157">The `value` property of the result is a string that contains the inner text of the referenced nodes.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlNode.getTextAsync_1
  summary: <span data-ttu-id="e02b1-158">Ruft den Text eines XML-Knotens in einer benutzerdefinierten XML-Komponente ab.</span><span class="sxs-lookup"><span data-stu-id="e02b1-158">Gets the text of an XML node in a custom XML part.</span></span>
  remarks: <table><tr><td><span data-ttu-id="e02b1-159">Anforderungs Sätze</span><span class="sxs-lookup"><span data-stu-id="e02b1-159">Requirement Sets</span></span></td><td><span data-ttu-id="e02b1-160">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="e02b1-160">CustomXmlParts</span></span></td></tr></table>
  name: getTextAsync(callback)
  fullName: getTextAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTextAsync(callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: <span data-ttu-id="e02b1-161">Optional.</span><span class="sxs-lookup"><span data-stu-id="e02b1-161">Optional.</span></span> <span data-ttu-id="e02b1-162">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->ist.</span><span class="sxs-lookup"><span data-stu-id="e02b1-162">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="e02b1-163">Die `value` Eigenschaft des Ergebnisses ist eine Zeichenfolge, die den inneren Text der referenzierten Knoten enthält.</span><span class="sxs-lookup"><span data-stu-id="e02b1-163">The `value` property of the result is a string that contains the inner text of the referenced nodes.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlNode.getXmlAsync
  summary: <span data-ttu-id="e02b1-164">Ruft den XML-Code des Knotens ab.</span><span class="sxs-lookup"><span data-stu-id="e02b1-164">Gets the node's XML.</span></span>
  remarks: <table><tr><td><span data-ttu-id="e02b1-165">Anforderungs Sätze</span><span class="sxs-lookup"><span data-stu-id="e02b1-165">Requirement Sets</span></span></td><td><span data-ttu-id="e02b1-166">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="e02b1-166">CustomXmlParts</span></span></td></tr></table>
  name: getXmlAsync(options, callback)
  fullName: getXmlAsync(options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getXmlAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="e02b1-167">Stellt eine Option zum Beibehalten von Kontextdaten eines beliebigen Typs unverändert zur Verwendung in einem Rückruf bereit.</span><span class="sxs-lookup"><span data-stu-id="e02b1-167">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="e02b1-168">Optional.</span><span class="sxs-lookup"><span data-stu-id="e02b1-168">Optional.</span></span> <span data-ttu-id="e02b1-169">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->ist.</span><span class="sxs-lookup"><span data-stu-id="e02b1-169">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="e02b1-170">Die `value` Eigenschaft des Ergebnisses ist eine Zeichenfolge, die den XML-Code des referenzierten Knotens enthält.</span><span class="sxs-lookup"><span data-stu-id="e02b1-170">The `value` property of the result is a string that contains the XML of the referenced node.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlNode.getXmlAsync_1
  summary: <span data-ttu-id="e02b1-171">Ruft den XML-Code des Knotens ab.</span><span class="sxs-lookup"><span data-stu-id="e02b1-171">Gets the node's XML.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"e02b1-172\">Anforderungs Sätze</span><span class=\"sxs-lookup\"><span data-stu-id=\"e02b1-172\">Requirement Sets</span></span></td><td><span data-ttu-id=\"e02b1-173\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"e02b1-173\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"e02b1-174\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"e02b1-174\">Examples</span></span>\n\n```javascript\nfunction showXmlNodeInnerXml() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                node.getXmlAsync(function (asyncResult) {\n                    write(asyncResult.value);\n                });\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: getXmlAsync(callback)
  fullName: getXmlAsync(callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getXmlAsync(callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: callback
      description: <span data-ttu-id="e02b1-175">Optional.</span><span class="sxs-lookup"><span data-stu-id="e02b1-175">Optional.</span></span> <span data-ttu-id="e02b1-176">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->ist.</span><span class="sxs-lookup"><span data-stu-id="e02b1-176">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="e02b1-177">Die `value` Eigenschaft des Ergebnisses ist eine Zeichenfolge, die den XML-Code des referenzierten Knotens enthält.</span><span class="sxs-lookup"><span data-stu-id="e02b1-177">The `value` property of the result is a string that contains the XML of the referenced node.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.CustomXmlNode.setNodeValueAsync
  summary: <span data-ttu-id="e02b1-178">Legt den Knotenwert fest.</span><span class="sxs-lookup"><span data-stu-id="e02b1-178">Sets the node value.</span></span>
  remarks: <table><tr><td><span data-ttu-id="e02b1-179">Anforderungs Sätze</span><span class="sxs-lookup"><span data-stu-id="e02b1-179">Requirement Sets</span></span></td><td><span data-ttu-id="e02b1-180">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="e02b1-180">CustomXmlParts</span></span></td></tr></table>
  name: setNodeValueAsync(value, options, callback)
  fullName: setNodeValueAsync(value, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setNodeValueAsync(value: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: value
      description: <span data-ttu-id="e02b1-181">Der Wert, der für den Knoten festgelegt werden soll.</span><span class="sxs-lookup"><span data-stu-id="e02b1-181">The value to be set on the node</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="e02b1-182">Stellt eine Option zum Beibehalten von Kontextdaten eines beliebigen Typs unverändert zur Verwendung in einem Rückruf bereit.</span><span class="sxs-lookup"><span data-stu-id="e02b1-182">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="e02b1-183">Optional.</span><span class="sxs-lookup"><span data-stu-id="e02b1-183">Optional.</span></span> <span data-ttu-id="e02b1-184">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->ist.</span><span class="sxs-lookup"><span data-stu-id="e02b1-184">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlNode.setNodeValueAsync_1
  summary: <span data-ttu-id="e02b1-185">Legt den Knotenwert fest.</span><span class="sxs-lookup"><span data-stu-id="e02b1-185">Sets the node value.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"e02b1-186\">Anforderungs Sätze</span><span class=\"sxs-lookup\"><span data-stu-id=\"e02b1-186\">Requirement Sets</span></span></td><td><span data-ttu-id=\"e02b1-187\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"e02b1-187\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"e02b1-188\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"e02b1-188\">Examples</span></span>\n\n```javascript\nfunction setXmlNodeValue() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                write(node);\n                node.setNodeValueAsync(\"item number\" + i, function (result) { });\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: setNodeValueAsync(value, callback)
  fullName: setNodeValueAsync(value, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setNodeValueAsync(value: string, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: value
      description: <span data-ttu-id="e02b1-189">Der Wert, der für den Knoten festgelegt werden soll.</span><span class="sxs-lookup"><span data-stu-id="e02b1-189">The value to be set on the node</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="e02b1-190">Optional.</span><span class="sxs-lookup"><span data-stu-id="e02b1-190">Optional.</span></span> <span data-ttu-id="e02b1-191">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->ist.</span><span class="sxs-lookup"><span data-stu-id="e02b1-191">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlNode.setTextAsync
  summary: <span data-ttu-id="e02b1-192">Legt den Text eines XML-Knotens in einer benutzerdefinierten XML-Komponente asynchron fest.</span><span class="sxs-lookup"><span data-stu-id="e02b1-192">Asynchronously sets the text of an XML node in a custom XML part.</span></span>
  remarks: "<table> <tr><td><span data-ttu-id=\"e02b1-193\">Hosts</span><span class=\"sxs-lookup\"><span data-stu-id=\"e02b1-193\">Hosts</span></span></td><td><span data-ttu-id=\"e02b1-194\">Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"e02b1-194\">Word</span></span></td></tr> <tr><td><span data-ttu-id=\"e02b1-195\">Anforderungs Sätze</span><span class=\"sxs-lookup\"><span data-stu-id=\"e02b1-195\">Requirement Sets</span></span></td><td><span data-ttu-id=\"e02b1-196\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"e02b1-196\">CustomXmlParts</span></span></td></tr> </table>\n#### <span data-ttu-id=\"e02b1-197\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"e02b1-197\">Examples</span></span>\n\n```javascript\n// Learn how to set the text value of a node in a custom XML part from the following example.\n\n// Get the built-in core properties XML part by using its ID. This results in a call to Word.\nOffice.context.document.customXmlParts.getByIdAsync(\n    \"{6C3C8BC8-F283-45AE-878A-BAB7291924A1}\",\n    function (getByIdAsyncResult) {\n    \n    // Access the XML part.\n    var xmlPart = getByIdAsyncResult.value;\n    \n    // Add namespaces to the namespace manager. These two calls result in two calls to Word.\n    xmlPart.namespaceManager.addNamespaceAsync(\n        'cp', \n        'http://schemas.openxmlformats.org/package/2006/metadata/core-properties', \n        function () {\n        xmlPart.namespaceManager.addNamespaceAsync(\n            'dc', \n            'http://purl.org/dc/elements/1.1/', \n            function () {\n\n            // Get XML nodes by using an Xpath expression. This results in a call to the host.\n            xmlPart.getNodesAsync(\"/cp:coreProperties/dc:subject\", function (getNodesAsyncResult) {\n                \n                // Get the first node returned by using the Xpath expression.\n                // This will be the subject element in this example.\n                var subjectNode = getNodesAsyncResult.value[0];\n                \n                // Set the text value of the subject node and use the asyncContext. \n                // This results in a call to the host.  The results are logged to the browser console.\n                subjectNode.setTextAsync(\n                    \"newSubject\", \n                    {asyncContext: \"StateNormal\"}, \n                    function (setTextAsyncResult) {\n                        console.log(\"The status of the call: \" + setTextAsyncResult.status);\n                        console.log(\"The asyncContext value = \" + setTextAsyncResult.asyncContext);\n                });\n            });\n        });\n    });\n});\n```"
  name: setTextAsync(text, options, callback)
  fullName: setTextAsync(text, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setTextAsync(text: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: text
      description: <span data-ttu-id="e02b1-p114">Erforderlich. Der Textwert des XML-Knotens.</span><span class="sxs-lookup"><span data-stu-id="e02b1-p114">Required. The text value of the XML node.</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="e02b1-200">Stellt eine Option zum Beibehalten von Kontextdaten eines beliebigen Typs unverändert zur Verwendung in einem Rückruf bereit.</span><span class="sxs-lookup"><span data-stu-id="e02b1-200">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="e02b1-201">Optional.</span><span class="sxs-lookup"><span data-stu-id="e02b1-201">Optional.</span></span> <span data-ttu-id="e02b1-202">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->ist.</span><span class="sxs-lookup"><span data-stu-id="e02b1-202">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlNode.setTextAsync_1
  summary: <span data-ttu-id="e02b1-203">Legt den Text eines XML-Knotens in einer benutzerdefinierten XML-Komponente asynchron fest.</span><span class="sxs-lookup"><span data-stu-id="e02b1-203">Asynchronously sets the text of an XML node in a custom XML part.</span></span>
  remarks: <table> <tr><td><span data-ttu-id="e02b1-204">Hosts</span><span class="sxs-lookup"><span data-stu-id="e02b1-204">Hosts</span></span></td><td><span data-ttu-id="e02b1-205">Word</span><span class="sxs-lookup"><span data-stu-id="e02b1-205">Word</span></span></td></tr> <tr><td><span data-ttu-id="e02b1-206">Anforderungs Sätze</span><span class="sxs-lookup"><span data-stu-id="e02b1-206">Requirement Sets</span></span></td><td><span data-ttu-id="e02b1-207">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="e02b1-207">CustomXmlParts</span></span></td></tr> </table>
  name: setTextAsync(text, callback)
  fullName: setTextAsync(text, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setTextAsync(text: string, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: text
      description: <span data-ttu-id="e02b1-p116">Erforderlich. Der Textwert des XML-Knotens.</span><span class="sxs-lookup"><span data-stu-id="e02b1-p116">Required. The text value of the XML node.</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="e02b1-210">Optional.</span><span class="sxs-lookup"><span data-stu-id="e02b1-210">Optional.</span></span> <span data-ttu-id="e02b1-211">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->ist.</span><span class="sxs-lookup"><span data-stu-id="e02b1-211">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlNode.setXmlAsync
  summary: <span data-ttu-id="e02b1-212">Legt den XML-Knoten fest.</span><span class="sxs-lookup"><span data-stu-id="e02b1-212">Sets the node XML.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="e02b1-213">Anforderungs Sätze</span><span class="sxs-lookup"><span data-stu-id="e02b1-213">Requirement Sets</span></span></td><td><span data-ttu-id="e02b1-214">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="e02b1-214">CustomXmlParts</span></span></td></tr></table>

    #### <span data-ttu-id="e02b1-215">Beispiele</span><span class="sxs-lookup"><span data-stu-id="e02b1-215">Examples</span></span>


    ```javascript

    function setXmlNodeInnerXml() {
        Office.context.document.customXmlParts.getByIdAsync(
            "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
            var xmlPart = result.value;
            xmlPart.getNodesAsync('*', function (nodeResults) {
                for (i = 0; i < nodeResults.value.length; i++) {
                    var node = nodeResults.value[i];
                    node.setXmlAsync("<childNode>" + i + "</childNode>");
                }
            });
        });
    }

    ```
  name: setXmlAsync(xml, options, callback)
  fullName: setXmlAsync(xml, options, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setXmlAsync(xml: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: xml
      description: <span data-ttu-id="e02b1-216">Der XML-Code, der für den Knoten festgelegt werden soll</span><span class="sxs-lookup"><span data-stu-id="e02b1-216">The XML to be set on the node</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="e02b1-217">Stellt eine Option zum Beibehalten von Kontextdaten eines beliebigen Typs unverändert zur Verwendung in einem Rückruf bereit.</span><span class="sxs-lookup"><span data-stu-id="e02b1-217">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="e02b1-218">Optional.</span><span class="sxs-lookup"><span data-stu-id="e02b1-218">Optional.</span></span> <span data-ttu-id="e02b1-219">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->ist.</span><span class="sxs-lookup"><span data-stu-id="e02b1-219">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlNode.setXmlAsync_1
  summary: <span data-ttu-id="e02b1-220">Legt den XML-Knoten fest.</span><span class="sxs-lookup"><span data-stu-id="e02b1-220">Sets the node XML.</span></span>
  remarks: <table><tr><td><span data-ttu-id="e02b1-221">Anforderungs Sätze</span><span class="sxs-lookup"><span data-stu-id="e02b1-221">Requirement Sets</span></span></td><td><span data-ttu-id="e02b1-222">CustomXmlParts</span><span class="sxs-lookup"><span data-stu-id="e02b1-222">CustomXmlParts</span></span></td></tr></table>
  name: setXmlAsync(xml, callback)
  fullName: setXmlAsync(xml, callback)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setXmlAsync(xml: string, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: xml
      description: <span data-ttu-id="e02b1-223">Der XML-Code, der für den Knoten festgelegt werden soll</span><span class="sxs-lookup"><span data-stu-id="e02b1-223">The XML to be set on the node</span></span>
      type:
      - string
    - id: callback
      description: <span data-ttu-id="e02b1-224">Optional.</span><span class="sxs-lookup"><span data-stu-id="e02b1-224">Optional.</span></span> <span data-ttu-id="e02b1-225">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office.Office.AsyncResult)<!-- -->ist.</span><span class="sxs-lookup"><span data-stu-id="e02b1-225">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.CustomXmlNode.baseName
  summary: <span data-ttu-id="e02b1-226">Ruft den Basisnamen des Knotens ohne Namespacepräfix ab, falls vorhanden.</span><span class="sxs-lookup"><span data-stu-id="e02b1-226">Gets the base name of the node without the namespace prefix, if one exists.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"e02b1-227\">Anforderungs Sätze</span><span class=\"sxs-lookup\"><span data-stu-id=\"e02b1-227\">Requirement Sets</span></span></td><td><span data-ttu-id=\"e02b1-228\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"e02b1-228\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"e02b1-229\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"e02b1-229\">Examples</span></span>\n\n```javascript\nfunction showXmlNodeBaseNames() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                write(node.baseName);\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: baseName
  fullName: baseName
  langs:
  - typeScript
  type: property
  syntax:
    content: 'baseName: string;'
    return:
      type:
      - string
- uid: office.Office.CustomXmlNode.namespaceUri
  summary: <span data-ttu-id="e02b1-230">Ruft die Zeichenfolgen-GUID des CustomXMLPart ab.</span><span class="sxs-lookup"><span data-stu-id="e02b1-230">Retrieves the string GUID of the CustomXMLPart.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"e02b1-231\">Anforderungs Sätze</span><span class=\"sxs-lookup\"><span data-stu-id=\"e02b1-231\">Requirement Sets</span></span></td><td><span data-ttu-id=\"e02b1-232\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"e02b1-232\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"e02b1-233\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"e02b1-233\">Examples</span></span>\n\n```javascript\nfunction showXmlNamespaceUri() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                write(node.namespaceUri);\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: namespaceUri
  fullName: namespaceUri
  langs:
  - typeScript
  type: property
  syntax:
    content: 'namespaceUri: string;'
    return:
      type:
      - string
- uid: office.Office.CustomXmlNode.nodeType
  summary: <span data-ttu-id="e02b1-234">Ruft den Typ des CustomXMLNode-Objekts ab.</span><span class="sxs-lookup"><span data-stu-id="e02b1-234">Gets the type of the CustomXMLNode.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"e02b1-235\">Anforderungs Sätze</span><span class=\"sxs-lookup\"><span data-stu-id=\"e02b1-235\">Requirement Sets</span></span></td><td><span data-ttu-id=\"e02b1-236\">CustomXmlParts</span><span class=\"sxs-lookup\"><span data-stu-id=\"e02b1-236\">CustomXmlParts</span></span></td></tr></table>\n#### <span data-ttu-id=\"e02b1-237\">Examples</span><span class=\"sxs-lookup\"><span data-stu-id=\"e02b1-237\">Examples</span></span>\n\n```javascript\nfunction showXmlNodeType() {\n    Office.context.document.customXmlParts.getByIdAsync(\n        \"{3BC85265-09D6-4205-B665-8EB239A8B9A1}\", function (result) {\n        var xmlPart = result.value;\n        xmlPart.getNodesAsync('*/*', function (nodeResults) {\n            for (i = 0; i < nodeResults.value.length; i++) {\n                var node = nodeResults.value[i];\n                write(node.nodeType);\n            }\n        });\n    });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: nodeType
  fullName: nodeType
  langs:
  - typeScript
  type: property
  syntax:
    content: 'nodeType: string;'
    return:
      type:
      - string
