### YamlMime:UniversalReference
ms.openlocfilehash: 5dab99a448a068029cf3d0673127bd5958b42de5
ms.sourcegitcommit: 3771b97cffd6e0510fd4e9c6288db696cd0c0ca9
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 11/30/2018
ms.locfileid: "26996067"
items:
- uid: office.Office.Document
  summary: <span data-ttu-id="85e7e-101">Eine abstrakte Klasse, die das Dokument darstellt, mit dem das Add-In interagiert.</span><span class="sxs-lookup"><span data-stu-id="85e7e-101">An abstract class that represents the document the add-in is interacting with.</span></span>
  remarks: <table><tr><td><span data-ttu-id="85e7e-102">Hosts</span><span class="sxs-lookup"><span data-stu-id="85e7e-102">Hosts</span></span></td><td><span data-ttu-id="85e7e-103">Access, Excel, PowerPoint, Project, Word</span><span class="sxs-lookup"><span data-stu-id="85e7e-103">Access, Excel, PowerPoint, Project, Word</span></span></td></tr></table>
  name: Office.Document
  fullName: Office.Document
  langs:
  - typeScript
  type: interface
  package: office
  children:
  - office.Office.Document.addHandlerAsync
  - office.Office.Document.bindings
  - office.Office.Document.customXmlParts
  - office.Office.Document.getActiveViewAsync
  - office.Office.Document.getFileAsync
  - office.Office.Document.getFilePropertiesAsync
  - office.Office.Document.getMaxResourceIndexAsync
  - office.Office.Document.getMaxTaskIndexAsync
  - office.Office.Document.getProjectFieldAsync
  - office.Office.Document.getResourceByIndexAsync
  - office.Office.Document.getResourceFieldAsync
  - office.Office.Document.getSelectedDataAsync
  - office.Office.Document.getSelectedResourceAsync
  - office.Office.Document.getSelectedTaskAsync
  - office.Office.Document.getSelectedViewAsync
  - office.Office.Document.getTaskAsync
  - office.Office.Document.getTaskByIndexAsync
  - office.Office.Document.getTaskFieldAsync
  - office.Office.Document.getWSSUrlAsync
  - office.Office.Document.goToByIdAsync
  - office.Office.Document.mode
  - office.Office.Document.removeHandlerAsync
  - office.Office.Document.setResourceFieldAsync
  - office.Office.Document.setSelectedDataAsync
  - office.Office.Document.setTaskFieldAsync
  - office.Office.Document.settings
  - office.Office.Document.url
- uid: office.Office.Document.addHandlerAsync
  summary: <span data-ttu-id="85e7e-104">Fügt einen Ereignishandler für ein Document-Objektereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="85e7e-104">Adds an event handler for a Document object event.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"85e7e-105\">Anforderungssätze</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-105\">Requirement Sets</span></span></td><td><span data-ttu-id=\"85e7e-106\">DocumentEvents</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-106\">DocumentEvents</span></span></td></tr></table>\n\n<span data-ttu-id=\"85e7e-107\">Sie können mehrere Ereignishandler für den angegebenen EventType hinzufügen, solange die Namen der einzelnen Ereignishandlerfunktionen eindeutig sind.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-107\">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>\n\n<span data-ttu-id=\"85e7e-108\">**Supportdetails**</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-108\">**Support details**</span></span>\n\n<span data-ttu-id=\"85e7e-p101\">Ein Häkchen (v) in der folgenden Matrix weist darauf hin, dass diese Methode in der entsprechenden Office-Hostanwendung unterstützt wird. Eine leere Zelle weist darauf hin, dass die Office-Hostanwendung diese Methode nicht unterstützt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-p101\">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>\n\n<span data-ttu-id=\"85e7e-111\">Weitere Informationen zu Office-Host-Anwendung und Server-Anforderungen, finden Sie unter [Anforderungen für die Ausführung von Office-Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-111\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"85e7e-112\">*Unterstützte Hosts nach Plattform*</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-112\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"85e7e-113\">Office für Windows Desktop</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-113\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"85e7e-114\">Office Online (im Browser)</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-114\">Office Online (in browser)</span></span> </th><th> <span data-ttu-id=\"85e7e-115\">Office für iPad</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-115\">Office for iPad</span></span> </th><th> <span data-ttu-id=\"85e7e-116\">Office for Mac</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-116\">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id=\"85e7e-117\"><strong>Excel</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-117\"><strong> Excel </strong></span></span></td><td> <span data-ttu-id=\"85e7e-118\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-118\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-119\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-119\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-120\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-120\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-121\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-121\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"85e7e-122\"><strong>OneNote</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-122\"><strong> OneNote </strong></span></span></td><td> </td><td> <span data-ttu-id=\"85e7e-123\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-123\">Y</span></span> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id=\"85e7e-124\"><strong>PowerPoint</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-124\"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id=\"85e7e-125\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-125\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-126\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-126\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-127\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-127\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-128\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-128\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"85e7e-129\"><strong>Projekt</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-129\"><strong> Project </strong></span></span></td><td> <span data-ttu-id=\"85e7e-130\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-130\">Y</span></span> </td><td> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id=\"85e7e-131\"><strong>Word</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-131\"><strong> Word </strong></span></span></td><td> <span data-ttu-id=\"85e7e-132\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-132\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-133\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-133\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-134\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-134\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-135\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-135\">Y</span></span> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"85e7e-136\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-136\">Examples</span></span>\n\n```javascript\n// The following example adds an event handler for the SelectionChanged event of a document\nfunction addSelectionChangedEventHandler() {\n    Office.context.document.addHandlerAsync(Office.EventType.DocumentSelectionChanged, MyHandler);\n}\n\nfunction MyHandler(eventArgs) {\n    write('Event raised: ' + eventArgs.type);\n    doSomethingWithDocument(eventArgs.document);\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```\n```javascript\n// The following code example adds a handler for the ResourceSelectionChanged event.\n// When the resource selection changes in the document, it gets the GUID of the selected resource.\n// The example assumes your add-in has a reference to the jQuery library and that the\n// following page control is defined in the content div in the page body:\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n\n            // After the DOM is loaded, add-in-specific code can run.\n            Office.context.document.addHandlerAsync(\n                Office.EventType.ResourceSelectionChanged,\n                getResourceGuid);\n        });\n    };\n\n    // Get the GUID of the selected resource and display it in the add-in.\n    function getResourceGuid() {\n        Office.context.document.getSelectedResourceAsync(\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    $('#message').html(result.value);\n                }\n            }\n        );\n    }\n\n    function onError(error) {\n        $('#message').html(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n\n// For a complete code sample that shows how to use a ResourceSelectionChanged\n// event handler in a Project add-in, see \"Create your first task pane add-in\n// for Project 2013 by using a text editor.\"\n// https://docs.microsoft.com/office/dev/add-ins/project/create-your-first-task-pane-add-in-for-project-by-using-a-text-editor\n```\n```javascript\n// The following code example adds a handler for the TaskSelectionChanged event.\n// When the task selection changes in the document, it gets the GUID of the\n// selected task.\n// The example assumes your add-in has a reference to the jQuery library and that\n// the following page control is defined in the content div in the page body:\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n\n            // After the DOM is loaded, add-in-specific code can run.\n            Office.context.document.addHandlerAsync(\n                Office.EventType.TaskSelectionChanged,\n                getTaskGuid);\n            getTaskGuid();\n        });\n    };\n\n    // Get the GUID of the selected task and display it in the add-in.\n    function getTaskGuid() {\n        Office.context.document.getSelectedTaskAsync(\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    $('#message').html(result.value);\n                }\n            }\n        );\n    }\n\n    function onError(error) {\n        $('#message').html(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n```\n```javascript\n// The following code example adds a handler for the ViewSelectionChanged\n// event. When the active view changes, it gets the name and type of the active view.\n// The example assumes your add-in has a reference to the jQuery library and that\n// the following page control is defined in the content div in the page body:\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n\n            // After the DOM is loaded, add-in-specific code can run.\n            Office.context.document.addHandlerAsync(\n                Office.EventType.ViewSelectionChanged,\n                getActiveView);\n            getActiveView();\n        });\n    };\n\n    // Get the name and type of the active view and display it in the add-in.\n    function getActiveView() {\n        Office.context.document.getSelectedViewAsync(\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    var output = String.format(\n                        'View name: {0}<br/>View type: {1}',\n                        result.value.viewName, result.value.viewType);\n                    $('#message').html(output);\n                }\n            }\n        );\n    }\n\n    function onError(error) {\n        $('#message').html(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n\n// For an example that shows how to use a ViewSelectionChanged event handler in a\n// Project add-in, see \"Create your first task pane add-in for Project 2013 by\n// using a text editor.\"\n// https://docs.microsoft.com/office/dev/add-ins/project/create-your-first-task-pane-add-in-for-project-by-using-a-text-editor\n```\n```javascript\n// The following code example uses addHandlerAsync to add an event handler for the ViewSelectionChanged event.\n// When the active view changes, the handler checks the view type. It enables a button if the view is a resource\n// view and disables the button if it isn't a resource view. Choosing the button gets the GUID of the selected\n// resource and displays it in the add-in.\n// The example assumes that your add-in has a reference to the jQuery library and that the following page controls\n// are defined in the content div in the page body:\n// <input id=\"get-info\" type=\"button\" value=\"Get info\" disabled=\"disabled\" /><br />\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n\n            // After the DOM is loaded, add-in-specific code can run.\n            // Add a ViewSelectionChanged event handler.\n            Office.context.document.addHandlerAsync(\n                Office.EventType.ViewSelectionChanged,\n                getActiveView);\n            $('#get-info').click(getResourceGuid);\n\n            // This example calls the handler on page load to get the active view\n            // of the default page.\n            getActiveView();\n        });\n    };\n\n    // Activate the button based on the active view type of the document.\n    // This is the ViewSelectionChanged event handler.\n    function getActiveView() {\n        Office.context.document.getSelectedViewAsync(\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    var viewType = result.value.viewType;\n                    if (viewType == 6 ||   // ResourceForm\n                        viewType == 7 ||   // ResourceSheet\n                        viewType == 8 ||   // ResourceGraph\n                        viewType == 15) {  // ResourceUsage\n                        $('#get-info').removeAttr('disabled');\n                    }\n                    else {\n                        $('#get-info').attr('disabled', 'disabled');\n                    }\n                    var output = String.format(\n                        'View name: {0}<br/>View type: {1}',\n                        result.value.viewName, viewType);\n                    $('#message').html(output);\n                }\n            }\n        );\n    }\n\n    // Get the GUID of the currently selected resource and display it in the add-in.\n    function getResourceGuid() {\n        Office.context.document.getSelectedResourceAsync(\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    $('#message').html('Resource GUID: ' + result.value);\n                }\n            }\n        );\n    }\n\n    function onError(error) {\n        $('#message').html(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n\n// For a complete code sample that shows how to use a ViewSelectionChanged event handler in a Project add-in,\n// see \"Create your first task pane add-in for Project by using a text editor.\"\n// https://docs.microsoft.com/office/dev/add-ins/project/create-your-first-task-pane-add-in-for-project-by-using-a-text-editor\n```"
  name: addHandlerAsync(eventType, handler, options, callback)
  fullName: addHandlerAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'addHandlerAsync(eventType: Office.EventType, handler: any, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="85e7e-137">Für ein Document-Objektereignis kann der EventType-Parameter angegeben werden als `Office.EventType.Document.SelectionChanged` oder `Office.EventType.Document.ActiveViewChanged` <!-- -->, oder der entsprechende Textwert dieser Enumeration.</span><span class="sxs-lookup"><span data-stu-id="85e7e-137">For a Document object event, the eventType parameter can be specified as `Office.EventType.Document.SelectionChanged` or `Office.EventType.Document.ActiveViewChanged`<!-- -->, or the corresponding text value of this enumeration.</span></span>
      type:
      - Office.EventType
    - id: handler
      description: <span data-ttu-id="85e7e-138">Der Ereignishandlerfunktion hinzufügen, deren einziger Parameter vom Typ [Office.DocumentSelectionChangedEventArgs](xref:office.Office.DocumentSelectionChangedEventArgs)ist<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-138">The event handler function to add, whose only parameter is of type [Office.DocumentSelectionChangedEventArgs](xref:office.Office.DocumentSelectionChangedEventArgs)<!-- -->.</span></span> <span data-ttu-id="85e7e-139">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="85e7e-139">Required.</span></span>
      type:
      - any
    - id: options
      description: <span data-ttu-id="85e7e-140">Bietet die Möglichkeit zur Beibehaltung von Kontextdaten eines beliebigen Typs, die für die Verwendung in einem Rückruf unverändert.</span><span class="sxs-lookup"><span data-stu-id="85e7e-140">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="85e7e-141">Optional.</span><span class="sxs-lookup"><span data-stu-id="85e7e-141">Optional.</span></span> <span data-ttu-id="85e7e-142">Eine Funktion, die bei der Rückgabe des Rückrufs aufgerufen wird, dessen einziger Parameter vom Typ [Office.AsyncResult](xref:office.Office.AsyncResult)ist<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-142">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Document.bindings
  summary: <span data-ttu-id="85e7e-143">Ruft ein Objekt ab, das Zugriff auf die im Dokument definierten Bindungen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="85e7e-143">Gets an object that provides access to the bindings defined in the document.</span></span>
  remarks: "<span data-ttu-id=\"85e7e-144\">Das Document-Objekt nicht direkt in Ihrem Skript instanziiert werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-144\">You don't instantiate the Document object directly in your script.</span></span> <span data-ttu-id=\"85e7e-145\">Verwenden Sie zum Aufrufen der Member des Document-Objekts zur Interaktion mit dem aktuellen Dokument oder Arbeitsblatt `Office.context.document` in Ihr Skript.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-145\">To call members of the Document object to interact with the current document or worksheet, use `Office.context.document` in your script.</span></span>\n\n<span data-ttu-id=\"85e7e-146\">**Supportdetails**</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-146\">**Support details**</span></span>\n\n<span data-ttu-id=\"85e7e-p105\">Ein Häkchen (v) in der folgenden Matrix weist darauf hin, dass diese Eigenschaft in der entsprechenden Office-Hostanwendung unterstützt wird. Eine leere Zelle weist darauf hin, dass die Office-Hostanwendung diese Eigenschaft nicht unterstützt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-p105\">A capital Y in the following matrix indicates that this property is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this property.</span></span>\n\n<span data-ttu-id=\"85e7e-149\">Weitere Informationen zu Office-Host-Anwendung und Server-Anforderungen, finden Sie unter [Anforderungen für die Ausführung von Office-Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-149\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"85e7e-150\">*Unterstützte Hosts nach Plattform*</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-150\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"85e7e-151\">Office für Windows Desktop</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-151\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"85e7e-152\">Office Online (im Browser)</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-152\">Office Online (in browser)</span></span> </th><th> <span data-ttu-id=\"85e7e-153\">Office für iPad</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-153\">Office for iPad</span></span> </th><th> <span data-ttu-id=\"85e7e-154\">Office for Mac</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-154\">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id=\"85e7e-155\"><strong>Zugriff</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-155\"><strong> Access </strong></span></span></td><td> </td><td> <span data-ttu-id=\"85e7e-156\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-156\">Y</span></span> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id=\"85e7e-157\"><strong>PowerPoint</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-157\"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id=\"85e7e-158\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-158\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-159\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-159\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-160\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-160\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-161\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-161\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"85e7e-162\"><strong>Word</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-162\"><strong> Word </strong></span></span></td><td> <span data-ttu-id=\"85e7e-163\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-163\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-164\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-164\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-165\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-165\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-166\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-166\">Y</span></span> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"85e7e-167\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-167\">Examples</span></span>\n\n```javascript\nfunction displayAllBindings() {\n    Office.context.document.bindings.getAllAsync(function (asyncResult) {\n        var bindingString = '';\n        for (var i in asyncResult.value) {\n            bindingString += asyncResult.value[i].id + '\\n';\n        }\n        write('Existing bindings: ' + bindingString);\n    });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: bindings
  fullName: bindings
  langs:
  - typeScript
  type: property
  syntax:
    content: 'bindings: Bindings;'
    return:
      type:
      - office.Office.Bindings
- uid: office.Office.Document.customXmlParts
  summary: <span data-ttu-id="85e7e-168">Ruft ein Objekt ab, das die benutzerdefinierten XML-Komponenten im Dokument darstellt.</span><span class="sxs-lookup"><span data-stu-id="85e7e-168">Gets an object that represents the custom XML parts in the document.</span></span>
  remarks: "<span data-ttu-id=\"85e7e-169\">**Supportdetails**</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-169\">**Support details**</span></span>\n\n<span data-ttu-id=\"85e7e-p106\">Ein Häkchen (v) in der folgenden Matrix weist darauf hin, dass diese Eigenschaft in der entsprechenden Office-Hostanwendung unterstützt wird. Eine leere Zelle weist darauf hin, dass die Office-Hostanwendung diese Eigenschaft nicht unterstützt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-p106\">A capital Y in the following matrix indicates that this property is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this property.</span></span>\n\n<span data-ttu-id=\"85e7e-172\">Weitere Informationen zu Office-Host-Anwendung und Server-Anforderungen, finden Sie unter [Anforderungen für die Ausführung von Office-Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-172\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"85e7e-173\">*Unterstützte Hosts nach Plattform*</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-173\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"85e7e-174\">Office für Windows Desktop</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-174\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"85e7e-175\">Office Online (im Browser)</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-175\">Office Online (in browser)</span></span> </th><th> <span data-ttu-id=\"85e7e-176\">Office für iPad</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-176\">Office for iPad</span></span> </th><th> <span data-ttu-id=\"85e7e-177\">Office for Mac</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-177\">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id=\"85e7e-178\"><strong>Word</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-178\"><strong> Word </strong></span></span></td><td> <span data-ttu-id=\"85e7e-179\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-179\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-180\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-180\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-181\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-181\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-182\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-182\">Y</span></span> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"85e7e-183\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-183\">Examples</span></span>\n\n```javascript\nfunction getCustomXmlParts(){\n    Office.context.document.customXmlParts.getByNamespaceAsync('http://tempuri.org', function (asyncResult) {\n        write('Retrieved ' + asyncResult.value.length + ' custom XML parts');\n    });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: customXmlParts
  fullName: customXmlParts
  langs:
  - typeScript
  type: property
  syntax:
    content: 'customXmlParts: CustomXmlParts;'
    return:
      type:
      - office.Office.CustomXmlParts
- uid: office.Office.Document.getActiveViewAsync
  summary: <span data-ttu-id="85e7e-184">Gibt den Status der aktuellen Ansicht der Präsentation ("Bearbeiten" oder "Lesen") zurück.</span><span class="sxs-lookup"><span data-stu-id="85e7e-184">Returns the state of the current view of the presentation (edit or read).</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="85e7e-185">Anforderungssätze</span><span class="sxs-lookup"><span data-stu-id="85e7e-185">Requirement Sets</span></span></td><td><span data-ttu-id="85e7e-186">ActiveView</span><span class="sxs-lookup"><span data-stu-id="85e7e-186">ActiveView</span></span></td></tr></table>


    <span data-ttu-id="85e7e-187">Kann ein Ereignis auslösen, wenn die Ansicht geändert wird.</span><span class="sxs-lookup"><span data-stu-id="85e7e-187">Can trigger an event when the view changes.</span></span>


    <span data-ttu-id="85e7e-188">**Supportdetails**</span><span class="sxs-lookup"><span data-stu-id="85e7e-188">**Support details**</span></span>


    <span data-ttu-id="85e7e-p107">Ein Häkchen (v) in der folgenden Matrix weist darauf hin, dass diese Methode in der entsprechenden Office-Hostanwendung unterstützt wird. Eine leere Zelle weist darauf hin, dass die Office-Hostanwendung diese Methode nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="85e7e-p107">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>


    <span data-ttu-id="85e7e-191">Weitere Informationen zu Office-Host-Anwendung und Server-Anforderungen, finden Sie unter [Anforderungen für die Ausführung von Office-Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-191">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="85e7e-192">*Unterstützte Hosts nach Plattform*</span><span class="sxs-lookup"><span data-stu-id="85e7e-192">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="85e7e-193">Office für Windows Desktop</span><span class="sxs-lookup"><span data-stu-id="85e7e-193">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="85e7e-194">Office Online (im Browser)</span><span class="sxs-lookup"><span data-stu-id="85e7e-194">Office Online (in browser)</span></span> </th><th> <span data-ttu-id="85e7e-195">Office für iPad</span><span class="sxs-lookup"><span data-stu-id="85e7e-195">Office for iPad</span></span> </th><th> <span data-ttu-id="85e7e-196">Office for Mac</span><span class="sxs-lookup"><span data-stu-id="85e7e-196">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id="85e7e-197"><strong>PowerPoint</strong></span><span class="sxs-lookup"><span data-stu-id="85e7e-197"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id="85e7e-198">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-198">Y</span></span> </td><td> <span data-ttu-id="85e7e-199">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-199">Y</span></span> </td><td> <span data-ttu-id="85e7e-200">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-200">Y</span></span> </td><td> <span data-ttu-id="85e7e-201">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-201">Y</span></span> </td></tr> </table>

    #### <a name="examples"></a><span data-ttu-id="85e7e-202">Beispiele</span><span class="sxs-lookup"><span data-stu-id="85e7e-202">Examples</span></span>


    ```javascript

    function getFileView() {
        // Get whether the current view is edit or read.
        Office.context.document.getActiveViewAsync(function (asyncResult) {
            if (asyncResult.status == "failed") {
                showMessage("Action failed with error: " + asyncResult.error.message);
            }
            else {
                showMessage(asyncResult.value);
            }
        });
    }

    ```
  name: getActiveViewAsync(options, callback)
  fullName: getActiveViewAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getActiveViewAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<"edit" | "read">) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="85e7e-203">Bietet die Möglichkeit zur Beibehaltung von Kontextdaten eines beliebigen Typs, die für die Verwendung in einem Rückruf unverändert.</span><span class="sxs-lookup"><span data-stu-id="85e7e-203">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="85e7e-204">Optional.</span><span class="sxs-lookup"><span data-stu-id="85e7e-204">Optional.</span></span> <span data-ttu-id="85e7e-205">Eine Funktion, die bei der Rückgabe des Rückrufs aufgerufen wird, dessen einziger Parameter vom Typ [Office.AsyncResult](xref:office.Office.AsyncResult)ist<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-205">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="85e7e-206">Die `value` -Eigenschaft des Ergebnisses ist der Status der aktuellen Ansicht der Präsentation.</span><span class="sxs-lookup"><span data-stu-id="85e7e-206">The `value` property of the result is the state of the presentation's current view.</span></span> <span data-ttu-id="85e7e-207">Der zurückgegebene Wert kann entweder "Bearbeiten" oder "Lesen".</span><span class="sxs-lookup"><span data-stu-id="85e7e-207">The value returned can be either "edit" or "read".</span></span> <span data-ttu-id="85e7e-208">"edit" entspricht der Ansichten, in dem Sie Folien, z. B. Normal oder Gliederungsansicht bearbeiten können.</span><span class="sxs-lookup"><span data-stu-id="85e7e-208">"edit" corresponds to any of the views in which you can edit slides, such as Normal or Outline View.</span></span> <span data-ttu-id="85e7e-209">"Lesen" entspricht Bildschirmpräsentation oder Leseansicht.</span><span class="sxs-lookup"><span data-stu-id="85e7e-209">"read" corresponds to either Slide Show or Reading View.</span></span>
      type:
      - '(result: AsyncResult<"edit" | "read">) => void'
- uid: office.Office.Document.getFileAsync
  summary: <span data-ttu-id="85e7e-210">Gibt die gesamte Dokumentdatei in Segmenten von bis zu 4194304 Byte (4 MB) zurück.</span><span class="sxs-lookup"><span data-stu-id="85e7e-210">Returns the entire document file in slices of up to 4194304 bytes (4 MB).</span></span> <span data-ttu-id="85e7e-211">Für Add-Ins für iOS werden Dateisegmente von bis zu 65536 (64 KB) unterstützt.</span><span class="sxs-lookup"><span data-stu-id="85e7e-211">For add-ins for iOS, file slice is supported up to 65536 (64 KB).</span></span> <span data-ttu-id="85e7e-212">Beachten Sie, dass die Angabe einer Dateisegmentgröße über dem zulässigen Grenzwert zu einem „Internen Fehler“ führt.</span><span class="sxs-lookup"><span data-stu-id="85e7e-212">Note that specifying file slice size of above permitted limit will result in an "Internal Error" failure.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"85e7e-213\">Anforderungssätze</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-213\">Requirement Sets</span></span></td><td><span data-ttu-id=\"85e7e-214\">Datei</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-214\">File</span></span></td></tr></table>\n\n<span data-ttu-id=\"85e7e-215\">Für Add-Ins in Office-hostanwendungen als Office für iOS ausführen unterstützt die GetFileAsync-Methode beim Abrufen von Dateien in bis zu 4194304 Byte (4 MB) großen Segmenten.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-215\">For add-ins running in Office host applications other than Office for iOS, the getFileAsync method supports getting files in slices of up to 4194304 bytes (4 MB).</span></span> <span data-ttu-id=\"85e7e-216\">Für Add-Ins, die in Office für iOS-Apps ausgeführt werden, unterstützt die getFileAsync-Methode den Abruf von Dateien in Segmenten bis zu 65536 Byte (64 KB).</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-216\">For add-ins running in Office for iOS apps, the getFileAsync method supports getting files in slices of up to 65536 (64 KB).</span></span>\n\n<span data-ttu-id=\"85e7e-217\">FileType-Parameter kann mithilfe der [Office.FileType](xref:office.Office.FileType) -Enumeration oder Textwerte angegeben werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-217\">The fileType parameter can be specified by using the [Office.FileType](xref:office.Office.FileType) enumeration or text values.</span></span> <span data-ttu-id=\"85e7e-218\">Jedoch die möglichen Werte, die mit dem Host unterschiedlich sein:</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-218\">But the possible values vary with the host:</span></span>\n\n<span data-ttu-id=\"85e7e-219\">Excel für Windows-Desktop, iPad und Excel Online:`Office.FileType.Compressed`</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-219\">Excel for Windows desktop, iPad, and Excel Online: `Office.FileType.Compressed`</span></span>\n\n<span data-ttu-id=\"85e7e-220\">Excel für Mac: `Office.FileType.Compressed` <!-- -->,`Office.FileType.Pdf`</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-220\">Excel for Mac: `Office.FileType.Compressed`<!-- -->, `Office.FileType.Pdf`</span></span>\n\n<span data-ttu-id=\"85e7e-221\">PowerPoint für Windows-Desktop, Mac, iPad und PowerPoint Online: `Office.FileType.Compressed` <!-- -->,`Office.FileType.Pdf`</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-221\">PowerPoint for Windows desktop, Mac, iPad, and PowerPoint Online: `Office.FileType.Compressed`<!-- -->, `Office.FileType.Pdf`</span></span>\n\n<span data-ttu-id=\"85e7e-222\">Word für Windows-Desktop, Mac, iPad und Word Online: `Office.FileType.Compressed` <!-- -->, `Office.FileType.Pdf` <!-- -->,`Office.FileType.Text`</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-222\">Word for Windows desktop, Mac, iPad, and Word Online: `Office.FileType.Compressed`<!-- -->, `Office.FileType.Pdf`<!-- -->, `Office.FileType.Text`</span></span>\n\n<span data-ttu-id=\"85e7e-223\">**Supportdetails**</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-223\">**Support details**</span></span>\n\n<span data-ttu-id=\"85e7e-p112\">Ein Häkchen (v) in der folgenden Matrix weist darauf hin, dass diese Methode in der entsprechenden Office-Hostanwendung unterstützt wird. Eine leere Zelle weist darauf hin, dass die Office-Hostanwendung diese Methode nicht unterstützt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-p112\">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>\n\n<span data-ttu-id=\"85e7e-226\">Weitere Informationen zu Office-Host-Anwendung und Server-Anforderungen, finden Sie unter [Anforderungen für die Ausführung von Office-Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-226\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"85e7e-227\">*Unterstützte Hosts nach Plattform*</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-227\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"85e7e-228\">Office für Windows Desktop</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-228\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"85e7e-229\">Office Online (im Browser)</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-229\">Office Online (in browser)</span></span> </th><th> <span data-ttu-id=\"85e7e-230\">Office für iPad</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-230\">Office for iPad</span></span> </th><th> <span data-ttu-id=\"85e7e-231\">Office for Mac</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-231\">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id=\"85e7e-232\"><strong>Excel</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-232\"><strong> Excel </strong></span></span></td><td> <span data-ttu-id=\"85e7e-233\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-233\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-234\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-234\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-235\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-235\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-236\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-236\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"85e7e-237\"><strong>PowerPoint</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-237\"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id=\"85e7e-238\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-238\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-239\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-239\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-240\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-240\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-241\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-241\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"85e7e-242\"><strong>Word</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-242\"><strong> Word </strong></span></span></td><td> <span data-ttu-id=\"85e7e-243\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-243\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-244\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-244\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-245\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-245\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-246\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-246\">Y</span></span> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"85e7e-247\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-247\">Examples</span></span>\n\n```javascript\n// The following example gets the document in Office Open XML (\"compressed\") format in 65536 bytes (64 KB) slices.\n// Note: The implementation of app.showNotification in this example is from the Visual Studio template for Office Add-ins.\nfunction getDocumentAsCompressed() {\n    Office.context.document.getFileAsync(Office.FileType.Compressed, { sliceSize: 65536 /*64 KB*/ }, \n        function (result) {\n            if (result.status == \"succeeded\") {\n            // If the getFileAsync call succeeded, then\n            // result.value will return a valid File Object.\n            var myFile = result.value;\n            var sliceCount = myFile.sliceCount;\n            var slicesReceived = 0, gotAllSlices = true, docdataSlices = [];\n            app.showNotification(\"File size:\" + myFile.size + \" #Slices: \" + sliceCount);\n\n            // Get the file slices.\n            getSliceAsync(myFile, 0, sliceCount, gotAllSlices, docdataSlices, slicesReceived);\n            }\n            else {\n            app.showNotification(\"Error:\", result.error.message);\n            }\n    });\n}\n\nfunction getSliceAsync(file, nextSlice, sliceCount, gotAllSlices, docdataSlices, slicesReceived) {\n    file.getSliceAsync(nextSlice, function (sliceResult) {\n        if (sliceResult.status == \"succeeded\") {\n            if (!gotAllSlices) { // Failed to get all slices, no need to continue.\n                return;\n            }\n\n            // Got one slice, store it in a temporary array.\n            // (Or you can do something else, such as\n            // send it to a third-party server.)\n            docdataSlices[sliceResult.value.index] = sliceResult.value.data;\n            if (++slicesReceived == sliceCount) {\n              // All slices have been received.\n              file.closeAsync();\n              onGotAllSlices(docdataSlices);\n            }\n            else {\n                getSliceAsync(file, ++nextSlice, sliceCount, gotAllSlices, docdataSlices, slicesReceived);\n            }\n        }\n            else {\n                gotAllSlices = false;\n                file.closeAsync();\n                app.showNotification(\"getSliceAsync Error:\", sliceResult.error.message);\n            }\n    });\n}\n\nfunction onGotAllSlices(docdataSlices) {\n    var docdata = [];\n    for (var i = 0; i < docdataSlices.length; i++) {\n        docdata = docdata.concat(docdataSlices[i]);\n    }\n\n    var fileContent = new String();\n    for (var j = 0; j < docdata.length; j++) {\n        fileContent += String.fromCharCode(docdata[j]);\n    }\n\n    // Now all the file content is stored in 'fileContent' variable,\n    // you can do something with it, such as print, fax...\n}\n\n// The following example gets the document in PDF format.\nOffice.context.document.getFileAsync(Office.FileType.Pdf,\n    function(result) {\n        if (result.status == \"succeeded\") {\n            var myFile = result.value;\n            var sliceCount = myFile.sliceCount;\n            app.showNotification(\"File size:\" + myFile.size + \" #Slices: \" + sliceCount);\n            // Now, you can call getSliceAsync to download the files,\n            // as described in the previous code segment (compressed format).\n            \n            myFile.closeAsync();\n        }\n        else {\n            app.showNotification(\"Error:\", result.error.message);\n        }\n}\n);\n```"
  name: getFileAsync(fileType, options, callback)
  fullName: getFileAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getFileAsync(fileType: FileType, options?: GetFileOptions, callback?: (result: AsyncResult<Office.File>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: fileType
      description: <span data-ttu-id="85e7e-248">Das Format, in dem die Datei zurückgegeben wird</span><span class="sxs-lookup"><span data-stu-id="85e7e-248">The format in which the file will be returned</span></span>
      type:
      - office.Office.FileType
    - id: options
      description: <span data-ttu-id="85e7e-249">Bietet Optionen zum Festlegen der Größe der Segmente, denen das Dokument aufgeteilt.</span><span class="sxs-lookup"><span data-stu-id="85e7e-249">Provides options for setting the size of slices that the document will be divided into.</span></span>
      type:
      - office.Office.GetFileOptions
    - id: callback
      description: <span data-ttu-id="85e7e-250">Optional.</span><span class="sxs-lookup"><span data-stu-id="85e7e-250">Optional.</span></span> <span data-ttu-id="85e7e-251">Eine Funktion, die bei der Rückgabe des Rückrufs aufgerufen wird, dessen einziger Parameter vom Typ [Office.AsyncResult](xref:office.Office.AsyncResult)ist<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-251">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="85e7e-252">Die `value` -Eigenschaft des Ergebnisses ist das File-Objekt.</span><span class="sxs-lookup"><span data-stu-id="85e7e-252">The `value` property of the result is the File object.</span></span>
      type:
      - '(result: AsyncResult<Office.File>) => void'
- uid: office.Office.Document.getFilePropertiesAsync
  summary: <span data-ttu-id="85e7e-253">Ruft Dateieigenschaften des aktuellen Dokuments ab.</span><span class="sxs-lookup"><span data-stu-id="85e7e-253">Gets file properties of the current document.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="85e7e-254">Anforderungssätze</span><span class="sxs-lookup"><span data-stu-id="85e7e-254">Requirement Sets</span></span></td><td><span data-ttu-id="85e7e-255">Nicht in einem Satz</span><span class="sxs-lookup"><span data-stu-id="85e7e-255">Not in a set</span></span></td></tr></table>


    <span data-ttu-id="85e7e-256">Sie erhalten die URL der Datei mit der Url-Eigenschaft `asyncResult.value.url` <!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-256">You get the file's URL with the url property `asyncResult.value.url`<!-- -->.</span></span>


    <span data-ttu-id="85e7e-257">**Supportdetails**</span><span class="sxs-lookup"><span data-stu-id="85e7e-257">**Support details**</span></span>


    <span data-ttu-id="85e7e-p114">Ein Häkchen (v) in der folgenden Matrix weist darauf hin, dass diese Methode in der entsprechenden Office-Hostanwendung unterstützt wird. Eine leere Zelle weist darauf hin, dass die Office-Hostanwendung diese Methode nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="85e7e-p114">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>


    <span data-ttu-id="85e7e-260">Weitere Informationen zu Office-Host-Anwendung und Server-Anforderungen, finden Sie unter [Anforderungen für die Ausführung von Office-Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-260">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="85e7e-261">*Unterstützte Hosts nach Plattform*</span><span class="sxs-lookup"><span data-stu-id="85e7e-261">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="85e7e-262">Office für Windows Desktop</span><span class="sxs-lookup"><span data-stu-id="85e7e-262">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="85e7e-263">Office Online (im Browser)</span><span class="sxs-lookup"><span data-stu-id="85e7e-263">Office Online (in browser)</span></span> </th><th> <span data-ttu-id="85e7e-264">Office für iPad</span><span class="sxs-lookup"><span data-stu-id="85e7e-264">Office for iPad</span></span> </th><th> <span data-ttu-id="85e7e-265">Office for Mac</span><span class="sxs-lookup"><span data-stu-id="85e7e-265">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id="85e7e-266"><strong>Excel</strong></span><span class="sxs-lookup"><span data-stu-id="85e7e-266"><strong> Excel </strong></span></span></td><td> <span data-ttu-id="85e7e-267">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-267">Y</span></span> </td><td> <span data-ttu-id="85e7e-268">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-268">Y</span></span> </td><td> <span data-ttu-id="85e7e-269">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-269">Y</span></span> </td><td> <span data-ttu-id="85e7e-270">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-270">Y</span></span> </td></tr> <tr><td><span data-ttu-id="85e7e-271"><strong>PowerPoint</strong></span><span class="sxs-lookup"><span data-stu-id="85e7e-271"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id="85e7e-272">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-272">Y</span></span> </td><td> <span data-ttu-id="85e7e-273">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-273">Y</span></span> </td><td> <span data-ttu-id="85e7e-274">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-274">Y</span></span> </td><td> <span data-ttu-id="85e7e-275">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-275">Y</span></span> </td></tr> <tr><td><span data-ttu-id="85e7e-276"><strong>Word</strong></span><span class="sxs-lookup"><span data-stu-id="85e7e-276"><strong> Word </strong></span></span></td><td> <span data-ttu-id="85e7e-277">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-277">Y</span></span> </td><td> <span data-ttu-id="85e7e-278">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-278">Y</span></span> </td><td> <span data-ttu-id="85e7e-279">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-279">Y</span></span> </td><td> <span data-ttu-id="85e7e-280">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-280">Y</span></span> </td></tr> </table>

    #### <a name="examples"></a><span data-ttu-id="85e7e-281">Beispiele</span><span class="sxs-lookup"><span data-stu-id="85e7e-281">Examples</span></span>


    ```javascript

    // To read the URL of the current file, you need to write a callback function that returns the URL.

    // The following example shows how to:

    // 1. Pass an anonymous callback function that returns the value of the file's URL

    //    to the callback parameter of the getFilePropertiesAsync method.

    // 2. Display the value on the add-in's page.

    function getFileUrl() {
        // Get the URL of the current file.
        Office.context.document.getFilePropertiesAsync(function (asyncResult) {
            var fileUrl = asyncResult.value.url;
            if (fileUrl == "") {
                showMessage("The file hasn't been saved yet. Save the file and try again");
            }
            else {
                showMessage(fileUrl);
            }
        });
    }

    ```
  name: getFilePropertiesAsync(options, callback)
  fullName: getFilePropertiesAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getFilePropertiesAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<Office.FileProperties>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="85e7e-282">Bietet die Möglichkeit zur Beibehaltung von Kontextdaten eines beliebigen Typs, die für die Verwendung in einem Rückruf unverändert.</span><span class="sxs-lookup"><span data-stu-id="85e7e-282">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="85e7e-283">Eine Funktion, die bei der Rückgabe des Rückrufs aufgerufen wird, dessen einziger Parameter vom Typ [Office.AsyncResult](xref:office.Office.AsyncResult)ist<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-283">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="85e7e-284">Die `value` -Eigenschaft des Ergebnisses ist die Eigenschaften der Datei (mit der URL finden Sie unter `asyncResult.value.url` <!-- -->).</span><span class="sxs-lookup"><span data-stu-id="85e7e-284">The `value` property of the result is the file's properties (with the URL found at `asyncResult.value.url`<!-- -->).</span></span>
      type:
      - '(result: AsyncResult<Office.FileProperties>) => void'
- uid: office.Office.Document.getMaxResourceIndexAsync
  summary: >-
    <span data-ttu-id="85e7e-285">Nur Projektdokumente.</span><span class="sxs-lookup"><span data-stu-id="85e7e-285">Project documents only.</span></span> <span data-ttu-id="85e7e-286">Rufen Sie den maximalen Index der Auflistung von Ressourcen im aktuellen Projekt.</span><span class="sxs-lookup"><span data-stu-id="85e7e-286">Get the maximum index of the collection of resources in the current project.</span></span>


    <span data-ttu-id="85e7e-287">Wichtig: Diese API funktioniert nur in Project 2016 auf Windows-Desktop.</span><span class="sxs-lookup"><span data-stu-id="85e7e-287">Important: This API works only in Project 2016 on Windows desktop.</span></span>
  remarks: "<span data-ttu-id=\"85e7e-288\">**Supportdetails**</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-288\">**Support details**</span></span>\n\n<span data-ttu-id=\"85e7e-p117\">Ein Häkchen (v) in der folgenden Matrix weist darauf hin, dass diese Methode in der entsprechenden Office-Hostanwendung unterstützt wird. Eine leere Zelle weist darauf hin, dass die Office-Hostanwendung diese Methode nicht unterstützt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-p117\">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>\n\n<span data-ttu-id=\"85e7e-291\">Weitere Informationen zu Office-Host-Anwendung und Server-Anforderungen, finden Sie unter [Anforderungen für die Ausführung von Office-Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-291\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"85e7e-292\">*Unterstützte Hosts nach Plattform*</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-292\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"85e7e-293\">Office für Windows Desktop</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-293\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"85e7e-294\">Office Online (im Browser)</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-294\">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id=\"85e7e-295\"><strong>Projekt</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-295\"><strong> Project </strong></span></span></td><td> <span data-ttu-id=\"85e7e-296\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-296\">Y</span></span> </td><td> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"85e7e-297\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-297\">Examples</span></span>\n\n```javascript\n// The following code example calls getResourceTaskIndexAsync to get the maximum index of the collection \n// of resources in the current project. Then it uses the returned value and the getResourceByIndexAsync\n// method to get each resource GUID. The example assumes that your add-in has a reference to the \n// jQuery library and that the following page controls are defined in the content div in the page body:\n// <input id=\"get-info\" type=\"button\" value=\"Get info\" /><br />\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n    var resourceGuids = ;\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n\n            // After the DOM is loaded, add-in-specific code can run.\n            app.initialize();\n            $('#get-info').click(getResourceInfo);\n        });\n    };\n\n    // Get the maximum resource index, and then get the resource GUIDs.\n    function getResourceInfo() {\n        getMaxResourceIndex().then(\n            function (data) {\n                getResourceGuids(data);\n            }\n        );\n    }\n\n    // Get the maximum index of the resources for the current project.\n    function getMaxResourceIndex() {\n        var defer = $.Deferred();\n        Office.context.document.getMaxResourceIndexAsync(\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    defer.resolve(result.value);\n                }\n            }\n        );\n        return defer.promise();\n    }\n\n    // Get each resource GUID, and then display the GUIDs in the add-in.\n    // There is no 0 index for resources, so start with index 1.\n    function getResourceGuids(maxResourceIndex) {\n        var defer = $.Deferred();\n        for (var i = 1; i <= maxResourceIndex; i++) {\n            getResourceGuid(i);\n        }\n        return defer.promise();\n        function getResourceGuid(index) {\n            Office.context.document.getResourceByIndexAsync(index,\n                function (result) {\n                    if (result.status === Office.AsyncResultStatus.Succeeded) {\n                        resourceGuids.push(result.value);\n                        if (index == maxResourceIndex) {\n                            defer.resolve();\n                            $('#message').html(resourceGuids.toString());\n                        }\n                    }\n                    else {\n                        onError(result.error);\n                    }\n                }\n            );\n        }\n    }\n    function onError(error) {\n        app.showNotification(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n```"
  name: getMaxResourceIndexAsync(options, callback)
  fullName: getMaxResourceIndexAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getMaxResourceIndexAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<number>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="85e7e-298">Bietet die Möglichkeit zur Beibehaltung von Kontextdaten eines beliebigen Typs, die für die Verwendung in einem Rückruf unverändert.</span><span class="sxs-lookup"><span data-stu-id="85e7e-298">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="85e7e-299">Optional.</span><span class="sxs-lookup"><span data-stu-id="85e7e-299">Optional.</span></span> <span data-ttu-id="85e7e-300">Eine Funktion, die bei der Rückgabe des Rückrufs aufgerufen wird, dessen einziger Parameter vom Typ [Office.AsyncResult](xref:office.Office.AsyncResult)ist<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-300">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="85e7e-301">Die `value` -Eigenschaft des Ergebnisses ist die höchste Indexnummer in das aktuelle Projekt Resource-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="85e7e-301">The `value` property of the result is the highest index number in the current project's resource collection.</span></span>
      type:
      - '(result: AsyncResult<number>) => void'
- uid: office.Office.Document.getMaxTaskIndexAsync
  summary: >-
    <span data-ttu-id="85e7e-302">Nur Projektdokumente.</span><span class="sxs-lookup"><span data-stu-id="85e7e-302">Project documents only.</span></span> <span data-ttu-id="85e7e-303">Rufen Sie den maximalen Index der Auflistung von Aufgaben im aktuellen Projekt.</span><span class="sxs-lookup"><span data-stu-id="85e7e-303">Get the maximum index of the collection of tasks in the current project.</span></span>


    <span data-ttu-id="85e7e-304">Wichtig: Diese API funktioniert nur in Project 2016 auf Windows-Desktop.</span><span class="sxs-lookup"><span data-stu-id="85e7e-304">Important: This API works only in Project 2016 on Windows desktop.</span></span>
  remarks: >-
    <span data-ttu-id="85e7e-305">**Supportdetails**</span><span class="sxs-lookup"><span data-stu-id="85e7e-305">**Support details**</span></span>


    <span data-ttu-id="85e7e-p120">Ein Häkchen (v) in der folgenden Matrix weist darauf hin, dass diese Methode in der entsprechenden Office-Hostanwendung unterstützt wird. Eine leere Zelle weist darauf hin, dass die Office-Hostanwendung diese Methode nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="85e7e-p120">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>


    <span data-ttu-id="85e7e-308">Weitere Informationen zu Office-Host-Anwendung und Server-Anforderungen, finden Sie unter [Anforderungen für die Ausführung von Office-Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-308">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="85e7e-309">*Unterstützte Hosts nach Plattform*</span><span class="sxs-lookup"><span data-stu-id="85e7e-309">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="85e7e-310">Office für Windows Desktop</span><span class="sxs-lookup"><span data-stu-id="85e7e-310">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="85e7e-311">Office Online (im Browser)</span><span class="sxs-lookup"><span data-stu-id="85e7e-311">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id="85e7e-312"><strong>Projekt</strong></span><span class="sxs-lookup"><span data-stu-id="85e7e-312"><strong> Project </strong></span></span></td><td> <span data-ttu-id="85e7e-313">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-313">Y</span></span> </td><td> </td></tr> </table>

    #### <a name="examples"></a><span data-ttu-id="85e7e-314">Beispiele</span><span class="sxs-lookup"><span data-stu-id="85e7e-314">Examples</span></span>


    ```javascript

    // The following code example calls getMaxTaskIndexAsync to get the maximum index

    // of the collection of tasks in the current project. Then it uses the returned value

    // with the getTaskByIndexAsync method to get each task GUID.

    // The example assumes your add-in has a reference to the jQuery library and that the

    // following page controls are defined in the content div in the page body:

    // <input id="get-info" type="button" value="Get info" /><br />

    // <span id="message"></span>


    (function () {
        "use strict";
        var taskGuids = ;

        // The initialize function must be run each time a new page is loaded.
        Office.initialize = function (reason) {
            $(document).ready(function () {

                // After the DOM is loaded, add-in-specific code can run.
                app.initialize();
                $('#get-info').click(getTaskInfo);
            });
        };

        // Get the maximum task index, and then get the task GUIDs.
        function getTaskInfo() {
            getMaxTaskIndex().then(
                function (data) {
                    getTaskGuids(data);
                }
            );
        }

        // Get the maximum index of the tasks for the current project.
        function getMaxTaskIndex() {
            var defer = $.Deferred();
            Office.context.document.getMaxTaskIndexAsync(
                function (result) {
                    if (result.status === Office.AsyncResultStatus.Failed) {
                        onError(result.error);
                    }
                    else {
                        defer.resolve(result.value);
                    }
                }
            );
            return defer.promise();
        }

        // Get each task GUID, and then display the GUIDs in the add-in.
        function getTaskGuids(maxTaskIndex) {
            var defer = $.Deferred();
            for (var i = 0; i <= maxTaskIndex; i++) {
                getTaskGuid(i);
            }
            return defer.promise();
            function getTaskGuid(index) {
                Office.context.document.getTaskByIndexAsync(index,
                    function (result) {
                        if (result.status === Office.AsyncResultStatus.Succeeded) {
                            taskGuids.push(result.value);
                            if (index == maxTaskIndex) {
                                defer.resolve();
                                $('#message').html(taskGuids.toString());
                            }
                        }
                        else {
                            onError(result.error);
                        }
                    }
                );
            }
        }
        function onError(error) {
            app.showNotification(error.name + ' ' + error.code + ': ' + error.message);
        }
    })();

    ```
  name: getMaxTaskIndexAsync(options, callback)
  fullName: getMaxTaskIndexAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getMaxTaskIndexAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<number>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="85e7e-315">Bietet die Möglichkeit zur Beibehaltung von Kontextdaten eines beliebigen Typs, die für die Verwendung in einem Rückruf unverändert.</span><span class="sxs-lookup"><span data-stu-id="85e7e-315">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="85e7e-316">Optional.</span><span class="sxs-lookup"><span data-stu-id="85e7e-316">Optional.</span></span> <span data-ttu-id="85e7e-317">Eine Funktion, die bei der Rückgabe des Rückrufs aufgerufen wird, dessen einziger Parameter vom Typ [Office.AsyncResult](xref:office.Office.AsyncResult)ist<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-317">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="85e7e-318">Die `value` -Eigenschaft des Ergebnisses ist die höchste Indexnummer in das aktuelle Projekt Task-Auflistung.</span><span class="sxs-lookup"><span data-stu-id="85e7e-318">The `value` property of the result is the highest index number in the current project's task collection.</span></span>
      type:
      - '(result: AsyncResult<number>) => void'
- uid: office.Office.Document.getProjectFieldAsync
  summary: <span data-ttu-id="85e7e-319">Nur Projektdokumente.</span><span class="sxs-lookup"><span data-stu-id="85e7e-319">Project documents only.</span></span> <span data-ttu-id="85e7e-320">Project-Feld (z. B. Abrufen</span><span class="sxs-lookup"><span data-stu-id="85e7e-320">Get Project field (Ex.</span></span> <span data-ttu-id="85e7e-321">ProjectWebAccessURL).</span><span class="sxs-lookup"><span data-stu-id="85e7e-321">ProjectWebAccessURL).</span></span>
  remarks: "<span data-ttu-id=\"85e7e-322\">**Supportdetails**</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-322\">**Support details**</span></span>\n\n<span data-ttu-id=\"85e7e-p123\">Ein Häkchen (v) in der folgenden Matrix weist darauf hin, dass diese Methode in der entsprechenden Office-Hostanwendung unterstützt wird. Eine leere Zelle weist darauf hin, dass die Office-Hostanwendung diese Methode nicht unterstützt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-p123\">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>\n\n<span data-ttu-id=\"85e7e-325\">Weitere Informationen zu Office-Host-Anwendung und Server-Anforderungen, finden Sie unter [Anforderungen für die Ausführung von Office-Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-325\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"85e7e-326\">*Unterstützte Hosts nach Plattform*</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-326\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"85e7e-327\">Office für Windows Desktop</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-327\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"85e7e-328\">Office Online (im Browser)</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-328\">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id=\"85e7e-329\"><strong>Projekt</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-329\"><strong> Project </strong></span></span></td><td> <span data-ttu-id=\"85e7e-330\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-330\">Y</span></span> </td><td> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"85e7e-331\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-331\">Examples</span></span>\n\n```javascript\n// The following code example gets the values of three specified fields for the active project, \n// and then displays the values in the add-in.\n// The example calls getProjectFieldAsync recursively, after the previous call returns successfully.\n// It also tracks the calls to determine when all calls are sent.\n// The example assumes your add-in has a reference to the jQuery library and that the \n// following page control is defined in the content div in the page body:\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n\n            // Get information for the active project.\n            getProjectInformation();\n        });\n    };\n\n    // Get the specified fields for the active project.\n    function getProjectInformation() {\n        var fields =\n            [Office.ProjectProjectFields.Start, \n             Office.ProjectProjectFields.Finish, \n             Office.ProjectProjectFields.GUID];\n        var fieldValues = ['Start: ', 'Finish: ', 'GUID: '];\n        var index = 0; \n        getField();\n\n        // Get each field, and then display the field values in the add-in.\n        function getField() {\n            if (index == fields.length) {\n                var output = '';\n                for (var i = 0; i < fieldValues.length; i++) {\n                    output += fieldValues[i] + '<br />';\n                }\n                $('#message').html(output);\n            }\n            else {\n                Office.context.document.getProjectFieldAsync(\n                    fields[index],\n                    function (result) {\n\n                        // If the call is successful, get the field value and then get the next field.\n                        if (result.status === Office.AsyncResultStatus.Succeeded) {\n                            fieldValues[index] += result.value.fieldValue;\n                            getField(index++);\n                        }\n                        else {\n                            onError(result.error);\n                        }\n                    }\n                );\n            }\n        }\n    }\n\n    function onError(error) {\n        $('#message').html(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n```"
  name: getProjectFieldAsync(fieldId, options, callback)
  fullName: getProjectFieldAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getProjectFieldAsync(fieldId: number, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<any>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: fieldId
      description: <span data-ttu-id="85e7e-332">Ebene Projektfelder.</span><span class="sxs-lookup"><span data-stu-id="85e7e-332">Project level fields.</span></span>
      type:
      - number
    - id: options
      description: <span data-ttu-id="85e7e-333">Bietet die Möglichkeit zur Beibehaltung von Kontextdaten eines beliebigen Typs, die für die Verwendung in einem Rückruf unverändert.</span><span class="sxs-lookup"><span data-stu-id="85e7e-333">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="85e7e-334">Optional.</span><span class="sxs-lookup"><span data-stu-id="85e7e-334">Optional.</span></span> <span data-ttu-id="85e7e-335">Eine Funktion, die bei der Rückgabe des Rückrufs aufgerufen wird, dessen einziger Parameter vom Typ [Office.AsyncResult](xref:office.Office.AsyncResult)ist<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-335">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="85e7e-336">Die `value` -Eigenschaft des Ergebnisses enthält die `fieldValue` -Eigenschaft, die den Wert des angegebenen Felds darstellt.</span><span class="sxs-lookup"><span data-stu-id="85e7e-336">The `value` property of the result contains the `fieldValue` property, which represents the value of the specified field.</span></span>
      type:
      - '(result: AsyncResult<any>) => void'
- uid: office.Office.Document.getResourceByIndexAsync
  summary: >-
    <span data-ttu-id="85e7e-337">Nur Projektdokumente.</span><span class="sxs-lookup"><span data-stu-id="85e7e-337">Project documents only.</span></span> <span data-ttu-id="85e7e-338">Rufen Sie die GUID der Ressource, die dem angegebenen Index in der Auflistung Ressource ab.</span><span class="sxs-lookup"><span data-stu-id="85e7e-338">Get the GUID of the resource that has the specified index in the resource collection.</span></span>


    <span data-ttu-id="85e7e-339">Wichtig: Diese API funktioniert nur in Project 2016 auf Windows-Desktop.</span><span class="sxs-lookup"><span data-stu-id="85e7e-339">Important: This API works only in Project 2016 on Windows desktop.</span></span>
  remarks: "<span data-ttu-id=\"85e7e-340\">**Supportdetails**</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-340\">**Support details**</span></span>\n\n<span data-ttu-id=\"85e7e-p126\">Ein Häkchen (v) in der folgenden Matrix weist darauf hin, dass diese Methode in der entsprechenden Office-Hostanwendung unterstützt wird. Eine leere Zelle weist darauf hin, dass die Office-Hostanwendung diese Methode nicht unterstützt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-p126\">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>\n\n<span data-ttu-id=\"85e7e-343\">Weitere Informationen zu Office-Host-Anwendung und Server-Anforderungen, finden Sie unter [Anforderungen für die Ausführung von Office-Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-343\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"85e7e-344\">*Unterstützte Hosts nach Plattform*</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-344\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"85e7e-345\">Office für Windows Desktop</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-345\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"85e7e-346\">Office Online (im Browser)</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-346\">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id=\"85e7e-347\"><strong>Projekt</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-347\"><strong> Project </strong></span></span></td><td> <span data-ttu-id=\"85e7e-348\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-348\">Y</span></span> </td><td> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"85e7e-349\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-349\">Examples</span></span>\n\n```javascript\n// The following code example calls getMaxResourceIndexAsync to get the maximum index in the project's resource\n// collection, and then calls getResourceByIndexAsync to get the GUID for each resource.\n// The example assumes that your add-in has a reference to the jQuery library and that the following \n// page controls are defined in the content div in the page body:\n// <input id=\"get-info\" type=\"button\" value=\"Get info\" /><br />\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n    var resourceGuids = ;\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n\n            // After the DOM is loaded, add-in-specific code can run.\n            app.initialize();\n            $('#get-info').click(getResourceInfo);\n        });\n    };\n\n    // Get the maximum resource index, and then get the resource GUIDs.\n    function getResourceInfo() {\n        getMaxResourceIndex().then(\n            function (data) {\n                getResourceGuids(data);\n            }\n        );\n    }\n\n    // Get the maximum index of the resources for the current project.\n    function getMaxResourceIndex() {\n        var defer = $.Deferred();\n        Office.context.document.getMaxResourceIndexAsync(\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    defer.resolve(result.value);\n                }\n            }\n        );\n        return defer.promise();\n    }\n\n    // Get each resource GUID, and then display the GUIDs in the add-in.\n    // There is no 0 index for resources, so start with index 1.\n    function getResourceGuids(maxResourceIndex) {\n        var defer = $.Deferred();\n        for (var i = 1; i <= maxResourceIndex; i++) {\n            getResourceGuid(i);\n        }\n        return defer.promise();\n        function getResourceGuid(index) {\n            Office.context.document.getResourceByIndexAsync(index,\n                function (result) {\n                    if (result.status === Office.AsyncResultStatus.Succeeded) {\n                        resourceGuids.push(result.value);\n                        if (index == maxResourceIndex) {\n                            defer.resolve();\n                            $('#message').html(resourceGuids.toString());\n                        }\n                    }\n                    else {\n                        onError(result.error);\n                    }\n                }\n            );\n        }\n    }\n    function onError(error) {\n        app.showNotification(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n```"
  name: getResourceByIndexAsync(resourceIndex, options, callback)
  fullName: getResourceByIndexAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getResourceByIndexAsync(resourceIndex: number, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: resourceIndex
      description: <span data-ttu-id="85e7e-350">Der Index der Ressource in der Ressourcensammlung für das Projekt.</span><span class="sxs-lookup"><span data-stu-id="85e7e-350">The index of the resource in the collection of resources for the project.</span></span>
      type:
      - number
    - id: options
      description: <span data-ttu-id="85e7e-351">Bietet die Möglichkeit zur Beibehaltung von Kontextdaten eines beliebigen Typs, die für die Verwendung in einem Rückruf unverändert.</span><span class="sxs-lookup"><span data-stu-id="85e7e-351">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="85e7e-352">Optional.</span><span class="sxs-lookup"><span data-stu-id="85e7e-352">Optional.</span></span> <span data-ttu-id="85e7e-353">Eine Funktion, die bei der Rückgabe des Rückrufs aufgerufen wird, dessen einziger Parameter vom Typ [Office.AsyncResult](xref:office.Office.AsyncResult)ist<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-353">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="85e7e-354">Die `value` -Eigenschaft des Ergebnisses ist die GUID der Ressource als Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="85e7e-354">The `value` property of the result is the GUID of the resource as a string.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.Document.getResourceFieldAsync
  summary: <span data-ttu-id="85e7e-355">Nur Projektdokumente.</span><span class="sxs-lookup"><span data-stu-id="85e7e-355">Project documents only.</span></span> <span data-ttu-id="85e7e-356">Ressourcenfeld für bereitgestellten Ressource ID (Ex.ResourceName) abzurufen</span><span class="sxs-lookup"><span data-stu-id="85e7e-356">Get resource field for provided resource Id. (Ex.ResourceName)</span></span>
  remarks: "<span data-ttu-id=\"85e7e-357\">**Supportdetails**</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-357\">**Support details**</span></span>\n\n<span data-ttu-id=\"85e7e-p129\">Ein Häkchen (v) in der folgenden Matrix weist darauf hin, dass diese Methode in der entsprechenden Office-Hostanwendung unterstützt wird. Eine leere Zelle weist darauf hin, dass die Office-Hostanwendung diese Methode nicht unterstützt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-p129\">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>\n\n<span data-ttu-id=\"85e7e-360\">Weitere Informationen zu Office-Host-Anwendung und Server-Anforderungen, finden Sie unter [Anforderungen für die Ausführung von Office-Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-360\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"85e7e-361\">*Unterstützte Hosts nach Plattform*</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-361\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"85e7e-362\">Office für Windows Desktop</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-362\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"85e7e-363\">Office Online (im Browser)</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-363\">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id=\"85e7e-364\"><strong>Projekt</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-364\"><strong> Project </strong></span></span></td><td> <span data-ttu-id=\"85e7e-365\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-365\">Y</span></span> </td><td> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"85e7e-366\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-366\">Examples</span></span>\n\n```javascript\n// The following code example calls getSelectedResourceAsync to get the GUID of the resource\n// that's currently selected in a resource view. Then it gets three resource field values by calling \n// getResourceFieldAsync recursively.\n// The example assumes your add-in has a reference to the jQuery library and that the following \n// page controls are defined in the content div in the page body:\n// <input id=\"get-info\" type=\"button\" value=\"Get info\" /><br />\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n\n            // After the DOM is loaded, add-in-specific code can run.\n            $('#get-info').click(getResourceInfo);\n        });\n    };\n\n    // Get the GUID of the resource and then get the resource fields.\n    function getResourceInfo() {\n        getResourceGuid().then(\n            function (data) {\n                getResourceFields(data);\n            }\n        );\n    }\n\n    // Get the GUID of the selected resource.\n    function getResourceGuid() {\n        var defer = $.Deferred();\n        Office.context.document.getSelectedResourceAsync(\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    defer.resolve(result.value);\n                }\n            }\n        );\n        return defer.promise();\n    }\n\n    // Get the specified fields for the selected resource.\n    function getResourceFields(resourceGuid) {\n        var targetFields =\n            [Office.ProjectResourceFields.Name,\n             Office.ProjectResourceFields.Units, \n             Office.ProjectResourceFields.BaseCalendar];\n        var fieldValues = ['Name: ', 'Units: ', 'Base calendar: '];\n        var index = 0; \n        getField();\n\n        // Get each field, and then display the field values in the add-in.\n        function getField() {\n            if (index == targetFields.length) {\n                var output = '';\n                for (var i = 0; i < fieldValues.length; i++) {\n                    output += fieldValues[i] + '<br />';\n                }\n                $('#message').html(output);\n            }\n\n            // If the call is successful, get the field value and then get the next field.\n            else {\n                Office.context.document.getResourceFieldAsync(\n                    resourceGuid,\n                    targetFields[index],\n                    function (result) {\n                        if (result.status === Office.AsyncResultStatus.Succeeded) {\n                            fieldValues[index] += result.value.fieldValue;\n                            getField(index++);\n                        }\n                        else {\n                            onError(result.error);\n                        }\n                    }\n                );\n            }\n        }\n    }\n\n    function onError(error) {\n        $('#message').html(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n```"
  name: getResourceFieldAsync(resourceId, fieldId, options, callback)
  fullName: getResourceFieldAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getResourceFieldAsync(resourceId: string, fieldId: number, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: resourceId
      description: <span data-ttu-id="85e7e-367">Entweder eine Zeichenfolge oder ein Wert, der die Ressourcen-ID</span><span class="sxs-lookup"><span data-stu-id="85e7e-367">Either a string or value of the Resource Id.</span></span>
      type:
      - string
    - id: fieldId
      description: <span data-ttu-id="85e7e-368">Ressourcenfelder.</span><span class="sxs-lookup"><span data-stu-id="85e7e-368">Resource Fields.</span></span>
      type:
      - number
    - id: options
      description: <span data-ttu-id="85e7e-369">Bietet die Möglichkeit zur Beibehaltung von Kontextdaten eines beliebigen Typs, die für die Verwendung in einem Rückruf unverändert.</span><span class="sxs-lookup"><span data-stu-id="85e7e-369">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="85e7e-370">Optional.</span><span class="sxs-lookup"><span data-stu-id="85e7e-370">Optional.</span></span> <span data-ttu-id="85e7e-371">Eine Funktion, die bei der Rückgabe des Rückrufs aufgerufen wird, dessen einziger Parameter vom Typ [Office.AsyncResult](xref:office.Office.AsyncResult)ist<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-371">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="85e7e-372">Die `value` -Eigenschaft des Ergebnisses ist die GUID der Ressource als Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="85e7e-372">The `value` property of the result is the GUID of the resource as a string.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.Document.getSelectedDataAsync
  summary: <span data-ttu-id="85e7e-373">Liest die Daten, die in der aktuellen Auswahl des Dokuments enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="85e7e-373">Reads the data contained in the current selection in the document.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"85e7e-374\">Anforderungssätze</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-374\">Requirement Sets</span></span></td><td><span data-ttu-id=\"85e7e-375\">Selection</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-375\">Selection</span></span></td></tr></table>\n\n<span data-ttu-id=\"85e7e-376\">In der Rückruffunktion, die an die GetSelectedDataAsync-Methode übergeben wird, können Sie die Eigenschaften des AsyncResult-Objekts verwenden, um die folgenden Informationen zurückzugeben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-376\">In the callback function that is passed to the getSelectedDataAsync method, you can use the properties of the AsyncResult object to return the following information.</span></span>\n\n<table> <tr> <th><span data-ttu-id=\"85e7e-377\">Eigenschaft</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-377\">Property</span></span></th> <th><span data-ttu-id=\"85e7e-378\">Verwendung</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-378\">Use to...</span></span></th> </tr> <tr> <td><span data-ttu-id=\"85e7e-379\">AsyncResult.value</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-379\">AsyncResult.value</span></span></td> <td><span data-ttu-id=\"85e7e-380\">Gibt immer undefined zurück, da kein Objekt oder Daten abzurufen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-380\">Always returns undefined because there is no object or data to retrieve.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"85e7e-381\">AsyncResult.status</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-381\">AsyncResult.status</span></span></td> <td><span data-ttu-id=\"85e7e-382\">Verwenden Sie diese Eigenschaft, um zu ermitteln, ob der Vorgang erfolgreich war.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-382\">Determine the success or failure of the operation.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"85e7e-383\">AsyncResult.error</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-383\">AsyncResult.error</span></span></td> <td><span data-ttu-id=\"85e7e-384\">Verwenden Sie diese Eigenschaft, um auf ein Error-Objekt zuzugreifen, das Informationen zu dem Fehler bereitstellt, wenn der Vorgang fehlgeschlagen ist.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-384\">Access an Error object that provides error information if the operation failed.</span></span></td> </tr> <tr> <td><span data-ttu-id=\"85e7e-385\">AsyncResult.asyncContext</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-385\">AsyncResult.asyncContext</span></span></td> <td><span data-ttu-id=\"85e7e-386\">Ein benutzerdefiniertes Element beliebigen Typs, das im AsyncResult-Objekt ohne Änderung zurückgegeben wird.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-386\">A user-defined item of any type that is returned in the AsyncResult object without being altered.</span></span></td> </tr> </table>\n\n<span data-ttu-id=\"85e7e-387\">Die möglichen Werte für den Parameter [Office.CoercionType](xref:office.Office.CoercionType) variieren je nach dem Host.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-387\">The possible values for the [Office.CoercionType](xref:office.Office.CoercionType) parameter vary by the host.</span></span>\n\n<table> <tr> <th><span data-ttu-id=\"85e7e-388\">Host</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-388\">Host</span></span></th> <th><span data-ttu-id=\"85e7e-389\">Unterstützter coercionType</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-389\">Supported coercionType</span></span></th> </tr> <tr> <td><span data-ttu-id=\"85e7e-390\">Excel, PowerPoint, Project und Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-390\">Excel, PowerPoint, Project, and Word</span></span></td> <td><span data-ttu-id=\"85e7e-391\">`Office.CoercionType.Text`(Zeichenfolge)</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-391\">`Office.CoercionType.Text` (string)</span></span></td> </tr> <tr> <td><span data-ttu-id=\"85e7e-392\">Excel und Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-392\">Excel and Word</span></span></td> <td><span data-ttu-id=\"85e7e-393\">`Office.CoercionType.Matrix`(Array von Arrays)</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-393\">`Office.CoercionType.Matrix` (array of arrays)</span></span></td> </tr> <tr> <td><span data-ttu-id=\"85e7e-394\">Access, Excel und Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-394\">Access, Excel, and Word</span></span></td> <td><span data-ttu-id=\"85e7e-395\">`Office.CoercionType.Table`(Objekt \"tabledata\")</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-395\">`Office.CoercionType.Table` (TableData object)</span></span></td> </tr> <tr> <td><span data-ttu-id=\"85e7e-396\">Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-396\">Word</span></span></td> <td>`Office.CoercionType.Html`</td> </tr> <tr> <td><span data-ttu-id=\"85e7e-397\">Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-397\">Word</span></span></td> <td><span data-ttu-id=\"85e7e-398\">`Office.CoercionType.Ooxml`(Office Open XML)</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-398\">`Office.CoercionType.Ooxml` (Office Open XML)</span></span></td> </tr> <tr> <td><span data-ttu-id=\"85e7e-399\">PowerPoint und PowerPoint Online</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-399\">PowerPoint and PowerPoint Online</span></span></td> <td>`Office.CoercionType.SlideRange`</td> </tr> </table>\n\n<span data-ttu-id=\"85e7e-400\">**Supportdetails**</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-400\">**Support details**</span></span>\n\n<span data-ttu-id=\"85e7e-p131\">Ein Häkchen (v) in der folgenden Matrix weist darauf hin, dass diese Methode in der entsprechenden Office-Hostanwendung unterstützt wird. Eine leere Zelle weist darauf hin, dass die Office-Hostanwendung diese Methode nicht unterstützt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-p131\">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>\n\n<span data-ttu-id=\"85e7e-403\">Weitere Informationen zu Office-Host-Anwendung und Server-Anforderungen, finden Sie unter [Anforderungen für die Ausführung von Office-Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-403\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"85e7e-404\">*Unterstützte Hosts nach Plattform*</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-404\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"85e7e-405\">Office für Windows Desktop</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-405\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"85e7e-406\">Office Online (im Browser)</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-406\">Office Online (in browser)</span></span> </th><th> <span data-ttu-id=\"85e7e-407\">Office für iPad</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-407\">Office for iPad</span></span> </th><th> <span data-ttu-id=\"85e7e-408\">Office for Mac</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-408\">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id=\"85e7e-409\"><strong>Excel</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-409\"><strong> Excel </strong></span></span></td><td> <span data-ttu-id=\"85e7e-410\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-410\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-411\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-411\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-412\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-412\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-413\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-413\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"85e7e-414\"><strong>PowerPoint</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-414\"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id=\"85e7e-415\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-415\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-416\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-416\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-417\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-417\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-418\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-418\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"85e7e-419\"><strong>Projekt</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-419\"><strong> Project </strong></span></span></td><td> <span data-ttu-id=\"85e7e-420\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-420\">Y</span></span> </td><td> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id=\"85e7e-421\"><strong>Word</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-421\"><strong> Word </strong></span></span></td><td> <span data-ttu-id=\"85e7e-422\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-422\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-423\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-423\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-424\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-424\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-425\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-425\">Y</span></span> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"85e7e-426\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-426\">Examples</span></span>\n\n```javascript\n// The following example uses the getSelectedDataAsync method of the Document object to retrieve the\n// user's current selection as text, and then display it in the add-in's page.\n\n// Display the user's current selection.\nfunction showSelection() {\n    Office.context.document.getSelectedDataAsync(\n        \"text\",                        // coercionType\n        {valueFormat: \"unformatted\",   // valueFormat\n        filterType: \"all\"},            // filterType\n        function (result) {            // callback\n            var dataValue; \n            dataValue = result.value;\n            write('Selected data is: ' + dataValue);\n        });\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```\n```javascript\n// To read the value of the current selection, you need to write a callback function that reads the selection.\n// The following example shows how to:\n// 1. Pass an anonymous callback function that reads the value of the current selection\n//    to the callback parameter of the getSelectedDataAsync method.\n// 2. Read the selection as text, unformatted, and not filtered.\n// 3. Display the value on the add-in's page.\nfunction getText() {\n    Office.context.document.getSelectedDataAsync(Office.CoercionType.Text, \n        { valueFormat: \"unformatted\", filterType: \"all\" },\n        function (asyncResult) {\n            var error = asyncResult.error;\n            if (asyncResult.status === Office.AsyncResultStatus.Failed) {\n                write(error.name + \": \" + error.message);\n            } \n            else {\n                // Get selected data.\n                var dataValue = asyncResult.value; \n                write('Selected data is ' + dataValue);\n            }            \n        });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```\n```javascript\n// The following code example gets the values of the selected cells. It uses the optional\n// asyncContext parameter to pass some text to the callback function.\n// The example assumes your add-in has a reference to the jQuery library and that the\n// following page controls are defined in the content div in the page body:\n// <input id=\"get-info\" type=\"button\" value=\"Get info\" /><br />\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n\n            // After the DOM is loaded, add-in-specific code can run.\n            $('#get-info').click(getSelectedText);\n        });\n    };\n\n    // Get the text from the selected cells in the document, and display it in the add-in.\n    function getSelectedText() {\n        Office.context.document.getSelectedDataAsync(\n            Office.CoercionType.Text,\n            {asyncContext: 'Some related info'},\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    var output = String.format(\n                        'Selected text: {0}<br/>Passed info: {1}',\n                        result.value, result.asyncContext);\n                    $('#message').html(output);\n                }\n            }\n        );\n    }\n\n    function onError(error) {\n        $('#message').html(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n```"
  name: getSelectedDataAsync(coerciontype, options, callback)
  fullName: getSelectedDataAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedDataAsync<T>(coerciontype: Office.CoercionType, options?: GetSelectedDataOptions, callback?: (result: AsyncResult<T>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: coerciontype
      description: ''
      type:
      - office.Office.CoercionType
    - id: options
      description: <span data-ttu-id="85e7e-427">Bietet Optionen zum Anpassen, welche Daten zurückgegeben werden und wie es formatiert werden.</span><span class="sxs-lookup"><span data-stu-id="85e7e-427">Provides options for customizing what data is returned and how it is formatted.</span></span>
      type:
      - office.Office.GetSelectedDataOptions
    - id: callback
      description: <span data-ttu-id="85e7e-428">Optional.</span><span class="sxs-lookup"><span data-stu-id="85e7e-428">Optional.</span></span> <span data-ttu-id="85e7e-429">Eine Funktion, die bei der Rückgabe des Rückrufs aufgerufen wird, dessen einziger Parameter vom Typ [Office.AsyncResult](xref:office.Office.AsyncResult)ist<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-429">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="85e7e-430">Die `value` -Eigenschaft des Ergebnisses ist die Daten in der aktuellen Auswahl.</span><span class="sxs-lookup"><span data-stu-id="85e7e-430">The `value` property of the result is the data in the current selection.</span></span> <span data-ttu-id="85e7e-431">Dies wird in der Datenstruktur oder Ihnen mit den CoercionType-Parameter angegebenen Format zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="85e7e-431">This is returned in the data structure or format you specified with the coercionType parameter.</span></span> <span data-ttu-id="85e7e-432">(Weitere Informationen zur Datenumwandlung finden unter Hinweise.)</span><span class="sxs-lookup"><span data-stu-id="85e7e-432">(See Remarks for more information about data coercion.)</span></span>
      type:
      - '(result: AsyncResult<T>) => void'
- uid: office.Office.Document.getSelectedResourceAsync
  summary: <span data-ttu-id="85e7e-433">Nur Projektdokumente.</span><span class="sxs-lookup"><span data-stu-id="85e7e-433">Project documents only.</span></span> <span data-ttu-id="85e7e-434">Abrufen der aktuellen ausgewählten Ressourcen-Id.</span><span class="sxs-lookup"><span data-stu-id="85e7e-434">Get the current selected Resource's Id.</span></span>
  remarks: "<span data-ttu-id=\"85e7e-435\">**Supportdetails**</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-435\">**Support details**</span></span>\n\n<span data-ttu-id=\"85e7e-p134\">Ein Häkchen (v) in der folgenden Matrix weist darauf hin, dass diese Methode in der entsprechenden Office-Hostanwendung unterstützt wird. Eine leere Zelle weist darauf hin, dass die Office-Hostanwendung diese Methode nicht unterstützt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-p134\">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>\n\n<span data-ttu-id=\"85e7e-438\">Weitere Informationen zu Office-Host-Anwendung und Server-Anforderungen, finden Sie unter [Anforderungen für die Ausführung von Office-Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-438\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"85e7e-439\">*Unterstützte Hosts nach Plattform*</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-439\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"85e7e-440\">Office für Windows Desktop</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-440\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"85e7e-441\">Office Online (im Browser)</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-441\">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id=\"85e7e-442\"><strong>Projekt</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-442\"><strong> Project </strong></span></span></td><td> <span data-ttu-id=\"85e7e-443\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-443\">Y</span></span> </td><td> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"85e7e-444\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-444\">Examples</span></span>\n\n```javascript\n// The following code example calls getSelectedResourceAsync to get the GUID of the resource that's \n// currently selected in a resource view. Then it gets three resource field values by calling \n// getResourceFieldAsync recursively.\n// The example assumes your add-in has a reference to the jQuery library and that the following page controls are\n// defined in the content div in the page body:\n// <input id=\"get-info\" type=\"button\" value=\"Get info\" /><br />\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n\n            // After the DOM is loaded, add-in-specific code can run.\n            $('#get-info').click(getResourceInfo);\n        });\n    };\n\n    // Get the GUID of the resource and then get the resource fields.\n    function getResourceInfo() {\n        getResourceGuid().then(\n            function (data) {\n                getResourceFields(data);\n            }\n        );\n    }\n\n    // Get the GUID of the selected resource.\n    function getResourceGuid() {\n        var defer = $.Deferred();\n        Office.context.document.getSelectedResourceAsync(\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    defer.resolve(result.value);\n                }\n            }\n        );\n        return defer.promise();\n    }\n\n    // Get the specified fields for the selected resource.\n    function getResourceFields(resourceGuid) {\n        var targetFields =\n            [Office.ProjectResourceFields.Name,\n             Office.ProjectResourceFields.Units, \n             Office.ProjectResourceFields.BaseCalendar];\n        var fieldValues = ['Name: ', 'Units: ', 'Base calendar: '];\n        var index = 0; \n        getField();\n\n        // Get each field, and then display the field values in the add-in.\n        function getField() {\n            if (index == targetFields.length) {\n                var output = '';\n                for (var i = 0; i < fieldValues.length; i++) {\n                    output += fieldValues[i] + '<br />';\n                }\n                $('#message').html(output);\n            }\n\n            // If the call is successful, get the field value and then get the next field.\n            else {\n                Office.context.document.getResourceFieldAsync(\n                    resourceGuid,\n                    targetFields[index],\n                    function (result) {\n                        if (result.status === Office.AsyncResultStatus.Succeeded) {\n                            fieldValues[index] += result.value.fieldValue;\n                            getField(index++);\n                        }\n                        else {\n                            onError(result.error);\n                        }\n                    }\n                );\n            }\n        }\n    }\n\n    function onError(error) {\n        $('#message').html(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n```"
  name: getSelectedResourceAsync(options, callback)
  fullName: getSelectedResourceAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedResourceAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="85e7e-445">Bietet die Möglichkeit zur Beibehaltung von Kontextdaten eines beliebigen Typs, die für die Verwendung in einem Rückruf unverändert.</span><span class="sxs-lookup"><span data-stu-id="85e7e-445">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="85e7e-446">Optional.</span><span class="sxs-lookup"><span data-stu-id="85e7e-446">Optional.</span></span> <span data-ttu-id="85e7e-447">Eine Funktion, die bei der Rückgabe des Rückrufs aufgerufen wird, dessen einziger Parameter vom Typ [Office.AsyncResult](xref:office.Office.AsyncResult)ist<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-447">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="85e7e-448">Die `value` -Eigenschaft des Ergebnisses ist die GUID der Ressource als Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="85e7e-448">The `value` property of the result is the GUID of the resource as a string.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.Document.getSelectedTaskAsync
  summary: <span data-ttu-id="85e7e-449">Nur Projektdokumente.</span><span class="sxs-lookup"><span data-stu-id="85e7e-449">Project documents only.</span></span> <span data-ttu-id="85e7e-450">Abrufen der aktuellen ausgewählten Vorgangs-ID</span><span class="sxs-lookup"><span data-stu-id="85e7e-450">Get the current selected Task's Id.</span></span>
  remarks: >-
    <span data-ttu-id="85e7e-451">**Supportdetails**</span><span class="sxs-lookup"><span data-stu-id="85e7e-451">**Support details**</span></span>


    <span data-ttu-id="85e7e-p137">Ein Häkchen (v) in der folgenden Matrix weist darauf hin, dass diese Methode in der entsprechenden Office-Hostanwendung unterstützt wird. Eine leere Zelle weist darauf hin, dass die Office-Hostanwendung diese Methode nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="85e7e-p137">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>


    <span data-ttu-id="85e7e-454">Weitere Informationen zu Office-Host-Anwendung und Server-Anforderungen, finden Sie unter [Anforderungen für die Ausführung von Office-Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-454">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="85e7e-455">*Unterstützte Hosts nach Plattform*</span><span class="sxs-lookup"><span data-stu-id="85e7e-455">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="85e7e-456">Office für Windows Desktop</span><span class="sxs-lookup"><span data-stu-id="85e7e-456">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="85e7e-457">Office Online (im Browser)</span><span class="sxs-lookup"><span data-stu-id="85e7e-457">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id="85e7e-458"><strong>Projekt</strong></span><span class="sxs-lookup"><span data-stu-id="85e7e-458"><strong> Project </strong></span></span></td><td> <span data-ttu-id="85e7e-459">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-459">Y</span></span> </td><td> </td></tr> </table>

    #### <a name="examples"></a><span data-ttu-id="85e7e-460">Beispiele</span><span class="sxs-lookup"><span data-stu-id="85e7e-460">Examples</span></span>


    ```javascript

    // The following code example calls getSelectedTaskAsync to get the GUID of the task that's currently

    // selected in a task view. Then it gets task properties by calling getTaskAsync.

    // The example assumes your add-in has a reference to the jQuery library and that the following page

    // controls are defined in the content div in the page body:

    // <input id="get-info" type="button" value="Get info" /><br />

    // <span id="message"></span>


    (function () {
        "use strict";

        // The initialize function must be run each time a new page is loaded.
        Office.initialize = function (reason) {
            $(document).ready(function () {

                // After the DOM is loaded, add-in-specific code can run.
                $('#get-info').click(getTaskInfo);
            });
        };

        // // Get the GUID of the task, and then get local task properties.
        function getTaskInfo() {
            getTaskGuid().then(
                function (data) {
                    getTaskProperties(data);
                }
            );
        }

        // Get the GUID of the selected task.
        function getTaskGuid() {
            var defer = $.Deferred();
            Office.context.document.getSelectedTaskAsync(
                function (result) {
                    if (result.status === Office.AsyncResultStatus.Failed) {
                        onError(result.error);
                    }
                    else {
                        defer.resolve(result.value);
                    }
                }
            );
            return defer.promise();
        }

        // Get local properties for the selected task, and then display it in the add-in.
        function getTaskProperties(taskGuid) {
            Office.context.document.getTaskAsync(
                taskGuid,
                function (result) {
                    if (result.status === Office.AsyncResultStatus.Failed) {
                        onError(result.error);
                    }
                    else {
                        var taskInfo = result.value;
                        var output = String.format(
                            'Name: {0}<br/>GUID: {1}<br/>SharePoint task ID: {2}<br/>Resource names: {3}',
                            taskInfo.taskName, taskGuid, taskInfo.wssTaskId, taskInfo.resourceNames);
                        $('#message').html(output);
                    }
                }
            );
        }

        function onError(error) {
            $('#message').html(error.name + ' ' + error.code + ': ' + error.message);
        }
    })();

    ```
  name: getSelectedTaskAsync(options, callback)
  fullName: getSelectedTaskAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedTaskAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="85e7e-461">Bietet die Möglichkeit zur Beibehaltung von Kontextdaten eines beliebigen Typs, die für die Verwendung in einem Rückruf unverändert.</span><span class="sxs-lookup"><span data-stu-id="85e7e-461">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="85e7e-462">Optional.</span><span class="sxs-lookup"><span data-stu-id="85e7e-462">Optional.</span></span> <span data-ttu-id="85e7e-463">Eine Funktion, die bei der Rückgabe des Rückrufs aufgerufen wird, dessen einziger Parameter vom Typ [Office.AsyncResult](xref:office.Office.AsyncResult)ist<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-463">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="85e7e-464">Die `value` -Eigenschaft des Ergebnisses ist die GUID der Ressource als Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="85e7e-464">The `value` property of the result is the GUID of the resource as a string.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.Document.getSelectedViewAsync
  summary: <span data-ttu-id="85e7e-465">Nur Projektdokumente.</span><span class="sxs-lookup"><span data-stu-id="85e7e-465">Project documents only.</span></span> <span data-ttu-id="85e7e-466">Abrufen der aktuellen ausgewählten Ansichtstyp (z. B.</span><span class="sxs-lookup"><span data-stu-id="85e7e-466">Get the current selected View Type (Ex.</span></span> <span data-ttu-id="85e7e-467">Gantt), und zeigen Sie Namen.</span><span class="sxs-lookup"><span data-stu-id="85e7e-467">Gantt) and View Name.</span></span>
  remarks: >-
    <span data-ttu-id="85e7e-468">**Supportdetails**</span><span class="sxs-lookup"><span data-stu-id="85e7e-468">**Support details**</span></span>


    <span data-ttu-id="85e7e-p140">Ein Häkchen (v) in der folgenden Matrix weist darauf hin, dass diese Methode in der entsprechenden Office-Hostanwendung unterstützt wird. Eine leere Zelle weist darauf hin, dass die Office-Hostanwendung diese Methode nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="85e7e-p140">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>


    <span data-ttu-id="85e7e-471">Weitere Informationen zu Office-Host-Anwendung und Server-Anforderungen, finden Sie unter [Anforderungen für die Ausführung von Office-Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-471">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="85e7e-472">*Unterstützte Hosts nach Plattform*</span><span class="sxs-lookup"><span data-stu-id="85e7e-472">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="85e7e-473">Office für Windows Desktop</span><span class="sxs-lookup"><span data-stu-id="85e7e-473">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="85e7e-474">Office Online (im Browser)</span><span class="sxs-lookup"><span data-stu-id="85e7e-474">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id="85e7e-475"><strong>Projekt</strong></span><span class="sxs-lookup"><span data-stu-id="85e7e-475"><strong> Project </strong></span></span></td><td> <span data-ttu-id="85e7e-476">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-476">Y</span></span> </td><td> </td></tr> </table>

    #### <a name="examples"></a><span data-ttu-id="85e7e-477">Beispiele</span><span class="sxs-lookup"><span data-stu-id="85e7e-477">Examples</span></span>


    ```javascript

    // The following code example calls adds a ViewSelectionChanged event handler that

    // calls getSelectedViewAsync to get the name and type of the active view in the document.

    // The example assumes your add-in has a reference to the jQuery library and that

    // the following page control is defined in the content div in the page body:

    // <span id="message"></span>


    (function () {
        "use strict";

        // The initialize function must be run each time a new page is loaded.
        Office.initialize = function (reason) {
            $(document).ready(function () {

                // After the DOM is loaded, add-in-specific code can run.
                Office.context.document.addHandlerAsync(
                    Office.EventType.ViewSelectionChanged,
                    getActiveView);
                getActiveView();
            });
        };

        // Get the active view's name and type.
        function getActiveView() {
            Office.context.document.getSelectedViewAsync(
                function (result) {
                    if (result.status === Office.AsyncResultStatus.Failed) {
                        onError(result.error);
                    }
                    else {
                        var output = String.format(
                            'View name: {0}<br/>View type: {1}',
                            result.value.viewName, viewType);
                        $('#message').html(output);
                    }
                }
            );
        }

        function onError(error) {
            $('#message').html(error.name + ' ' + error.code + ': ' + error.message);
        }
    })();

    ```
  name: getSelectedViewAsync(options, callback)
  fullName: getSelectedViewAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getSelectedViewAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<any>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="85e7e-478">Bietet die Möglichkeit zur Beibehaltung von Kontextdaten eines beliebigen Typs, die für die Verwendung in einem Rückruf unverändert.</span><span class="sxs-lookup"><span data-stu-id="85e7e-478">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: '<span data-ttu-id="85e7e-479">Optional.</span><span class="sxs-lookup"><span data-stu-id="85e7e-479">Optional.</span></span> <span data-ttu-id="85e7e-480">Eine Funktion, die bei der Rückgabe des Rückrufs aufgerufen wird, dessen einziger Parameter vom Typ [Office.AsyncResult](xref:office.Office.AsyncResult)ist<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-480">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="85e7e-481">Die `value` -Eigenschaft des Ergebnisses enthält die folgenden Eigenschaften: `viewName` -der Name der Ansicht, als Konstante ProjectViewTypes.</span><span class="sxs-lookup"><span data-stu-id="85e7e-481">The `value` property of the result contains the following properties: `viewName` - The name of the view, as a ProjectViewTypes constant.</span></span> <span data-ttu-id="85e7e-482">`viewType`-Der Typ der Ansicht, als der Ganzzahlwert der ProjectViewTypes-Konstante.</span><span class="sxs-lookup"><span data-stu-id="85e7e-482">`viewType` - The type of view, as the integer value of a ProjectViewTypes constant.</span></span>'
      type:
      - '(result: AsyncResult<any>) => void'
- uid: office.Office.Document.getTaskAsync
  summary: <span data-ttu-id="85e7e-483">Nur Projektdokumente.</span><span class="sxs-lookup"><span data-stu-id="85e7e-483">Project documents only.</span></span> <span data-ttu-id="85e7e-484">Get den Vorgangsnamen, Vorgangsnummer WSS und ResourceNames für TaskId zu reparieren.</span><span class="sxs-lookup"><span data-stu-id="85e7e-484">Get the Task Name, WSS Task Id, and ResourceNames for given taskId.</span></span>
  remarks: >-
    <span data-ttu-id="85e7e-485">**Supportdetails**</span><span class="sxs-lookup"><span data-stu-id="85e7e-485">**Support details**</span></span>


    <span data-ttu-id="85e7e-p143">Ein Häkchen (v) in der folgenden Matrix weist darauf hin, dass diese Methode in der entsprechenden Office-Hostanwendung unterstützt wird. Eine leere Zelle weist darauf hin, dass die Office-Hostanwendung diese Methode nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="85e7e-p143">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>


    <span data-ttu-id="85e7e-488">Weitere Informationen zu Office-Host-Anwendung und Server-Anforderungen, finden Sie unter [Anforderungen für die Ausführung von Office-Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-488">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="85e7e-489">*Unterstützte Hosts nach Plattform*</span><span class="sxs-lookup"><span data-stu-id="85e7e-489">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="85e7e-490">Office für Windows Desktop</span><span class="sxs-lookup"><span data-stu-id="85e7e-490">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="85e7e-491">Office Online (im Browser)</span><span class="sxs-lookup"><span data-stu-id="85e7e-491">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id="85e7e-492"><strong>Projekt</strong></span><span class="sxs-lookup"><span data-stu-id="85e7e-492"><strong> Project </strong></span></span></td><td> <span data-ttu-id="85e7e-493">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-493">Y</span></span> </td><td> </td></tr> </table>

    #### <a name="examples"></a><span data-ttu-id="85e7e-494">Beispiele</span><span class="sxs-lookup"><span data-stu-id="85e7e-494">Examples</span></span>


    ```javascript

    // The following code example calls getSelectedTaskAsync to get the task GUID of the currently

    // selected task. Then it calls getTaskAsync to get the properties for the task that are

    // available from the JavaScript API for Office.

    // The example assumes your add-in has a reference to the jQuery library and that the

    // following page controls are defined in the content div in the page body:

    // <input id="get-info" type="button" value="Get info" /><br />

    // <span id="message"></span>


    (function () {
        "use strict";

        // The initialize function must be run each time a new page is loaded.
        Office.initialize = function (reason) {
            $(document).ready(function () {

                // After the DOM is loaded, add-in-specific code can run.
                $('#get-info').click(getTaskInfo);
            });
        };

        // Get the GUID of the task, and then get local task properties.
        function getTaskInfo() {
            getTaskGuid().then(
                function (data) {
                    getTaskProperties(data);
                }
            );
        }

        // Get the GUID of the selected task.
        function getTaskGuid() {
            var defer = $.Deferred();
            Office.context.document.getSelectedTaskAsync(
                function (result) {
                    if (result.status === Office.AsyncResultStatus.Failed) {
                        onError(result.error);
                    }
                    else {
                        defer.resolve(result.value);
                    }
                }
            );
            return defer.promise();
        }

        // Get local properties for the selected task, and then display it in the add-in.
        function getTaskProperties(taskGuid) {
            Office.context.document.getTaskAsync(
                taskGuid,
                function (result) {
                    if (result.status === Office.AsyncResultStatus.Failed) {
                        onError(result.error);
                    }
                    else {
                        var taskInfo = result.value;
                        var output = String.format(
                            'Name: {0}<br/>GUID: {1}<br/>SharePoint task ID: {2}<br/>Resource names: {3}',
                            taskInfo.taskName, taskGuid, taskInfo.wssTaskId, taskInfo.resourceNames);
                        $('#message').html(output);
                    }
                }
            );
        }

        function onError(error) {
            $('#message').html(error.name + ' ' + error.code + ': ' + error.message);
        }
    })();

    ```
  name: getTaskAsync(taskId, options, callback)
  fullName: getTaskAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTaskAsync(taskId: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<any>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: taskId
      description: <span data-ttu-id="85e7e-495">Entweder eine Zeichenfolge oder der Wert der Aufgaben-ID.</span><span class="sxs-lookup"><span data-stu-id="85e7e-495">Either a string or value of the Task Id.</span></span>
      type:
      - string
    - id: options
      description: <span data-ttu-id="85e7e-496">Bietet die Möglichkeit zur Beibehaltung von Kontextdaten eines beliebigen Typs, die für die Verwendung in einem Rückruf unverändert.</span><span class="sxs-lookup"><span data-stu-id="85e7e-496">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: '<span data-ttu-id="85e7e-497">Optional.</span><span class="sxs-lookup"><span data-stu-id="85e7e-497">Optional.</span></span> <span data-ttu-id="85e7e-498">Eine Funktion, die bei der Rückgabe des Rückrufs aufgerufen wird, dessen einziger Parameter vom Typ [Office.AsyncResult](xref:office.Office.AsyncResult)ist<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-498">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="85e7e-499">Die `value` -Eigenschaft des Ergebnisses enthält die folgenden Eigenschaften: `taskName` -der Name des Vorgangs.</span><span class="sxs-lookup"><span data-stu-id="85e7e-499">The `value` property of the result contains the following properties: `taskName` - The name of the task.</span></span> <span data-ttu-id="85e7e-500">`wssTaskId`-Die ID des Vorgangs in der synchronisierten SharePoint-Aufgabenliste.</span><span class="sxs-lookup"><span data-stu-id="85e7e-500">`wssTaskId` - The ID of the task in the synchronized SharePoint task list.</span></span> <span data-ttu-id="85e7e-501">Wenn das Projekt nicht mit einer SharePoint-Aufgabenliste synchronisiert ist, ist der Wert 0.</span><span class="sxs-lookup"><span data-stu-id="85e7e-501">If the project is not synchronized with a SharePoint task list, the value is 0.</span></span> <span data-ttu-id="85e7e-502">`resourceNames`-Die durch Trennzeichen getrennte Liste mit den Namen der Ressourcen, die die Aufgabe zugewiesen sind.</span><span class="sxs-lookup"><span data-stu-id="85e7e-502">`resourceNames` - The comma-separated list of the names of resources that are assigned to the task.</span></span>'
      type:
      - '(result: AsyncResult<any>) => void'
- uid: office.Office.Document.getTaskByIndexAsync
  summary: >-
    <span data-ttu-id="85e7e-503">Nur Projektdokumente.</span><span class="sxs-lookup"><span data-stu-id="85e7e-503">Project documents only.</span></span> <span data-ttu-id="85e7e-504">Rufen Sie die GUID der Aufgabe, die dem angegebenen Index in der Auflistung Aufgabe ab.</span><span class="sxs-lookup"><span data-stu-id="85e7e-504">Get the GUID of the task that has the specified index in the task collection.</span></span>


    <span data-ttu-id="85e7e-505">Wichtig: Diese API funktioniert nur in Project 2016 auf Windows-Desktop.</span><span class="sxs-lookup"><span data-stu-id="85e7e-505">Important: This API works only in Project 2016 on Windows desktop.</span></span>
  remarks: >-
    <span data-ttu-id="85e7e-506">**Supportdetails**</span><span class="sxs-lookup"><span data-stu-id="85e7e-506">**Support details**</span></span>


    <span data-ttu-id="85e7e-p146">Ein Häkchen (v) in der folgenden Matrix weist darauf hin, dass diese Methode in der entsprechenden Office-Hostanwendung unterstützt wird. Eine leere Zelle weist darauf hin, dass die Office-Hostanwendung diese Methode nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="85e7e-p146">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>


    <span data-ttu-id="85e7e-509">Weitere Informationen zu Office-Host-Anwendung und Server-Anforderungen, finden Sie unter [Anforderungen für die Ausführung von Office-Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-509">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="85e7e-510">*Unterstützte Hosts nach Plattform*</span><span class="sxs-lookup"><span data-stu-id="85e7e-510">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="85e7e-511">Office für Windows Desktop</span><span class="sxs-lookup"><span data-stu-id="85e7e-511">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="85e7e-512">Office Online (im Browser)</span><span class="sxs-lookup"><span data-stu-id="85e7e-512">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id="85e7e-513"><strong>Projekt</strong></span><span class="sxs-lookup"><span data-stu-id="85e7e-513"><strong> Project </strong></span></span></td><td> <span data-ttu-id="85e7e-514">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-514">Y</span></span> </td><td> </td></tr> </table>

    #### <a name="examples"></a><span data-ttu-id="85e7e-515">Beispiele</span><span class="sxs-lookup"><span data-stu-id="85e7e-515">Examples</span></span>


    ```javascript

    // The following code example calls getMaxTaskIndexAsync to get the

    // maximum index in the project's task collection, and then

    // calls getTaskByIndexAsync to get the GUID for each task.

    // The example assumes that your add-in has a reference to the

    // jQuery library and that the following page controls are defined

    // in the content div in the page body:

    // <input id="get-info" type="button" value="Get info" /><br />

    // <span id="message"></span>


    (function () {
        "use strict";
        var taskGuids = ;

        // The initialize function must be run each time a new page is loaded.
        Office.initialize = function (reason) {
            $(document).ready(function () {

                // After the DOM is loaded, add-in-specific code can run.
                app.initialize();
                $('#get-info').click(getTaskInfo);
            });
        };

        // Get the maximum task index, and then get the task GUIDs.
        function getTaskInfo() {
            getMaxTaskIndex().then(
                function (data) {
                    getTaskGuids(data);
                }
            );
        }

        // Get the maximum index of the tasks for the current project.
        function getMaxTaskIndex() {
            var defer = $.Deferred();
            Office.context.document.getMaxTaskIndexAsync(
                function (result) {
                    if (result.status === Office.AsyncResultStatus.Failed) {
                        onError(result.error);
                    }
                    else {
                        defer.resolve(result.value);
                    }
                }
            );
            return defer.promise();
        }

        // Get each task GUID, and then display the GUIDs in the add-in.
        function getTaskGuids(maxTaskIndex) {
            var defer = $.Deferred();
            for (var i = 0; i <= maxTaskIndex; i++) {
                getTaskGuid(i);
            }
            return defer.promise();
            function getTaskGuid(index) {
                Office.context.document.getTaskByIndexAsync(index,
                    function (result) {
                        if (result.status === Office.AsyncResultStatus.Succeeded) {
                            taskGuids.push(result.value);
                            if (index == maxTaskIndex) {
                                defer.resolve();
                                $('#message').html(taskGuids.toString());
                            }
                        }
                        else {
                            onError(result.error);
                        }
                    }
                );
            }
        }
        function onError(error) {
            app.showNotification(error.name + ' ' + error.code + ': ' + error.message);
        }
    })();

    ```
  name: getTaskByIndexAsync(taskIndex, options, callback)
  fullName: getTaskByIndexAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTaskByIndexAsync(taskIndex: number, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: taskIndex
      description: <span data-ttu-id="85e7e-516">Der Index der Aufgabe in der Aufgabensammlung für das Projekt.</span><span class="sxs-lookup"><span data-stu-id="85e7e-516">The index of the task in the collection of tasks for the project.</span></span>
      type:
      - number
    - id: options
      description: <span data-ttu-id="85e7e-517">Bietet die Möglichkeit zur Beibehaltung von Kontextdaten eines beliebigen Typs, die für die Verwendung in einem Rückruf unverändert.</span><span class="sxs-lookup"><span data-stu-id="85e7e-517">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="85e7e-518">Optional.</span><span class="sxs-lookup"><span data-stu-id="85e7e-518">Optional.</span></span> <span data-ttu-id="85e7e-519">Eine Funktion, die bei der Rückgabe des Rückrufs aufgerufen wird, dessen einziger Parameter vom Typ [Office.AsyncResult](xref:office.Office.AsyncResult)ist<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-519">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="85e7e-520">Die `value` -Eigenschaft des Ergebnisses ist die GUID des Vorgangs als Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="85e7e-520">The `value` property of the result is the GUID of the task as a string.</span></span>
      type:
      - '(result: AsyncResult<string>) => void'
- uid: office.Office.Document.getTaskFieldAsync
  summary: <span data-ttu-id="85e7e-521">Nur Projektdokumente.</span><span class="sxs-lookup"><span data-stu-id="85e7e-521">Project documents only.</span></span> <span data-ttu-id="85e7e-522">Vorgangsfeld für bereitgestellten Aufgabe ID (z. B. Abrufen</span><span class="sxs-lookup"><span data-stu-id="85e7e-522">Get task field for provided task Id. (Ex.</span></span> <span data-ttu-id="85e7e-523">StartDate).</span><span class="sxs-lookup"><span data-stu-id="85e7e-523">StartDate).</span></span>
  remarks: "<span data-ttu-id=\"85e7e-524\">**Supportdetails**</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-524\">**Support details**</span></span>\n\n<span data-ttu-id=\"85e7e-p149\">Ein Häkchen (v) in der folgenden Matrix weist darauf hin, dass diese Methode in der entsprechenden Office-Hostanwendung unterstützt wird. Eine leere Zelle weist darauf hin, dass die Office-Hostanwendung diese Methode nicht unterstützt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-p149\">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>\n\n<span data-ttu-id=\"85e7e-527\">Weitere Informationen zu Office-Host-Anwendung und Server-Anforderungen, finden Sie unter [Anforderungen für die Ausführung von Office-Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-527\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"85e7e-528\">*Unterstützte Hosts nach Plattform*</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-528\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"85e7e-529\">Office für Windows Desktop</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-529\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"85e7e-530\">Office Online (im Browser)</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-530\">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id=\"85e7e-531\"><strong>Projekt</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-531\"><strong> Project </strong></span></span></td><td> <span data-ttu-id=\"85e7e-532\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-532\">Y</span></span> </td><td> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"85e7e-533\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-533\">Examples</span></span>\n\n```javascript\n// The following code example calls getSelectedTaskAsync to get the GUID of the task that's currently\n// selected in a task view. Then it gets two task field values by calling getTaskFieldAsync recursively.\n// The example assumes your add-in has a reference to the jQuery library and that the following page\n// controls are defined in the content div in the page body:\n// <input id=\"get-info\" type=\"button\" value=\"Get info\" /><br />\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n            \n            // After the DOM is loaded, add-in-specific code can run.\n            $('#get-info').click(getTaskInfo);\n        });\n    };\n\n    // Get the GUID of the task, and then get the task fields.\n    function getTaskInfo() {\n        getTaskGuid().then(\n            function (data) {\n                getTaskFields(data);\n            }\n        );\n    }\n\n    // Get the GUID of the selected task.\n    function getTaskGuid() {\n        var defer = $.Deferred();\n        Office.context.document.getSelectedTaskAsync(\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    defer.resolve(result.value);\n                }\n            }\n        );\n        return defer.promise();\n    }\n\n    // Get the specified fields for the selected task.\n    function getTaskFields(taskGuid) {\n        var output = '';\n        var targetFields = [Office.ProjectTaskFields.Priority, Office.ProjectTaskFields.PercentComplete];\n        var fieldValues = ['Priority: ', '% Complete: '];\n        var index = 0;\n        getField();\n\n        // Get each field, and then display the field values in the add-in.\n        function getField() {\n            if (index == targetFields.length) {\n                for (var i = 0; i < fieldValues.length; i++) {\n                    output += fieldValues[i] + '<br />';\n                }\n                $('#message').html(output);\n            }\n\n            // Get the field value. If the call is successful, then get the next field.\n            else {\n                Office.context.document.getTaskFieldAsync(\n                    taskGuid,\n                    targetFields[index],\n                    function (result) {\n                        if (result.status === Office.AsyncResultStatus.Succeeded) {\n                            fieldValues[index] += result.value.fieldValue;\n                            getField(index++);\n                        }\n                        else {\n                            onError(result.error);\n                        }\n                    }\n                );\n            }\n        }\n    }\n\n    function onError(error) {\n        $('#message').html(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n```"
  name: getTaskFieldAsync(taskId, fieldId, options, callback)
  fullName: getTaskFieldAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getTaskFieldAsync(taskId: string, fieldId: number, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<any>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: taskId
      description: <span data-ttu-id="85e7e-534">Entweder eine Zeichenfolge oder der Wert der Aufgaben-ID.</span><span class="sxs-lookup"><span data-stu-id="85e7e-534">Either a string or value of the Task Id.</span></span>
      type:
      - string
    - id: fieldId
      description: <span data-ttu-id="85e7e-535">Vorgangsfelder.</span><span class="sxs-lookup"><span data-stu-id="85e7e-535">Task Fields.</span></span>
      type:
      - number
    - id: options
      description: <span data-ttu-id="85e7e-536">Bietet die Möglichkeit zur Beibehaltung von Kontextdaten eines beliebigen Typs, die für die Verwendung in einem Rückruf unverändert.</span><span class="sxs-lookup"><span data-stu-id="85e7e-536">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="85e7e-537">Optional.</span><span class="sxs-lookup"><span data-stu-id="85e7e-537">Optional.</span></span> <span data-ttu-id="85e7e-538">Eine Funktion, die bei der Rückgabe des Rückrufs aufgerufen wird, dessen einziger Parameter vom Typ [Office.AsyncResult](xref:office.Office.AsyncResult)ist<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-538">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="85e7e-539">Die `value` -Eigenschaft des Ergebnisses enthält die `fieldValue` -Eigenschaft, die den Wert des angegebenen Felds darstellt.</span><span class="sxs-lookup"><span data-stu-id="85e7e-539">The `value` property of the result contains the `fieldValue` property, which represents the value of the specified field.</span></span>
      type:
      - '(result: AsyncResult<any>) => void'
- uid: office.Office.Document.getWSSUrlAsync
  summary: <span data-ttu-id="85e7e-540">Nur Projektdokumente.</span><span class="sxs-lookup"><span data-stu-id="85e7e-540">Project documents only.</span></span> <span data-ttu-id="85e7e-541">Abrufen des WSS-Url und die Liste namens für die Aufgabenliste, die MPP zu synchronisiert wird.</span><span class="sxs-lookup"><span data-stu-id="85e7e-541">Get the WSS Url and list name for the Tasks List, the MPP is synced too.</span></span>
  remarks: >-
    <span data-ttu-id="85e7e-542">**Supportdetails**</span><span class="sxs-lookup"><span data-stu-id="85e7e-542">**Support details**</span></span>


    <span data-ttu-id="85e7e-p152">Ein Häkchen (v) in der folgenden Matrix weist darauf hin, dass diese Methode in der entsprechenden Office-Hostanwendung unterstützt wird. Eine leere Zelle weist darauf hin, dass die Office-Hostanwendung diese Methode nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="85e7e-p152">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>


    <span data-ttu-id="85e7e-545">Weitere Informationen zu Office-Host-Anwendung und Server-Anforderungen, finden Sie unter [Anforderungen für die Ausführung von Office-Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-545">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="85e7e-546">*Unterstützte Hosts nach Plattform*</span><span class="sxs-lookup"><span data-stu-id="85e7e-546">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="85e7e-547">Office für Windows Desktop</span><span class="sxs-lookup"><span data-stu-id="85e7e-547">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="85e7e-548">Office Online (im Browser)</span><span class="sxs-lookup"><span data-stu-id="85e7e-548">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id="85e7e-549"><strong>Projekt</strong></span><span class="sxs-lookup"><span data-stu-id="85e7e-549"><strong> Project </strong></span></span></td><td> <span data-ttu-id="85e7e-550">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-550">Y</span></span> </td><td> </td></tr> </table>
  name: getWSSUrlAsync(options, callback)
  fullName: getWSSUrlAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getWSSUrlAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<any>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: options
      description: <span data-ttu-id="85e7e-551">Bietet die Möglichkeit zur Beibehaltung von Kontextdaten eines beliebigen Typs, die für die Verwendung in einem Rückruf unverändert.</span><span class="sxs-lookup"><span data-stu-id="85e7e-551">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: '<span data-ttu-id="85e7e-552">Optional.</span><span class="sxs-lookup"><span data-stu-id="85e7e-552">Optional.</span></span> <span data-ttu-id="85e7e-553">Eine Funktion, die bei der Rückgabe des Rückrufs aufgerufen wird, dessen einziger Parameter vom Typ [Office.AsyncResult](xref:office.Office.AsyncResult)ist<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-553">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="85e7e-554">Die `value` -Eigenschaft des Ergebnisses enthält die folgenden Eigenschaften: `listName` -den Namen der synchronisierten SharePoint-Vorgangsliste.</span><span class="sxs-lookup"><span data-stu-id="85e7e-554">The `value` property of the result contains the following properties: `listName` - the name of the synchronized SharePoint task list.</span></span> <span data-ttu-id="85e7e-555">`serverUrl`-die URL der synchronisierten SharePoint-Vorgangsliste.</span><span class="sxs-lookup"><span data-stu-id="85e7e-555">`serverUrl` - the URL of the synchronized SharePoint task list.</span></span>'
      type:
      - '(result: AsyncResult<any>) => void'
- uid: office.Office.Document.goToByIdAsync
  summary: <span data-ttu-id="85e7e-556">Wechselt zum angegebenen Objekt oder Speicherort im Dokument.</span><span class="sxs-lookup"><span data-stu-id="85e7e-556">Goes to the specified object or location in the document.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="85e7e-557">Anforderungssätze</span><span class="sxs-lookup"><span data-stu-id="85e7e-557">Requirement Sets</span></span></td><td><span data-ttu-id="85e7e-558">nicht in einem Satz</span><span class="sxs-lookup"><span data-stu-id="85e7e-558">not in a set</span></span></td></tr></table>


    <span data-ttu-id="85e7e-559">PowerPoint unterstützt die GoToByIdAsync-Methode in Masteransicht nicht.</span><span class="sxs-lookup"><span data-stu-id="85e7e-559">PowerPoint doesn't support the goToByIdAsync method in Master Views.</span></span>


    <span data-ttu-id="85e7e-560">Das Verhalten, das durch die Option SelectionMode verursacht hängt vom Host ab:</span><span class="sxs-lookup"><span data-stu-id="85e7e-560">The behavior caused by the selectionMode option varies by host:</span></span>


    <span data-ttu-id="85e7e-561">In Excel: `Office.SelectionMode.Selected` wählt alle Inhalte in der Bindung oder benannte Element.</span><span class="sxs-lookup"><span data-stu-id="85e7e-561">In Excel: `Office.SelectionMode.Selected` selects all content in the binding, or named item.</span></span> <span data-ttu-id="85e7e-562">Office.SelectionMode.Nonewählt für Textbindungen die Zelle aus; für Matrixbindungen, Tabellenbindungen und benannte Elemente wird die erste Datenzelle (nicht die erste Zell in der Kopfzeile für Tabellen) ausgewählt.</span><span class="sxs-lookup"><span data-stu-id="85e7e-562">Office.SelectionMode.None for text bindings, selects the cell; for matrix bindings, table bindings, and named items, selects the first data cell (not first cell in header row for tables).</span></span>


    <span data-ttu-id="85e7e-563">In PowerPoint: `Office.SelectionMode.Selected` wählt den Folientitel oder den ersten TextBox-Steuerelement auf der Folie.</span><span class="sxs-lookup"><span data-stu-id="85e7e-563">In PowerPoint: `Office.SelectionMode.Selected` selects the slide title or first textbox on the slide.</span></span> <span data-ttu-id="85e7e-564">`Office.SelectionMode.None`keine markiert nichts.</span><span class="sxs-lookup"><span data-stu-id="85e7e-564">`Office.SelectionMode.None` doesn't select anything.</span></span>


    <span data-ttu-id="85e7e-565">In Word: `Office.SelectionMode.Selected` wählt alle Inhalte in der Bindung.</span><span class="sxs-lookup"><span data-stu-id="85e7e-565">In Word: `Office.SelectionMode.Selected` selects all content in the binding.</span></span> <span data-ttu-id="85e7e-566">Office.SelectionMode.None verschiebt für Textbindungen den Cursor an den Anfang des Textes; für Matrixbindungen und Tabellenbindungen wird die erste Datenzelle (nicht die erste Zelle in der Kopfzeile für Tabellen) ausgewählt.</span><span class="sxs-lookup"><span data-stu-id="85e7e-566">Office.SelectionMode.None for text bindings, moves the cursor to the beginning of the text; for matrix bindings and table bindings, selects the first data cell (not first cell in header row for tables).</span></span>


    <span data-ttu-id="85e7e-567">**Supportdetails**</span><span class="sxs-lookup"><span data-stu-id="85e7e-567">**Support details**</span></span>


    <span data-ttu-id="85e7e-p157">Ein Häkchen (v) in der folgenden Matrix weist darauf hin, dass diese Methode in der entsprechenden Office-Hostanwendung unterstützt wird. Eine leere Zelle weist darauf hin, dass die Office-Hostanwendung diese Methode nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="85e7e-p157">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>


    <span data-ttu-id="85e7e-570">Weitere Informationen zu Office-Host-Anwendung und Server-Anforderungen, finden Sie unter [Anforderungen für die Ausführung von Office-Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-570">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="85e7e-571">*Unterstützte Hosts nach Plattform*</span><span class="sxs-lookup"><span data-stu-id="85e7e-571">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="85e7e-572">Office für Windows Desktop</span><span class="sxs-lookup"><span data-stu-id="85e7e-572">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="85e7e-573">Office Online (im Browser)</span><span class="sxs-lookup"><span data-stu-id="85e7e-573">Office Online (in browser)</span></span> </th><th> <span data-ttu-id="85e7e-574">Office für iPad</span><span class="sxs-lookup"><span data-stu-id="85e7e-574">Office for iPad</span></span> </th><th> <span data-ttu-id="85e7e-575">Office for Mac</span><span class="sxs-lookup"><span data-stu-id="85e7e-575">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id="85e7e-576"><strong>Excel</strong></span><span class="sxs-lookup"><span data-stu-id="85e7e-576"><strong> Excel </strong></span></span></td><td> <span data-ttu-id="85e7e-577">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-577">Y</span></span> </td><td> <span data-ttu-id="85e7e-578">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-578">Y</span></span> </td><td> <span data-ttu-id="85e7e-579">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-579">Y</span></span> </td><td> <span data-ttu-id="85e7e-580">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-580">Y</span></span> </td></tr> <tr><td><span data-ttu-id="85e7e-581"><strong>PowerPoint</strong></span><span class="sxs-lookup"><span data-stu-id="85e7e-581"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id="85e7e-582">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-582">Y</span></span> </td><td> <span data-ttu-id="85e7e-583">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-583">Y</span></span> </td><td> <span data-ttu-id="85e7e-584">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-584">Y</span></span> </td><td> <span data-ttu-id="85e7e-585">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-585">Y</span></span> </td></tr> <tr><td><span data-ttu-id="85e7e-586"><strong>Word</strong></span><span class="sxs-lookup"><span data-stu-id="85e7e-586"><strong> Word </strong></span></span></td><td> <span data-ttu-id="85e7e-587">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-587">Y</span></span> </td><td> </td><td> <span data-ttu-id="85e7e-588">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-588">Y</span></span> </td><td> <span data-ttu-id="85e7e-589">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-589">Y</span></span> </td></tr> </table>

    #### <a name="examples"></a><span data-ttu-id="85e7e-590">Beispiele</span><span class="sxs-lookup"><span data-stu-id="85e7e-590">Examples</span></span>


    ```javascript

    // Go to a binding by id (Word and Excel)

    // The following example shows how to:

    // 1. Create a table binding using the addFromSelectionAsync method as a sample binding to work with.

    // 2. Specify that binding as the binding to go to.

    // 3. Pass an anonymous callback function that returns the status of the operation

    //    to the callback parameter of the goToByIdAsync method.

    // 4. Display the value on the add-in's page.

    function gotoBinding() {
        // Create a new table binding for the selected table.
        Office.context.document.bindings.addFromSelectionAsync("table",{ id: "MyTableBinding" }, function (asyncResult) {
        if (asyncResult.status == "failed") {
                  showMessage("Action failed with error: " + asyncResult.error.message);
              }
              else {
                  showMessage("Added new binding with type: " + asyncResult.value.type +" and id: " + asyncResult.value.id);
              }
        });

        // Go to binding by id.
        Office.context.document.goToByIdAsync("MyTableBinding", Office.GoToType.Binding, function (asyncResult) {
            if (asyncResult.status == "failed") {
                showMessage("Action failed with error: " + asyncResult.error.message);
            }
            else {
                showMessage("Navigation successful");
            }
        });
    }


    // Go to a table in a spreadsheet (Excel)

    // The following example shows how to:

    // 1. Specify a table by name as the table to go to.

    // 2. Pass an anonymous callback function that returns the status of the operation

    //    to the callback parameter of the goToByIdAsync method.

    // 3. Display the value on the add-in's page.

    function goToTable() {
        Office.context.document.goToByIdAsync("Table1", Office.GoToType.NamedItem, function (asyncResult) {
            if (asyncResult.status == "failed") {
                showMessage("Action failed with error: " + asyncResult.error.message);
            }
            else {
                showMessage("Navigation successful");
            }
        });
    }


    // Go to the currently selected slide by id (PowerPoint)

    // The following example shows how to:

    // 1. Get the id of the currently selected slides using the getSelectedDataAsync method.

    // 2. Specify the returned id as the slide to go to.

    // 3. Pass an anonymous callback function that returns the status of the operation

    //    to the callback parameter of the goToByIdAsync method.

    // 4. Display the value of the stringified JSON object returned by asyncResult.value,

    //    which contains information about the selected slides, on the add-in's page.

    var firstSlideId = 0;

    function gotoSelectedSlide() {
        //Get currently selected slide's id
        Office.context.document.getSelectedDataAsync(Office.CoercionType.SlideRange, function (asyncResult) {
            if (asyncResult.status == "failed") {
                app.showNotification("Action failed with error: " + asyncResult.error.message);
            }
            else {
                firstSlideId = asyncResult.value.slides[0].id;
                app.showNotification(JSON.stringify(asyncResult.value));
            }
        });
        //Go to slide by id.
        Office.context.document.goToByIdAsync(firstSlideId, Office.GoToType.Slide, function (asyncResult) {
            if (asyncResult.status == "failed") {
                app.showNotification("Action failed with error: " + asyncResult.error.message);
            }
            else {
                app.showNotification("Navigation successful");
            }
        });
    }


    // Go to slide by index (PowerPoint)

    // The following example shows how to:

    // 1. Specify the index of the first, last, previous, or next slide to go to.

    // 2. Pass an anonymous callback function that returns the status of the operation

    //    to the callback parameter of the goToByIdAsync method.

    // 3. Display the value on the add-in's page.

    function goToSlideByIndex() {
        var goToFirst = Office.Index.First;
        var goToLast = Office.Index.Last;
        var goToPrevious = Office.Index.Previous;
        var goToNext = Office.Index.Next;

        Office.context.document.goToByIdAsync(goToNext, Office.GoToType.Index, function (asyncResult) {
            if (asyncResult.status == "failed") {
                showMessage("Action failed with error: " + asyncResult.error.message);
            }
            else {
                showMessage("Navigation successful");
            }
        });
    }

    ```
  name: goToByIdAsync(id, goToType, options, callback)
  fullName: goToByIdAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'goToByIdAsync(id: string | number, goToType: GoToType, options?: GoToByIdOptions, callback?: (result: AsyncResult<any>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: id
      description: <span data-ttu-id="85e7e-591">Der Bezeichner des Objekts oder der Speicherort.</span><span class="sxs-lookup"><span data-stu-id="85e7e-591">The identifier of the object or location to go to.</span></span>
      type:
      - string | number
    - id: goToType
      description: <span data-ttu-id="85e7e-592">Der Typ des Speicherorts zu wechseln.</span><span class="sxs-lookup"><span data-stu-id="85e7e-592">The type of the location to go to.</span></span>
      type:
      - office.Office.GoToType
    - id: options
      description: <span data-ttu-id="85e7e-593">Bietet Optionen dazu, ob Sie den Speicherort auszuwählen, zu dem navigiert wird.</span><span class="sxs-lookup"><span data-stu-id="85e7e-593">Provides options for whether to select the location that is navigated to.</span></span>
      type:
      - office.Office.GoToByIdOptions
    - id: callback
      description: <span data-ttu-id="85e7e-594">Optional.</span><span class="sxs-lookup"><span data-stu-id="85e7e-594">Optional.</span></span> <span data-ttu-id="85e7e-595">Eine Funktion, die bei der Rückgabe des Rückrufs aufgerufen wird, dessen einziger Parameter vom Typ [Office.AsyncResult](xref:office.Office.AsyncResult)ist<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-595">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="85e7e-596">Die `value` -Eigenschaft des Ergebnisses ist die aktuelle Ansicht.</span><span class="sxs-lookup"><span data-stu-id="85e7e-596">The `value` property of the result is the current view.</span></span>
      type:
      - '(result: AsyncResult<any>) => void'
- uid: office.Office.Document.mode
  summary: <span data-ttu-id="85e7e-597">Ruft den Modus ab, in dem sich das Dokument befindet.</span><span class="sxs-lookup"><span data-stu-id="85e7e-597">Gets the mode the document is in.</span></span>
  remarks: "<span data-ttu-id=\"85e7e-598\">**Supportdetails**</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-598\">**Support details**</span></span>\n\n<span data-ttu-id=\"85e7e-p159\">Ein Häkchen (v) in der folgenden Matrix weist darauf hin, dass diese Eigenschaft in der entsprechenden Office-Hostanwendung unterstützt wird. Eine leere Zelle weist darauf hin, dass die Office-Hostanwendung diese Eigenschaft nicht unterstützt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-p159\">A capital Y in the following matrix indicates that this property is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this property.</span></span>\n\n<span data-ttu-id=\"85e7e-601\">Weitere Informationen zu Office-Host-Anwendung und Server-Anforderungen, finden Sie unter [Anforderungen für die Ausführung von Office-Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-601\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"85e7e-602\">*Unterstützte Hosts nach Plattform*</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-602\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"85e7e-603\">Office für Windows Desktop</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-603\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"85e7e-604\">Office Online (im Browser)</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-604\">Office Online (in browser)</span></span> </th><th> <span data-ttu-id=\"85e7e-605\">Office für iPad</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-605\">Office for iPad</span></span> </th><th> <span data-ttu-id=\"85e7e-606\">Office for Mac</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-606\">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id=\"85e7e-607\"><strong>Zugriff</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-607\"><strong> Access </strong></span></span></td><td> </td><td> <span data-ttu-id=\"85e7e-608\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-608\">Y</span></span> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id=\"85e7e-609\"><strong>Excel</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-609\"><strong> Excel </strong></span></span></td><td> <span data-ttu-id=\"85e7e-610\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-610\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-611\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-611\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-612\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-612\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-613\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-613\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"85e7e-614\"><strong>PowerPoint</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-614\"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id=\"85e7e-615\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-615\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-616\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-616\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-617\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-617\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-618\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-618\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"85e7e-619\"><strong>Word</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-619\"><strong> Word </strong></span></span></td><td> <span data-ttu-id=\"85e7e-620\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-620\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-621\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-621\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-622\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-622\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-623\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-623\">Y</span></span> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"85e7e-624\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-624\">Examples</span></span>\n\n```javascript\nfunction displayDocumentMode() {\n    write(Office.context.document.mode);\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```\n```javascript\n// The following example initializes the add-in and then gets properties of the\n// Document object that are available in the context of a Project document.\n// A Project document is the opened, active project. To access members of the\n// ProjectDocument object, use the Office.context.document object as shown in\n// the code examples for ProjectDocument methods and events.\n// The example assumes your add-in has a reference to the jQuery library and\n// that the following page control is defined in the content div in the page body:\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n\n            // Get information about the document.\n            showDocumentProperties();\n        });\n    };\n\n    // Get the document mode and the URL of the active project.\n    function showDocumentProperties() {\n        var output = String.format(\n            'The document mode is {0}.<br/>The URL of the active project is {1}.',\n            Office.context.document.mode,\n            Office.context.document.url);\n        $('#message').html(output);\n    }\n})();\n```"
  name: mode
  fullName: mode
  langs:
  - typeScript
  type: property
  syntax:
    content: 'mode: DocumentMode;'
    return:
      type:
      - office.Office.DocumentMode
- uid: office.Office.Document.removeHandlerAsync
  summary: <span data-ttu-id="85e7e-625">Entfernt einen Ereignishandler für den angegebenen Ereignistyp.</span><span class="sxs-lookup"><span data-stu-id="85e7e-625">Removes an event handler for the specified event type.</span></span>
  remarks: >-
    <table><tr><td><span data-ttu-id="85e7e-626">Anforderungssätze</span><span class="sxs-lookup"><span data-stu-id="85e7e-626">Requirement Sets</span></span></td><td><span data-ttu-id="85e7e-627">DocumentEvents</span><span class="sxs-lookup"><span data-stu-id="85e7e-627">DocumentEvents</span></span></td></tr></table>


    <span data-ttu-id="85e7e-628">**Supportdetails**</span><span class="sxs-lookup"><span data-stu-id="85e7e-628">**Support details**</span></span>


    <span data-ttu-id="85e7e-p160">Ein Häkchen (v) in der folgenden Matrix weist darauf hin, dass diese Methode in der entsprechenden Office-Hostanwendung unterstützt wird. Eine leere Zelle weist darauf hin, dass die Office-Hostanwendung diese Methode nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="85e7e-p160">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>


    <span data-ttu-id="85e7e-631">Weitere Informationen zu Office-Host-Anwendung und Server-Anforderungen, finden Sie unter [Anforderungen für die Ausführung von Office-Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-631">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="85e7e-632">*Unterstützte Hosts nach Plattform*</span><span class="sxs-lookup"><span data-stu-id="85e7e-632">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="85e7e-633">Office für Windows Desktop</span><span class="sxs-lookup"><span data-stu-id="85e7e-633">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="85e7e-634">Office Online (im Browser)</span><span class="sxs-lookup"><span data-stu-id="85e7e-634">Office Online (in browser)</span></span> </th><th> <span data-ttu-id="85e7e-635">Office für iPad</span><span class="sxs-lookup"><span data-stu-id="85e7e-635">Office for iPad</span></span> </th><th> <span data-ttu-id="85e7e-636">Office for Mac</span><span class="sxs-lookup"><span data-stu-id="85e7e-636">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id="85e7e-637"><strong>Excel</strong></span><span class="sxs-lookup"><span data-stu-id="85e7e-637"><strong> Excel </strong></span></span></td><td> <span data-ttu-id="85e7e-638">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-638">Y</span></span> </td><td> <span data-ttu-id="85e7e-639">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-639">Y</span></span> </td><td> <span data-ttu-id="85e7e-640">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-640">Y</span></span> </td><td> <span data-ttu-id="85e7e-641">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-641">Y</span></span> </td></tr> <tr><td><span data-ttu-id="85e7e-642"><strong>OneNote</strong></span><span class="sxs-lookup"><span data-stu-id="85e7e-642"><strong> OneNote </strong></span></span></td><td> </td><td> <span data-ttu-id="85e7e-643">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-643">Y</span></span> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id="85e7e-644"><strong>PowerPoint</strong></span><span class="sxs-lookup"><span data-stu-id="85e7e-644"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id="85e7e-645">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-645">Y</span></span> </td><td> <span data-ttu-id="85e7e-646">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-646">Y</span></span> </td><td> <span data-ttu-id="85e7e-647">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-647">Y</span></span> </td><td> <span data-ttu-id="85e7e-648">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-648">Y</span></span> </td></tr> <tr><td><span data-ttu-id="85e7e-649"><strong>Projekt</strong></span><span class="sxs-lookup"><span data-stu-id="85e7e-649"><strong> Project </strong></span></span></td><td> <span data-ttu-id="85e7e-650">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-650">Y</span></span> </td><td> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id="85e7e-651"><strong>Word</strong></span><span class="sxs-lookup"><span data-stu-id="85e7e-651"><strong> Word </strong></span></span></td><td> <span data-ttu-id="85e7e-652">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-652">Y</span></span> </td><td> <span data-ttu-id="85e7e-653">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-653">Y</span></span> </td><td> <span data-ttu-id="85e7e-654">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-654">Y</span></span> </td><td> <span data-ttu-id="85e7e-655">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-655">Y</span></span> </td></tr> </table>

    #### <a name="examples"></a><span data-ttu-id="85e7e-656">Beispiele</span><span class="sxs-lookup"><span data-stu-id="85e7e-656">Examples</span></span>


    ```javascript

    // The following example removes the event handler named 'MyHandler'.

    function removeSelectionChangedEventHandler() {
        Office.context.document.removeHandlerAsync(Office.EventType.DocumentSelectionChanged, {handler:MyHandler});
    }


    function MyHandler(eventArgs) {
        doSomethingWithDocument(eventArgs.document);
    }

    ```

    ```javascript

    // The following code example uses addHandlerAsync to add an event handler for the

    // ResourceSelectionChanged event and removeHandlerAsync to remove the handler.

    // When a resource is selected in a resource view, the handler displays the

    // resource GUID. When the handler is removed, the GUID is not displayed.

    // The example assumes that your add-in has a reference to the jQuery library and

    // that the following page control is defined in the content div in the page body:

    // <input id="remove-handler" type="button" value="Remove handler" /><br />

    // <span id="message"></span>


    (function () {
        "use strict";

        // The initialize function must be run each time a new page is loaded.
        Office.initialize = function (reason) {
            $(document).ready(function () {

                // After the DOM is loaded, add-in-specific code can run.
                Office.context.document.addHandlerAsync(
                    Office.EventType.ResourceSelectionChanged,
                    getResourceGuid);
                $('#remove-handler').click(removeEventHandler);
            });
        };

        // Remove the event handler.
        function removeEventHandler() {
            Office.context.document.removeHandlerAsync(
                Office.EventType.ResourceSelectionChanged,
                {handler:getResourceGuid,
                asyncContext:'The handler is removed.'},
                function (result) {
                    if (result.status === Office.AsyncResultStatus.Failed) {
                        onError(result.error);
                    }
                    else {
                        $('#remove-handler').attr('disabled', 'disabled');
                        $('#message').html(result.asyncContext);
                    }
                }
            );
        }

        // Get the GUID of the currently selected resource and display it in the add-in.
        function getResourceGuid() {
            Office.context.document.getSelectedResourceAsync(
                function (result) {
                    if (result.status === Office.AsyncResultStatus.Failed) {
                        onError(result.error);
                    }
                    else {
                        $('#message').html('Resource GUID: ' + result.value);
                    }
                }
            );
        }

        function onError(error) {
            $('#message').html(error.name + ' ' + error.code + ': ' + error.message);
        }
    })();

    ```
  name: removeHandlerAsync(eventType, options, callback)
  fullName: removeHandlerAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'removeHandlerAsync(eventType: Office.EventType, options?: RemoveHandlerOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: eventType
      description: <span data-ttu-id="85e7e-657">Der Ereignistyp.</span><span class="sxs-lookup"><span data-stu-id="85e7e-657">The event type.</span></span> <span data-ttu-id="85e7e-658">Für Dokument kann "Document.SelectionChanged" oder "Document.ActiveViewChanged" sein.</span><span class="sxs-lookup"><span data-stu-id="85e7e-658">For document can be 'Document.SelectionChanged' or 'Document.ActiveViewChanged'.</span></span>
      type:
      - Office.EventType
    - id: options
      description: <span data-ttu-id="85e7e-659">Bietet Optionen, um zu bestimmen, welche Ereignishandler oder Handler entfernt werden.</span><span class="sxs-lookup"><span data-stu-id="85e7e-659">Provides options to determine which event handler or handlers are removed.</span></span>
      type:
      - office.Office.RemoveHandlerOptions
    - id: callback
      description: <span data-ttu-id="85e7e-660">Optional.</span><span class="sxs-lookup"><span data-stu-id="85e7e-660">Optional.</span></span> <span data-ttu-id="85e7e-661">Eine Funktion, die bei der Rückgabe des Rückrufs aufgerufen wird, dessen einziger Parameter vom Typ [Office.AsyncResult](xref:office.Office.AsyncResult)ist<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-661">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Document.setResourceFieldAsync
  summary: >-
    <span data-ttu-id="85e7e-662">Nur Projektdokumente.</span><span class="sxs-lookup"><span data-stu-id="85e7e-662">Project documents only.</span></span> <span data-ttu-id="85e7e-663">Ressourcenfeld für die angegebene Ressource ID festlegen</span><span class="sxs-lookup"><span data-stu-id="85e7e-663">Set resource field for specified resource Id.</span></span>


    <span data-ttu-id="85e7e-664">Wichtig: Diese API funktioniert nur in Project 2016 auf Windows-Desktop.</span><span class="sxs-lookup"><span data-stu-id="85e7e-664">Important: This API works only in Project 2016 on Windows desktop.</span></span>
  remarks: >-
    <span data-ttu-id="85e7e-665">**Supportdetails**</span><span class="sxs-lookup"><span data-stu-id="85e7e-665">**Support details**</span></span>


    <span data-ttu-id="85e7e-p164">Ein Häkchen (v) in der folgenden Matrix weist darauf hin, dass diese Methode in der entsprechenden Office-Hostanwendung unterstützt wird. Eine leere Zelle weist darauf hin, dass die Office-Hostanwendung diese Methode nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="85e7e-p164">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>


    <span data-ttu-id="85e7e-668">Weitere Informationen zu Office-Host-Anwendung und Server-Anforderungen, finden Sie unter [Anforderungen für die Ausführung von Office-Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-668">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="85e7e-669">*Unterstützte Hosts nach Plattform*</span><span class="sxs-lookup"><span data-stu-id="85e7e-669">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="85e7e-670">Office für Windows Desktop</span><span class="sxs-lookup"><span data-stu-id="85e7e-670">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="85e7e-671">Office Online (im Browser)</span><span class="sxs-lookup"><span data-stu-id="85e7e-671">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id="85e7e-672"><strong>Projekt</strong></span><span class="sxs-lookup"><span data-stu-id="85e7e-672"><strong> Project </strong></span></span></td><td> <span data-ttu-id="85e7e-673">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-673">Y</span></span> </td><td> </td></tr> </table>

    #### <a name="examples"></a><span data-ttu-id="85e7e-674">Beispiele</span><span class="sxs-lookup"><span data-stu-id="85e7e-674">Examples</span></span>


    ```javascript

    // The following code example calls getSelectedResourceAsync to get the GUID of the resource that's

    // currently selected in a resource view. Then it sets two resource field values by calling

    // setResourceFieldAsync recursively.

    // The getSelectedTaskAsync method used in the example requires that a task view

    // (for example, Task Usage) is the active view and that a task is selected. See the addHandlerAsync

    // method for an example that activates a button based on the active view type.

    // The example assumes your add-in has a reference to the jQuery library and that the

    // following page controls are defined in the content div in the page body:

    // <input id="set-info" type="button" value="Set info" /><br />

    // <span id="message"></span>


    (function () {
        "use strict";

        // The initialize function must be run each time a new page is loaded.
        Office.initialize = function (reason) {
            $(document).ready(function () {

                // After the DOM is loaded, add-in-specific code can run.
                app.initialize();
                $('#set-info').click(setResourceInfo);
            });
        };

        // Get the GUID of the resource, and then get the resource fields.
        function setResourceInfo() {
            getResourceGuid().then(
                function (data) {
                    setResourceFields(data);
                }
            );
        }

        // Get the GUID of the selected resource.
        function getResourceGuid() {
            var defer = $.Deferred();
            Office.context.document.getSelectedResourceAsync(
                function (result) {
                    if (result.status === Office.AsyncResultStatus.Failed) {
                        onError(result.error);
                    }
                    else {
                        defer.resolve(result.value);
                    }
                }
            );
            return defer.promise();
        }

        // Set the specified fields for the selected resource.
        function setResourceFields(resourceGuid) {
            var targetFields = [Office.ProjectResourceFields.StandardRate, Office.ProjectResourceFields.Notes];
            var fieldValues = [.28, 'Notes for the resource.'];

            // Set the field value. If the call is successful, set the next field.
            for (var i = 0; i < targetFields.length; i++) {
                Office.context.document.setResourceFieldAsync(
                    resourceGuid,
                    targetFields[i],
                    fieldValues[i],
                    function (result) {
                        if (result.status === Office.AsyncResultStatus.Succeeded) {
                            i++;
                        }
                        else {
                            onError(result.error);
                        }
                    }
                );
            }
            $('#message').html('Field values set');
        }

        function onError(error) {
            app.showNotification(error.name + ' ' + error.code + ': ' + error.message);
        }
    })();

    ```
  name: setResourceFieldAsync(resourceId, fieldId, fieldValue, options, callback)
  fullName: setResourceFieldAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setResourceFieldAsync(resourceId: string, fieldId: number, fieldValue: string | number | boolean | object, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: resourceId
      description: <span data-ttu-id="85e7e-675">Entweder eine Zeichenfolge oder ein Wert, der die Ressourcen-ID</span><span class="sxs-lookup"><span data-stu-id="85e7e-675">Either a string or value of the Resource Id.</span></span>
      type:
      - string
    - id: fieldId
      description: <span data-ttu-id="85e7e-676">Ressourcenfelder.</span><span class="sxs-lookup"><span data-stu-id="85e7e-676">Resource Fields.</span></span>
      type:
      - number
    - id: fieldValue
      description: <span data-ttu-id="85e7e-677">Der Wert des Felds Ziel.</span><span class="sxs-lookup"><span data-stu-id="85e7e-677">Value of the target field.</span></span>
      type:
      - string | number | boolean | object
    - id: options
      description: <span data-ttu-id="85e7e-678">Bietet die Möglichkeit zur Beibehaltung von Kontextdaten eines beliebigen Typs, die für die Verwendung in einem Rückruf unverändert.</span><span class="sxs-lookup"><span data-stu-id="85e7e-678">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="85e7e-679">Optional.</span><span class="sxs-lookup"><span data-stu-id="85e7e-679">Optional.</span></span> <span data-ttu-id="85e7e-680">Eine Funktion, die bei der Rückgabe des Rückrufs aufgerufen wird, dessen einziger Parameter vom Typ [Office.AsyncResult](xref:office.Office.AsyncResult)ist<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-680">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Document.setSelectedDataAsync
  summary: <span data-ttu-id="85e7e-681">Schreibt die angegebenen Daten in der aktuellen Markierung.</span><span class="sxs-lookup"><span data-stu-id="85e7e-681">Writes the specified data into the current selection.</span></span>
  remarks: "<table><tr><td><span data-ttu-id=\"85e7e-682\">Anforderungssätze</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-682\">Requirement Sets</span></span></td><td><span data-ttu-id=\"85e7e-683\">Selection</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-683\">Selection</span></span></td></tr></table>\n\n<span data-ttu-id=\"85e7e-684\">**Anwendungsspezifische Verhaltensweisen**</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-684\">**Application-specific behaviors**</span></span>\n\n<span data-ttu-id=\"85e7e-685\">Die folgenden anwendungsspezifischen Aktionen angewendet, wenn Daten in eine Auswahl geschrieben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-685\">The following application-specific actions apply when writing data to a selection.</span></span>\n\n<table> <tr><td><span data-ttu-id=\"85e7e-686\">Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-686\">Word</span></span></td><td><span data-ttu-id=\"85e7e-687\">Wenn keine Auswahl vorhanden ist und die Einfügemarke, um eine gültige Position, die dem angegebenen befindet `data` wird an der Einfügemarke eingefügt</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-687\">If there is no selection and the insertion point is at a valid location, the specified `data` is inserted at the insertion point</span></span></td><td><span data-ttu-id=\"85e7e-688\">Wenn `data` eine Zeichenfolge ist, wird der angegebene Text eingefügt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-688\">If `data` is a string, the specified text is inserted.</span></span></td></tr> <tr><td></td><td></td><td><span data-ttu-id=\"85e7e-689\">Wenn `data` ist ein Array von Arrays (\"Matrix\") oder ein TableData-Objekt eine neue Wordtabelle wird eingefügt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-689\">If `data` is an array of arrays (\"matrix\") or a TableData object, a new Word table is inserted.</span></span></td></tr> <tr><td></td><td></td><td><span data-ttu-id=\"85e7e-690\">Wenn `data` wird HTML verwendet, wird der angegebene HTML-Code eingefügt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-690\">If `data` is HTML, the specified HTML is inserted.</span></span> <span data-ttu-id=\"85e7e-691\">(Wichtig: Wenn keines der HTML-Code einlegen ungültig ist, wird nicht Word meldet einen Fehler.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-691\">(Important: If any of the HTML you insert is invalid, Word won't raise an error.</span></span> <span data-ttu-id=\"85e7e-692\">Word wird als ein Großteil der HTML-Code einfügen können und schließt alle ungültigen Daten).</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-692\">Word will insert as much of the HTML as it can and omits any invalid data).</span></span></td></tr> <tr><td></td><td></td><td><span data-ttu-id=\"85e7e-693\">Wenn `data` Office Open XML, wird die angegebene XML wird eingefügt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-693\">If `data` is Office Open XML, the specified XML is inserted.</span></span></td></tr> <tr><td></td><td></td><td><span data-ttu-id=\"85e7e-694\">Wenn `data` eine base64-codierte Bild-Stream ist, wird das angegebene Bild eingefügt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-694\">If `data` is a base64 encoded image stream, the specified image is inserted.</span></span></td></tr></td></tr> <tr><td></td><td><span data-ttu-id=\"85e7e-695\">Wenn eine Auswahl vorhanden ist</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-695\">If there is a selection</span></span></td><td><span data-ttu-id=\"85e7e-696\">Es ersetzt werden mit dem angegebenen `data` folgen dieselben Regeln wie oben beschrieben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-696\">It will be replaced with the specified `data` following the same rules as above.</span></span></td></tr> <tr><td></td><td><span data-ttu-id=\"85e7e-697\">Einfügen von Bildern</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-697\">Insert images</span></span></td><td><span data-ttu-id=\"85e7e-698\">Eingefügten Bilder werden Inline platziert.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-698\">Inserted images are placed inline.</span></span> <span data-ttu-id=\"85e7e-699\">Die Parameter imageLeft und imageTop werden ignoriert.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-699\">The imageLeft and imageTop parameters are ignored.</span></span> <span data-ttu-id=\"85e7e-700\">Das Bildseitenverhältnis ist immer gesperrt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-700\">The image aspect ratio is always locked.</span></span> <span data-ttu-id=\"85e7e-701\">Wenn nur einer der Parameter imageWidth und imageHeight angegeben ist, wird der andere Wert automatisch skaliert, um das ursprüngliche Seitenverhältnis beizubehalten.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-701\">If only one of the imageWidth and imageHeight parameter is given, the other value will be automatically scaled to keep the original aspect ratio.</span></span></td></tr>\n\n<tr><td><span data-ttu-id=\"85e7e-702\">Excel</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-702\">Excel</span></span></td><td><span data-ttu-id=\"85e7e-703\">Wenn Sie eine einzelne Zelle ausgewählt wird</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-703\">If a single cell is selected</span></span></td><td><span data-ttu-id=\"85e7e-704\">Wenn `data` ist eine Zeichenfolge der angegebene Text ist als der Wert der aktuellen Zelle eingefügt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-704\">If `data` is a string, the specified text is inserted as the value of the current cell.</span></span></td></tr> <tr><td></td><td></td><td><span data-ttu-id=\"85e7e-705\">Wenn `data` ist ein Array von Arrays (\"Matrix\"), der angegebene Satz von Zeilen und Spalten eingefügt, falls keine anderen Daten in angrenzenden Zellen überschrieben werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-705\">If `data` is an array of arrays (\"matrix\"), the specified set of rows and columns are inserted, if no other data in surrounding cells will be overwritten.</span></span></td></tr> <tr><td></td><td></td><td><span data-ttu-id=\"85e7e-706\">Wenn `data` ist ein TableData-Objekt, eine neue Excel-Tabelle mit dem angegebenen Satz von Zeilen und Kopfzeilen eingefügt, falls keine anderen Daten in angrenzenden Zellen überschrieben werden.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-706\">If `data` is a TableData object, a new Excel table with the specified set of rows and headers is inserted, if no other data in surrounding cells will be overwritten.</span></span></td></tr> <tr><td></td><td><span data-ttu-id=\"85e7e-707\">Wenn mehrere Zellen ausgewählt sind</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-707\">If multiple cells are selected</span></span></td><td><span data-ttu-id=\"85e7e-708\">Wenn das Shape nicht mit die Form der entspricht `data` <!-- -->, wird ein Fehler zurückgegeben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-708\">If the shape does not match the shape of `data`<!-- -->, an error is returned.</span></span></td></tr> <tr><td></td><td></td><td><span data-ttu-id=\"85e7e-709\">Wenn die Form der Auswahl genau die Form der entspricht `data` <!-- -->, werden die Werte der markierten Zellen aktualisiert basierend auf den Werten in `data` <!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-709\">If the shape of the selection exactly matches the shape of `data`<!-- -->, the values of the selected cells are updated based on the values in `data`<!-- -->.</span></span></td></tr> <tr><td></td><td><span data-ttu-id=\"85e7e-710\">Einfügen von Bildern</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-710\">Insert images</span></span></td><td><span data-ttu-id=\"85e7e-711\">Eingefügte Bilder sind schwebend.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-711\">Inserted images are floating.</span></span> <span data-ttu-id=\"85e7e-712\">Die Positionsparameter imageLeft und imageTop sind relativ zu den aktuell ausgewählten Zellen.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-712\">The position imageLeft and imageTop parameters are relative to currently selected cell(s).</span></span> <span data-ttu-id=\"85e7e-713\">Negative Werte für imageLeft und imageTop sind zulässig und werden möglicherweise  von Excel an die Bildposition innerhalb eines Arbeitsblatts angepasst.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-713\">Negative imageLeft and imageTop values are allowed and possibly readjusted by Excel to position the image inside a worksheet.</span></span> <span data-ttu-id=\"85e7e-714\">Das Bild-Seitenverhältnis ist gesperrt, es sei denn, die beiden Parameter imageWidth und imageHeight werden angegeben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-714\">Image aspect ratio is locked unless both imageWidth and imageHeight parameters are provided.</span></span> <span data-ttu-id=\"85e7e-715\">Wenn nur einer der Parameter imageWidth und imageHeight angegeben ist, wird der andere Wert automatisch skaliert, um das ursprüngliche Seitenverhältnis beizubehalten.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-715\">If only one of the imageWidth and imageHeight parameter is given, the other value will be automatically scaled to keep the original aspect ratio.</span></span></td></tr> <tr><td></td><td><span data-ttu-id=\"85e7e-716\">Alle anderen Fälle</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-716\">All other cases</span></span></td><td><span data-ttu-id=\"85e7e-717\">Es wird ein Fehler zurückgegeben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-717\">An error is returned.</span></span></td></tr>\n\n<tr><td><span data-ttu-id=\"85e7e-718\">Excel Online</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-718\">Excel Online</span></span></td><td><span data-ttu-id=\"85e7e-719\">Zusätzlich zu den für Excel oben beschriebenen Verhaltensweisen gelten diese Grenzwerte beim Schreiben von Daten in Excel Online</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-719\">In addition to the behaviors described for Excel above, these limits apply when writing data in Excel Online</span></span></td><td><span data-ttu-id=\"85e7e-720\">Die Gesamtzahl der Zellen können Sie ein Arbeitsblatt mit Schreiben der `data` Parameter darf nicht in einem einzigen Aufruf dieser Methode 20.000 überschreiten.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-720\">The total number of cells you can write to a worksheet with the `data` parameter can't exceed 20,000 in a single call to this method.</span></span></td></tr> <tr><td></td><td></td><td><span data-ttu-id=\"85e7e-721\">Die Anzahl der Formatierung Gruppen übergeben, um die `cellFormat` Parameter darf nicht 100 sein.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-721\">The number of formatting groups passed to the `cellFormat` parameter can't exceed 100.</span></span> <span data-ttu-id=\"85e7e-722\">Eine Formatierungsgruppe besteht aus einem Formatierungssatz, der auf einen bestimmten Zellbereich angewendet wird.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-722\">A single formatting group consists of a set of formatting applied to a specified range of cells.</span></span></td></tr>\n\n<tr><td><span data-ttu-id=\"85e7e-723\">PowerPoint</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-723\">PowerPoint</span></span></td><td><span data-ttu-id=\"85e7e-724\">Bild einfügen</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-724\">Insert image</span></span></td><td><span data-ttu-id=\"85e7e-725\">Eingefügte Bilder sind schwebend.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-725\">Inserted images are floating.</span></span> <span data-ttu-id=\"85e7e-726\">Die Position ImageLeft und ImageTop-Parameter sind optional, aber wenn bereitgestellt, sollten beide vorhanden sein.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-726\">The position imageLeft and imageTop parameters are optional but if provided, both should be present.</span></span> <span data-ttu-id=\"85e7e-727\">Wenn ein einzelner Wert bereitgestellt wird, wird er ignoriert.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-727\">If a single value is provided, it will be ignored.</span></span> <span data-ttu-id=\"85e7e-728\">Negative Wert für imageLeft und imageTop sind zulässig und können ein Bild außerhalb einer Folie positionieren.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-728\">Negative imageLeft and imageTop values are allowed and can position an image outside of a slide.</span></span> <span data-ttu-id=\"85e7e-729\">Wenn kein optionaler Parameter angegeben ist und die Folie einen Platzhalter aufweist, ersetzt das Bild den Platzhalter auf der Folie.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-729\">If no optional parameter is given and slide has a placeholder, the image will replace the placeholder in the slide.</span></span> <span data-ttu-id=\"85e7e-730\">Das Bild-Seitenverhältnis wird gesperrt, es sei denn, die beiden Parameter imageWidth und imageHeight werden angegeben.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-730\">Image aspect ratio will be locked unless both imageWidth and imageHeight parameters are provided.</span></span> <span data-ttu-id=\"85e7e-731\">Wenn nur einer der Parameter imageWidth und imageHeight angegeben ist, wird der andere Wert automatisch skaliert, um das ursprüngliche Seitenverhältnis beizubehalten.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-731\">If only one of the imageWidth and imageHeight parameter is given, the other value will be automatically scaled to keep the original aspect ratio.</span></span></td></tr> </table>\n\n<span data-ttu-id=\"85e7e-732\">Die möglichen Werte für den Parameter [Office.CoercionType](xref:office.Office.CoercionType) variieren je nach dem Host.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-732\">The possible values for the [Office.CoercionType](xref:office.Office.CoercionType) parameter vary by the host.</span></span>\n\n<table> <tr> <th><span data-ttu-id=\"85e7e-733\">Host</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-733\">Host</span></span></th> <th><span data-ttu-id=\"85e7e-734\">Unterstützter coercionType</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-734\">Supported coercionType</span></span></th> </tr> <tr> <td><span data-ttu-id=\"85e7e-735\">Excel, PowerPoint, Project und Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-735\">Excel, PowerPoint, Project, and Word</span></span></td> <td><span data-ttu-id=\"85e7e-736\">`Office.CoercionType.Text`(Zeichenfolge)</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-736\">`Office.CoercionType.Text` (string)</span></span></td> </tr> <tr> <td><span data-ttu-id=\"85e7e-737\">Excel und Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-737\">Excel and Word</span></span></td> <td><span data-ttu-id=\"85e7e-738\">`Office.CoercionType.Matrix`(Array von Arrays)</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-738\">`Office.CoercionType.Matrix` (array of arrays)</span></span></td> </tr> <tr> <td><span data-ttu-id=\"85e7e-739\">Access, Excel und Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-739\">Access, Excel, and Word</span></span></td> <td><span data-ttu-id=\"85e7e-740\">`Office.CoercionType.Table`(Objekt \"tabledata\")</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-740\">`Office.CoercionType.Table` (TableData object)</span></span></td> </tr> <tr> <td><span data-ttu-id=\"85e7e-741\">Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-741\">Word</span></span></td> <td>`Office.CoercionType.Html`</td> </tr> <tr> <td><span data-ttu-id=\"85e7e-742\">Word</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-742\">Word</span></span></td> <td><span data-ttu-id=\"85e7e-743\">`Office.CoercionType.Ooxml`(Office Open XML)</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-743\">`Office.CoercionType.Ooxml` (Office Open XML)</span></span></td> </tr> <tr> <td><span data-ttu-id=\"85e7e-744\">PowerPoint und PowerPoint Online</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-744\">PowerPoint and PowerPoint Online</span></span></td> <td>`Office.CoercionType.SlideRange`</td> </tr> </table>\n\n<span data-ttu-id=\"85e7e-745\">**Supportdetails**</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-745\">**Support details**</span></span>\n\n<span data-ttu-id=\"85e7e-p171\">Ein Häkchen (v) in der folgenden Matrix weist darauf hin, dass diese Methode in der entsprechenden Office-Hostanwendung unterstützt wird. Eine leere Zelle weist darauf hin, dass die Office-Hostanwendung diese Methode nicht unterstützt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-p171\">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>\n\n<span data-ttu-id=\"85e7e-748\">Weitere Informationen zu Office-Host-Anwendung und Server-Anforderungen, finden Sie unter [Anforderungen für die Ausführung von Office-Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-748\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"85e7e-749\">*Unterstützte Hosts nach Plattform*</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-749\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"85e7e-750\">Office für Windows Desktop</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-750\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"85e7e-751\">Office Online (im Browser)</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-751\">Office Online (in browser)</span></span> </th><th> <span data-ttu-id=\"85e7e-752\">Office für iPad</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-752\">Office for iPad</span></span> </th><th> <span data-ttu-id=\"85e7e-753\">Office for Mac</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-753\">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id=\"85e7e-754\"><strong>Excel</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-754\"><strong> Excel </strong></span></span></td><td> <span data-ttu-id=\"85e7e-755\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-755\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-756\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-756\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-757\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-757\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-758\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-758\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"85e7e-759\"><strong>PowerPoint</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-759\"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id=\"85e7e-760\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-760\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-761\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-761\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-762\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-762\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-763\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-763\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"85e7e-764\"><strong>Projekt</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-764\"><strong> Project </strong></span></span></td><td> <span data-ttu-id=\"85e7e-765\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-765\">Y</span></span> </td><td> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id=\"85e7e-766\"><strong>Word</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-766\"><strong> Word </strong></span></span></td><td> <span data-ttu-id=\"85e7e-767\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-767\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-768\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-768\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-769\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-769\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-770\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-770\">Y</span></span> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"85e7e-771\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-771\">Examples</span></span>\n\n```javascript\n// The following example sets the selected text or cell to \"Hello World!\", \n// and if that fails, displays the value of the error.message property.\nfunction writeText() {\n    Office.context.document.setSelectedDataAsync(\"Hello World!\",\n        function (asyncResult) {\n            var error = asyncResult.error;\n            if (asyncResult.status === Office.AsyncResultStatus.Failed){\n                write(error.name + \": \" + error.message);\n            }\n        });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n\n// Specifying the optional coercionType parameter lets you specify the kind of data you want to write\n// to a selection. The following example writes data as an array of three rows of two columns, \n// specifying the coercionType as \"matrix\" for that data structure, and if that fails, \n// displays the value of the error.message property.\nfunction writeMatrix() {\n    Office.context.document.setSelectedDataAsync(\n        [[\"Red\", \"Rojo\"], [\"Green\", \"Verde\"], [\"Blue\", \"Azul\"]],\n        {coercionType: Office.CoercionType.Matrix}\n        function (asyncResult) {\n            var error = asyncResult.error;\n            if (asyncResult.status === Office.AsyncResultStatus.Failed){\n                write(error.name + \": \" + error.message);\n            }\n        });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n\n// The following example writes data as a one column table with a header and four rows, \n// specifying the coercionType as \"table\" for that data structure, and if that fails, \n// displays the value of the error.message property.\nfunction writeTable() {\n    // Build table.\n    var myTable = new Office.TableData();\n    myTable.headers = [[\"Cities\"]];\n    myTable.rows = [['Berlin'], ['Roma'], ['Tokyo'], ['Seattle']];\n\n    // Write table.\n    Office.context.document.setSelectedDataAsync(myTable, {coercionType: Office.CoercionType.Table},\n        function (result) {\n            var error = result.error\n            if (result.status === Office.AsyncResultStatus.Failed) {\n                write(error.name + \": \" + error.message);\n            }\n    });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n\n// In Word if you want to write HTML to the selection, you can specify the coercionType parameter as \"html\"\n// as shown in the following example, which uses HTML <b> tags to make \"Hello\" bold.\nfunction writeHtmlData() {\n    Office.context.document.setSelectedDataAsync(\n        \"<b>Hello</b> World!\", {coercionType: Office.CoercionType.Html}, function (asyncResult) {\n            if (asyncResult.status === Office.AsyncResultStatus.Failed) {\n                write('Error: ' + asyncResult.error.message);\n            }\n    });\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n\n// In Word, PowerPoint, or Excel, if you want to write an image to the selection, you can specify the coercionType\n// parameter as \"image\" as shown in the following example. Note that imageLeft and imageTop are ignored by Word.\nfunction insertPictureAtSelection(base64EncodedImageStr) {\n\n    Office.context.document.setSelectedDataAsync(base64EncodedImageStr, {\n    coercionType: Office.CoercionType.Image,\n    imageLeft: 50,\n    imageTop: 50,\n    imageWidth: 100,\n    imageHeight: 100\n    },\n    function (asyncResult) {\n        if (asyncResult.status === Office.AsyncResultStatus.Failed) {\n            console.log(\"Action failed with error: \" + asyncResult.error.message);\n        }\n    });\n}\n```"
  name: setSelectedDataAsync(data, options, callback)
  fullName: setSelectedDataAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setSelectedDataAsync(data: string | TableData | any[][], options?: SetSelectedDataOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: data
      description: >-
        <span data-ttu-id="85e7e-772">Die Daten festgelegt werden soll.</span><span class="sxs-lookup"><span data-stu-id="85e7e-772">The data to be set.</span></span> <span data-ttu-id="85e7e-773">Entweder eine Zeichenfolge oder [Office.CoercionType](xref:office.Office.CoercionType) -Wert, 2d Array oder TableData-Objekt.</span><span class="sxs-lookup"><span data-stu-id="85e7e-773">Either a string or [Office.CoercionType](xref:office.Office.CoercionType) value, 2d array or TableData object.</span></span>


        <span data-ttu-id="85e7e-774">Wenn der Wert für `data` ist:</span><span class="sxs-lookup"><span data-stu-id="85e7e-774">If the value passed for `data` is:</span></span>


        - <span data-ttu-id="85e7e-775">Eine Zeichenfolge: Nur-Text oder alle Werte, die in eine Zeichenfolge umgewandelt werden können, werden eingefügt.</span><span class="sxs-lookup"><span data-stu-id="85e7e-775">A string: Plain text or anything that can be coerced to a string will be inserted.</span></span> <span data-ttu-id="85e7e-776">In Excel können Sie auch  data als eine gültige Formel angeben, um diese Formel zu der ausgewählten Zelle hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="85e7e-776">In Excel, you can also specify data as a valid formula to add that formula to the selected cell.</span></span> <span data-ttu-id="85e7e-777">Festlegen von Daten an "SUM(A1:A5) =" Addieren beispielsweise die Werte im angegebenen Bereich.</span><span class="sxs-lookup"><span data-stu-id="85e7e-777">For example, setting data to "=SUM(A1:A5)" will total the values in the specified range.</span></span> <span data-ttu-id="85e7e-778">Wenn Sie jedoch eine Formel für die gebundene Zelle festlegen, können Sie die hinzugefügte Formel (oder eine bereits vorhandene Formel) anschließend nicht mehr aus der gebundenen Zelle lesen.</span><span class="sxs-lookup"><span data-stu-id="85e7e-778">However, when you set a formula on the bound cell, after doing so, you can't read the added formula (or any pre-existing formula) from the bound cell.</span></span> <span data-ttu-id="85e7e-779">Wenn Sie die Document.getSelectedDataAsyncMethode in der ausgewählten Zelle aufrufen, um die Daten zu lesen, kann die Methode nur die in der Zelle angezeigten Daten (das Formelergebnis) zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="85e7e-779">If you call the Document.getSelectedDataAsync method on the selected cell to read its data, the method can return only the data displayed in the cell (the formula's result).</span></span>


        - <span data-ttu-id="85e7e-780">Ein Array von Arrays („Matrix“): Es werden tabellarische Daten ohne Kopfzeilen eingefügt.</span><span class="sxs-lookup"><span data-stu-id="85e7e-780">An array of arrays ("matrix"): Tabular data without headers will be inserted.</span></span> <span data-ttu-id="85e7e-781">Übergeben Sie beispielsweise zum Schreiben von Daten in drei Zeilen und zwei Spalten ein solches: \[ \["R1C1", "R1C2"\], \["R2C1", "R2C2"\], \["R3C1", "R3C2"\]\].</span><span class="sxs-lookup"><span data-stu-id="85e7e-781">For example, to write data to three rows in two columns, you can pass an array like this: \[\["R1C1", "R1C2"\], \["R2C1", "R2C2"\], \["R3C1", "R3C2"\]\].</span></span> <span data-ttu-id="85e7e-782">Um eine einzelne Spalte mit drei Zeilen zu schreiben, übergeben Sie ein solches: \[ \["R1C1"\], \["R2C1"\], \["R3C1"\]\]</span><span class="sxs-lookup"><span data-stu-id="85e7e-782">To write a single column of three rows, pass an array like this: \[\["R1C1"\], \["R2C1"\], \["R3C1"\]\]</span></span>


        <span data-ttu-id="85e7e-783">In Excel können Sie auch  data als ein Array von Arrays mit gültigen Formeln angeben, um diese Formeln zu den ausgewählten Zellen hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="85e7e-783">In Excel, you can also specify data as an array of arrays that contains valid formulas to add them to the selected cells.</span></span> <span data-ttu-id="85e7e-784">Wenn keine anderen Daten, die überschrieben werden, wenn Daten auf beispielsweise \[ \["SUM(A1:A5)","=AVERAGE(A1:A5) ="\] \] wird die Auswahl zwei Formeln hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="85e7e-784">For example if no other data will be overwritten, setting data to \[\["=SUM(A1:A5)","=AVERAGE(A1:A5)"\]\] will add those two formulas to the selection.</span></span> <span data-ttu-id="85e7e-785">Genau wie beim Angeben einer Formel für eine einzelne Zelle als „Text“, können Sie die hinzugefügten Formeln (oder bereits vorhandene Formeln) anschließend nicht mehr lesen. Sie können nur die Formelergebnisse lesen.</span><span class="sxs-lookup"><span data-stu-id="85e7e-785">Just as when setting a formula on a single cell as "text", you can't read the added formulas (or any pre-existing formulas) after they have been set - you can only read the formulas' results.</span></span>


        - <span data-ttu-id="85e7e-786">Ein TableData-Objekt: Eine Tabelle mit Kopfzeilen wird eingefügt.</span><span class="sxs-lookup"><span data-stu-id="85e7e-786">A TableData object: A table with headers will be inserted.</span></span> <span data-ttu-id="85e7e-787">In Excel Wenn Sie Formeln im TableData-Objekt angeben, die Sie für die Data-Parameter übergeben erhalten Sie möglicherweise nicht die Ergebnisse gewünschten aufgrund des "berechnete Spalten" Features von Excel, die Formeln in einer Spalte automatisch dupliziert.</span><span class="sxs-lookup"><span data-stu-id="85e7e-787">In Excel, if you specify formulas in the TableData object you pass for the data parameter, you might not get the results you expect due to the "calculated columns" feature of Excel, which automatically duplicates formulas within a column.</span></span> <span data-ttu-id="85e7e-788">Um dieses Problem umgehen, wenn Sie schreiben möchten `data` , Formeln, die einer ausgewählten Tabelle enthält, geben Sie die Daten als ein Array von Arrays (anstelle eines TableData-Objekts), und geben Sie den CoercionType als Microsoft.Office.Matrix oder "Matrix".</span><span class="sxs-lookup"><span data-stu-id="85e7e-788">To work around this when you want to write `data` that contains formulas to a selected table, try specifying the data as an array of arrays (instead of a TableData object), and specify the coercionType as Microsoft.Office.Matrix or "matrix".</span></span>
      type:
      - string | TableData | any[][]
    - id: options
      description: <span data-ttu-id="85e7e-789">Bietet Optionen zur Anzeige von Daten in der Auswahl eingefügt.</span><span class="sxs-lookup"><span data-stu-id="85e7e-789">Provides options for how to insert data to the selection.</span></span>
      type:
      - office.Office.SetSelectedDataOptions
    - id: callback
      description: <span data-ttu-id="85e7e-790">Optional.</span><span class="sxs-lookup"><span data-stu-id="85e7e-790">Optional.</span></span> <span data-ttu-id="85e7e-791">Eine Funktion, die bei der Rückgabe des Rückrufs aufgerufen wird, dessen einziger Parameter vom Typ [Office.AsyncResult](xref:office.Office.AsyncResult)ist<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-791">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span> <span data-ttu-id="85e7e-792">Die AsyncResult.value-Eigenschaft gibt immer undefined zurück, da kein Objekt oder Daten abzurufen.</span><span class="sxs-lookup"><span data-stu-id="85e7e-792">The AsyncResult.value property always returns undefined because there is no object or data to retrieve.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Document.setTaskFieldAsync
  summary: >-
    <span data-ttu-id="85e7e-793">Nur Projektdokumente.</span><span class="sxs-lookup"><span data-stu-id="85e7e-793">Project documents only.</span></span> <span data-ttu-id="85e7e-794">Vorgangsfeld für den angegebenen Vorgang ID festlegen</span><span class="sxs-lookup"><span data-stu-id="85e7e-794">Set task field for specified task Id.</span></span>


    <span data-ttu-id="85e7e-795">Wichtig: Diese API funktioniert nur in Project 2016 auf Windows-Desktop.</span><span class="sxs-lookup"><span data-stu-id="85e7e-795">Important: This API works only in Project 2016 on Windows desktop.</span></span>
  remarks: "<span data-ttu-id=\"85e7e-796\">**Supportdetails**</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-796\">**Support details**</span></span>\n\n<span data-ttu-id=\"85e7e-p179\">Ein Häkchen (v) in der folgenden Matrix weist darauf hin, dass diese Methode in der entsprechenden Office-Hostanwendung unterstützt wird. Eine leere Zelle weist darauf hin, dass die Office-Hostanwendung diese Methode nicht unterstützt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-p179\">A capital Y in the following matrix indicates that this method is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this method.</span></span>\n\n<span data-ttu-id=\"85e7e-799\">Weitere Informationen zu Office-Host-Anwendung und Server-Anforderungen, finden Sie unter [Anforderungen für die Ausführung von Office-Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-799\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"85e7e-800\">*Unterstützte Hosts nach Plattform*</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-800\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"85e7e-801\">Office für Windows Desktop</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-801\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"85e7e-802\">Office Online (im Browser)</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-802\">Office Online (in browser)</span></span></th></tr> <tr><td><span data-ttu-id=\"85e7e-803\"><strong>Projekt</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-803\"><strong> Project </strong></span></span></td><td> <span data-ttu-id=\"85e7e-804\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-804\">Y</span></span> </td><td> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"85e7e-805\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-805\">Examples</span></span>\n\n```javascript\n// The following code example calls getSelectedTaskAsync to get the GUID of the task that's\n// currently selected in a task view. Then it sets two task field values by calling\n// setTaskFieldAsync recursively.\n// The getSelectedTaskAsync method used in the example requires that a task view\n// (for example, Task Usage) is the active view and that a task is selected. See the\n// addHandlerAsync method for an example that activates a button based on the active view type.\n// The example assumes your add-in has a reference to the jQuery library and that the\n// following page controls are defined in the content div in the page body:\n// <input id=\"set-info\" type=\"button\" value=\"Set info\" /><br />\n// <span id=\"message\"></span>\n\n(function () {\n    \"use strict\";\n\n    // The initialize function must be run each time a new page is loaded.\n    Office.initialize = function (reason) {\n        $(document).ready(function () {\n            \n            // After the DOM is loaded, add-in-specific code can run.\n            app.initialize();\n            $('#set-info').click(setTaskInfo);\n        });\n    };\n\n    // Get the GUID of the task, and then get the task fields.\n    function setTaskInfo() {\n        getTaskGuid().then(\n            function (data) {\n                setTaskFields(data);\n            }\n        );\n    }\n\n    // Get the GUID of the selected task.\n    function getTaskGuid() {\n        var defer = $.Deferred();\n        Office.context.document.getSelectedTaskAsync(\n            function (result) {\n                if (result.status === Office.AsyncResultStatus.Failed) {\n                    onError(result.error);\n                }\n                else {\n                    defer.resolve(result.value);\n                }\n            }\n        );\n        return defer.promise();\n    }\n\n    // Set the specified fields for the selected task.\n    function setTaskFields(taskGuid) {\n        var targetFields = [Office.ProjectTaskFields.Active, Office.ProjectTaskFields.Notes];\n        var fieldValues = [true, 'Notes for the task.'];\n\n        // Set the field value. If the call is successful, set the next field.\n        for (var i = 0; i < targetFields.length; i++) {\n            Office.context.document.setTaskFieldAsync(\n                taskGuid,\n                targetFields[i],\n                fieldValues[i],\n                function (result) {\n                    if (result.status === Office.AsyncResultStatus.Succeeded) {\n                        i++;\n                    }\n                    else {\n                        onError(result.error);\n                    }\n                }\n            );\n        }\n        $('#message').html('Field values set');\n    }\n\n    function onError(error) {\n        app.showNotification(error.name + ' ' + error.code + ': ' + error.message);\n    }\n})();\n```"
  name: setTaskFieldAsync(taskId, fieldId, fieldValue, options, callback)
  fullName: setTaskFieldAsync
  langs:
  - typeScript
  type: method
  syntax:
    content: 'setTaskFieldAsync(taskId: string, fieldId: number, fieldValue: string | number | boolean | object, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: taskId
      description: <span data-ttu-id="85e7e-806">Entweder eine Zeichenfolge oder der Wert der Aufgaben-ID.</span><span class="sxs-lookup"><span data-stu-id="85e7e-806">Either a string or value of the Task Id.</span></span>
      type:
      - string
    - id: fieldId
      description: <span data-ttu-id="85e7e-807">Vorgangsfelder.</span><span class="sxs-lookup"><span data-stu-id="85e7e-807">Task Fields.</span></span>
      type:
      - number
    - id: fieldValue
      description: <span data-ttu-id="85e7e-808">Der Wert des Felds Ziel.</span><span class="sxs-lookup"><span data-stu-id="85e7e-808">Value of the target field.</span></span>
      type:
      - string | number | boolean | object
    - id: options
      description: <span data-ttu-id="85e7e-809">Bietet die Möglichkeit zur Beibehaltung von Kontextdaten eines beliebigen Typs, die für die Verwendung in einem Rückruf unverändert.</span><span class="sxs-lookup"><span data-stu-id="85e7e-809">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>
      type:
      - office.Office.AsyncContextOptions
    - id: callback
      description: <span data-ttu-id="85e7e-810">Optional.</span><span class="sxs-lookup"><span data-stu-id="85e7e-810">Optional.</span></span> <span data-ttu-id="85e7e-811">Eine Funktion, die bei der Rückgabe des Rückrufs aufgerufen wird, dessen einziger Parameter vom Typ [Office.AsyncResult](xref:office.Office.AsyncResult)ist<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-811">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)<!-- -->.</span></span>
      type:
      - '(result: AsyncResult<void>) => void'
- uid: office.Office.Document.settings
  summary: <span data-ttu-id="85e7e-812">Ruft ein Objekt ab, das die gespeicherten benutzerdefinierten Einstellungen des Inhalts- oder Aufgabenbereichs-Add-Ins für das aktuelle Dokument darstellt.</span><span class="sxs-lookup"><span data-stu-id="85e7e-812">Gets an object that represents the saved custom settings of the content or task pane add-in for the current document.</span></span>
  remarks: >-
    <span data-ttu-id="85e7e-813">**Supportdetails**</span><span class="sxs-lookup"><span data-stu-id="85e7e-813">**Support details**</span></span>


    <span data-ttu-id="85e7e-p181">Ein Häkchen (v) in der folgenden Matrix weist darauf hin, dass diese Eigenschaft in der entsprechenden Office-Hostanwendung unterstützt wird. Eine leere Zelle weist darauf hin, dass die Office-Hostanwendung diese Eigenschaft nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="85e7e-p181">A capital Y in the following matrix indicates that this property is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this property.</span></span>


    <span data-ttu-id="85e7e-816">Weitere Informationen zu Office-Host-Anwendung und Server-Anforderungen, finden Sie unter [Anforderungen für die Ausführung von Office-Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class="sxs-lookup"><span data-stu-id="85e7e-816">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>


    <span data-ttu-id="85e7e-817">*Unterstützte Hosts nach Plattform*</span><span class="sxs-lookup"><span data-stu-id="85e7e-817">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id="85e7e-818">Office für Windows Desktop</span><span class="sxs-lookup"><span data-stu-id="85e7e-818">Office for Windows desktop</span></span> </th><th> <span data-ttu-id="85e7e-819">Office Online (im Browser)</span><span class="sxs-lookup"><span data-stu-id="85e7e-819">Office Online (in browser)</span></span> </th><th> <span data-ttu-id="85e7e-820">Office für iPad</span><span class="sxs-lookup"><span data-stu-id="85e7e-820">Office for iPad</span></span> </th><th> <span data-ttu-id="85e7e-821">Office for Mac</span><span class="sxs-lookup"><span data-stu-id="85e7e-821">Office for Mac</span></span> </th></tr> <tr><td><span data-ttu-id="85e7e-822"><strong>Zugriff</strong></span><span class="sxs-lookup"><span data-stu-id="85e7e-822"><strong> Access </strong></span></span></td><td> </td><td> <span data-ttu-id="85e7e-823">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-823">Y</span></span> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id="85e7e-824"><strong>Excel</strong></span><span class="sxs-lookup"><span data-stu-id="85e7e-824"><strong> Excel </strong></span></span></td><td> <span data-ttu-id="85e7e-825">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-825">Y</span></span> </td><td> <span data-ttu-id="85e7e-826">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-826">Y</span></span> </td><td> <span data-ttu-id="85e7e-827">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-827">Y</span></span> </td><td> <span data-ttu-id="85e7e-828">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-828">Y</span></span> </td></tr> <tr><td><span data-ttu-id="85e7e-829"><strong>OneNote</strong></span><span class="sxs-lookup"><span data-stu-id="85e7e-829"><strong> OneNote </strong></span></span></td><td> </td><td> <span data-ttu-id="85e7e-830">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-830">Y</span></span> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id="85e7e-831"><strong>PowerPoint</strong></span><span class="sxs-lookup"><span data-stu-id="85e7e-831"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id="85e7e-832">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-832">Y</span></span> </td><td> <span data-ttu-id="85e7e-833">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-833">Y</span></span> </td><td> <span data-ttu-id="85e7e-834">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-834">Y</span></span> </td><td> <span data-ttu-id="85e7e-835">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-835">Y</span></span> </td></tr> <tr><td><span data-ttu-id="85e7e-836"><strong>Word</strong></span><span class="sxs-lookup"><span data-stu-id="85e7e-836"><strong> Word </strong></span></span></td><td> <span data-ttu-id="85e7e-837">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-837">Y</span></span> </td><td> <span data-ttu-id="85e7e-838">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-838">Y</span></span> </td><td> <span data-ttu-id="85e7e-839">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-839">Y</span></span> </td><td> <span data-ttu-id="85e7e-840">v</span><span class="sxs-lookup"><span data-stu-id="85e7e-840">Y</span></span> </td></tr> </table>
  name: settings
  fullName: settings
  langs:
  - typeScript
  type: property
  syntax:
    content: 'settings: Settings;'
    return:
      type:
      - office.Office.Settings
- uid: office.Office.Document.url
  summary: <span data-ttu-id="85e7e-841">Ruft die URL des Dokuments ab, das zurzeit in der Hostanwendung geöffnet ist.</span><span class="sxs-lookup"><span data-stu-id="85e7e-841">Gets the URL of the document that the host application currently has open.</span></span> <span data-ttu-id="85e7e-842">Gibt null zurück, wenn die URL nicht verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="85e7e-842">Returns null if the URL is unavailable.</span></span>
  remarks: "<span data-ttu-id=\"85e7e-843\">**Supportdetails**</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-843\">**Support details**</span></span>\n\n<span data-ttu-id=\"85e7e-p183\">Ein Häkchen (v) in der folgenden Matrix weist darauf hin, dass diese Eigenschaft in der entsprechenden Office-Hostanwendung unterstützt wird. Eine leere Zelle weist darauf hin, dass die Office-Hostanwendung diese Eigenschaft nicht unterstützt.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-p183\">A capital Y in the following matrix indicates that this property is supported in the corresponding Office host application. An empty cell indicates that the Office host application doesn't support this property.</span></span>\n\n<span data-ttu-id=\"85e7e-846\">Weitere Informationen zu Office-Host-Anwendung und Server-Anforderungen, finden Sie unter [Anforderungen für die Ausführung von Office-Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-846\">For more information about Office host application and server requirements, see [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.</span></span>\n\n<span data-ttu-id=\"85e7e-847\">*Unterstützte Hosts nach Plattform*</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-847\">*Supported hosts, by platform*</span></span> <table> <tr><th> </th><th> <span data-ttu-id=\"85e7e-848\">Office für Windows Desktop</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-848\">Office for Windows desktop</span></span> </th><th> <span data-ttu-id=\"85e7e-849\">Office Online (im Browser)</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-849\">Office Online (in browser)</span></span> </th><th> <span data-ttu-id=\"85e7e-850\">Office für iPad</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-850\">Office for iPad</span></span> </th></tr> <tr><td><span data-ttu-id=\"85e7e-851\"><strong>Zugriff</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-851\"><strong> Access </strong></span></span></td><td> </td><td> <span data-ttu-id=\"85e7e-852\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-852\">Y</span></span> </td><td> </td></tr> <tr><td><span data-ttu-id=\"85e7e-853\"><strong>Excel</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-853\"><strong> Excel </strong></span></span></td><td> <span data-ttu-id=\"85e7e-854\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-854\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-855\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-855\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-856\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-856\">Y</span></span> </td></tr> <tr><td><span data-ttu-id=\"85e7e-857\"><strong>PowerPoint</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-857\"><strong> PowerPoint </strong></span></span></td><td> <span data-ttu-id=\"85e7e-858\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-858\">Y</span></span> </td><td> </td><td> </td></tr> <tr><td><span data-ttu-id=\"85e7e-859\"><strong>Word</strong></span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-859\"><strong> Word </strong></span></span></td><td> <span data-ttu-id=\"85e7e-860\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-860\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-861\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-861\">Y</span></span> </td><td> <span data-ttu-id=\"85e7e-862\">v</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-862\">Y</span></span> </td></tr> </table>\n#### <a name=\"examples\"></a><span data-ttu-id=\"85e7e-863\">Examples</span><span class=\"sxs-lookup\"><span data-stu-id=\"85e7e-863\">Examples</span></span>\n\n```javascript\nfunction displayDocumentUrl() {\n    write(Office.context.document.url);\n}\n\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  name: url
  fullName: url
  langs:
  - typeScript
  type: property
  syntax:
    content: 'url: string;'
    return:
      type:
      - string
