### YamlMime:UniversalReference
items:
  - uid: office.Office.CustomXmlPart
    summary: '<span data-ttu-id="bb17d-101">Stellt einen einzelnen CustomXMLPart in einer [Office. CustomXmlParts](xref:office.Office.CustomXmlParts) -Auflistung dar.</span><span class="sxs-lookup"><span data-stu-id="bb17d-101">Represents a single CustomXMLPart in an [Office.CustomXmlParts](xref:office.Office.CustomXmlParts) collection.</span></span>'
    remarks: '<span data-ttu-id="bb17d-102">**Hosts**: Word</span><span class="sxs-lookup"><span data-stu-id="bb17d-102">**Hosts**: Word</span></span>'
    name: Office.CustomXmlPart
    fullName: Office.CustomXmlPart
    langs:
      - typeScript
    type: interface
    package: office
    children:
      - office.Office.CustomXmlPart.addHandlerAsync
      - office.Office.CustomXmlPart.addHandlerAsync_1
      - office.Office.CustomXmlPart.deleteAsync
      - office.Office.CustomXmlPart.deleteAsync_1
      - office.Office.CustomXmlPart.getNodesAsync
      - office.Office.CustomXmlPart.getNodesAsync_1
      - office.Office.CustomXmlPart.getXmlAsync
      - office.Office.CustomXmlPart.getXmlAsync_1
      - office.Office.CustomXmlPart.removeHandlerAsync
      - office.Office.CustomXmlPart.removeHandlerAsync_1
      - office.Office.CustomXmlPart.builtIn
      - office.Office.CustomXmlPart.id
      - office.Office.CustomXmlPart.namespaceManager
  - uid: office.Office.CustomXmlPart.addHandlerAsync
    summary: <span data-ttu-id="bb17d-103">Fügt dem Objekt mithilfe des angegebenen Ereignistyps einen Ereignishandler hinzu.</span><span class="sxs-lookup"><span data-stu-id="bb17d-103">Adds an event handler to the object using the specified event type.</span></span>
    remarks: |-
      <span data-ttu-id="bb17d-104">**Anforderungssatz**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="bb17d-104">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      <span data-ttu-id="bb17d-105">Sie können mehrere Ereignishandler für den angegebenen EventType hinzufügen, solange der Name jeder Ereignishandlerfunktion eindeutig ist.</span><span class="sxs-lookup"><span data-stu-id="bb17d-105">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>
    name: 'addHandlerAsync(eventType, handler, options, callback)'
    fullName: 'addHandlerAsync(eventType, handler, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: (result: any) => void, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="bb17d-106">Gibt den Ereignistyp an, der hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="bb17d-106">Specifies the type of event to add.</span></span> <span data-ttu-id="bb17d-107">Für ein CustomXmlPart-Objekt kann der eventType-Parameter als`Office.EventType.NodeDeleted`</span><span class="sxs-lookup"><span data-stu-id="bb17d-107">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`</span></span><!-- --><span data-ttu-id="bb17d-108">, `Office.EventType.NodeInserted`</span><span class="sxs-lookup"><span data-stu-id="bb17d-108"></span></span><!-- --><span data-ttu-id="bb17d-109">, und`Office.EventType.NodeReplaced`</span><span class="sxs-lookup"><span data-stu-id="bb17d-109">, and `Office.EventType.NodeReplaced`</span></span><!-- --><span data-ttu-id="bb17d-110">.</span><span class="sxs-lookup"><span data-stu-id="bb17d-110"></span></span>'
          type:
            - Office.EventType
        - id: handler
          description: '<span data-ttu-id="bb17d-111">Die hinzuzufügende Ereignishandlerfunktion, deren einziger Parameter vom Typ [Office. NodeDeletedEventArgs](xref:office.Office.NodeDeletedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="bb17d-111">The event handler function to add, whose only parameter is of type [Office.NodeDeletedEventArgs](xref:office.Office.NodeDeletedEventArgs)</span></span><!-- --><span data-ttu-id="bb17d-112">, [Office. NodeInsertedEventArgs](xref:office.Office.NodeInsertedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="bb17d-112">, [Office.NodeInsertedEventArgs](xref:office.Office.NodeInsertedEventArgs)</span></span><!-- --><span data-ttu-id="bb17d-113">oder [Office. Eigenschaft nodereplacedeventargs](xref:office.Office.NodeReplacedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="bb17d-113">, or [Office.NodeReplacedEventArgs](xref:office.Office.NodeReplacedEventArgs)</span></span>'
          type:
            - '(result: any) => void'
        - id: options
          description: '<span data-ttu-id="bb17d-114">Stellt eine Option zum Beibehalten von Kontextdaten eines beliebigen Typs unverändert zur Verwendung in einem Rückruf bereit.</span><span class="sxs-lookup"><span data-stu-id="bb17d-114">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="bb17d-115">Optional.</span><span class="sxs-lookup"><span data-stu-id="bb17d-115">Optional.</span></span> <span data-ttu-id="bb17d-116">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult ist.](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="bb17d-116">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="bb17d-117">.</span><span class="sxs-lookup"><span data-stu-id="bb17d-117"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlPart.addHandlerAsync_1
    summary: <span data-ttu-id="bb17d-118">Fügt dem Objekt mithilfe des angegebenen Ereignistyps einen Ereignishandler hinzu.</span><span class="sxs-lookup"><span data-stu-id="bb17d-118">Adds an event handler to the object using the specified event type.</span></span>
    remarks: |-
      <span data-ttu-id="bb17d-119">**Anforderungssatz**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="bb17d-119">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      <span data-ttu-id="bb17d-120">Sie können mehrere Ereignishandler für den angegebenen EventType hinzufügen, solange der Name jeder Ereignishandlerfunktion eindeutig ist.</span><span class="sxs-lookup"><span data-stu-id="bb17d-120">You can add multiple event handlers for the specified eventType as long as the name of each event handler function is unique.</span></span>

      #### <a name="examples"></a><span data-ttu-id="bb17d-121">Beispiele</span><span class="sxs-lookup"><span data-stu-id="bb17d-121">Examples</span></span>

      ```javascript
      // To add an event handler for the NodeDeleted event, use the addHandlerAsync method of the CustomXmlPart object.
      function addNodeDeletedEvent() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.addHandlerAsync(Office.EventType.NodeDeleted, function (eventArgs) {
                  write("A node has been deleted.");
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message;
      }
      ```
      ```javascript
      // To add an event handler for the NodeInserted event, use the addHandlerAsync method of the CustomXmlPart object.
      function addNodeInsertedEvent() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.addHandlerAsync(Office.EventType.NodeInserted, function (eventArgs) {
                  write("A node has been inserted.");
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message;
      }
      ```
      ```javascript
      // To add an event handler for the NodeReplaced event, use the addHandlerAsync method of the CustomXmlPart object.
      function addNodeReplacedEvent() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.addHandlerAsync(Office.EventType.NodeReplaced, function (eventArgs) {
                  write("A node has been replaced.");
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message;
      }
      ```
    name: 'addHandlerAsync(eventType, handler, callback)'
    fullName: 'addHandlerAsync(eventType, handler, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType, handler: (result: any) => void, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="bb17d-122">Gibt den Ereignistyp an, der hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="bb17d-122">Specifies the type of event to add.</span></span> <span data-ttu-id="bb17d-123">Für ein CustomXmlPart-Objekt kann der eventType-Parameter als`Office.EventType.NodeDeleted`</span><span class="sxs-lookup"><span data-stu-id="bb17d-123">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`</span></span><!-- --><span data-ttu-id="bb17d-124">, `Office.EventType.NodeInserted`</span><span class="sxs-lookup"><span data-stu-id="bb17d-124"></span></span><!-- --><span data-ttu-id="bb17d-125">, und`Office.EventType.NodeReplaced`</span><span class="sxs-lookup"><span data-stu-id="bb17d-125">, and `Office.EventType.NodeReplaced`</span></span><!-- --><span data-ttu-id="bb17d-126">.</span><span class="sxs-lookup"><span data-stu-id="bb17d-126"></span></span>'
          type:
            - Office.EventType
        - id: handler
          description: '<span data-ttu-id="bb17d-127">Die hinzuzufügende Ereignishandlerfunktion, deren einziger Parameter vom Typ [Office. NodeDeletedEventArgs](xref:office.Office.NodeDeletedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="bb17d-127">The event handler function to add, whose only parameter is of type [Office.NodeDeletedEventArgs](xref:office.Office.NodeDeletedEventArgs)</span></span><!-- --><span data-ttu-id="bb17d-128">, [Office. NodeInsertedEventArgs](xref:office.Office.NodeInsertedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="bb17d-128">, [Office.NodeInsertedEventArgs](xref:office.Office.NodeInsertedEventArgs)</span></span><!-- --><span data-ttu-id="bb17d-129">oder [Office. Eigenschaft nodereplacedeventargs](xref:office.Office.NodeReplacedEventArgs)</span><span class="sxs-lookup"><span data-stu-id="bb17d-129">, or [Office.NodeReplacedEventArgs](xref:office.Office.NodeReplacedEventArgs)</span></span>'
          type:
            - '(result: any) => void'
        - id: callback
          description: '<span data-ttu-id="bb17d-130">Optional.</span><span class="sxs-lookup"><span data-stu-id="bb17d-130">Optional.</span></span> <span data-ttu-id="bb17d-131">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult ist.](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="bb17d-131">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="bb17d-132">.</span><span class="sxs-lookup"><span data-stu-id="bb17d-132"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlPart.deleteAsync
    summary: <span data-ttu-id="bb17d-133">Löscht die benutzerdefinierte XML-Komponente.</span><span class="sxs-lookup"><span data-stu-id="bb17d-133">Deletes the Custom XML Part.</span></span>
    remarks: '<span data-ttu-id="bb17d-134">**Anforderungssatz**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="bb17d-134">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'deleteAsync(options, callback)'
    fullName: 'deleteAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'deleteAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="bb17d-135">Stellt eine Option zum Beibehalten von Kontextdaten eines beliebigen Typs unverändert zur Verwendung in einem Rückruf bereit.</span><span class="sxs-lookup"><span data-stu-id="bb17d-135">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="bb17d-136">Optional.</span><span class="sxs-lookup"><span data-stu-id="bb17d-136">Optional.</span></span> <span data-ttu-id="bb17d-137">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult ist.](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="bb17d-137">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="bb17d-138">.</span><span class="sxs-lookup"><span data-stu-id="bb17d-138"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlPart.deleteAsync_1
    summary: <span data-ttu-id="bb17d-139">Löscht die benutzerdefinierte XML-Komponente.</span><span class="sxs-lookup"><span data-stu-id="bb17d-139">Deletes the Custom XML Part.</span></span>
    remarks: |-
      <span data-ttu-id="bb17d-140">**Anforderungssatz**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="bb17d-140">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="bb17d-141">Beispiele</span><span class="sxs-lookup"><span data-stu-id="bb17d-141">Examples</span></span>

      ```javascript
      function deleteXMLPart() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.deleteAsync(function (eventArgs) {
                  write("The XML Part has been deleted.");
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: deleteAsync(callback)
    fullName: deleteAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'deleteAsync(callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="bb17d-142">Optional.</span><span class="sxs-lookup"><span data-stu-id="bb17d-142">Optional.</span></span> <span data-ttu-id="bb17d-143">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult ist.](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="bb17d-143">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="bb17d-144">.</span><span class="sxs-lookup"><span data-stu-id="bb17d-144"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlPart.getNodesAsync
    summary: '<span data-ttu-id="bb17d-145">Ruft asynchron alle CustomXmlNodes in dieser benutzerdefinierten XML-Komponente ab, die dem angegebenen XPath entsprechen.</span><span class="sxs-lookup"><span data-stu-id="bb17d-145">Asynchronously gets any CustomXmlNodes in this custom XML part which match the specified XPath.</span></span>'
    remarks: '<span data-ttu-id="bb17d-146">**Anforderungssatz**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="bb17d-146">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'getNodesAsync(xPath, options, callback)'
    fullName: 'getNodesAsync(xPath, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodesAsync(xPath: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xPath
          description: '<span data-ttu-id="bb17d-147">Ein XPath-Ausdruck, der die zurückzugebenden Knoten angibt.</span><span class="sxs-lookup"><span data-stu-id="bb17d-147">An XPath expression that specifies the nodes you want returned.</span></span> <span data-ttu-id="bb17d-148">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="bb17d-148">Required.</span></span>'
          type:
            - string
        - id: options
          description: '<span data-ttu-id="bb17d-149">Stellt eine Option zum Beibehalten von Kontextdaten eines beliebigen Typs unverändert zur Verwendung in einem Rückruf bereit.</span><span class="sxs-lookup"><span data-stu-id="bb17d-149">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="bb17d-150">Optional.</span><span class="sxs-lookup"><span data-stu-id="bb17d-150">Optional.</span></span> <span data-ttu-id="bb17d-151">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult ist.](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="bb17d-151">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="bb17d-152">.</span><span class="sxs-lookup"><span data-stu-id="bb17d-152"></span></span> <span data-ttu-id="bb17d-153">Die `value` Eigenschaft des Ergebnisses ist ein Array von CustomXmlNode-Objekten, die die Knoten darstellen, die durch den XPath-Ausdruck angegeben werden, der an den XPath-Parameter übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="bb17d-153">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the xPath parameter.</span></span>'
          type:
            - '(result: AsyncResult<CustomXmlNode[]>) => void'
  - uid: office.Office.CustomXmlPart.getNodesAsync_1
    summary: '<span data-ttu-id="bb17d-154">Ruft asynchron alle CustomXmlNodes in dieser benutzerdefinierten XML-Komponente ab, die dem angegebenen XPath entsprechen.</span><span class="sxs-lookup"><span data-stu-id="bb17d-154">Asynchronously gets any CustomXmlNodes in this custom XML part which match the specified XPath.</span></span>'
    remarks: |-
      <span data-ttu-id="bb17d-155">**Anforderungssatz**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="bb17d-155">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="bb17d-156">Beispiele</span><span class="sxs-lookup"><span data-stu-id="bb17d-156">Examples</span></span>

      ```javascript
      function showXmlNodeType() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getNodesAsync('*/*', function (nodeResults) {
                  for (i = 0; i < nodeResults.value.length; i++) {
                      var node = nodeResults.value[i];
                      write(node.nodeType);
                  }
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'getNodesAsync(xPath, callback)'
    fullName: 'getNodesAsync(xPath, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getNodesAsync(xPath: string, callback?: (result: AsyncResult<CustomXmlNode[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: xPath
          description: '<span data-ttu-id="bb17d-157">Ein XPath-Ausdruck, der die zurückzugebenden Knoten angibt.</span><span class="sxs-lookup"><span data-stu-id="bb17d-157">An XPath expression that specifies the nodes you want returned.</span></span> <span data-ttu-id="bb17d-158">Erforderlich.</span><span class="sxs-lookup"><span data-stu-id="bb17d-158">Required.</span></span>'
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="bb17d-159">Optional.</span><span class="sxs-lookup"><span data-stu-id="bb17d-159">Optional.</span></span> <span data-ttu-id="bb17d-160">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult ist.](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="bb17d-160">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="bb17d-161">.</span><span class="sxs-lookup"><span data-stu-id="bb17d-161"></span></span> <span data-ttu-id="bb17d-162">Die `value` Eigenschaft des Ergebnisses ist ein Array von CustomXmlNode-Objekten, die die Knoten darstellen, die durch den XPath-Ausdruck angegeben werden, der an den XPath-Parameter übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="bb17d-162">The `value` property of the result is an array of CustomXmlNode objects that represent the nodes specified by the XPath expression passed to the xPath parameter.</span></span>'
          type:
            - '(result: AsyncResult<CustomXmlNode[]>) => void'
  - uid: office.Office.CustomXmlPart.getXmlAsync
    summary: <span data-ttu-id="bb17d-163">Ruft asynchron den XML-Code in der benutzerdefinierten XML-Komponente ab.</span><span class="sxs-lookup"><span data-stu-id="bb17d-163">Asynchronously gets the XML inside this custom XML part.</span></span>
    remarks: '<span data-ttu-id="bb17d-164">**Anforderungssatz**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="bb17d-164">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'getXmlAsync(options, callback)'
    fullName: 'getXmlAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getXmlAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="bb17d-165">Stellt eine Option zum Beibehalten von Kontextdaten eines beliebigen Typs unverändert zur Verwendung in einem Rückruf bereit.</span><span class="sxs-lookup"><span data-stu-id="bb17d-165">Provides an option for preserving context data of any type, unchanged, for use in a callback.</span></span>'
          type:
            - office.Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="bb17d-166">Optional.</span><span class="sxs-lookup"><span data-stu-id="bb17d-166">Optional.</span></span> <span data-ttu-id="bb17d-167">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult ist.](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="bb17d-167">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="bb17d-168">.</span><span class="sxs-lookup"><span data-stu-id="bb17d-168"></span></span> <span data-ttu-id="bb17d-169">Die `value` Eigenschaft des Ergebnisses ist eine Zeichenfolge, die den XML-Code des referenzierten CustomXMLPart-Objekts enthält.</span><span class="sxs-lookup"><span data-stu-id="bb17d-169">The `value` property of the result is a string that contains the XML of the referenced CustomXmlPart object.</span></span>'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.CustomXmlPart.getXmlAsync_1
    summary: <span data-ttu-id="bb17d-170">Ruft asynchron den XML-Code in der benutzerdefinierten XML-Komponente ab.</span><span class="sxs-lookup"><span data-stu-id="bb17d-170">Asynchronously gets the XML inside this custom XML part.</span></span>
    remarks: |-
      <span data-ttu-id="bb17d-171">**Anforderungssatz**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="bb17d-171">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="bb17d-172">Beispiele</span><span class="sxs-lookup"><span data-stu-id="bb17d-172">Examples</span></span>

      ```javascript
      function showXMLPartInnerXML() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
              var xmlPart = result.value;
              xmlPart.getXmlAsync(function (eventArgs) {
                  write(eventArgs.value);
              });
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: getXmlAsync(callback)
    fullName: getXmlAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getXmlAsync(callback?: (result: AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="bb17d-173">Optional.</span><span class="sxs-lookup"><span data-stu-id="bb17d-173">Optional.</span></span> <span data-ttu-id="bb17d-174">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult ist.](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="bb17d-174">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="bb17d-175">.</span><span class="sxs-lookup"><span data-stu-id="bb17d-175"></span></span> <span data-ttu-id="bb17d-176">Die `value` Eigenschaft des Ergebnisses ist eine Zeichenfolge, die den XML-Code des referenzierten CustomXMLPart-Objekts enthält.</span><span class="sxs-lookup"><span data-stu-id="bb17d-176">The `value` property of the result is a string that contains the XML of the referenced CustomXmlPart object.</span></span>'
          type:
            - '(result: AsyncResult<string>) => void'
  - uid: office.Office.CustomXmlPart.removeHandlerAsync
    summary: <span data-ttu-id="bb17d-177">Entfernt einen Ereignishandler für den angegebenen Ereignistyp.</span><span class="sxs-lookup"><span data-stu-id="bb17d-177">Removes an event handler for the specified event type.</span></span>
    remarks: '<span data-ttu-id="bb17d-178">**Anforderungssatz**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="bb17d-178">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>'
    name: 'removeHandlerAsync(eventType, handler, options, callback)'
    fullName: 'removeHandlerAsync(eventType, handler, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, handler?: (result: any) => void, options?: RemoveHandlerOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="bb17d-179">Gibt den Typ des zu entfernenden Ereignisses an.</span><span class="sxs-lookup"><span data-stu-id="bb17d-179">Specifies the type of event to remove.</span></span> <span data-ttu-id="bb17d-180">Für ein CustomXmlPart-Objekt kann der eventType-Parameter als`Office.EventType.NodeDeleted`</span><span class="sxs-lookup"><span data-stu-id="bb17d-180">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`</span></span><!-- --><span data-ttu-id="bb17d-181">, `Office.EventType.NodeInserted`</span><span class="sxs-lookup"><span data-stu-id="bb17d-181"></span></span><!-- --><span data-ttu-id="bb17d-182">, und`Office.EventType.NodeReplaced`</span><span class="sxs-lookup"><span data-stu-id="bb17d-182">, and `Office.EventType.NodeReplaced`</span></span><!-- --><span data-ttu-id="bb17d-183">.</span><span class="sxs-lookup"><span data-stu-id="bb17d-183"></span></span>'
          type:
            - Office.EventType
        - id: handler
          description: <span data-ttu-id="bb17d-184">Der Name des zu entfernenden Handlers.</span><span class="sxs-lookup"><span data-stu-id="bb17d-184">The name of the handler to remove.</span></span>
          type:
            - '(result: any) => void'
        - id: options
          description: '<span data-ttu-id="bb17d-185">Stellt Optionen bereit, um zu bestimmen, welcher Ereignishandler oder welche Handler entfernt werden.</span><span class="sxs-lookup"><span data-stu-id="bb17d-185">Provides options to determine which event handler or handlers are removed.</span></span>'
          type:
            - office.Office.RemoveHandlerOptions
        - id: callback
          description: '<span data-ttu-id="bb17d-186">Optional.</span><span class="sxs-lookup"><span data-stu-id="bb17d-186">Optional.</span></span> <span data-ttu-id="bb17d-187">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult ist.](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="bb17d-187">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="bb17d-188">.</span><span class="sxs-lookup"><span data-stu-id="bb17d-188"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlPart.removeHandlerAsync_1
    summary: <span data-ttu-id="bb17d-189">Entfernt einen Ereignishandler für den angegebenen Ereignistyp.</span><span class="sxs-lookup"><span data-stu-id="bb17d-189">Removes an event handler for the specified event type.</span></span>
    remarks: |-
      <span data-ttu-id="bb17d-190">**Anforderungssatz**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span><span class="sxs-lookup"><span data-stu-id="bb17d-190">**Requirement set**: [CustomXmlParts](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#customxmlparts)</span></span>

      #### <a name="examples"></a><span data-ttu-id="bb17d-191">Beispiele</span><span class="sxs-lookup"><span data-stu-id="bb17d-191">Examples</span></span>

      ```javascript
      function removeNodeInsertedEventHandler() {
          Office.context.document.customXmlParts.getByIdAsync(
              "{3BC85265-09D6-4205-B665-8EB239A8B9A1}",
              function (result) {
                  var xmlPart = result.value;
                  xmlPart.removeHandlerAsync(Office.EventType.DataNodeInserted, {handler:myHandler});
          });
      }
      ```
    name: 'removeHandlerAsync(eventType, handler, callback)'
    fullName: 'removeHandlerAsync(eventType, handler, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType, handler?: (result: any) => void, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="bb17d-192">Gibt den Typ des zu entfernenden Ereignisses an.</span><span class="sxs-lookup"><span data-stu-id="bb17d-192">Specifies the type of event to remove.</span></span> <span data-ttu-id="bb17d-193">Für ein CustomXmlPart-Objekt kann der eventType-Parameter als`Office.EventType.NodeDeleted`</span><span class="sxs-lookup"><span data-stu-id="bb17d-193">For a CustomXmlPart object, the eventType parameter can be specified as `Office.EventType.NodeDeleted`</span></span><!-- --><span data-ttu-id="bb17d-194">, `Office.EventType.NodeInserted`</span><span class="sxs-lookup"><span data-stu-id="bb17d-194"></span></span><!-- --><span data-ttu-id="bb17d-195">, und`Office.EventType.NodeReplaced`</span><span class="sxs-lookup"><span data-stu-id="bb17d-195">, and `Office.EventType.NodeReplaced`</span></span><!-- --><span data-ttu-id="bb17d-196">.</span><span class="sxs-lookup"><span data-stu-id="bb17d-196"></span></span>'
          type:
            - Office.EventType
        - id: handler
          description: <span data-ttu-id="bb17d-197">Der Name des zu entfernenden Handlers.</span><span class="sxs-lookup"><span data-stu-id="bb17d-197">The name of the handler to remove.</span></span>
          type:
            - '(result: any) => void'
        - id: callback
          description: '<span data-ttu-id="bb17d-198">Optional.</span><span class="sxs-lookup"><span data-stu-id="bb17d-198">Optional.</span></span> <span data-ttu-id="bb17d-199">Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult ist.](xref:office.Office.AsyncResult)</span><span class="sxs-lookup"><span data-stu-id="bb17d-199">A function that is invoked when the callback returns, whose only parameter is of type [Office.AsyncResult](xref:office.Office.AsyncResult)</span></span><!-- --><span data-ttu-id="bb17d-200">.</span><span class="sxs-lookup"><span data-stu-id="bb17d-200"></span></span>'
          type:
            - '(result: AsyncResult<void>) => void'
  - uid: office.Office.CustomXmlPart.builtIn
    summary: '<span data-ttu-id="bb17d-201">True, wenn die benutzerdefinierte XML-Komponente integriert ist; andernfalls false.</span><span class="sxs-lookup"><span data-stu-id="bb17d-201">True, if the custom XML part is built in; otherwise false.</span></span>'
    name: builtIn
    fullName: builtIn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'builtIn: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a><span data-ttu-id="bb17d-202">Beispiele</span><span class="sxs-lookup"><span data-stu-id="bb17d-202">Examples</span></span>

          ```javascript
          function showXMLPartBuiltIn() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  write(xmlPart.builtIn);
              });
          }

          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: office.Office.CustomXmlPart.id
    summary: <span data-ttu-id="bb17d-203">Ruft die GUID von CustomXMLPart ab.</span><span class="sxs-lookup"><span data-stu-id="bb17d-203">Gets the GUID of the CustomXMLPart.</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'id: string;'
      return:
        type:
          - string
        description: |-


          #### <a name="examples"></a><span data-ttu-id="bb17d-204">Beispiele</span><span class="sxs-lookup"><span data-stu-id="bb17d-204">Examples</span></span>

          ```javascript
          function showXMLPartBuiltId() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  write(xmlPart.id);
              });
          }
          // Function that writes to a div with id='message' on the page.
          function write(message){
              document.getElementById('message').innerText += message; 
          }
          ```
  - uid: office.Office.CustomXmlPart.namespaceManager
    summary: '<span data-ttu-id="bb17d-205">Ruft die Gruppe von Namespacepräfixzuordnungen ab ([Office. CustomXmlPrefixMappings](xref:office.Office.CustomXmlPrefixMappings)</span><span class="sxs-lookup"><span data-stu-id="bb17d-205">Gets the set of namespace prefix mappings ([Office.CustomXmlPrefixMappings](xref:office.Office.CustomXmlPrefixMappings)</span></span><!-- --><span data-ttu-id="bb17d-206">) wird für den aktuellen CustomXmlPart verwendet.</span><span class="sxs-lookup"><span data-stu-id="bb17d-206">) used against the current CustomXmlPart.</span></span>'
    name: namespaceManager
    fullName: namespaceManager
    langs:
      - typeScript
    type: property
    syntax:
      content: 'namespaceManager: CustomXmlPrefixMappings;'
      return:
        type:
          - office.Office.CustomXmlPrefixMappings
        description: |-


          #### <a name="examples"></a><span data-ttu-id="bb17d-207">Beispiele</span><span class="sxs-lookup"><span data-stu-id="bb17d-207">Examples</span></span>

          ```javascript
          function setXMLPartNamespaceManagerNamespace() {
              Office.context.document.customXmlParts.getByIdAsync(
                  "{3BC85265-09D6-4205-B665-8EB239A8B9A1}", function (result) {
                  var xmlPart = result.value;
                  xmlPart.namespaceManager.addNamespaceAsync("myPrefix", "myNamespace");
              });
          }
          ```