### YamlMime:UniversalReference
items:
  - uid: office.Office.AddinCommands.Event
    summary: 'Das Event-Objekt wird als Parameter an Add-in-Funktionen übergeben, die von Benutzeroberflächen losen Befehlsschaltflächen aufgerufen werden. Das Objekt ermöglicht dem Add-In, zu erkennen, auf welche Schaltfläche geklickt wurde, und dem Host zu signalisieren, dass die Verarbeitung abgeschlossen wurde.'
    remarks: |-
      Weitere Supportinformationen finden Sie unter [Add-in-Befehle – Anforderungs Sätze](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/add-in-commands-requirement-sets) .

      ** [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: eingeschränkt

      ** [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Verfassen oder lesen
    name: Office.AddinCommands.Event
    fullName: Office.AddinCommands.Event
    langs:
      - typeScript
    type: interface
    package: office
    children:
      - office.Office.AddinCommands.Event.completed
      - office.Office.AddinCommands.Event.source
  - uid: office.Office.AddinCommands.Event.completed
    summary: |-
      Gibt an, dass das Add-in die Verarbeitung abgeschlossen hat und automatisch geschlossen wird.

      Diese Methode muss am Ende einer Funktion aufgerufen werden, die von der folgenden aufgerufen wurde.

      - Eine Schaltfläche ohne Benutzeroberfläche (d. h. ein Add-in-Befehl, der mit einem Action-Element definiert ist, in dem das xsi: Type-Attribut auf ExecuteFunction festgelegt ist)

      - Ein [Ereignis](https://docs.microsoft.com/office/dev/add-ins/reference/manifest/event) , das im Ereignis [Erweiterungspfad](https://docs.microsoft.com/office/dev/add-ins/reference/manifest/extensionpoint#events) definiert ist.<!-- -->, beispielsweise ein `ItemSend` Ereignis

      \[[API-Gruppe: Mailbox 1,3](/office/dev/add-ins/reference/javascript-api-for-office)\]
    remarks: |-
      ** [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: eingeschränkt

      ** [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Verfassen oder lesen

      Das Postfach 1,3 verfügt nicht über `options` den Parameter, während die Post fach Vorschau `options` Unterstützung für Parameter hat.

      #### <a name="examples"></a>Beispiele

      ```javascript
      // For the following example, the processItem function is
      // defined in the FunctionFile referenced from the add-in manifest,
      // and maps to the FunctionName of the action in the associated button control.
      function processItem(event) {
          // Do some processing

          event.completed();
      }
      ```
      ```javascript
      // For the following example, the checkMessage function was
      // registered as an event handler for ItemSend.
      function checkMessage(event) {
          // Get the item being sent.
          var outgoingMsg = Office.context.mailbox.item;

          // Check if subject contains "BLOCK".
          outgoingMsg.subject.getAsync(function (result) {
              // Subject is in `result.value`.
              // If search term "BLOCK" is found, don't send message.
              const notFound = -1;
              var allowEvent = (result.value.indexOf('BLOCK') === notFound);
              event.completed({allowEvent: allowEvent});
          });
      }
      ```
    name: completed(options)
    fullName: completed(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'completed(options?: EventCompletedOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: 'Optional. Ein Objekt, das Verhaltensoptionen für das Ende des Ereignisses angibt.'
          type:
            - office.Office.AddinCommands.EventCompletedOptions
  - uid: office.Office.AddinCommands.Event.source
    summary: 'Informationen zu dem Steuerelement, das den Aufruf dieser Funktion ausgelöst hat.'
    remarks: |-
      Diese Eigenschaft wird nur in Outlook im [Anforderungs Mappen](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) -Postfach 1,3 und höher unterstützt.

      #### <a name="examples"></a>Beispiele

      ```javascript
      // In this example, consider a button defined in an add-in manifest as follows:
      //<Control xsi:type="Button" id="eventTestButton">
      //    <Label resid="eventButtonLabel" />
      //    <Tooltip resid="eventButtonTooltip" />
      //    <Supertip>
      //        <Title resid="eventSuperTipTitle" />
      //        <Description resid="eventSuperTipDescription" />
      //    </Supertip>
      //    <Icon>
      //        <bt:Image size="16" resid="blue-icon-16" />
      //        <bt:Image size="32" resid="blue-icon-32" />
      //        <bt:Image size="80" resid="blue-icon-80" />
      //    </Icon>
      //    <Action xsi:type="ExecuteFunction">
      //        <FunctionName>testEventObject</FunctionName>
      //    </Action>
      //</Control>

      // The button has an id attribute set to eventTestButton, and will invoke
      // the testEventObject function defined in the add-in.
      // That function looks like this:
      function testEventObject(event) {
          // The event object implements the Event interface.

          // This value will be "eventTestButton".
          var buttonId = event.source.id;

          // Signal to the host app that processing is complete.
          event.completed();
      }
      ```
      ```javascript
      // Function is used by two buttons:
      // button1 and button2
      function multiButton (event) {
          // Check which button was clicked.
          var buttonId = event.source.id;

          if (buttonId === 'button1') {
              doButton1Action();
          } else {
              doButton2Action();
          }

          event.completed();
      }
      ```
    name: source
    fullName: source
    langs:
      - typeScript
    type: property
    syntax:
      content: 'source:Source;'
      return:
        type:
          - office.Office.AddinCommands.Source