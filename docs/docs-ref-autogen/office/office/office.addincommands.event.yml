### YamlMime:TSType
name: Office.AddinCommands.Event
uid: office!Office.AddinCommands.Event:interface
package: office!
fullName: Office.AddinCommands.Event
summary: Das `Event`-Objekt wird als ein Parameter an Add-In-Funktionen übergeben, die von Befehlsschaltflächen ohne Benutzeroberfläche aufgerufen werden. Das Objekt ermöglicht dem Add-In, zu erkennen, auf welche Schaltfläche geklickt wurde, und dem Host zu signalisieren, dass die Verarbeitung abgeschlossen wurde.
remarks: >-
  Weitere Supportinformationen finden Sie unter [Anforderungssätze für Add-In-Befehle.](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/add-in-commands-requirement-sets)


  **[Minimum permission level (Outlook)](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**: Restricted


  **[Anwendbarer Outlook-Modus:](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** Verfassen oder Lesen
isPreview: false
isDeprecated: false
type: interface
properties:
- name: source
  uid: office!Office.AddinCommands.Event#source:member
  package: office!
  fullName: source
  summary: Informationen zum Steuerelement, das den Aufruf dieser Funktion ausgelöst hat.
  remarks: >-
    Diese Eigenschaft wird in Outlook nur im [Anforderungssatz](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) Postfach 1.3 und höher unterstützt.


    #### <a name="examples"></a>Beispiele


    ```javascript

    // In this example, consider a button defined in an add-in manifest as follows:

    //<Control xsi:type="Button" id="eventTestButton">

    //    <Label resid="eventButtonLabel" />

    //    <Tooltip resid="eventButtonTooltip" />

    //    <Supertip>

    //        <Title resid="eventSuperTipTitle" />

    //        <Description resid="eventSuperTipDescription" />

    //    </Supertip>

    //    <Icon>

    //        <bt:Image size="16" resid="blue-icon-16" />

    //        <bt:Image size="32" resid="blue-icon-32" />

    //        <bt:Image size="80" resid="blue-icon-80" />

    //    </Icon>

    //    <Action xsi:type="ExecuteFunction">

    //        <FunctionName>testEventObject</FunctionName>

    //    </Action>

    //</Control>


    // The button has an id attribute set to eventTestButton, and will invoke

    // the testEventObject function defined in the add-in.

    // That function looks like this:

    function testEventObject(event) {
        // The event object implements the Event interface.

        // This value will be "eventTestButton".
        var buttonId = event.source.id;

        // Signal to the host app that processing is complete.
        event.completed();
    }

    ```

    ```javascript

    // Function is used by two buttons:

    // button1 and button2

    function multiButton (event) {
        // Check which button was clicked.
        var buttonId = event.source.id;

        if (buttonId === 'button1') {
            doButton1Action();
        } else {
            doButton2Action();
        }

        event.completed();
    }

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: source:Source;
    return:
      type: <xref uid="office!Office.AddinCommands.Source:interface" />
methods:
- name: completed(options)
  uid: office!Office.AddinCommands.Event#completed:member(1)
  package: office!
  fullName: completed(options)
  summary: >-
    Gibt an, dass das Add-In die Verarbeitung abgeschlossen hat und automatisch geschlossen wird.


    Diese Methode muss am Ende einer Funktion aufgerufen werden, die von folgendem Aufgerufenen aufgerufen wurde.


    - Eine Schaltfläche ohne Benutzeroberfläche (d. h. ein Add-In-Befehl, der mit einem Element definiert ist, auf das `Action` `xsi:type` das Attribut festgelegt ist `ExecuteFunction`<!-- -->)


    - Ein [im Erweiterungspunkt](https://docs.microsoft.com/office/dev/add-ins/reference/manifest/event) [Ereignisse definiertes Ereignis](https://docs.microsoft.com/office/dev/add-ins/reference/manifest/extensionpoint#events)<!-- -->, z. B. ein `ItemSend` Ereignis


    \[[API-Satz: Postfach 1.3](/office/dev/add-ins/reference/javascript-api-for-office)\]
  remarks: >-
    **[Mindestberechtigungsstufe](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`Restricted`


    **[Anwendbarer Outlook-Modus:](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** Verfassen oder Lesen


    **Hinweis**: Der `options` Parameter wurde in Postfach 1.8 eingeführt.


    #### <a name="examples"></a>Beispiele


    ```javascript

    // For the following example, the processItem function is

    // defined in the FunctionFile referenced from the add-in manifest,

    // and maps to the FunctionName of the action in the associated button control.

    function processItem(event) {
        // Do some processing

        event.completed();
    }

    ```

    ```javascript

    // For the following example, the checkMessage function was

    // registered as an event handler for ItemSend.

    function checkMessage(event) {
        // Get the item being sent.
        var outgoingMsg = Office.context.mailbox.item;

        // Check if subject contains "BLOCK".
        outgoingMsg.subject.getAsync(function (result) {
            // Subject is in `result.value`.
            // If search term "BLOCK" is found, don't send message.
            const notFound = -1;
            var allowEvent = (result.value.indexOf('BLOCK') === notFound);
            event.completed({allowEvent: allowEvent});
        });
    }

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'completed(options?: EventCompletedOptions): void;'
    parameters:
    - id: options
      description: Optional. Ein Objekt, das Verhaltensoptionen für den Abschluss des Ereignisses angibt.
      type: <xref uid="office!Office.AddinCommands.EventCompletedOptions:interface" />
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 6e248a2bdb5a8d9a37a5338da0e7237391c98139
  ms.sourcegitcommit: a8a86cfcaff5ad7dacc653d63502c76b1fedbebe
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 03/26/2021
  ms.locfileid: "51278219"
