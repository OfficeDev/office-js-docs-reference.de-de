### YamlMime:UniversalReference
items:
  - uid: 'office!Office.Dialog:interface'
    summary: 'Das Objekt, das zurückgegeben `UI.displayDialogAsync` wird, wenn aufgerufen wird. Es macht Methoden zum Registrieren von Ereignishandlern und zum Schließen des Dialogs verfügbar.'
    remarks: '**Anforderungsgruppe**: [DialogAPI](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/dialog-api-requirement-sets)'
    name: Office.Dialog
    fullName: Office.Dialog
    langs:
      - typeScript
    type: interface
    package: office!
    children:
      - 'office!Office.Dialog#addEventHandler:member(1)'
      - 'office!Office.Dialog#close:member(1)'
      - 'office!Office.Dialog#sendMessage:member(1)'
  - uid: 'office!Office.Dialog#addEventHandler:member(1)'
    summary: |-
      Registriert einen Ereignishandler. Die beiden unterstützten Ereignisse sind:

      - DialogMessageReceived. Wird ausgelöst, wenn das Dialogfeld eine Nachricht an das übergeordnete Element sendet.

      - DialogEventReceived. Wird ausgelöst, wenn das Dialogfeld geschlossen oder anderweitig entladen wurde.
    name: 'addEventHandler(eventType, handler)'
    fullName: 'addEventHandler(eventType, handler)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addEventHandler(eventType: Office.EventType, handler: Function): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: ''
          type:
            - 'office!Office.EventType:enum'
        - id: handler
          description: ''
          type:
            - '!Function:interface'
  - uid: 'office!Office.Dialog#close:member(1)'
    summary: 'Wird von einer übergeordneten Seite aufgerufen, um das entsprechende Dialogfeld zu schließen.'
    name: close()
    fullName: close()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'close(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'office!Office.Dialog#sendMessage:member(1)'
    summary: nur für die interne Verwendung. Rufen Sie den Code nicht auf.
    name: sendMessage(name)
    fullName: sendMessage(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'sendMessage(name: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: name
          description: ''
          type:
            - string
references:
  - uid: 'office!Office.EventType:enum'
    name: Office.EventType
  - uid: '!Function:interface'
    name: Function