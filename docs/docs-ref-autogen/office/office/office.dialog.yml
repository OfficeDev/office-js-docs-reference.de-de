### YamlMime:UniversalReference
items:
  - uid: 'office!Office.Dialog:interface'
    summary: 'Das Objekt, das zurückgegeben wird, wenn `UI.displayDialogAsync` aufgerufen wird. Es macht Methoden zum Registrieren von Ereignishandlern und zum Schließen des Dialogs verfügbar.'
    remarks: '**Anforderungsgruppe**: [DialogAPI](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/dialog-api-requirement-sets)'
    name: Office.Dialog
    fullName: Office.Dialog
    langs:
      - typeScript
    type: interface
    package: office!
    children:
      - 'office!Office.Dialog#addEventHandler:member(1)'
      - 'office!Office.Dialog#close:member(1)'
      - 'office!Office.Dialog#messageChild:member(1)'
      - 'office!Office.Dialog#sendMessage:member(1)'
  - uid: 'office!Office.Dialog#addEventHandler:member(1)'
    summary: |-
      Registriert einen Ereignishandler. Die beiden unterstützten Ereignisse sind:

      - DialogMessageReceived. Wird ausgelöst, wenn das Dialogfeld eine Nachricht an das übergeordnete Element sendet.

      - DialogEventReceived. Wird ausgelöst, wenn das Dialogfeld geschlossen oder anderweitig entladen wurde.
    name: 'addEventHandler(eventType, handler)'
    fullName: 'addEventHandler(eventType, handler)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addEventHandler(eventType: Office.EventType, handler: (args: {message: string | boolean} | {error: number}) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: Muss entweder DialogMessageReceived oder DialogEventReceived sein.
          type:
            - 'office!Office.EventType:enum'
        - id: handler
          description: 'Eine Funktion, die entweder ein Objekt mit einer `message` Eigenschaft annimmt, wenn eventType DialogMessageReceived ist, oder ein Objekt mit einer `error` Eigenschaft, wenn eventType DialogEventReceived ist.'
          type:
            - '(args: {message: string | boolean} | {error: number}) => void'
  - uid: 'office!Office.Dialog#close:member(1)'
    summary: 'Wird von einer übergeordneten Seite aufgerufen, um das entsprechende Dialogfeld zu schließen.'
    name: close()
    fullName: close()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'close(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'office!Office.Dialog#messageChild:member(1)'
    summary: 'Übermittelt eine Nachricht von der Hostseite, beispielsweise einem Aufgabenbereich oder einer Benutzeroberflächen losen Funktionsdatei, an ein von der Seite geöffnetes Dialogfeld.'
    remarks: '**Anforderungsgruppe**: unverbindlich'
    isPreview: true
    name: messageChild(message)
    fullName: messageChild(message)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'messageChild(message: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: message
          description: 'Akzeptiert eine Nachricht von der Hostseite, die an das Dialogfeld übergeben werden soll. Alles, was in eine Zeichenfolge serialisiert werden kann, einschließlich JSON und XML, kann gesendet werden.'
          type:
            - string
  - uid: 'office!Office.Dialog#sendMessage:member(1)'
    summary: nur für die interne Verwendung. Rufen Sie den Code nicht auf.
    name: sendMessage(name)
    fullName: sendMessage(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'sendMessage(name: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: name
          description: ''
          type:
            - string
references:
  - uid: 'office!Office.EventType:enum'
    name: Office.EventType