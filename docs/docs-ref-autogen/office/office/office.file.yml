### YamlMime:TSType
name: Office.File
uid: office!Office.File:interface
package: office!
fullName: Office.File
summary: Stellt die einem Office Add-In zugeordnete Dokumentdatei dar.
remarks: Greifen Sie mit der AsyncResult. Value-Eigenschaft in der Callback-Funktion, die an die Document. getFileAsync-Methode übergeben wurde, auf das File-Objekt zu.
isPreview: false
isDeprecated: false
type: interface
properties:
- name: size
  uid: office!Office.File#size:member
  package: office!
  fullName: size
  summary: Ruft die Größe der Dokumentdatei in Byte ab.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'size: number;'
    return:
      type: number
- name: sliceCount
  uid: office!Office.File#sliceCount:member
  package: office!
  fullName: sliceCount
  summary: Ruft die Anzahl der Segmente ab, in die die Datei aufgeteilt ist.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'sliceCount: number;'
    return:
      type: number
methods:
- name: closeAsync(callback)
  uid: office!Office.File#closeAsync:member(1)
  package: office!
  fullName: closeAsync(callback)
  summary: Schließt die Dokumentdatei.
  remarks: >-
    **Anforderungsgruppe**: [Datei](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#file)


    Im Speicher dürfen sich höchstens zwei Dokumente befinden, andernfalls schlägt der Document.getFileAsync-Vorgang fehl. Schließen Sie die Datenbank mit der File.closeAsync-Methode, wenn Sie sie wieder freigeben möchten.


    In der Rückruffunktion, die an die closeAsync-Methode weitergegeben wird, können Sie die Eigenschaften des AsyncResult-Objekts verwenden, um die folgenden Informationen zurückzugeben.


    <table> <tr> <th>Eigenschaft</th> <th>Verwendung</th> </tr> <tr> <td>AsyncResult.value</td> <td>Gibt immer undefined zurück, weil kein Objekt oder Daten zum Abruf existieren.</td> </tr> <tr> <td>AsyncResult. Status</td> <td>Bestimmen Sie, ob der Vorgang erfolgreich war oder ein Fehler aufgetreten ist.</td> </tr> <tr> <td>AsyncResult.error</td> <td>Greifen Sie auf ein Error-Objekt zu, das nach einem fehlgeschlagenen Vorgang Fehlerinformationen bereitstellt.</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>Ein benutzerdefiniertes Element beliebigen Typs, das im AsyncResult-Objekt ohne Änderung zurückgegeben wird.</td> </tr> </table>
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'closeAsync(callback?: (result: AsyncResult<void>) => void): void;'
    parameters:
    - id: callback
      description: Optional. Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office!Office.AsyncResult:interface) ist<!-- -->.
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: getSliceAsync(sliceIndex, callback)
  uid: office!Office.File#getSliceAsync:member(1)
  package: office!
  fullName: getSliceAsync(sliceIndex, callback)
  summary: Gibt das angegebene Segment zurück.
  remarks: "**Anforderungsgruppe**: [Datei](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#file)\n\nIn der callback-Funktion, die an die getSliceAsync-Methode weitergegeben wird, können Sie die Eigenschaften des AsyncResult-Objekts verwenden, um die folgenden Informationen zurückzugeben.\n\n<table> <tr> <th>Eigenschaft</th> <th>Verwendung</th> </tr> <tr> <td>AsyncResult.value</td> <td>Zugriff auf das Slice-Objekt.</td> </tr> <tr> <td>AsyncResult. Status</td> <td>Bestimmen Sie, ob der Vorgang erfolgreich war oder ein Fehler aufgetreten ist.</td> </tr> <tr> <td>AsyncResult.error</td> <td>Greifen Sie auf ein Error-Objekt zu, das nach einem fehlgeschlagenen Vorgang Fehlerinformationen bereitstellt.</td> </tr> <tr> <td>AsyncResult.asyncContext</td> <td>Ein benutzerdefiniertes Element beliebigen Typs, das im AsyncResult-Objekt ohne Änderung zurückgegeben wird.</td> </tr> </table>\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// This sample shows how to get all the slices of a file. \n// The asynchronous operation returns a Promise so it can be awaited.\nprivate getAllSlices(file: any): Promise<any> {\n    var self = this;\n    var isError = false;\n\n    return new Promise(async (resolve, reject) => {\n        var documentFileData = [];\n        for (var sliceIndex = 0; (sliceIndex < file.sliceCount) && !isError; sliceIndex++) {\n            var sliceReadPromise = new Promise((sliceResolve, sliceReject) => {\n                file.getSliceAsync(sliceIndex, (asyncResult) => {\n                    if (asyncResult.status === Office.AsyncResultStatus.Succeeded) {\n                        documentFileData = documentFileData.concat(asyncResult.value.data);\n                        sliceResolve({\n                            IsSuccess: true,\n                            Data: documentFileData\n                        });\n                    } else {\n                        file.closeAsync();\n                        sliceReject({\n                            IsSuccess: false,\n                            ErrorMessage: `Error in reading the slice: ${sliceIndex} of the document`\n                        });\n                    }\n                });\n            });\n            await sliceReadPromise.catch((error) => {\n                isError = true;\n            });\n        }\n\n        if (isError || !documentFileData.length) {\n            reject('Error while reading document. Please try it again.');\n            return;\n        }\n\n        file.closeAsync();\n\n        resolve({\n            IsSuccess: true,\n            Data: documentFileData\n        });\n    });\n}\n```"
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSliceAsync(sliceIndex: number, callback?: (result: AsyncResult<Office.Slice>) => void): void;'
    parameters:
    - id: sliceIndex
      description: 'Gibt den nullbasierten Index für das abzurufende Segment an. Erforderlich. '
      type: number
    - id: callback
      description: Optional. Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office!Office.AsyncResult:interface) ist<!-- -->. Die `value` Eigenschaft des Ergebnisses ist das [Office. Slice](xref:office!Office.Slice:interface) -Objekt.
      type: '(result: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref uid="office!Office.Slice:interface" />&gt;) =&gt; void'
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: 6508cf6d257d02c6f8015d204bbc6e4fe94cf16d
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49183321"
