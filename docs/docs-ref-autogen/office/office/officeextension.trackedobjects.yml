### YamlMime:UniversalReference
items:
  - uid: 'office!OfficeExtension.TrackedObjects:class'
    summary: 'Sammlung von nachverfolgten Objekten, die in einem Anforderungskontext enthalten sind. Weitere Informationen finden Sie unter "context. trackedObjects".'
    name: OfficeExtension.TrackedObjects
    fullName: OfficeExtension.TrackedObjects
    langs:
      - typeScript
    type: class
    package: office!
    children:
      - 'office!OfficeExtension.TrackedObjects#add:member(1)'
      - 'office!OfficeExtension.TrackedObjects#add:member(2)'
      - 'office!OfficeExtension.TrackedObjects#remove:member(1)'
      - 'office!OfficeExtension.TrackedObjects#remove:member(2)'
  - uid: 'office!OfficeExtension.TrackedObjects#add:member(1)'
    summary: |-
      Nachverfolgen eines neuen Objekts für die automatische Anpassung basierend auf umgebenden Änderungen im Dokument. Dies ist nur für einige Objekttypen erforderlich. Wenn Sie ein Objekt in ". Sync"-aufrufen und außerhalb der sequenziellen Ausführung eines ". Run"-Batches verwenden und beim Festlegen einer Eigenschaft oder beim Aufrufen einer Methode für das Objekt einen "InvalidObjectPath"-Fehler erhalten, muss das Objekt der nachverfolgten Objektsammlung hinzugefügt worden sein. Wann das Objekt zum ersten Mal erstellt wurde.

      Diese Methode hat auch die folgende Signatur:

      `add(objects: ClientObject[]): void;`Dabei handelt es sich bei Objekten um ein Array von Objekten, die nachverfolgt werden sollen.
    name: add(object)
    fullName: add(object)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(object: ClientObject): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: object
          description: ''
          type:
            - 'office!OfficeExtension.ClientObject:class'
  - uid: 'office!OfficeExtension.TrackedObjects#add:member(2)'
    summary: 'Nachverfolgen einer Gruppe von Objekten für die automatische Anpassung basierend auf umgebenden Änderungen im Dokument. Dies ist nur für einige Objekttypen erforderlich. Wenn Sie ein Objekt in ". Sync"-aufrufen und außerhalb der sequenziellen Ausführung eines ". Run"-Batches verwenden und beim Festlegen einer Eigenschaft oder beim Aufrufen einer Methode für das Objekt einen "InvalidObjectPath"-Fehler erhalten, muss das Objekt der nachverfolgten Objektsammlung hinzugefügt worden sein. Wann das Objekt zum ersten Mal erstellt wurde.'
    name: add(objects)
    fullName: add(objects)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(objects: ClientObject[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: objects
          description: ''
          type:
            - 'office!OfficeExtension.TrackedObjects#add~0:complex'
  - uid: 'office!OfficeExtension.TrackedObjects#remove:member(1)'
    summary: |-
      Geben Sie den Speicher für ein Objekt frei, das zuvor dieser Auflistung hinzugefügt wurde. Viele nachverfolgte Objekte verlangsamen die Ausführung der Hostanwendung, also achten Sie darauf, alle hinzugefügten Objekte nach abgeschlossener Verwendung freizugeben. Sie müssen anrufen `context.sync()` , bevor die Speicherfreigabe wirksam wird.

      Diese Methode hat auch die folgende Signatur:

      `remove(objects: ClientObject[]): void;`Dabei handelt es sich bei Objekten um ein Array von zu entfernenden Objekten.
    name: remove(object)
    fullName: remove(object)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'remove(object: ClientObject): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: object
          description: ''
          type:
            - 'office!OfficeExtension.ClientObject:class'
  - uid: 'office!OfficeExtension.TrackedObjects#remove:member(2)'
    summary: 'Geben Sie den Speicher für ein Objekt frei, das zuvor dieser Auflistung hinzugefügt wurde. Viele nachverfolgte Objekte verlangsamen die Ausführung der Hostanwendung, also achten Sie darauf, alle hinzugefügten Objekte nach abgeschlossener Verwendung freizugeben. Sie müssen anrufen `context.sync()` , bevor die Speicherfreigabe wirksam wird.'
    name: remove(objects)
    fullName: remove(objects)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'remove(objects: ClientObject[]): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: objects
          description: ''
          type:
            - 'office!OfficeExtension.TrackedObjects#remove~0:complex'
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: ClientObject
  - uid: 'office!OfficeExtension.TrackedObjects#add~0:complex'
    name: 'ClientObject[]'
    fullName: 'OfficeExtension.ClientObject[]'
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientObject:class'
        name: ClientObject
        fullName: OfficeExtension.ClientObject
      - name: '[]'
        fullName: '[]'
  - uid: 'office!OfficeExtension.TrackedObjects#remove~0:complex'
    name: 'ClientObject[]'
    fullName: 'OfficeExtension.ClientObject[]'
    spec.typeScript:
      - uid: 'office!OfficeExtension.ClientObject:class'
        name: ClientObject
        fullName: OfficeExtension.ClientObject
      - name: '[]'
        fullName: '[]'