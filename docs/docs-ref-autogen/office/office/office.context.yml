### YamlMime:TSType
name: Office.Context
uid: office!Office.Context:interface
package: office!
fullName: Office.Context
summary: Stellt die Laufzeitumgebung des Add-Ins dar und stellt den Zugriff auf Schlüsselobjekte der API bereit. Der aktuelle Kontext ist als Eigenschaft von Office vorhanden. Der Zugriff wird mithilfe von `Office.context`<!-- -->.
remarks: '**Hosts**: Excel, Outlook, PowerPoint, Project, Word'
isPreview: false
isDeprecated: false
type: interface
properties:
- name: auth
  uid: office!Office.Context#auth:member
  package: office!
  fullName: auth
  summary: Stellt Informationen und Zugriff für den angemeldeten Benutzer bereit.
  remarks: ''
  isPreview: true
  isDeprecated: false
  syntax:
    content: 'auth: Auth;'
    return:
      type: <xref uid="office!Office.Auth:interface" />
- name: commerceAllowed
  uid: office!Office.Context#commerceAllowed:member
  package: office!
  fullName: commerceAllowed
  summary: 'True, wenn das #A0 auf der aktuellen Plattform eine Benutzeroberfläche zum Verkaufen oder Aktualisieren anzeigen kann. Andernfalls wird False zurückgegeben.'
  remarks: >-
    **Hosts**: Excel, Word


    `commerceAllowed` wird nur in Office auf dem iPad unterstützt.


    Der iOS App Store unterstützt keine Apps mit Add-Ins, die Links zu zusätzlichen Zahlungssysteme bereitstellen. Office-Add-Ins, die in Office auf dem Windows-Desktop oder im Browser ausgeführt werden, lassen jedoch solche Links zu. Wenn die Benutzeroberfläche Ihres Add-Ins einen Link zu einem externen Zahlungssystem auf anderen Plattformen als iOS bereitstellen soll, können Sie die commerceAllowed-Eigenschaft verwenden, um zu steuern, wann dieser Link angezeigt wird.
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'commerceAllowed: boolean;'
    return:
      type: boolean
- name: contentLanguage
  uid: office!Office.Context#contentLanguage:member
  package: office!
  fullName: contentLanguage
  summary: Ruft das Gebietsschema (Sprache) für Daten ab, das vom Benutzer für die Bearbeitung des Dokuments oder Elements festgelegt wurde.
  remarks: "Der `contentLanguage` Wert spiegelt die Einstellung **Bearbeitungssprache** wider, die mit **File Options &gt; &gt; Language** in der Office-Hostanwendung angegeben ist.\n\n**Supportdetails**\n\nEin Häkchen (v) in der folgenden Matrix weist darauf hin, dass diese Eigenschaft in der entsprechenden Office-Hostanwendung unterstützt wird. Eine leere Zelle weist darauf hin, dass die Office-Hostanwendung diese Enumeration nicht unterstützt.\n\nWeitere Informationen zu Office-Hostanwendungs- und Serveranforderungen finden Sie unter [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.\n\n*Unterstützte Hosts nach Plattform* <table> <tr><th> </th><th> Office unter Windows </th><th> Office im Webbrowser </th><th> Office auf dem iPad </th><th> Outlook auf mobilen Geräten </th><th> Office für Mac </th></tr> <tr><td><strong> Excel </strong></td><td> v </td><td> v </td><td> v </td><td> </td><td> </td></tr> <tr><td><strong> Outlook </strong></td><td> v </td><td> v </td><td> </td><td> v </td><td> v </td></tr> <tr><td><strong> PowerPoint </strong></td><td> v </td><td> v </td><td> v </td><td> </td><td> </td></tr> <tr><td><strong> Project </strong></td><td> v </td><td> </td><td> </td><td> </td><td> </td></tr> <tr><td><strong> Word </strong></td><td> v </td><td> v </td><td> v </td><td> </td><td> </td></tr> </table>\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\nfunction sayHelloWithContentLanguage() {\n    var myContentLanguage = Office.context.contentLanguage;\n    switch (myContentLanguage) {\n        case 'en-US':\n            write('Hello!');\n            break;\n        case 'en-NZ':\n            write('G\\'day mate!');\n            break;\n    }\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'contentLanguage: string;'
    return:
      type: string
- name: diagnostics
  uid: office!Office.Context#diagnostics:member
  package: office!
  fullName: diagnostics
  summary: Ruft Informationen zur Umgebung ab, in der das Add-In ausgeführt wird.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'diagnostics: ContextInformation;'
    return:
      type: <xref uid="office!Office.ContextInformation:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\nvar contextInfo = Office.context.diagnostics;\nconsole.log(\"Office application: \" + contextInfo.host);\nconsole.log(\"Office version: \" + contextInfo.version);\nconsole.log(\"Platform: \" + contextInfo.platform);\n```"
- name: displayLanguage
  uid: office!Office.Context#displayLanguage:member
  package: office!
  fullName: displayLanguage
  summary: Ruft das vom Benutzer angegebene Gebietsschema (Sprache) für die Benutzeroberfläche der Office-Hostanwendung ab.
  remarks: "Der zurückgegebene Wert ist eine Zeichenfolge im RFC 1766 Language-Tag-Format, z. B. en-US.\n\nDer `displayLanguage` Wert spiegelt die aktuelle Einstellung **Anzeigesprache** wider, die mit **File Options &gt; &gt; Language** in der Office-Hostanwendung angegeben ist.\n\nBei Verwendung in Outlook sind die entsprechenden Modi Compose oder Read.\n\n**Supportdetails**\n\nEin Häkchen (v) in der folgenden Matrix weist darauf hin, dass diese Eigenschaft in der entsprechenden Office-Hostanwendung unterstützt wird. Eine leere Zelle weist darauf hin, dass die Office-Hostanwendung diese Enumeration nicht unterstützt.\n\nWeitere Informationen zu Office-Hostanwendungs- und Serveranforderungen finden Sie unter [Requirements for running Office Add-ins](https://docs.microsoft.com/office/dev/add-ins/concepts/requirements-for-running-office-add-ins)<!-- -->.\n\n*Unterstützte Hosts nach Plattform* <table> <tr><th> </th><th> Office unter Windows </th><th> Office im Webbrowser </th><th> Office auf dem iPad </th><th> Outlook auf mobilen Geräten </th><th> Office für Mac </th></tr> <tr><td><strong> Excel </strong></td><td> v </td><td> v </td><td> v </td><td> </td><td> v </td></tr> <tr><td><strong> Outlook </strong></td><td> v </td><td> v </td><td> </td><td> v </td><td> v </td></tr> <tr><td><strong> PowerPoint </strong></td><td> v </td><td> v </td><td> v </td><td> </td><td> v </td></tr> <tr><td><strong> Project </strong></td><td> v </td><td> </td><td> </td><td> </td><td> v </td></tr> <tr><td><strong> Word </strong></td><td> v </td><td> </td><td> v </td><td> </td><td> v </td></tr> </table>\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\nfunction sayHelloWithDisplayLanguage() {\n    var myDisplayLanguage = Office.context.displayLanguage;\n    switch (myDisplayLanguage) {\n        case 'en-US':\n            write('Hello!');\n            break;\n        case 'en-NZ':\n            write('G\\'day mate!');\n            break;\n    }\n}\n// Function that writes to a div with id='message' on the page.\nfunction write(message){\n    document.getElementById('message').innerText += message; \n}\n```"
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'displayLanguage: string;'
    return:
      type: string
- name: document
  uid: office!Office.Context#document:member
  package: office!
  fullName: document
  summary: Ruft ein Objekt ab, das das Dokument darstellt, mit dem das Inhalts- oder Aufgabenbereichs-Add-In interagiert.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'document: Office.Document;'
    return:
      type: <xref uid="office!Office.Document:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\n// Extension initialization code.\nvar _document;\n\n// The initialize function is required for all add-ins.\nOffice.initialize = function () {\n    // Checks for the DOM to load using the jQuery ready function.\n    $(document).ready(function () {\n    // After the DOM is loaded, code specific to the add-in can run.\n    // Initialize instance variables to access API objects.\n    _document = Office.context.document;\n    });\n}\n```"
- name: host
  uid: office!Office.Context#host:member
  package: office!
  fullName: host
  summary: >-
    Enthält den Office-Anwendungshost, auf dem das Add-In ausgeführt wird.


    **Wichtig:** In Outlook ist diese Eigenschaft im Anforderungssatz 1.5 verfügbar. Für alle Postfachanforderungssätze können Sie die Eigenschaft verwenden, `Office.context.diagnostics` um den Host zu erhalten.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'host: HostType;'
    return:
      type: <xref uid="office!Office.HostType:enum" />
- name: license
  uid: office!Office.Context#license:member
  package: office!
  fullName: license
  summary: Ruft die Lizenzinformationen für die Office-Installation des Benutzers ab.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'license: string;'
    return:
      type: string
- name: mailbox
  uid: office!Office.Context#mailbox:member
  package: office!
  fullName: mailbox
  summary: Bietet Zugriff auf das Microsoft Outlook-Add-In-Objektmodell.
  remarks: >-
    **[Mindestberechtigungsstufe](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`Restricted`


    **[Anwendbarer Outlook-Modus:](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** Verfassen oder Lesen


    **Wichtige Eigenschaften:**


    - `diagnostics`<!-- -->: Stellt Diagnoseinformationen für ein Outlook-Add-In zur Verfügung.


    - `item`<!-- -->: Stellt Methoden und Eigenschaften für den Zugriff auf eine Nachricht oder einen Termin in einem Outlook-Add-In zur Verfügung.


    - `userProfile`<!-- -->: Stellt Informationen zum Benutzer in einem Outlook-Add-In zur Verfügung.


    #### <a name="examples"></a>Beispiele


    ```javascript

    // The following line of code access the item object of the JavaScript API for Office.

    var item = Office.context.mailbox.item;

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'mailbox: Office.Mailbox;'
    return:
      type: <xref uid="outlook!Office.Mailbox:interface" />
- name: officeTheme
  uid: office!Office.Context#officeTheme:member
  package: office!
  fullName: officeTheme
  summary: Bietet Zugriff auf die Eigenschaften für Office-Farbdesigns.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'officeTheme: OfficeTheme;'
    return:
      type: <xref uid="office!Office.OfficeTheme:interface" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\nfunction applyOfficeTheme(){\n    // Get office theme colors.\n    var bodyBackgroundColor = Office.context.officeTheme.bodyBackgroundColor;\n    var bodyForegroundColor = Office.context.officeTheme.bodyForegroundColor;\n    var controlBackgroundColor = Office.context.officeTheme.controlBackgroundColor;\n    var controlForegroundColor = Office.context.officeTheme.controlForegroundColor;\n\n    // Apply body background color to a CSS class.\n    $('.body').css('background-color', bodyBackgroundColor);\n}\n```"
- name: platform
  uid: office!Office.Context#platform:member
  package: office!
  fullName: platform
  summary: >-
    Stellt die Plattform zur Verfügung, auf der das Add-In ausgeführt wird.


    **Wichtig:** In Outlook ist diese Eigenschaft im Anforderungssatz 1.5 verfügbar. Für alle Postfachanforderungssätze können Sie die `Office.context.diagnostics` -Eigenschaft verwenden, um die Plattform zu erhalten.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'platform: PlatformType;'
    return:
      type: <xref uid="office!Office.PlatformType:enum" />
- name: requirements
  uid: office!Office.Context#requirements:member
  package: office!
  fullName: requirements
  summary: Stellt eine Methode zum Bestimmen der auf dem aktuellen Host und der aktuellen Plattform unterstützten Anforderungssätze zur Verfügung.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'requirements: RequirementSetSupport;'
    return:
      type: <xref uid="office!Office.RequirementSetSupport:interface" />
- name: roamingSettings
  uid: office!Office.Context#roamingSettings:member
  package: office!
  fullName: roamingSettings
  summary: >-
    Ruft ein Objekt ab, das die benutzerdefinierten Einstellungen oder den Status eines Mail-Add-Ins im Postfach eines Benutzers darstellt.


    Mit dem Objekt können Sie Daten für ein E-Mail-Add-In speichern und darauf zugreifen, das im Postfach eines Benutzers gespeichert ist, sodass es für dieses Add-In verfügbar ist, wenn es von jeder Hostclientanwendung ausgeführt wird, die für den Zugriff auf dieses Postfach verwendet `RoamingSettings` wird.
  remarks: >-
    **[Mindestberechtigungsstufe](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**:`Restricted`


    **[Anwendbarer Outlook-Modus:](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** Verfassen oder Lesen


    #### <a name="examples"></a>Beispiele


    ```javascript

    // Get the current value of the 'myKey' setting.

    var value = Office.context.roamingSettings.get('myKey');

    // Update the value of the 'myKey' setting.

    Office.context.roamingSettings.set('myKey', 'Hello World!');

    // Persist the change.

    Office.context.roamingSettings.saveAsync();

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'roamingSettings: Office.RoamingSettings;'
    return:
      type: <xref uid="outlook!Office.RoamingSettings:interface" />
- name: touchEnabled
  uid: office!Office.Context#touchEnabled:member
  package: office!
  fullName: touchEnabled
  summary: 'Gibt an, ob die Plattform und das Gerät die Touchinteraktion zulässt. True, wenn das #A0 auf einem Touchgerät ausgeführt wird, z. B. einem iPad. false andernfalls.'
  remarks: >-
    **Hosts**: Excel, PowerPoint, Word


    `touchEnabled` wird nur in Office auf dem iPad unterstützt.


    Verwenden Sie die touchEnabled-Eigenschaft, um zu bestimmen, wann Ihr Add-In auf einem Touchgerät ausgeführt wird, und passen Sie bei Bedarf die Art der Steuerelemente sowie Größe und Abstand der Elemente in der Benutzeroberfläche Ihres Add-Ins an, um Touchinteraktionen zu nutzen.
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'touchEnabled: boolean;'
    return:
      type: boolean
- name: ui
  uid: office!Office.Context#ui:member
  package: office!
  fullName: ui
  summary: Bietet Objekte und Methoden, die Sie zum Erstellen und Bearbeiten von Teilen der Benutzeroberfläche, z. B. Dialogfeldern, verwenden können.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'ui: UI;'
    return:
      type: <xref uid="office!Office.UI:interface" />
metadata:
  ms.openlocfilehash: bb251107e949c510db7289525af892db1b2b47af
  ms.sourcegitcommit: a8a86cfcaff5ad7dacc653d63502c76b1fedbebe
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 03/26/2021
  ms.locfileid: "51320475"
