### YamlMime:UniversalReference
items:
  - uid: 'office!Office.Bindings:interface'
    summary: Stellt die Bindungen des Add-Ins innerhalb des Dokuments dar.
    name: Office.Bindings
    fullName: Office.Bindings
    langs:
      - typeScript
    type: interface
    package: office!
    children:
      - 'office!Office.Bindings#addFromNamedItemAsync:member(1)'
      - 'office!Office.Bindings#addFromNamedItemAsync:member(2)'
      - 'office!Office.Bindings#addFromPromptAsync:member(1)'
      - 'office!Office.Bindings#addFromPromptAsync:member(2)'
      - 'office!Office.Bindings#addFromSelectionAsync:member(1)'
      - 'office!Office.Bindings#addFromSelectionAsync:member(2)'
      - 'office!Office.Bindings#document:member'
      - 'office!Office.Bindings#getAllAsync:member(1)'
      - 'office!Office.Bindings#getAllAsync:member(2)'
      - 'office!Office.Bindings#getByIdAsync:member(1)'
      - 'office!Office.Bindings#getByIdAsync:member(2)'
      - 'office!Office.Bindings#releaseByIdAsync:member(1)'
      - 'office!Office.Bindings#releaseByIdAsync:member(2)'
  - uid: 'office!Office.Bindings#addFromNamedItemAsync:member(1)'
    summary: Erstellt eine Bindung für ein benanntes Objekt im Dokument.
    remarks: |-
      **Anforderungs Sätze**:

      - [MatrixBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)

      - [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)

      - [TextBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)

      Für Excel kann der ItemName-Parameter auf einen benannten Bereich oder eine Tabelle verweist.

      Standardmäßig wird in Excel der ersten hinzugefügten Tabelle der Name "Tabelle1" und der zweiten hinzugefügten Tabelle der Name "Tabelle2" zugewiesen und so weiter. Um einen aussagekräftigen Namen für eine Tabelle in der Excel-Benutzeroberfläche zuzuweisen, verwenden Sie die Eigenschaft Tabellenname auf der Registerkarte Tabellen Tools- \| Entwurf des Menübands.

      **Hinweis**: Wenn Sie in Excel eine Tabelle als benanntes Element angeben, müssen Sie den Namen vollständig qualifizieren, um den Namen des Arbeitsblatts in den Namen der Tabelle in diesem Format einzuschließen: "Sheet1! Table1

      Für Word bezieht sich der ItemName-Parameter auf die Title-Eigenschaft eines Rich-Text-Inhaltssteuerelements. (Sie können keine Bindung an andere Inhaltssteuerelemente als das Rich-Text-Inhaltssteuerelement herstellen).

      Standardmäßig ist einem Inhaltssteuerelement kein Title-Wert zugewiesen. To assign a meaningful name in the Word UI, after inserting a Rich Text content control from the Controls group on the Developer tab of the ribbon, use the Properties command in the Controls group to display the Content Control Properties dialog box. Then set the Title property of the content control to the name you want to reference from your code.

      **Hinweis**: Wenn in Word mehrere Rich-Text-Inhaltssteuerelemente mit dem gleichen Title-Eigenschaftswert (Name) vorhanden sind und Sie versuchen, an eine dieser Inhaltssteuerelemente mit dieser Methode zu binden (indem Sie den Namen als ItemName-Parameter angeben), tritt beim Vorgang ein Fehler auf.

      #### <a name="examples"></a>Beispiele

      ```javascript
      // The following example adds a binding to the myRange named item in Excel as a "matrix" binding,
      // and assigns the binding's id as myMatrix.
      function bindNamedItem() {
          Office.context.document.bindings.addFromNamedItemAsync(
              "myRange", "matrix", {id:'myMatrix'}, function (result) {
              if (result.status == 'succeeded'){
                  write('Added new binding with type: ' + result.value.type + ' and id: ' + result.value.id);
                  }
              else
                  write('Error: ' + result.error.message);
          });
      }

      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }

      // The following example adds a binding to the Table1 named item in Excel as a "table" binding,
      // and assigns the binding's id as myTable.
      function bindNamedItem() {
          Office.context.document.bindings.addFromNamedItemAsync(
              "Table1", "table", {id:'myTable'}, function (result) {
              if (result.status == 'succeeded'){
                  write('Added new binding with type: ' + result.value.type + ' and id: ' + result.value.id);
                  }
              else
                  write('Error: ' + result.error.message);
          });
      }

      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }

      // The following example creates a text binding in Word to a rich text content control named "FirstName",
      // assigns the id "firstName", and then displays that information.
      function bindContentControl() {
          Office.context.document.bindings.addFromNamedItemAsync('FirstName', 
              Office.BindingType.Text, {id:'firstName'},
              function (result) {
                  if (result.status === Office.AsyncResultStatus.Succeeded) {
                      write('Control bound. Binding.id: '
                          + result.value.id + ' Binding.type: ' + result.value.type);
                  } else {
                      write('Error:', result.error.message);
                  }
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'addFromNamedItemAsync(itemName, bindingType, options, callback)'
    fullName: 'addFromNamedItemAsync(itemName, bindingType, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromNamedItemAsync(itemName: string, bindingType: BindingType, options?: AddBindingFromNamedItemOptions, callback?: (result: AsyncResult<Binding>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: itemName
          description: Name des bindbaren Objekts im Dokument. Beispielsweise "myexpenses"-Tabelle in Excel. "
          type:
            - string
        - id: bindingType
          description: 'Der [Office. BindingType](xref:office!Office.BindingType:enum) für die Daten. Die Methode gibt NULL zurück, wenn das ausgewählte Objekt nicht in den angegebenen Typ umgewandelt werden kann.'
          type:
            - 'office!Office.BindingType:enum'
        - id: options
          description: 'Enthält Optionen zum Konfigurieren der Bindung, die erstellt wird.'
          type:
            - 'office!Office.AddBindingFromNamedItemOptions:interface'
        - id: callback
          description: 'Optional. Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office!Office.AsyncResult:interface) ist<!-- -->. Die `value` Eigenschaft des Ergebnisses ist das Binding-Objekt, das das angegebene benannte Element darstellt.'
          type:
            - 'office!Office.Bindings#addFromNamedItemAsync~0:complex'
  - uid: 'office!Office.Bindings#addFromNamedItemAsync:member(2)'
    summary: Erstellt eine Bindung für ein benanntes Objekt im Dokument.
    remarks: |-
      [MatrixBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)<!-- -->,- [Bindungen](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)<!-- -->, [Textbindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)

      Für Excel kann der ItemName-Parameter auf einen benannten Bereich oder eine Tabelle verweist.

      Standardmäßig wird in Excel der ersten hinzugefügten Tabelle der Name "Tabelle1" und der zweiten hinzugefügten Tabelle der Name "Tabelle2" zugewiesen und so weiter. Um einen aussagekräftigen Namen für eine Tabelle in der Excel-Benutzeroberfläche zuzuweisen, verwenden Sie die Eigenschaft Tabellenname auf der Registerkarte Tabellen Tools- \| Entwurf des Menübands.

      **Hinweis**: Wenn Sie in Excel eine Tabelle als benanntes Element angeben, müssen Sie den Namen vollständig qualifizieren, um den Namen des Arbeitsblatts in den Namen der Tabelle in diesem Format einzuschließen: "Sheet1! Table1

      Für Word bezieht sich der ItemName-Parameter auf die Title-Eigenschaft eines Rich-Text-Inhaltssteuerelements. (Sie können keine Bindung an andere Inhaltssteuerelemente als das Rich-Text-Inhaltssteuerelement herstellen).

      Standardmäßig ist einem Inhaltssteuerelement kein Title-Wert zugewiesen. To assign a meaningful name in the Word UI, after inserting a Rich Text content control from the Controls group on the Developer tab of the ribbon, use the Properties command in the Controls group to display the Content Control Properties dialog box. Then set the Title property of the content control to the name you want to reference from your code.

      **Hinweis**: Wenn in Word mehrere Rich-Text-Inhaltssteuerelemente mit dem gleichen Title-Eigenschaftswert (Name) vorhanden sind und Sie versuchen, an eine dieser Inhaltssteuerelemente mit dieser Methode zu binden (indem Sie den Namen als ItemName-Parameter angeben), tritt beim Vorgang ein Fehler auf.
    name: 'addFromNamedItemAsync(itemName, bindingType, callback)'
    fullName: 'addFromNamedItemAsync(itemName, bindingType, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromNamedItemAsync(itemName: string, bindingType: BindingType, callback?: (result: AsyncResult<Binding>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: itemName
          description: Name des bindbaren Objekts im Dokument. Beispielsweise "myexpenses"-Tabelle in Excel. "
          type:
            - string
        - id: bindingType
          description: 'Der [Office. BindingType](xref:office!Office.BindingType:enum) für die Daten. Die Methode gibt NULL zurück, wenn das ausgewählte Objekt nicht in den angegebenen Typ umgewandelt werden kann.'
          type:
            - 'office!Office.BindingType:enum'
        - id: callback
          description: 'Optional. Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office!Office.AsyncResult:interface) ist<!-- -->. Die `value` Eigenschaft des Ergebnisses ist das Binding-Objekt, das das angegebene benannte Element darstellt.'
          type:
            - 'office!Office.Bindings#addFromNamedItemAsync~1:complex'
  - uid: 'office!Office.Bindings#addFromPromptAsync:member(1)'
    summary: 'Erstellen Sie eine Bindung, indem Sie den Benutzer auffordern, eine Auswahl im Dokument vorzunehmen.'
    remarks: |-
      **Anforderungsgruppe**: [nicht in einer Gruppe](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)

      Fügt der Bindings-Auflistung ein Bindungsobjekt des angegebenen Typs hinzu, das mit der bereitgestellten id angegeben wird. Bei der Methode tritt ein Fehler auf, wenn die angegebene Auswahl nicht gefunden werden kann.

      #### <a name="examples"></a>Beispiele

      ```javascript
      function addBindingFromPrompt() {
          Office.context.document.bindings.addFromPromptAsync(
              Office.BindingType.Text, 
              { id: 'MyBinding', promptText: 'Select text to bind to.' },
              function (asyncResult) {
                  write('Added new binding with type: ' + asyncResult.value.type + ' and id: ' + asyncResult.value.id);
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'addFromPromptAsync(bindingType, options, callback)'
    fullName: 'addFromPromptAsync(bindingType, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromPromptAsync(bindingType: BindingType, options?: AddBindingFromPromptOptions, callback?: (result: AsyncResult<Binding>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: bindingType
          description: 'Gibt den Typ des Bindungsobjekts an, der erstellt werden soll. Erforderlich. Gibt NULL zurück, wenn das ausgewählte Objekt nicht in den angegebenen Typ umgewandelt werden kann.'
          type:
            - 'office!Office.BindingType:enum'
        - id: options
          description: Enthält Optionen zum Konfigurieren der Eingabeaufforderung und zum Identifizieren der erstellten Bindung.
          type:
            - 'office!Office.AddBindingFromPromptOptions:interface'
        - id: callback
          description: 'Optional. Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office!Office.AsyncResult:interface) ist<!-- -->. Die `value` Eigenschaft des Ergebnisses ist das Binding-Objekt, das die vom Benutzer angegebene Auswahl darstellt.'
          type:
            - 'office!Office.Bindings#addFromPromptAsync~0:complex'
  - uid: 'office!Office.Bindings#addFromPromptAsync:member(2)'
    summary: 'Erstellen Sie eine Bindung, indem Sie den Benutzer auffordern, eine Auswahl im Dokument vorzunehmen.'
    remarks: |-
      **Anforderungsgruppe**: [nicht in einer Gruppe](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#methods-that-arent-part-of-a-requirement-set)

      Fügt der Bindings-Auflistung ein Bindungsobjekt des angegebenen Typs hinzu, das mit der bereitgestellten id angegeben wird. Bei der Methode tritt ein Fehler auf, wenn die angegebene Auswahl nicht gefunden werden kann.
    name: 'addFromPromptAsync(bindingType, callback)'
    fullName: 'addFromPromptAsync(bindingType, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromPromptAsync(bindingType: BindingType, callback?: (result: AsyncResult<Binding>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: bindingType
          description: 'Gibt den Typ des Bindungsobjekts an, der erstellt werden soll. Erforderlich. Gibt NULL zurück, wenn das ausgewählte Objekt nicht in den angegebenen Typ umgewandelt werden kann.'
          type:
            - 'office!Office.BindingType:enum'
        - id: callback
          description: 'Optional. Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office!Office.AsyncResult:interface) ist<!-- -->. Die `value` Eigenschaft des Ergebnisses ist das Binding-Objekt, das die vom Benutzer angegebene Auswahl darstellt.'
          type:
            - 'office!Office.Bindings#addFromPromptAsync~1:complex'
  - uid: 'office!Office.Bindings#addFromSelectionAsync:member(1)'
    summary: Erstellen Sie eine Bindung basierend auf der aktuellen Auswahl des Benutzers.
    remarks: |-
      **Anforderungs Sätze**:

      - [MatrixBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)

      - [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)

      - [TextBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)

      Fügt den angegebenen Typ des Binding-Objekts zur Bindings-Auflistung hinzu, die mit der angegebenen ID identifiziert wird.

      Hinweis Wenn Sie in Excel die addFromSelectionAsync-Methode aufrufen, die die Binding.ID einer vorhandenen Bindung übergibt, wird der Binding. Type dieser Bindung verwendet, und der Typ kann nicht geändert werden, indem ein anderer Wert für den BindingType-Parameter angegeben wird. Wenn Sie eine vorhandene id verwenden und den bindingType ändern müssen, rufen Sie die Bindings.releaseByIdAsync-Methode auf, um die Bindung zu lösen. Rufen Sie dann die addFromSelectionAsync-Methode auf, um die Bindung mit einem neuen Typ wiederherzustellen.

      #### <a name="examples"></a>Beispiele

      ```javascript
      function addBindingFromSelection() {
          Office.context.document.bindings.addFromSelectionAsync(Office.BindingType.Text, { id: 'MyBinding' }, 
              function (asyncResult) {
              write('Added new binding with type: ' + asyncResult.value.type + ' and id: ' + asyncResult.value.id);
              }
          );
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'addFromSelectionAsync(bindingType, options, callback)'
    fullName: 'addFromSelectionAsync(bindingType, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromSelectionAsync(bindingType: BindingType, options?: AddBindingFromSelectionOptions, callback?: (result: AsyncResult<Binding>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: bindingType
          description: 'Gibt den Typ des Bindungsobjekts an, der erstellt werden soll. Erforderlich. Gibt NULL zurück, wenn das ausgewählte Objekt nicht in den angegebenen Typ umgewandelt werden kann.'
          type:
            - 'office!Office.BindingType:enum'
        - id: options
          description: 'Enthält Optionen zum Identifizieren der Bindung, die erstellt wird.'
          type:
            - 'office!Office.AddBindingFromSelectionOptions:interface'
        - id: callback
          description: 'Optional. Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office!Office.AsyncResult:interface) ist<!-- -->. Die `value` Eigenschaft des Ergebnisses ist das Binding-Objekt, das die vom Benutzer angegebene Auswahl darstellt.'
          type:
            - 'office!Office.Bindings#addFromSelectionAsync~0:complex'
  - uid: 'office!Office.Bindings#addFromSelectionAsync:member(2)'
    summary: Erstellen Sie eine Bindung basierend auf der aktuellen Auswahl des Benutzers.
    remarks: |-
      **Anforderungs Sätze**:

      - [MatrixBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)

      - [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)

      - [TextBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)

      Fügt den angegebenen Typ des Binding-Objekts zur Bindings-Auflistung hinzu, die mit der angegebenen ID identifiziert wird.

      Hinweis Wenn Sie in Excel die addFromSelectionAsync-Methode aufrufen, die die Binding.ID einer vorhandenen Bindung übergibt, wird der Binding. Type dieser Bindung verwendet, und der Typ kann nicht geändert werden, indem ein anderer Wert für den BindingType-Parameter angegeben wird. Wenn Sie eine vorhandene id verwenden und den bindingType ändern müssen, rufen Sie die Bindings.releaseByIdAsync-Methode auf, um die Bindung zu lösen. Rufen Sie dann die addFromSelectionAsync-Methode auf, um die Bindung mit einem neuen Typ wiederherzustellen.
    name: 'addFromSelectionAsync(bindingType, callback)'
    fullName: 'addFromSelectionAsync(bindingType, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFromSelectionAsync(bindingType: BindingType, callback?: (result: AsyncResult<Binding>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: bindingType
          description: 'Gibt den Typ des Bindungsobjekts an, der erstellt werden soll. Erforderlich. Gibt NULL zurück, wenn das ausgewählte Objekt nicht in den angegebenen Typ umgewandelt werden kann.'
          type:
            - 'office!Office.BindingType:enum'
        - id: callback
          description: 'Optional. Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office!Office.AsyncResult:interface) ist<!-- -->. Die `value` Eigenschaft des Ergebnisses ist das Binding-Objekt, das die vom Benutzer angegebene Auswahl darstellt.'
          type:
            - 'office!Office.Bindings#addFromSelectionAsync~1:complex'
  - uid: 'office!Office.Bindings#document:member'
    summary: 'Ruft ein [Office.Document](xref:office!Office.Document:interface) -Objekt ab, das das diesem Bindungs Paket zugeordnete Dokument darstellt.'
    name: document
    fullName: document
    langs:
      - typeScript
    type: property
    syntax:
      content: 'document: Document;'
      return:
        type:
          - 'office!Office.Document:interface'
  - uid: 'office!Office.Bindings#getAllAsync:member(1)'
    summary: Ruft alle vorher erstellten Bindungen ab.
    remarks: |-
      **Anforderungs Sätze**:

      - [MatrixBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)

      - [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)

      - [TextBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)
    name: 'getAllAsync(options, callback)'
    fullName: 'getAllAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAllAsync(options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<Binding[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: 'Stellt eine Option zum Beibehalten von Kontextdaten eines beliebigen Typs, unverändert, zur Verwendung in einem Rückruf bereit.'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office!Office.AsyncResult:interface) ist<!-- -->. Die `value` Eigenschaft des Ergebnisses ist ein Array, das jede Bindung enthält, die für das referenzierte Bindings-Objekt erstellt wurde.'
          type:
            - 'office!Office.Bindings#getAllAsync~0:complex'
  - uid: 'office!Office.Bindings#getAllAsync:member(2)'
    summary: Ruft alle vorher erstellten Bindungen ab.
    remarks: |-
      **Anforderungs Sätze**:

      - [MatrixBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)

      - [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)

      - [TextBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)

      #### <a name="examples"></a>Beispiele

      ```javascript
      function displayAllBindingNames() {
          Office.context.document.bindings.getAllAsync(function (asyncResult) {
              var bindingString = '';
              for (var i in asyncResult.value) {
                  bindingString += asyncResult.value[i].id + '\n';
              }
              write('Existing bindings: ' + bindingString);
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: getAllAsync(callback)
    fullName: getAllAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAllAsync(callback?: (result: AsyncResult<Binding[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: 'Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office!Office.AsyncResult:interface) ist<!-- -->. Die `value` Eigenschaft des Ergebnisses ist ein Array, das jede Bindung enthält, die für das referenzierte Bindings-Objekt erstellt wurde.'
          type:
            - 'office!Office.Bindings#getAllAsync~1:complex'
  - uid: 'office!Office.Bindings#getByIdAsync:member(1)'
    summary: Ruft eine Bindung basierend auf Ihrem Namen ab.
    remarks: |-
      **Anforderungs Sätze**:

      - [MatrixBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)

      - [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)

      - [TextBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)

      Schlägt fehl, wenn die angegebene ID nicht vorhanden ist.
    name: 'getByIdAsync(id, options, callback)'
    fullName: 'getByIdAsync(id, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getByIdAsync(id: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<Binding>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: id
          description: Gibt den eindeutigen Namen des Binding-Objekts an. Erforderlich.
          type:
            - string
        - id: options
          description: 'Stellt eine Option zum Beibehalten von Kontextdaten eines beliebigen Typs, unverändert, zur Verwendung in einem Rückruf bereit.'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Optional. Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office!Office.AsyncResult:interface) ist<!-- -->. Die `value` Eigenschaft des Ergebnisses ist das Binding-Objekt, das durch die ID im Aufruf angegeben wird.'
          type:
            - 'office!Office.Bindings#getByIdAsync~0:complex'
  - uid: 'office!Office.Bindings#getByIdAsync:member(2)'
    summary: Ruft eine Bindung basierend auf Ihrem Namen ab.
    remarks: |-
      **Anforderungs Sätze**:

      - [MatrixBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)

      - [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)

      - [TextBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)

      Schlägt fehl, wenn die angegebene ID nicht vorhanden ist.

      #### <a name="examples"></a>Beispiele

      ```javascript
      function displayBindingType() {
          Office.context.document.bindings.getByIdAsync('MyBinding', function (asyncResult) {
              write('Retrieved binding with type: ' + asyncResult.value.type + ' and id: ' + asyncResult.value.id);
          });
      }
      // Function that writes to a div with id='message' on the page.
      function write(message){
          document.getElementById('message').innerText += message; 
      }
      ```
    name: 'getByIdAsync(id, callback)'
    fullName: 'getByIdAsync(id, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getByIdAsync(id: string, callback?: (result: AsyncResult<Binding>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: id
          description: Gibt den eindeutigen Namen des Binding-Objekts an. Erforderlich.
          type:
            - string
        - id: callback
          description: 'Optional. Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office!Office.AsyncResult:interface) ist<!-- -->. Die `value` Eigenschaft des Ergebnisses ist das Binding-Objekt, das durch die ID im Aufruf angegeben wird.'
          type:
            - 'office!Office.Bindings#getByIdAsync~1:complex'
  - uid: 'office!Office.Bindings#releaseByIdAsync:member(1)'
    summary: Entfernt die Bindung aus dem Dokument.
    remarks: |-
      **Anforderungs Sätze**:

      - [MatrixBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)

      - [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)

      - [TextBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)

      Schlägt fehl, wenn die angegebene ID nicht vorhanden ist.
    name: 'releaseByIdAsync(id, options, callback)'
    fullName: 'releaseByIdAsync(id, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'releaseByIdAsync(id: string, options?: Office.AsyncContextOptions, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: id
          description: 'Gibt den eindeutigen Namen an, der zum Identifizieren des Objekts verwendet werden soll. Erforderlich.'
          type:
            - string
        - id: options
          description: 'Stellt eine Option zum Beibehalten von Kontextdaten eines beliebigen Typs, unverändert, zur Verwendung in einem Rückruf bereit.'
          type:
            - 'office!Office.AsyncContextOptions:interface'
        - id: callback
          description: 'Optional. Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office!Office.AsyncResult:interface) ist<!-- -->.'
          type:
            - 'office!Office.Bindings#releaseByIdAsync~0:complex'
  - uid: 'office!Office.Bindings#releaseByIdAsync:member(2)'
    summary: Entfernt die Bindung aus dem Dokument.
    remarks: |-
      **Anforderungs Sätze**:

      - [MatrixBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#matrixbindings)

      - [TableBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#tablebindings)

      - [TextBindings](https://docs.microsoft.com/office/dev/add-ins/reference/requirement-sets/office-add-in-requirement-sets#textbindings)

      Schlägt fehl, wenn die angegebene ID nicht vorhanden ist.

      #### <a name="examples"></a>Beispiele

      ```javascript
      Office.context.document.bindings.releaseByIdAsync("MyBinding", function (asyncResult) { 
          write("Released MyBinding!"); 
      }); 
      // Function that writes to a div with id='message' on the page. 
      function write(message){ 
          document.getElementById('message').innerText += message;  
      }
      ```
    name: 'releaseByIdAsync(id, callback)'
    fullName: 'releaseByIdAsync(id, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'releaseByIdAsync(id: string, callback?: (result: AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: id
          description: 'Gibt den eindeutigen Namen an, der zum Identifizieren des Objekts verwendet werden soll. Erforderlich.'
          type:
            - string
        - id: callback
          description: 'Optional. Eine Funktion, die aufgerufen wird, wenn der Rückruf zurückgegeben wird, deren einziger Parameter vom Typ [Office. AsyncResult](xref:office!Office.AsyncResult:interface) ist<!-- -->.'
          type:
            - 'office!Office.Bindings#releaseByIdAsync~1:complex'
references:
  - uid: 'office!Office.BindingType:enum'
    name: BindingType
  - uid: 'office!Office.AddBindingFromNamedItemOptions:interface'
    name: AddBindingFromNamedItemOptions
  - uid: 'office!Office.Bindings#addFromNamedItemAsync~0:complex'
    name: '(result: AsyncResult<Binding>) => void'
    fullName: '(result: Office.AsyncResult<Office.Binding>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'office!Office.Binding:interface'
        name: Binding
        fullName: Office.Binding
      - name: '>) => void'
        fullName: '>) => void'
  - uid: 'office!Office.Bindings#addFromNamedItemAsync~1:complex'
    name: '(result: AsyncResult<Binding>) => void'
    fullName: '(result: Office.AsyncResult<Office.Binding>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'office!Office.Binding:interface'
        name: Binding
        fullName: Office.Binding
      - name: '>) => void'
        fullName: '>) => void'
  - uid: 'office!Office.AddBindingFromPromptOptions:interface'
    name: AddBindingFromPromptOptions
  - uid: 'office!Office.Bindings#addFromPromptAsync~0:complex'
    name: '(result: AsyncResult<Binding>) => void'
    fullName: '(result: Office.AsyncResult<Office.Binding>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'office!Office.Binding:interface'
        name: Binding
        fullName: Office.Binding
      - name: '>) => void'
        fullName: '>) => void'
  - uid: 'office!Office.Bindings#addFromPromptAsync~1:complex'
    name: '(result: AsyncResult<Binding>) => void'
    fullName: '(result: Office.AsyncResult<Office.Binding>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'office!Office.Binding:interface'
        name: Binding
        fullName: Office.Binding
      - name: '>) => void'
        fullName: '>) => void'
  - uid: 'office!Office.AddBindingFromSelectionOptions:interface'
    name: AddBindingFromSelectionOptions
  - uid: 'office!Office.Bindings#addFromSelectionAsync~0:complex'
    name: '(result: AsyncResult<Binding>) => void'
    fullName: '(result: Office.AsyncResult<Office.Binding>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'office!Office.Binding:interface'
        name: Binding
        fullName: Office.Binding
      - name: '>) => void'
        fullName: '>) => void'
  - uid: 'office!Office.Bindings#addFromSelectionAsync~1:complex'
    name: '(result: AsyncResult<Binding>) => void'
    fullName: '(result: Office.AsyncResult<Office.Binding>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'office!Office.Binding:interface'
        name: Binding
        fullName: Office.Binding
      - name: '>) => void'
        fullName: '>) => void'
  - uid: 'office!Office.Document:interface'
    name: Document
  - uid: 'office!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'office!Office.Bindings#getAllAsync~0:complex'
    name: '(result: AsyncResult<Binding[]>) => void'
    fullName: '(result: Office.AsyncResult<Office.Binding[]>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'office!Office.Binding:interface'
        name: Binding
        fullName: Office.Binding
      - name: '[]>) => void'
        fullName: '[]>) => void'
  - uid: 'office!Office.Bindings#getAllAsync~1:complex'
    name: '(result: AsyncResult<Binding[]>) => void'
    fullName: '(result: Office.AsyncResult<Office.Binding[]>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'office!Office.Binding:interface'
        name: Binding
        fullName: Office.Binding
      - name: '[]>) => void'
        fullName: '[]>) => void'
  - uid: 'office!Office.Bindings#getByIdAsync~0:complex'
    name: '(result: AsyncResult<Binding>) => void'
    fullName: '(result: Office.AsyncResult<Office.Binding>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'office!Office.Binding:interface'
        name: Binding
        fullName: Office.Binding
      - name: '>) => void'
        fullName: '>) => void'
  - uid: 'office!Office.Bindings#getByIdAsync~1:complex'
    name: '(result: AsyncResult<Binding>) => void'
    fullName: '(result: Office.AsyncResult<Office.Binding>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'office!Office.Binding:interface'
        name: Binding
        fullName: Office.Binding
      - name: '>) => void'
        fullName: '>) => void'
  - uid: 'office!Office.Bindings#releaseByIdAsync~0:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'office!Office.Bindings#releaseByIdAsync~1:complex'
    name: '(result: AsyncResult<void>) => void'
    fullName: '(result: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(result: '
        fullName: '(result: '
      - uid: 'office!Office.AsyncResult:interface'
        name: AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void