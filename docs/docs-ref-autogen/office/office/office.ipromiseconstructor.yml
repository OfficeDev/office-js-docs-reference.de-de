### YamlMime:UniversalReference
items:
  - uid: 'office!Office.IPromiseConstructor:interface'
    name: Office.IPromiseConstructor
    fullName: Office.IPromiseConstructor
    langs:
      - typeScript
    type: interface
    package: office!
    children:
      - 'office!Office.IPromiseConstructor#all:member(1)'
      - 'office!Office.IPromiseConstructor#all:member(10)'
      - 'office!Office.IPromiseConstructor#all:member(2)'
      - 'office!Office.IPromiseConstructor#all:member(3)'
      - 'office!Office.IPromiseConstructor#all:member(4)'
      - 'office!Office.IPromiseConstructor#all:member(5)'
      - 'office!Office.IPromiseConstructor#all:member(6)'
      - 'office!Office.IPromiseConstructor#all:member(7)'
      - 'office!Office.IPromiseConstructor#all:member(8)'
      - 'office!Office.IPromiseConstructor#all:member(9)'
      - 'office!Office.IPromiseConstructor#prototype:member'
      - 'office!Office.IPromiseConstructor#race:member(1)'
      - 'office!Office.IPromiseConstructor#race:member(10)'
      - 'office!Office.IPromiseConstructor#race:member(2)'
      - 'office!Office.IPromiseConstructor#race:member(3)'
      - 'office!Office.IPromiseConstructor#race:member(4)'
      - 'office!Office.IPromiseConstructor#race:member(5)'
      - 'office!Office.IPromiseConstructor#race:member(6)'
      - 'office!Office.IPromiseConstructor#race:member(7)'
      - 'office!Office.IPromiseConstructor#race:member(8)'
      - 'office!Office.IPromiseConstructor#race:member(9)'
      - 'office!Office.IPromiseConstructor#reject:member(1)'
      - 'office!Office.IPromiseConstructor#reject:member(2)'
      - 'office!Office.IPromiseConstructor#resolve:member(1)'
      - 'office!Office.IPromiseConstructor#resolve:member(2)'
  - uid: 'office!Office.IPromiseConstructor#all:member(1)'
    summary: '<span data-ttu-id="85bdf-101">Erstellt eine Zusage, die mit einem Array von Ergebnissen aufgelöst wird, wenn alle bereitgestellten Versprechungen aufgelöst werden, oder wenn eine Zusage abgelehnt wird.</span><span class="sxs-lookup"><span data-stu-id="85bdf-101">Creates a Promise that is resolved with an array of results when all of the provided Promises resolve, or rejected when any Promise is rejected.</span></span>'
    name: all(values)
    fullName: all(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'all<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>, T10 | PromiseLike<T10>]): Promise<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]>;'
      return:
        type:
          - 'office!Office.IPromiseConstructor#all~0:complex'
        description: <span data-ttu-id="85bdf-102">Eine neue Zusage.</span><span class="sxs-lookup"><span data-stu-id="85bdf-102">A new Promise.</span></span>
      parameters:
        - id: values
          description: <span data-ttu-id="85bdf-103">Ein Array von Zusagen.</span><span class="sxs-lookup"><span data-stu-id="85bdf-103">An array of Promises.</span></span>
          type:
            - 'office!Office.IPromiseConstructor#all~1:complex'
      typeParameters:
        - id: T1
        - id: T2
        - id: T3
        - id: T4
        - id: T5
        - id: T6
        - id: T7
        - id: T8
        - id: T9
        - id: T10
  - uid: 'office!Office.IPromiseConstructor#all:member(10)'
    summary: '<span data-ttu-id="85bdf-104">Erstellt eine Zusage, die mit einem Array von Ergebnissen aufgelöst wird, wenn alle bereitgestellten Versprechungen aufgelöst werden, oder wenn eine Zusage abgelehnt wird.</span><span class="sxs-lookup"><span data-stu-id="85bdf-104">Creates a Promise that is resolved with an array of results when all of the provided Promises resolve, or rejected when any Promise is rejected.</span></span>'
    name: all(values)
    fullName: all(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'all<T>(values: (T | PromiseLike<T>)[]): Promise<T[]>;'
      return:
        type:
          - 'office!Office.IPromiseConstructor#all~2:complex'
        description: <span data-ttu-id="85bdf-105">Eine neue Zusage.</span><span class="sxs-lookup"><span data-stu-id="85bdf-105">A new Promise.</span></span>
      parameters:
        - id: values
          description: <span data-ttu-id="85bdf-106">Ein Array von Zusagen.</span><span class="sxs-lookup"><span data-stu-id="85bdf-106">An array of Promises.</span></span>
          type:
            - 'office!Office.IPromiseConstructor#all~3:complex'
      typeParameters:
        - id: T
  - uid: 'office!Office.IPromiseConstructor#all:member(2)'
    summary: '<span data-ttu-id="85bdf-107">Erstellt eine Zusage, die mit einem Array von Ergebnissen aufgelöst wird, wenn alle bereitgestellten Versprechungen aufgelöst werden, oder wenn eine Zusage abgelehnt wird.</span><span class="sxs-lookup"><span data-stu-id="85bdf-107">Creates a Promise that is resolved with an array of results when all of the provided Promises resolve, or rejected when any Promise is rejected.</span></span>'
    name: all(values)
    fullName: all(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'all<T1, T2, T3, T4, T5, T6, T7, T8, T9>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>]): Promise<[T1, T2, T3, T4, T5, T6, T7, T8, T9]>;'
      return:
        type:
          - 'office!Office.IPromiseConstructor#all~4:complex'
        description: <span data-ttu-id="85bdf-108">Eine neue Zusage.</span><span class="sxs-lookup"><span data-stu-id="85bdf-108">A new Promise.</span></span>
      parameters:
        - id: values
          description: <span data-ttu-id="85bdf-109">Ein Array von Zusagen.</span><span class="sxs-lookup"><span data-stu-id="85bdf-109">An array of Promises.</span></span>
          type:
            - 'office!Office.IPromiseConstructor#all~5:complex'
      typeParameters:
        - id: T1
        - id: T2
        - id: T3
        - id: T4
        - id: T5
        - id: T6
        - id: T7
        - id: T8
        - id: T9
  - uid: 'office!Office.IPromiseConstructor#all:member(3)'
    summary: '<span data-ttu-id="85bdf-110">Erstellt eine Zusage, die mit einem Array von Ergebnissen aufgelöst wird, wenn alle bereitgestellten Versprechungen aufgelöst werden, oder wenn eine Zusage abgelehnt wird.</span><span class="sxs-lookup"><span data-stu-id="85bdf-110">Creates a Promise that is resolved with an array of results when all of the provided Promises resolve, or rejected when any Promise is rejected.</span></span>'
    name: all(values)
    fullName: all(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'all<T1, T2, T3, T4, T5, T6, T7, T8>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>]): Promise<[T1, T2, T3, T4, T5, T6, T7, T8]>;'
      return:
        type:
          - 'office!Office.IPromiseConstructor#all~6:complex'
        description: <span data-ttu-id="85bdf-111">Eine neue Zusage.</span><span class="sxs-lookup"><span data-stu-id="85bdf-111">A new Promise.</span></span>
      parameters:
        - id: values
          description: <span data-ttu-id="85bdf-112">Ein Array von Zusagen.</span><span class="sxs-lookup"><span data-stu-id="85bdf-112">An array of Promises.</span></span>
          type:
            - 'office!Office.IPromiseConstructor#all~7:complex'
      typeParameters:
        - id: T1
        - id: T2
        - id: T3
        - id: T4
        - id: T5
        - id: T6
        - id: T7
        - id: T8
  - uid: 'office!Office.IPromiseConstructor#all:member(4)'
    summary: '<span data-ttu-id="85bdf-113">Erstellt eine Zusage, die mit einem Array von Ergebnissen aufgelöst wird, wenn alle bereitgestellten Versprechungen aufgelöst werden, oder wenn eine Zusage abgelehnt wird.</span><span class="sxs-lookup"><span data-stu-id="85bdf-113">Creates a Promise that is resolved with an array of results when all of the provided Promises resolve, or rejected when any Promise is rejected.</span></span>'
    name: all(values)
    fullName: all(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'all<T1, T2, T3, T4, T5, T6, T7>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>]): Promise<[T1, T2, T3, T4, T5, T6, T7]>;'
      return:
        type:
          - 'office!Office.IPromiseConstructor#all~8:complex'
        description: <span data-ttu-id="85bdf-114">Eine neue Zusage.</span><span class="sxs-lookup"><span data-stu-id="85bdf-114">A new Promise.</span></span>
      parameters:
        - id: values
          description: <span data-ttu-id="85bdf-115">Ein Array von Zusagen.</span><span class="sxs-lookup"><span data-stu-id="85bdf-115">An array of Promises.</span></span>
          type:
            - 'office!Office.IPromiseConstructor#all~9:complex'
      typeParameters:
        - id: T1
        - id: T2
        - id: T3
        - id: T4
        - id: T5
        - id: T6
        - id: T7
  - uid: 'office!Office.IPromiseConstructor#all:member(5)'
    summary: '<span data-ttu-id="85bdf-116">Erstellt eine Zusage, die mit einem Array von Ergebnissen aufgelöst wird, wenn alle bereitgestellten Versprechungen aufgelöst werden, oder wenn eine Zusage abgelehnt wird.</span><span class="sxs-lookup"><span data-stu-id="85bdf-116">Creates a Promise that is resolved with an array of results when all of the provided Promises resolve, or rejected when any Promise is rejected.</span></span>'
    name: all(values)
    fullName: all(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'all<T1, T2, T3, T4, T5, T6>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>]): Promise<[T1, T2, T3, T4, T5, T6]>;'
      return:
        type:
          - 'office!Office.IPromiseConstructor#all~10:complex'
        description: <span data-ttu-id="85bdf-117">Eine neue Zusage.</span><span class="sxs-lookup"><span data-stu-id="85bdf-117">A new Promise.</span></span>
      parameters:
        - id: values
          description: <span data-ttu-id="85bdf-118">Ein Array von Zusagen.</span><span class="sxs-lookup"><span data-stu-id="85bdf-118">An array of Promises.</span></span>
          type:
            - 'office!Office.IPromiseConstructor#all~11:complex'
      typeParameters:
        - id: T1
        - id: T2
        - id: T3
        - id: T4
        - id: T5
        - id: T6
  - uid: 'office!Office.IPromiseConstructor#all:member(6)'
    summary: '<span data-ttu-id="85bdf-119">Erstellt eine Zusage, die mit einem Array von Ergebnissen aufgelöst wird, wenn alle bereitgestellten Versprechungen aufgelöst werden, oder wenn eine Zusage abgelehnt wird.</span><span class="sxs-lookup"><span data-stu-id="85bdf-119">Creates a Promise that is resolved with an array of results when all of the provided Promises resolve, or rejected when any Promise is rejected.</span></span>'
    name: all(values)
    fullName: all(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'all<T1, T2, T3, T4, T5>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>]): Promise<[T1, T2, T3, T4, T5]>;'
      return:
        type:
          - 'office!Office.IPromiseConstructor#all~12:complex'
        description: <span data-ttu-id="85bdf-120">Eine neue Zusage.</span><span class="sxs-lookup"><span data-stu-id="85bdf-120">A new Promise.</span></span>
      parameters:
        - id: values
          description: <span data-ttu-id="85bdf-121">Ein Array von Zusagen.</span><span class="sxs-lookup"><span data-stu-id="85bdf-121">An array of Promises.</span></span>
          type:
            - 'office!Office.IPromiseConstructor#all~13:complex'
      typeParameters:
        - id: T1
        - id: T2
        - id: T3
        - id: T4
        - id: T5
  - uid: 'office!Office.IPromiseConstructor#all:member(7)'
    summary: '<span data-ttu-id="85bdf-122">Erstellt eine Zusage, die mit einem Array von Ergebnissen aufgelöst wird, wenn alle bereitgestellten Versprechungen aufgelöst werden, oder wenn eine Zusage abgelehnt wird.</span><span class="sxs-lookup"><span data-stu-id="85bdf-122">Creates a Promise that is resolved with an array of results when all of the provided Promises resolve, or rejected when any Promise is rejected.</span></span>'
    name: all(values)
    fullName: all(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'all<T1, T2, T3, T4>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>]): Promise<[T1, T2, T3, T4]>;'
      return:
        type:
          - 'office!Office.IPromiseConstructor#all~14:complex'
        description: <span data-ttu-id="85bdf-123">Eine neue Zusage.</span><span class="sxs-lookup"><span data-stu-id="85bdf-123">A new Promise.</span></span>
      parameters:
        - id: values
          description: <span data-ttu-id="85bdf-124">Ein Array von Zusagen.</span><span class="sxs-lookup"><span data-stu-id="85bdf-124">An array of Promises.</span></span>
          type:
            - 'office!Office.IPromiseConstructor#all~15:complex'
      typeParameters:
        - id: T1
        - id: T2
        - id: T3
        - id: T4
  - uid: 'office!Office.IPromiseConstructor#all:member(8)'
    summary: '<span data-ttu-id="85bdf-125">Erstellt eine Zusage, die mit einem Array von Ergebnissen aufgelöst wird, wenn alle bereitgestellten Versprechungen aufgelöst werden, oder wenn eine Zusage abgelehnt wird.</span><span class="sxs-lookup"><span data-stu-id="85bdf-125">Creates a Promise that is resolved with an array of results when all of the provided Promises resolve, or rejected when any Promise is rejected.</span></span>'
    name: all(values)
    fullName: all(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'all<T1, T2, T3>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>]): Promise<[T1, T2, T3]>;'
      return:
        type:
          - 'office!Office.IPromiseConstructor#all~16:complex'
        description: <span data-ttu-id="85bdf-126">Eine neue Zusage.</span><span class="sxs-lookup"><span data-stu-id="85bdf-126">A new Promise.</span></span>
      parameters:
        - id: values
          description: <span data-ttu-id="85bdf-127">Ein Array von Zusagen.</span><span class="sxs-lookup"><span data-stu-id="85bdf-127">An array of Promises.</span></span>
          type:
            - 'office!Office.IPromiseConstructor#all~17:complex'
      typeParameters:
        - id: T1
        - id: T2
        - id: T3
  - uid: 'office!Office.IPromiseConstructor#all:member(9)'
    summary: '<span data-ttu-id="85bdf-128">Erstellt eine Zusage, die mit einem Array von Ergebnissen aufgelöst wird, wenn alle bereitgestellten Versprechungen aufgelöst werden, oder wenn eine Zusage abgelehnt wird.</span><span class="sxs-lookup"><span data-stu-id="85bdf-128">Creates a Promise that is resolved with an array of results when all of the provided Promises resolve, or rejected when any Promise is rejected.</span></span>'
    name: all(values)
    fullName: all(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'all<T1, T2>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>]): Promise<[T1, T2]>;'
      return:
        type:
          - 'office!Office.IPromiseConstructor#all~18:complex'
        description: <span data-ttu-id="85bdf-129">Eine neue Zusage.</span><span class="sxs-lookup"><span data-stu-id="85bdf-129">A new Promise.</span></span>
      parameters:
        - id: values
          description: <span data-ttu-id="85bdf-130">Ein Array von Zusagen.</span><span class="sxs-lookup"><span data-stu-id="85bdf-130">An array of Promises.</span></span>
          type:
            - 'office!Office.IPromiseConstructor#all~19:complex'
      typeParameters:
        - id: T1
        - id: T2
  - uid: 'office!Office.IPromiseConstructor#prototype:member'
    summary: <span data-ttu-id="85bdf-131">Ein Verweis auf den Prototyp.</span><span class="sxs-lookup"><span data-stu-id="85bdf-131">A reference to the prototype.</span></span>
    name: prototype
    fullName: prototype
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly prototype: Promise<any>;'
      return:
        type:
          - 'office!Office.IPromiseConstructor#prototype~0:complex'
  - uid: 'office!Office.IPromiseConstructor#race:member(1)'
    summary: '<span data-ttu-id="85bdf-132">Erstellt eine Zusage, die aufgelöst oder abgelehnt wird, wenn eine der bereitgestellten Versprechungen aufgelöst oder abgelehnt wird.</span><span class="sxs-lookup"><span data-stu-id="85bdf-132">Creates a Promise that is resolved or rejected when any of the provided Promises are resolved or rejected.</span></span>'
    name: race(values)
    fullName: race(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'race<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>, T10 | PromiseLike<T10>]): Promise<T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9 | T10>;'
      return:
        type:
          - 'office!Office.IPromiseConstructor#race~0:complex'
        description: <span data-ttu-id="85bdf-133">Eine neue Zusage.</span><span class="sxs-lookup"><span data-stu-id="85bdf-133">A new Promise.</span></span>
      parameters:
        - id: values
          description: <span data-ttu-id="85bdf-134">Ein Array von Zusagen.</span><span class="sxs-lookup"><span data-stu-id="85bdf-134">An array of Promises.</span></span>
          type:
            - 'office!Office.IPromiseConstructor#race~1:complex'
      typeParameters:
        - id: T1
        - id: T2
        - id: T3
        - id: T4
        - id: T5
        - id: T6
        - id: T7
        - id: T8
        - id: T9
        - id: T10
  - uid: 'office!Office.IPromiseConstructor#race:member(10)'
    summary: '<span data-ttu-id="85bdf-135">Erstellt eine Zusage, die aufgelöst oder abgelehnt wird, wenn eine der bereitgestellten Versprechungen aufgelöst oder abgelehnt wird.</span><span class="sxs-lookup"><span data-stu-id="85bdf-135">Creates a Promise that is resolved or rejected when any of the provided Promises are resolved or rejected.</span></span>'
    name: race(values)
    fullName: race(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'race<T>(values: (T | PromiseLike<T>)[]): Promise<T>;'
      return:
        type:
          - 'office!Office.IPromiseConstructor#race~2:complex'
        description: <span data-ttu-id="85bdf-136">Eine neue Zusage.</span><span class="sxs-lookup"><span data-stu-id="85bdf-136">A new Promise.</span></span>
      parameters:
        - id: values
          description: <span data-ttu-id="85bdf-137">Ein Array von Zusagen.</span><span class="sxs-lookup"><span data-stu-id="85bdf-137">An array of Promises.</span></span>
          type:
            - 'office!Office.IPromiseConstructor#race~3:complex'
      typeParameters:
        - id: T
  - uid: 'office!Office.IPromiseConstructor#race:member(2)'
    summary: '<span data-ttu-id="85bdf-138">Erstellt eine Zusage, die aufgelöst oder abgelehnt wird, wenn eine der bereitgestellten Versprechungen aufgelöst oder abgelehnt wird.</span><span class="sxs-lookup"><span data-stu-id="85bdf-138">Creates a Promise that is resolved or rejected when any of the provided Promises are resolved or rejected.</span></span>'
    name: race(values)
    fullName: race(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'race<T1, T2, T3, T4, T5, T6, T7, T8, T9>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>]): Promise<T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>;'
      return:
        type:
          - 'office!Office.IPromiseConstructor#race~4:complex'
        description: <span data-ttu-id="85bdf-139">Eine neue Zusage.</span><span class="sxs-lookup"><span data-stu-id="85bdf-139">A new Promise.</span></span>
      parameters:
        - id: values
          description: <span data-ttu-id="85bdf-140">Ein Array von Zusagen.</span><span class="sxs-lookup"><span data-stu-id="85bdf-140">An array of Promises.</span></span>
          type:
            - 'office!Office.IPromiseConstructor#race~5:complex'
      typeParameters:
        - id: T1
        - id: T2
        - id: T3
        - id: T4
        - id: T5
        - id: T6
        - id: T7
        - id: T8
        - id: T9
  - uid: 'office!Office.IPromiseConstructor#race:member(3)'
    summary: '<span data-ttu-id="85bdf-141">Erstellt eine Zusage, die aufgelöst oder abgelehnt wird, wenn eine der bereitgestellten Versprechungen aufgelöst oder abgelehnt wird.</span><span class="sxs-lookup"><span data-stu-id="85bdf-141">Creates a Promise that is resolved or rejected when any of the provided Promises are resolved or rejected.</span></span>'
    name: race(values)
    fullName: race(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'race<T1, T2, T3, T4, T5, T6, T7, T8>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>]): Promise<T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8>;'
      return:
        type:
          - 'office!Office.IPromiseConstructor#race~6:complex'
        description: <span data-ttu-id="85bdf-142">Eine neue Zusage.</span><span class="sxs-lookup"><span data-stu-id="85bdf-142">A new Promise.</span></span>
      parameters:
        - id: values
          description: <span data-ttu-id="85bdf-143">Ein Array von Zusagen.</span><span class="sxs-lookup"><span data-stu-id="85bdf-143">An array of Promises.</span></span>
          type:
            - 'office!Office.IPromiseConstructor#race~7:complex'
      typeParameters:
        - id: T1
        - id: T2
        - id: T3
        - id: T4
        - id: T5
        - id: T6
        - id: T7
        - id: T8
  - uid: 'office!Office.IPromiseConstructor#race:member(4)'
    summary: '<span data-ttu-id="85bdf-144">Erstellt eine Zusage, die aufgelöst oder abgelehnt wird, wenn eine der bereitgestellten Versprechungen aufgelöst oder abgelehnt wird.</span><span class="sxs-lookup"><span data-stu-id="85bdf-144">Creates a Promise that is resolved or rejected when any of the provided Promises are resolved or rejected.</span></span>'
    name: race(values)
    fullName: race(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'race<T1, T2, T3, T4, T5, T6, T7>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>]): Promise<T1 | T2 | T3 | T4 | T5 | T6 | T7>;'
      return:
        type:
          - 'office!Office.IPromiseConstructor#race~8:complex'
        description: <span data-ttu-id="85bdf-145">Eine neue Zusage.</span><span class="sxs-lookup"><span data-stu-id="85bdf-145">A new Promise.</span></span>
      parameters:
        - id: values
          description: <span data-ttu-id="85bdf-146">Ein Array von Zusagen.</span><span class="sxs-lookup"><span data-stu-id="85bdf-146">An array of Promises.</span></span>
          type:
            - 'office!Office.IPromiseConstructor#race~9:complex'
      typeParameters:
        - id: T1
        - id: T2
        - id: T3
        - id: T4
        - id: T5
        - id: T6
        - id: T7
  - uid: 'office!Office.IPromiseConstructor#race:member(5)'
    summary: '<span data-ttu-id="85bdf-147">Erstellt eine Zusage, die aufgelöst oder abgelehnt wird, wenn eine der bereitgestellten Versprechungen aufgelöst oder abgelehnt wird.</span><span class="sxs-lookup"><span data-stu-id="85bdf-147">Creates a Promise that is resolved or rejected when any of the provided Promises are resolved or rejected.</span></span>'
    name: race(values)
    fullName: race(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'race<T1, T2, T3, T4, T5, T6>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>]): Promise<T1 | T2 | T3 | T4 | T5 | T6>;'
      return:
        type:
          - 'office!Office.IPromiseConstructor#race~10:complex'
        description: <span data-ttu-id="85bdf-148">Eine neue Zusage.</span><span class="sxs-lookup"><span data-stu-id="85bdf-148">A new Promise.</span></span>
      parameters:
        - id: values
          description: <span data-ttu-id="85bdf-149">Ein Array von Zusagen.</span><span class="sxs-lookup"><span data-stu-id="85bdf-149">An array of Promises.</span></span>
          type:
            - 'office!Office.IPromiseConstructor#race~11:complex'
      typeParameters:
        - id: T1
        - id: T2
        - id: T3
        - id: T4
        - id: T5
        - id: T6
  - uid: 'office!Office.IPromiseConstructor#race:member(6)'
    summary: '<span data-ttu-id="85bdf-150">Erstellt eine Zusage, die aufgelöst oder abgelehnt wird, wenn eine der bereitgestellten Versprechungen aufgelöst oder abgelehnt wird.</span><span class="sxs-lookup"><span data-stu-id="85bdf-150">Creates a Promise that is resolved or rejected when any of the provided Promises are resolved or rejected.</span></span>'
    name: race(values)
    fullName: race(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'race<T1, T2, T3, T4, T5>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>]): Promise<T1 | T2 | T3 | T4 | T5>;'
      return:
        type:
          - 'office!Office.IPromiseConstructor#race~12:complex'
        description: <span data-ttu-id="85bdf-151">Eine neue Zusage.</span><span class="sxs-lookup"><span data-stu-id="85bdf-151">A new Promise.</span></span>
      parameters:
        - id: values
          description: <span data-ttu-id="85bdf-152">Ein Array von Zusagen.</span><span class="sxs-lookup"><span data-stu-id="85bdf-152">An array of Promises.</span></span>
          type:
            - 'office!Office.IPromiseConstructor#race~13:complex'
      typeParameters:
        - id: T1
        - id: T2
        - id: T3
        - id: T4
        - id: T5
  - uid: 'office!Office.IPromiseConstructor#race:member(7)'
    summary: '<span data-ttu-id="85bdf-153">Erstellt eine Zusage, die aufgelöst oder abgelehnt wird, wenn eine der bereitgestellten Versprechungen aufgelöst oder abgelehnt wird.</span><span class="sxs-lookup"><span data-stu-id="85bdf-153">Creates a Promise that is resolved or rejected when any of the provided Promises are resolved or rejected.</span></span>'
    name: race(values)
    fullName: race(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'race<T1, T2, T3, T4>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>]): Promise<T1 | T2 | T3 | T4>;'
      return:
        type:
          - 'office!Office.IPromiseConstructor#race~14:complex'
        description: <span data-ttu-id="85bdf-154">Eine neue Zusage.</span><span class="sxs-lookup"><span data-stu-id="85bdf-154">A new Promise.</span></span>
      parameters:
        - id: values
          description: <span data-ttu-id="85bdf-155">Ein Array von Zusagen.</span><span class="sxs-lookup"><span data-stu-id="85bdf-155">An array of Promises.</span></span>
          type:
            - 'office!Office.IPromiseConstructor#race~15:complex'
      typeParameters:
        - id: T1
        - id: T2
        - id: T3
        - id: T4
  - uid: 'office!Office.IPromiseConstructor#race:member(8)'
    summary: '<span data-ttu-id="85bdf-156">Erstellt eine Zusage, die aufgelöst oder abgelehnt wird, wenn eine der bereitgestellten Versprechungen aufgelöst oder abgelehnt wird.</span><span class="sxs-lookup"><span data-stu-id="85bdf-156">Creates a Promise that is resolved or rejected when any of the provided Promises are resolved or rejected.</span></span>'
    name: race(values)
    fullName: race(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'race<T1, T2, T3>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>]): Promise<T1 | T2 | T3>;'
      return:
        type:
          - 'office!Office.IPromiseConstructor#race~16:complex'
        description: <span data-ttu-id="85bdf-157">Eine neue Zusage.</span><span class="sxs-lookup"><span data-stu-id="85bdf-157">A new Promise.</span></span>
      parameters:
        - id: values
          description: <span data-ttu-id="85bdf-158">Ein Array von Zusagen.</span><span class="sxs-lookup"><span data-stu-id="85bdf-158">An array of Promises.</span></span>
          type:
            - 'office!Office.IPromiseConstructor#race~17:complex'
      typeParameters:
        - id: T1
        - id: T2
        - id: T3
  - uid: 'office!Office.IPromiseConstructor#race:member(9)'
    summary: '<span data-ttu-id="85bdf-159">Erstellt eine Zusage, die aufgelöst oder abgelehnt wird, wenn eine der bereitgestellten Versprechungen aufgelöst oder abgelehnt wird.</span><span class="sxs-lookup"><span data-stu-id="85bdf-159">Creates a Promise that is resolved or rejected when any of the provided Promises are resolved or rejected.</span></span>'
    name: race(values)
    fullName: race(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'race<T1, T2>(values: [T1 | PromiseLike<T1>, T2 | PromiseLike<T2>]): Promise<T1 | T2>;'
      return:
        type:
          - 'office!Office.IPromiseConstructor#race~18:complex'
        description: <span data-ttu-id="85bdf-160">Eine neue Zusage.</span><span class="sxs-lookup"><span data-stu-id="85bdf-160">A new Promise.</span></span>
      parameters:
        - id: values
          description: <span data-ttu-id="85bdf-161">Ein Array von Zusagen.</span><span class="sxs-lookup"><span data-stu-id="85bdf-161">An array of Promises.</span></span>
          type:
            - 'office!Office.IPromiseConstructor#race~19:complex'
      typeParameters:
        - id: T1
        - id: T2
  - uid: 'office!Office.IPromiseConstructor#reject:member(1)'
    summary: <span data-ttu-id="85bdf-162">Erstellt ein neues abgelehntes Versprechen aus dem angegebenen Grund.</span><span class="sxs-lookup"><span data-stu-id="85bdf-162">Creates a new rejected promise for the provided reason.</span></span>
    name: reject(reason)
    fullName: reject(reason)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'reject(reason: any): Promise<never>;'
      return:
        type:
          - 'office!Office.IPromiseConstructor#reject~0:complex'
        description: <span data-ttu-id="85bdf-163">Eine neue abgelehnte Zusage.</span><span class="sxs-lookup"><span data-stu-id="85bdf-163">A new rejected Promise.</span></span>
      parameters:
        - id: reason
          description: '<span data-ttu-id="85bdf-164">Der Grund, warum die Zusage abgelehnt wurde.</span><span class="sxs-lookup"><span data-stu-id="85bdf-164">The reason the promise was rejected.</span></span>'
          type:
            - any
  - uid: 'office!Office.IPromiseConstructor#reject:member(2)'
    summary: <span data-ttu-id="85bdf-165">Erstellt ein neues abgelehntes Versprechen aus dem angegebenen Grund.</span><span class="sxs-lookup"><span data-stu-id="85bdf-165">Creates a new rejected promise for the provided reason.</span></span>
    name: reject(reason)
    fullName: reject(reason)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'reject<T>(reason: any): Promise<T>;'
      return:
        type:
          - 'office!Office.IPromiseConstructor#reject~1:complex'
        description: <span data-ttu-id="85bdf-166">Eine neue abgelehnte Zusage.</span><span class="sxs-lookup"><span data-stu-id="85bdf-166">A new rejected Promise.</span></span>
      parameters:
        - id: reason
          description: '<span data-ttu-id="85bdf-167">Der Grund, warum die Zusage abgelehnt wurde.</span><span class="sxs-lookup"><span data-stu-id="85bdf-167">The reason the promise was rejected.</span></span>'
          type:
            - any
      typeParameters:
        - id: T
  - uid: 'office!Office.IPromiseConstructor#resolve:member(1)'
    summary: <span data-ttu-id="85bdf-168">Erstellt eine neue aufgelöste Zusage für den bereitgestellten Wert.</span><span class="sxs-lookup"><span data-stu-id="85bdf-168">Creates a new resolved promise for the provided value.</span></span>
    name: resolve(value)
    fullName: resolve(value)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'resolve<T>(value: T | PromiseLike<T>): Promise<T>;'
      return:
        type:
          - 'office!Office.IPromiseConstructor#resolve~0:complex'
        description: '<span data-ttu-id="85bdf-169">Eine Zusage, deren interner Zustand dem bereitgestellten Versprechen entspricht.</span><span class="sxs-lookup"><span data-stu-id="85bdf-169">A promise whose internal state matches the provided promise.</span></span>'
      parameters:
        - id: value
          description: <span data-ttu-id="85bdf-170">Ein Versprechen.</span><span class="sxs-lookup"><span data-stu-id="85bdf-170">A promise.</span></span>
          type:
            - 'office!Office.IPromiseConstructor#resolve~1:complex'
      typeParameters:
        - id: T
  - uid: 'office!Office.IPromiseConstructor#resolve:member(2)'
    summary: <span data-ttu-id="85bdf-171">Erstellt eine neue aufgelöste Zusage.</span><span class="sxs-lookup"><span data-stu-id="85bdf-171">Creates a new resolved promise.</span></span>
    name: resolve()
    fullName: resolve()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'resolve(): Promise<void>;'
      return:
        type:
          - 'office!Office.IPromiseConstructor#resolve~2:complex'
        description: <span data-ttu-id="85bdf-172">Eine aufgelöste Zusage.</span><span class="sxs-lookup"><span data-stu-id="85bdf-172">A resolved promise.</span></span>
references:
  - uid: 'office!Office.IPromiseConstructor#all~0:complex'
    name: 'Promise<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]>'
    fullName: 'Promise<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]>'
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: '<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]>'
        fullName: '<[T1, T2, T3, T4, T5, T6, T7, T8, T9, T10]>'
  - uid: 'office!Office.IPromiseConstructor#all~1:complex'
    name: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>, T10 | PromiseLike<T10>]'
    fullName: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>, T10 | PromiseLike<T10>]'
    spec.typeScript:
      - name: '[T1 | '
        fullName: '[T1 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T1>, T2 | '
        fullName: '<T1>, T2 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T2>, T3 | '
        fullName: '<T2>, T3 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T3>, T4 | '
        fullName: '<T3>, T4 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T4>, T5 | '
        fullName: '<T4>, T5 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T5>, T6 | '
        fullName: '<T5>, T6 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T6>, T7 | '
        fullName: '<T6>, T7 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T7>, T8 | '
        fullName: '<T7>, T8 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T8>, T9 | '
        fullName: '<T8>, T9 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T9>, T10 | '
        fullName: '<T9>, T10 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T10>]'
        fullName: '<T10>]'
  - uid: 'office!Office.IPromiseConstructor#all~2:complex'
    name: 'Promise<T[]>'
    fullName: 'Promise<T[]>'
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: '<T[]>'
        fullName: '<T[]>'
  - uid: 'office!Office.IPromiseConstructor#all~3:complex'
    name: '(T | PromiseLike<T>)[]'
    fullName: '(T | PromiseLike<T>)[]'
    spec.typeScript:
      - name: '(T | '
        fullName: '(T | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T>)[]'
        fullName: '<T>)[]'
  - uid: 'office!Office.IPromiseConstructor#all~4:complex'
    name: 'Promise<[T1, T2, T3, T4, T5, T6, T7, T8, T9]>'
    fullName: 'Promise<[T1, T2, T3, T4, T5, T6, T7, T8, T9]>'
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: '<[T1, T2, T3, T4, T5, T6, T7, T8, T9]>'
        fullName: '<[T1, T2, T3, T4, T5, T6, T7, T8, T9]>'
  - uid: 'office!Office.IPromiseConstructor#all~5:complex'
    name: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>]'
    fullName: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>]'
    spec.typeScript:
      - name: '[T1 | '
        fullName: '[T1 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T1>, T2 | '
        fullName: '<T1>, T2 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T2>, T3 | '
        fullName: '<T2>, T3 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T3>, T4 | '
        fullName: '<T3>, T4 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T4>, T5 | '
        fullName: '<T4>, T5 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T5>, T6 | '
        fullName: '<T5>, T6 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T6>, T7 | '
        fullName: '<T6>, T7 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T7>, T8 | '
        fullName: '<T7>, T8 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T8>, T9 | '
        fullName: '<T8>, T9 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T9>]'
        fullName: '<T9>]'
  - uid: 'office!Office.IPromiseConstructor#all~6:complex'
    name: 'Promise<[T1, T2, T3, T4, T5, T6, T7, T8]>'
    fullName: 'Promise<[T1, T2, T3, T4, T5, T6, T7, T8]>'
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: '<[T1, T2, T3, T4, T5, T6, T7, T8]>'
        fullName: '<[T1, T2, T3, T4, T5, T6, T7, T8]>'
  - uid: 'office!Office.IPromiseConstructor#all~7:complex'
    name: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>]'
    fullName: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>]'
    spec.typeScript:
      - name: '[T1 | '
        fullName: '[T1 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T1>, T2 | '
        fullName: '<T1>, T2 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T2>, T3 | '
        fullName: '<T2>, T3 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T3>, T4 | '
        fullName: '<T3>, T4 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T4>, T5 | '
        fullName: '<T4>, T5 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T5>, T6 | '
        fullName: '<T5>, T6 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T6>, T7 | '
        fullName: '<T6>, T7 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T7>, T8 | '
        fullName: '<T7>, T8 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T8>]'
        fullName: '<T8>]'
  - uid: 'office!Office.IPromiseConstructor#all~8:complex'
    name: 'Promise<[T1, T2, T3, T4, T5, T6, T7]>'
    fullName: 'Promise<[T1, T2, T3, T4, T5, T6, T7]>'
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: '<[T1, T2, T3, T4, T5, T6, T7]>'
        fullName: '<[T1, T2, T3, T4, T5, T6, T7]>'
  - uid: 'office!Office.IPromiseConstructor#all~9:complex'
    name: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>]'
    fullName: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>]'
    spec.typeScript:
      - name: '[T1 | '
        fullName: '[T1 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T1>, T2 | '
        fullName: '<T1>, T2 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T2>, T3 | '
        fullName: '<T2>, T3 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T3>, T4 | '
        fullName: '<T3>, T4 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T4>, T5 | '
        fullName: '<T4>, T5 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T5>, T6 | '
        fullName: '<T5>, T6 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T6>, T7 | '
        fullName: '<T6>, T7 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T7>]'
        fullName: '<T7>]'
  - uid: 'office!Office.IPromiseConstructor#all~10:complex'
    name: 'Promise<[T1, T2, T3, T4, T5, T6]>'
    fullName: 'Promise<[T1, T2, T3, T4, T5, T6]>'
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: '<[T1, T2, T3, T4, T5, T6]>'
        fullName: '<[T1, T2, T3, T4, T5, T6]>'
  - uid: 'office!Office.IPromiseConstructor#all~11:complex'
    name: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>]'
    fullName: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>]'
    spec.typeScript:
      - name: '[T1 | '
        fullName: '[T1 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T1>, T2 | '
        fullName: '<T1>, T2 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T2>, T3 | '
        fullName: '<T2>, T3 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T3>, T4 | '
        fullName: '<T3>, T4 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T4>, T5 | '
        fullName: '<T4>, T5 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T5>, T6 | '
        fullName: '<T5>, T6 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T6>]'
        fullName: '<T6>]'
  - uid: 'office!Office.IPromiseConstructor#all~12:complex'
    name: 'Promise<[T1, T2, T3, T4, T5]>'
    fullName: 'Promise<[T1, T2, T3, T4, T5]>'
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: '<[T1, T2, T3, T4, T5]>'
        fullName: '<[T1, T2, T3, T4, T5]>'
  - uid: 'office!Office.IPromiseConstructor#all~13:complex'
    name: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>]'
    fullName: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>]'
    spec.typeScript:
      - name: '[T1 | '
        fullName: '[T1 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T1>, T2 | '
        fullName: '<T1>, T2 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T2>, T3 | '
        fullName: '<T2>, T3 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T3>, T4 | '
        fullName: '<T3>, T4 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T4>, T5 | '
        fullName: '<T4>, T5 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T5>]'
        fullName: '<T5>]'
  - uid: 'office!Office.IPromiseConstructor#all~14:complex'
    name: 'Promise<[T1, T2, T3, T4]>'
    fullName: 'Promise<[T1, T2, T3, T4]>'
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: '<[T1, T2, T3, T4]>'
        fullName: '<[T1, T2, T3, T4]>'
  - uid: 'office!Office.IPromiseConstructor#all~15:complex'
    name: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>]'
    fullName: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>]'
    spec.typeScript:
      - name: '[T1 | '
        fullName: '[T1 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T1>, T2 | '
        fullName: '<T1>, T2 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T2>, T3 | '
        fullName: '<T2>, T3 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T3>, T4 | '
        fullName: '<T3>, T4 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T4>]'
        fullName: '<T4>]'
  - uid: 'office!Office.IPromiseConstructor#all~16:complex'
    name: 'Promise<[T1, T2, T3]>'
    fullName: 'Promise<[T1, T2, T3]>'
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: '<[T1, T2, T3]>'
        fullName: '<[T1, T2, T3]>'
  - uid: 'office!Office.IPromiseConstructor#all~17:complex'
    name: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>]'
    fullName: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>]'
    spec.typeScript:
      - name: '[T1 | '
        fullName: '[T1 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T1>, T2 | '
        fullName: '<T1>, T2 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T2>, T3 | '
        fullName: '<T2>, T3 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T3>]'
        fullName: '<T3>]'
  - uid: 'office!Office.IPromiseConstructor#all~18:complex'
    name: 'Promise<[T1, T2]>'
    fullName: 'Promise<[T1, T2]>'
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: '<[T1, T2]>'
        fullName: '<[T1, T2]>'
  - uid: 'office!Office.IPromiseConstructor#all~19:complex'
    name: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>]'
    fullName: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>]'
    spec.typeScript:
      - name: '[T1 | '
        fullName: '[T1 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T1>, T2 | '
        fullName: '<T1>, T2 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T2>]'
        fullName: '<T2>]'
  - uid: 'office!Office.IPromiseConstructor#prototype~0:complex'
    name: Promise<any>
    fullName: Promise<any>
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <any>
        fullName: <any>
  - uid: 'office!Office.IPromiseConstructor#race~0:complex'
    name: Promise<T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9 | T10>
    fullName: Promise<T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9 | T10>
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9 | T10>
        fullName: <T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9 | T10>
  - uid: 'office!Office.IPromiseConstructor#race~1:complex'
    name: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>, T10 | PromiseLike<T10>]'
    fullName: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>, T10 | PromiseLike<T10>]'
    spec.typeScript:
      - name: '[T1 | '
        fullName: '[T1 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T1>, T2 | '
        fullName: '<T1>, T2 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T2>, T3 | '
        fullName: '<T2>, T3 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T3>, T4 | '
        fullName: '<T3>, T4 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T4>, T5 | '
        fullName: '<T4>, T5 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T5>, T6 | '
        fullName: '<T5>, T6 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T6>, T7 | '
        fullName: '<T6>, T7 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T7>, T8 | '
        fullName: '<T7>, T8 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T8>, T9 | '
        fullName: '<T8>, T9 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T9>, T10 | '
        fullName: '<T9>, T10 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T10>]'
        fullName: '<T10>]'
  - uid: 'office!Office.IPromiseConstructor#race~2:complex'
    name: Promise<T>
    fullName: Promise<T>
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <T>
        fullName: <T>
  - uid: 'office!Office.IPromiseConstructor#race~3:complex'
    name: '(T | PromiseLike<T>)[]'
    fullName: '(T | PromiseLike<T>)[]'
    spec.typeScript:
      - name: '(T | '
        fullName: '(T | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T>)[]'
        fullName: '<T>)[]'
  - uid: 'office!Office.IPromiseConstructor#race~4:complex'
    name: Promise<T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>
    fullName: Promise<T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>
        fullName: <T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8 | T9>
  - uid: 'office!Office.IPromiseConstructor#race~5:complex'
    name: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>]'
    fullName: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>, T9 | PromiseLike<T9>]'
    spec.typeScript:
      - name: '[T1 | '
        fullName: '[T1 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T1>, T2 | '
        fullName: '<T1>, T2 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T2>, T3 | '
        fullName: '<T2>, T3 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T3>, T4 | '
        fullName: '<T3>, T4 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T4>, T5 | '
        fullName: '<T4>, T5 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T5>, T6 | '
        fullName: '<T5>, T6 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T6>, T7 | '
        fullName: '<T6>, T7 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T7>, T8 | '
        fullName: '<T7>, T8 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T8>, T9 | '
        fullName: '<T8>, T9 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T9>]'
        fullName: '<T9>]'
  - uid: 'office!Office.IPromiseConstructor#race~6:complex'
    name: Promise<T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8>
    fullName: Promise<T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8>
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8>
        fullName: <T1 | T2 | T3 | T4 | T5 | T6 | T7 | T8>
  - uid: 'office!Office.IPromiseConstructor#race~7:complex'
    name: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>]'
    fullName: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>, T8 | PromiseLike<T8>]'
    spec.typeScript:
      - name: '[T1 | '
        fullName: '[T1 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T1>, T2 | '
        fullName: '<T1>, T2 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T2>, T3 | '
        fullName: '<T2>, T3 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T3>, T4 | '
        fullName: '<T3>, T4 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T4>, T5 | '
        fullName: '<T4>, T5 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T5>, T6 | '
        fullName: '<T5>, T6 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T6>, T7 | '
        fullName: '<T6>, T7 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T7>, T8 | '
        fullName: '<T7>, T8 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T8>]'
        fullName: '<T8>]'
  - uid: 'office!Office.IPromiseConstructor#race~8:complex'
    name: Promise<T1 | T2 | T3 | T4 | T5 | T6 | T7>
    fullName: Promise<T1 | T2 | T3 | T4 | T5 | T6 | T7>
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <T1 | T2 | T3 | T4 | T5 | T6 | T7>
        fullName: <T1 | T2 | T3 | T4 | T5 | T6 | T7>
  - uid: 'office!Office.IPromiseConstructor#race~9:complex'
    name: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>]'
    fullName: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>, T7 | PromiseLike<T7>]'
    spec.typeScript:
      - name: '[T1 | '
        fullName: '[T1 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T1>, T2 | '
        fullName: '<T1>, T2 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T2>, T3 | '
        fullName: '<T2>, T3 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T3>, T4 | '
        fullName: '<T3>, T4 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T4>, T5 | '
        fullName: '<T4>, T5 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T5>, T6 | '
        fullName: '<T5>, T6 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T6>, T7 | '
        fullName: '<T6>, T7 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T7>]'
        fullName: '<T7>]'
  - uid: 'office!Office.IPromiseConstructor#race~10:complex'
    name: Promise<T1 | T2 | T3 | T4 | T5 | T6>
    fullName: Promise<T1 | T2 | T3 | T4 | T5 | T6>
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <T1 | T2 | T3 | T4 | T5 | T6>
        fullName: <T1 | T2 | T3 | T4 | T5 | T6>
  - uid: 'office!Office.IPromiseConstructor#race~11:complex'
    name: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>]'
    fullName: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>, T6 | PromiseLike<T6>]'
    spec.typeScript:
      - name: '[T1 | '
        fullName: '[T1 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T1>, T2 | '
        fullName: '<T1>, T2 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T2>, T3 | '
        fullName: '<T2>, T3 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T3>, T4 | '
        fullName: '<T3>, T4 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T4>, T5 | '
        fullName: '<T4>, T5 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T5>, T6 | '
        fullName: '<T5>, T6 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T6>]'
        fullName: '<T6>]'
  - uid: 'office!Office.IPromiseConstructor#race~12:complex'
    name: Promise<T1 | T2 | T3 | T4 | T5>
    fullName: Promise<T1 | T2 | T3 | T4 | T5>
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <T1 | T2 | T3 | T4 | T5>
        fullName: <T1 | T2 | T3 | T4 | T5>
  - uid: 'office!Office.IPromiseConstructor#race~13:complex'
    name: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>]'
    fullName: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>, T5 | PromiseLike<T5>]'
    spec.typeScript:
      - name: '[T1 | '
        fullName: '[T1 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T1>, T2 | '
        fullName: '<T1>, T2 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T2>, T3 | '
        fullName: '<T2>, T3 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T3>, T4 | '
        fullName: '<T3>, T4 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T4>, T5 | '
        fullName: '<T4>, T5 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T5>]'
        fullName: '<T5>]'
  - uid: 'office!Office.IPromiseConstructor#race~14:complex'
    name: Promise<T1 | T2 | T3 | T4>
    fullName: Promise<T1 | T2 | T3 | T4>
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <T1 | T2 | T3 | T4>
        fullName: <T1 | T2 | T3 | T4>
  - uid: 'office!Office.IPromiseConstructor#race~15:complex'
    name: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>]'
    fullName: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>, T4 | PromiseLike<T4>]'
    spec.typeScript:
      - name: '[T1 | '
        fullName: '[T1 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T1>, T2 | '
        fullName: '<T1>, T2 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T2>, T3 | '
        fullName: '<T2>, T3 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T3>, T4 | '
        fullName: '<T3>, T4 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T4>]'
        fullName: '<T4>]'
  - uid: 'office!Office.IPromiseConstructor#race~16:complex'
    name: Promise<T1 | T2 | T3>
    fullName: Promise<T1 | T2 | T3>
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <T1 | T2 | T3>
        fullName: <T1 | T2 | T3>
  - uid: 'office!Office.IPromiseConstructor#race~17:complex'
    name: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>]'
    fullName: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>, T3 | PromiseLike<T3>]'
    spec.typeScript:
      - name: '[T1 | '
        fullName: '[T1 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T1>, T2 | '
        fullName: '<T1>, T2 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T2>, T3 | '
        fullName: '<T2>, T3 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T3>]'
        fullName: '<T3>]'
  - uid: 'office!Office.IPromiseConstructor#race~18:complex'
    name: Promise<T1 | T2>
    fullName: Promise<T1 | T2>
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <T1 | T2>
        fullName: <T1 | T2>
  - uid: 'office!Office.IPromiseConstructor#race~19:complex'
    name: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>]'
    fullName: '[T1 | PromiseLike<T1>, T2 | PromiseLike<T2>]'
    spec.typeScript:
      - name: '[T1 | '
        fullName: '[T1 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T1>, T2 | '
        fullName: '<T1>, T2 | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: '<T2>]'
        fullName: '<T2>]'
  - uid: 'office!Office.IPromiseConstructor#reject~0:complex'
    name: Promise<never>
    fullName: Promise<never>
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <never>
        fullName: <never>
  - uid: 'office!Office.IPromiseConstructor#reject~1:complex'
    name: Promise<T>
    fullName: Promise<T>
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <T>
        fullName: <T>
  - uid: 'office!Office.IPromiseConstructor#resolve~0:complex'
    name: Promise<T>
    fullName: Promise<T>
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <T>
        fullName: <T>
  - uid: 'office!Office.IPromiseConstructor#resolve~1:complex'
    name: T | PromiseLike<T>
    fullName: T | PromiseLike<T>
    spec.typeScript:
      - name: 'T | '
        fullName: 'T | '
      - uid: '!PromiseLike:interface'
        name: PromiseLike
        fullName: PromiseLike
      - name: <T>
        fullName: <T>
  - uid: 'office!Office.IPromiseConstructor#resolve~2:complex'
    name: Promise<void>
    fullName: Promise<void>
    spec.typeScript:
      - uid: '!Promise:interface'
        name: Promise
        fullName: Promise
      - name: <void>
        fullName: <void>