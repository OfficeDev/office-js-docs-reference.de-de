### YamlMime:UniversalReference
ms.openlocfilehash: c7c3114e09d22c006257e8a073b8a70cdcbef249
ms.sourcegitcommit: a424c9bfe5da422fca04bbfcf70f1c869b210938
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 10/10/2018
ms.locfileid: "25494113"
items:
- uid: office.Office.TableData
  summary: Stellt die Daten in einer Tabelle oder einer [Office.TableBinding](xref:office.Office.TableBinding)<!-- -->.
  remarks: >-
    <table><tr><td>Hosts</td><td>Excel, Word</td></tr>


    <tr><td>Anforderungssätze</td><td>TableBindings</td></tr></table>
  name: Office.TableData
  fullName: office.Office.TableData
  langs:
  - typeScript
  type: class
  package: office
  children:
  - office.Office.TableData.constructor
  - office.Office.TableData.headers
  - office.Office.TableData.rows
- uid: office.Office.TableData.constructor
  summary: Erstellt eine neue Instanz der [TableData](xref:office.Office.TableData) -Klasse
  name: constructor(rows, headers)
  fullName: office.Office.TableData.constructor
  langs:
  - typeScript
  type: constructor
  syntax:
    content: 'constructor(rows: any[][], headers: any[]);'
    parameters:
    - id: rows
      description: ''
      type:
      - any[][]
    - id: headers
      description: ''
      type:
      - any[]
- uid: office.Office.TableData.headers
  summary: Ruft die Kopfzeilen der Tabelle ab oder legt sie fest.
  remarks: >-
    <table><tr><td>Hosts</td><td>Excel, Word</td></tr>


    <tr><td>Anforderungssätze</td><td>TableBindings</td></tr></table>


    Zum Festlegen von Headern müssen Sie ein Array von Arrays angeben, die die Struktur der Tabelle entspricht. Beispielsweise Kopfzeilen für eine zweispaltige Tabelle angeben würde festlegen die Header-Eigenschaft auf \[ \['header1', 'header2'\]\].


    Wenn Sie angeben Null für die Headereigenschaft (oder die-Eigenschaft leer lassen, wenn Sie ein TableData-Objekt erstellen), treten die folgenden Ergebnisse beim Ausführen des Codes:


    - Beim Einfügen einer neuen Tabelle werden die Standardkopfzeilen erstellt.


    - Beim Überschreiben oder Aktualisieren einer vorhandenen Tabelle bleiben die vorhandenen Kopfzeilen unverändert.

    #### <a name="examples"></a>Beispiele


    ```javascript

    // The following example creates a single-column table with a header and three rows.

    function createTableData() {
        var tableData = new Office.TableData();
        tableData.headers = [['header1']];
        tableData.rows = [['row1'], ['row2'], ['row3']];
        return tableData;
    }

    ```
  name: headers
  fullName: office.Office.TableData.headers
  langs:
  - typeScript
  type: property
  syntax:
    content: 'headers: any[];'
    return:
      type:
      - any[]
- uid: office.Office.TableData.rows
  summary: Ruft die Zeilen in einer Tabelle ab oder legt diese fest. Gibt ein Array von Arrays mit den Daten in der Tabelle. Gibt ein leeres Array zurück, wenn keine Zeilen vorhanden sind.
  remarks: >-
    <table><tr><td>Hosts</td><td>Excel, Word</td></tr>


    <tr><td>Anforderungssätze</td><td>TableBindings</td></tr></table>


    Um Zeilen abzugeben, müssen Sie ein Array von Arrays angeben, das der Struktur der Tabelle entspricht. Beispielsweise an zwei Zeilen mit String-Werten in einer zweispaltige Tabelle würde festlegen die Rows-Eigenschaft auf \[ \['a', 'b'\], \['c','d '\]\].


    Geben Sie für die Rows-Eigenschaft null (oder die-Eigenschaft leer lassen, wenn Sie ein TableData-Objekt erstellen), treten die folgenden Ergebnisse beim Ausführen des Codes:


    - Beim Einfügen einer neuen Tabelle wird eine leere Zeile eingefügt.


    - Beim Überschreiben oder Aktualisieren einer vorhandenen Tabelle werden die vorhandenen Zeilen nicht geändert.

    #### <a name="examples"></a>Examples


    ```javascript

    // The following example creates a single-column table with a header and three rows.

    function createTableData() {
        var tableData = new Office.TableData();
        tableData.headers = [['header1']];
        tableData.rows = [['row1'], ['row2'], ['row3']];
        return tableData;
    }

    ```
  name: rows
  fullName: office.Office.TableData.rows
  langs:
  - typeScript
  type: property
  syntax:
    content: 'rows: any[][];'
    return:
      type:
      - any[][]
