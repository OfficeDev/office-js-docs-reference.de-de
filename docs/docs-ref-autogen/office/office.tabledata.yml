### YamlMime:UniversalReference
ms.openlocfilehash: d2c3c4e5cd23cd10b207f099ad28eac303336b3d
ms.sourcegitcommit: b0b614f5315ab2e5c1e0ea51c687498f87684a07
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/15/2019
ms.locfileid: "30054429"
items:
- uid: office.Office.TableData
  summary: Stellt die Daten in einer Tabelle oder einer [Office. Table Binding](xref:office.Office.TableBinding)<!-- -->dar.
  remarks: <table> <tr><td>Hosts</td><td>Excel, Word</td></tr> <tr><td>Anforderungs Sätze</td><td>TableBindings</td></tr> </table>
  name: Office.TableData
  fullName: Office.TableData
  langs:
  - typeScript
  type: class
  package: office
  children:
  - office.Office.TableData.(constructor)
  - office.Office.TableData.(constructor)_1
  - office.Office.TableData.headers
  - office.Office.TableData.rows
- uid: office.Office.TableData.(constructor)
  name: (constructor)(rows, headers)
  fullName: (constructor)(rows, headers)
  langs:
  - typeScript
  type: constructor
  syntax:
    content: 'constructor(rows: any[][], headers: any[]);'
    parameters:
    - id: rows
      description: ''
      type:
      - any[][]
    - id: headers
      description: ''
      type:
      - any[]
- uid: office.Office.TableData.(constructor)_1
  name: (constructor)()
  fullName: (constructor)()
  langs:
  - typeScript
  type: constructor
  syntax:
    content: constructor();
- uid: office.Office.TableData.headers
  summary: Ruft die Kopfzeilen der Tabelle ab oder legt sie fest.
  remarks: >-
    <table> <tr><td>Hosts</td><td>Excel, Word</td></tr> <tr><td>Anforderungs Sätze</td><td>TableBindings</td></tr> </table>


    Um Kopfzeilen anzugeben, müssen Sie ein Array von Arrays angeben, das der Struktur der Tabelle entspricht. Wenn Sie beispielsweise Kopfzeilen für eine Tabelle mit zwei Spalten angeben möchten, legen Sie die Header \[ \[-Eigenschaft auf "Header1",\]\]"header2" fest.


    Wenn Sie NULL für die Headers-Eigenschaft angeben (oder die Eigenschaft beim Erstellen eines Datenobjekts leer lassen), werden beim Ausführen des Codes die folgenden Ergebnisse erzielt:


    - Beim Einfügen einer neuen Tabelle werden die Standardkopfzeilen erstellt.


    - Beim Überschreiben oder Aktualisieren einer vorhandenen Tabelle bleiben die vorhandenen Kopfzeilen unverändert.

    #### <a name="examples"></a>Beispiele


    ```javascript

    // The following example creates a single-column table with a header and three rows.

    function createTableData() {
        var tableData = new Office.TableData();
        tableData.headers = [['header1']];
        tableData.rows = [['row1'], ['row2'], ['row3']];
        return tableData;
    }

    ```
  name: headers
  fullName: headers
  langs:
  - typeScript
  type: property
  syntax:
    content: 'headers: any[];'
    return:
      type:
      - any[]
- uid: office.Office.TableData.rows
  summary: Ruft die Zeilen in einer Tabelle ab oder legt diese fest. Gibt ein Array von Arrays zurück, das die Daten in der Tabelle enthält. Gibt ein leeres Array zurück, wenn keine Zeilen vorhanden sind.
  remarks: >-
    <table> <tr><td>Hosts</td><td>Excel, Word</td></tr> <tr><td>Anforderungs Sätze</td><td>TableBindings</td></tr> </table>


    Um Zeilen abzugeben, müssen Sie ein Array von Arrays angeben, das der Struktur der Tabelle entspricht. Wenn Sie beispielsweise zwei Zeilen mit Zeichenfolgenwerten in einer Tabelle mit zwei Spalten angeben möchten, legen Sie die Rows \[ \[-Eigenschaft auf ' a ',\]' \[b ', ' c '\]\], 'd ' fest.


    Wenn Sie NULL für die Rows-Eigenschaft angeben (oder die Eigenschaft beim Erstellen eines Datenobjekts leer lassen), werden beim Ausführen des Codes die folgenden Ergebnisse erzielt:


    - Beim Einfügen einer neuen Tabelle wird eine leere Zeile eingefügt.


    - Beim Überschreiben oder Aktualisieren einer vorhandenen Tabelle werden die vorhandenen Zeilen nicht geändert.

    #### <a name="examples"></a>Examples


    ```javascript

    // The following example creates a single-column table with a header and three rows.

    function createTableData() {
        var tableData = new Office.TableData();
        tableData.headers = [['header1']];
        tableData.rows = [['row1'], ['row2'], ['row3']];
        return tableData;
    }

    ```
  name: rows
  fullName: rows
  langs:
  - typeScript
  type: property
  syntax:
    content: 'rows: any[][];'
    return:
      type:
      - any[][]
