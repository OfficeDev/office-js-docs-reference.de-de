### YamlMime:UniversalReference
items:
  - uid: Outlook_1_2.Office.Time
    summary: |-
      Das Time-Objekt wird als Start-oder End-Eigenschaft eines Termins im Verfassenmodus zurückgegeben.

      \[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: '<table> <tr><td>[Mindestberechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Verfassen</td></tr> </table>'
    name: Office.Time
    fullName: Office.Time
    langs:
      - typeScript
    type: interface
    package: Outlook_1_2
    children:
      - Outlook_1_2.Office.Time.getAsync
      - Outlook_1_2.Office.Time.getAsync_1
      - Outlook_1_2.Office.Time.setAsync
      - Outlook_1_2.Office.Time.setAsync_1
  - uid: Outlook_1_2.Office.Time.getAsync
    summary: |-
      Ruft die Start- oder Endzeit eines Termins ab.

      Datum und Uhrzeit werden als Date-Objekt in der asyncResult. Value-Eigenschaft bereitgestellt. Der Wert wird in UTC (Coordinated Universal Time) angegeben. Mithilfe der convertToLocalClientTime-Methode können Sie die UTC-Zeit in den lokalen Client konvertieren.

      \[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: '<table> <tr><td>[Mindestberechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Verfassen</td></tr> </table>'
    name: 'getAsync(options, callback)'
    fullName: 'getAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<Date>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: 'Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält. AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: 'Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen. Die `value` Eigenschaft des Ergebnisses ist ein Date-Objekt.'
          type:
            - '(asyncResult: Office.AsyncResult<Date>) => void'
  - uid: Outlook_1_2.Office.Time.getAsync_1
    summary: |-
      Ruft die Start- oder Endzeit eines Termins ab.

      Datum und Uhrzeit werden als Date-Objekt in der asyncResult. Value-Eigenschaft bereitgestellt. Der Wert wird in UTC (Coordinated Universal Time) angegeben. Mithilfe der convertToLocalClientTime-Methode können Sie die UTC-Zeit in den lokalen Client konvertieren.

      \[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      <table> <tr><td>[Mindestberechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadItem</td></tr> <tr><td>[Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Verfassen</td></tr> </table>

      #### <a name="examples"></a>Beispiele

      ```javascript
      Office.context.mailbox.item.start.getAsync(function (asyncResult) {
          if (asyncResult.status === "failed") {
              console.log("Action failed with error: " + asyncResult.error.message);
          }
          else {
              console.log("Start date and time: " + asyncResult.value);
          }
      });
      ```
    name: getAsync(callback)
    fullName: getAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(callback: (asyncResult: Office.AsyncResult<Date>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: 'Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen. Die `value` Eigenschaft des Ergebnisses ist ein Date-Objekt.'
          type:
            - '(asyncResult: Office.AsyncResult<Date>) => void'
  - uid: Outlook_1_2.Office.Time.setAsync
    summary: |-
      Legt die Start- oder Endzeit eines Termins fest.

      Wenn die setAsync-Methode für die Start-Eigenschaft aufgerufen wird, wird die End-Eigenschaft angepasst, um die Dauer des Termins wie zuvor festzulegen. Wenn die setAsync-Methode für die End-Eigenschaft aufgerufen wird, wird die Dauer des Termins auf die neue Endzeit verlängert.

      Die Uhrzeit muss in UTC liegen. Sie können die richtige UTC-Zeit mithilfe der convertToUtcClientTime-Methode abrufen.

      \[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: |-
      <table> <tr><td>[Mindestberechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr> <tr><td>[Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Verfassen</td></tr> <tr><td>Fehler</td><td>InvalidEndTime – die Endzeit des Termins liegt vor der Startzeit des Termins.</td></tr> </table>

      #### <a name="examples"></a>Beispiele

      ```javascript
      var startTime = new Date("3/14/2015");
      var options = {
          // Pass information that can be used in the callback.
          asyncContext: {verb: "Set"}
      };
      Office.context.mailbox.item.start.setAsync(startTime, options, function(result) {
          if (result.error) {
              console.debug(result.error);
          } else {
              // Access the asyncContext that was passed to the setAsync function.
              console.debug("Start Time " + result.asyncContext.verb);
          }
      });
      ```
    name: 'setAsync(dateTime, options, callback)'
    fullName: 'setAsync(dateTime, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAsync(dateTime: Date, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: dateTime
          description: Ein Datum/Uhrzeitobjekt in koordinierter Weltzeit (UTC).
          type:
            - Date
        - id: options
          description: 'Optional. Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält. AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: 'Optional. Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen. Wenn das Festlegen von Datum und Uhrzeit fehlschlägt, enthält die asyncResult. Error-Eigenschaft einen Fehlercode.'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: Outlook_1_2.Office.Time.setAsync_1
    summary: |-
      Legt die Start- oder Endzeit eines Termins fest.

      Wenn die setAsync-Methode für die Start-Eigenschaft aufgerufen wird, wird die End-Eigenschaft angepasst, um die Dauer des Termins wie zuvor festzulegen. Wenn die setAsync-Methode für die End-Eigenschaft aufgerufen wird, wird die Dauer des Termins auf die neue Endzeit verlängert.

      Die Uhrzeit muss in UTC liegen. Sie können die richtige UTC-Zeit mithilfe der convertToUtcClientTime-Methode abrufen.

      \[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
    remarks: '<table> <tr><td>[Mindestberechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)</td><td>ReadWriteItem</td></tr> <tr><td>[Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)</td><td>Verfassen</td></tr> <tr><td>Fehler</td><td>InvalidEndTime – die Endzeit des Termins liegt vor der Startzeit des Termins.</td></tr> </table>'
    name: 'setAsync(dateTime, callback)'
    fullName: 'setAsync(dateTime, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAsync(dateTime: Date, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: dateTime
          description: Ein Datum/Uhrzeitobjekt in koordinierter Weltzeit (UTC).
          type:
            - Date
        - id: callback
          description: 'Optional. Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen. Wenn das Festlegen von Datum und Uhrzeit fehlschlägt, enthält die asyncResult. Error-Eigenschaft einen Fehlercode.'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'