### YamlMime:UniversalReference
items:
  - uid: 'outlook!Office.Recipients:interface'
    summary: '<span data-ttu-id="cc626-101">\[[API-Gruppe: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cc626-101">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>'
    remarks: |-
      <span data-ttu-id="cc626-102">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="cc626-102">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="cc626-103">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Verfassen</span><span class="sxs-lookup"><span data-stu-id="cc626-103">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>
    name: Office.Recipients
    fullName: Office.Recipients
    langs:
      - typeScript
    type: interface
    package: outlook!
    children:
      - 'outlook!Office.Recipients#addAsync:member(1)'
      - 'outlook!Office.Recipients#addAsync:member(2)'
      - 'outlook!Office.Recipients#getAsync:member(1)'
      - 'outlook!Office.Recipients#getAsync:member(2)'
      - 'outlook!Office.Recipients#setAsync:member(1)'
      - 'outlook!Office.Recipients#setAsync:member(2)'
  - uid: 'outlook!Office.Recipients#addAsync:member(1)'
    summary: |-
      <span data-ttu-id="cc626-104">Fügt einen Liste der Empfänger den vorhandenen Empfängern für einen Termin oder eine Nachricht hinzu.</span><span class="sxs-lookup"><span data-stu-id="cc626-104">Adds a recipient list to the existing recipients for an appointment or message.</span></span>

      <span data-ttu-id="cc626-105">Der Recipients-Parameter kann ein Array von einem der folgenden sein:</span><span class="sxs-lookup"><span data-stu-id="cc626-105">The recipients parameter can be an array of one of the following:</span></span>

      - <span data-ttu-id="cc626-106">Zeichenfolgen mit SMTP-E-Mail-Adressen</span><span class="sxs-lookup"><span data-stu-id="cc626-106">Strings containing SMTP email addresses</span></span>

      - <span data-ttu-id="cc626-107">EmailUser-Objekte</span><span class="sxs-lookup"><span data-stu-id="cc626-107">EmailUser objects</span></span>

      - <span data-ttu-id="cc626-108">EmailAddressDetails-Objekte</span><span class="sxs-lookup"><span data-stu-id="cc626-108">EmailAddressDetails objects</span></span>

      <span data-ttu-id="cc626-109">\[[API-Gruppe: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cc626-109">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="cc626-110">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="cc626-110">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="cc626-111">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Verfassen</span><span class="sxs-lookup"><span data-stu-id="cc626-111">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>

      <span data-ttu-id="cc626-112">**Fehler**:</span><span class="sxs-lookup"><span data-stu-id="cc626-112">**Errors**:</span></span>

      - <span data-ttu-id="cc626-113">NumberOfRecipientsExceeded: die Anzahl der Empfänger übersteigt 100 Einträge.</span><span class="sxs-lookup"><span data-stu-id="cc626-113">NumberOfRecipientsExceeded: The number of recipients exceeded 100 entries.</span></span>
    name: 'addAsync(recipients, options, callback)'
    fullName: 'addAsync(recipients, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addAsync(recipients: (string | EmailUser | EmailAddressDetails)[], options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: recipients
          description: '<span data-ttu-id="cc626-114">Die Empfänger, die der Empfängerliste hinzugefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="cc626-114">The recipients to add to the recipients list.</span></span>'
          type:
            - 'outlook!Office.Recipients#addAsync~0:complex'
        - id: options
          description: '<span data-ttu-id="cc626-115">Optional.</span><span class="sxs-lookup"><span data-stu-id="cc626-115">Optional.</span></span> <span data-ttu-id="cc626-116">Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält.</span><span class="sxs-lookup"><span data-stu-id="cc626-116">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="cc626-117">AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.</span><span class="sxs-lookup"><span data-stu-id="cc626-117">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="cc626-118">Optional.</span><span class="sxs-lookup"><span data-stu-id="cc626-118">Optional.</span></span> <span data-ttu-id="cc626-119">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzigen Parameter vom Typ Office. AsyncResult aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="cc626-119">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="cc626-120">Wenn das Hinzufügen der Empfänger fehlschlägt, enthält die AsyncResult. Error-Eigenschaft einen Fehlercode.</span><span class="sxs-lookup"><span data-stu-id="cc626-120">If adding the recipients fails, the asyncResult.error property will contain an error code.</span></span>'
          type:
            - 'outlook!Office.Recipients#addAsync~1:complex'
  - uid: 'outlook!Office.Recipients#addAsync:member(2)'
    summary: |-
      <span data-ttu-id="cc626-121">Fügt einen Liste der Empfänger den vorhandenen Empfängern für einen Termin oder eine Nachricht hinzu.</span><span class="sxs-lookup"><span data-stu-id="cc626-121">Adds a recipient list to the existing recipients for an appointment or message.</span></span>

      <span data-ttu-id="cc626-122">Der Recipients-Parameter kann ein Array von einem der folgenden sein:</span><span class="sxs-lookup"><span data-stu-id="cc626-122">The recipients parameter can be an array of one of the following:</span></span>

      - <span data-ttu-id="cc626-123">Zeichenfolgen mit SMTP-E-Mail-Adressen</span><span class="sxs-lookup"><span data-stu-id="cc626-123">Strings containing SMTP email addresses</span></span>

      - <span data-ttu-id="cc626-124">[Office. EmailUser-](xref:outlook!Office.EmailUser:interface) Objekte</span><span class="sxs-lookup"><span data-stu-id="cc626-124">[Office.EmailUser](xref:outlook!Office.EmailUser:interface) objects</span></span>

      - <span data-ttu-id="cc626-125">[Office. EmailAddressDetails-](xref:outlook!Office.EmailAddressDetails:interface) Objekte</span><span class="sxs-lookup"><span data-stu-id="cc626-125">[Office.EmailAddressDetails](xref:outlook!Office.EmailAddressDetails:interface) objects</span></span>

      <span data-ttu-id="cc626-126">\[[API-Gruppe: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cc626-126">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="cc626-127">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="cc626-127">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="cc626-128">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Verfassen</span><span class="sxs-lookup"><span data-stu-id="cc626-128">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>

      <span data-ttu-id="cc626-129">**Fehler**:</span><span class="sxs-lookup"><span data-stu-id="cc626-129">**Errors**:</span></span>

      - <span data-ttu-id="cc626-130">NumberOfRecipientsExceeded: die Anzahl der Empfänger übersteigt 100 Einträge.</span><span class="sxs-lookup"><span data-stu-id="cc626-130">NumberOfRecipientsExceeded: The number of recipients exceeded 100 entries.</span></span>

      #### <a name="examples"></a><span data-ttu-id="cc626-131">Beispiele</span><span class="sxs-lookup"><span data-stu-id="cc626-131">Examples</span></span>

      ```javascript
      // The following example creates an array of EmailUser objects
      // and adds them to the To recipients of the message.
      var newRecipients = [
          {
              "displayName": "Allie Bellew",
              "emailAddress": "allieb@contoso.com"
          },
          {
              "displayName": "Alex Darrow",
              "emailAddress": "alexd@contoso.com"
          }
      ];

      Office.context.mailbox.item.to.addAsync(newRecipients, function(result) {
          if (result.error) {
              console.log(result.error);
          } else {
              console.log("Recipients added");
          }
      });
      ```
    name: 'addAsync(recipients, callback)'
    fullName: 'addAsync(recipients, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addAsync(recipients: (string | EmailUser | EmailAddressDetails)[], callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: recipients
          description: '<span data-ttu-id="cc626-132">Die Empfänger, die der Empfängerliste hinzugefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="cc626-132">The recipients to add to the recipients list.</span></span>'
          type:
            - 'outlook!Office.Recipients#addAsync~2:complex'
        - id: callback
          description: '<span data-ttu-id="cc626-133">Optional.</span><span class="sxs-lookup"><span data-stu-id="cc626-133">Optional.</span></span> <span data-ttu-id="cc626-134">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzigen Parameter vom Typ Office. AsyncResult aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="cc626-134">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="cc626-135">Wenn das Hinzufügen der Empfänger fehlschlägt, enthält die AsyncResult. Error-Eigenschaft einen Fehlercode.</span><span class="sxs-lookup"><span data-stu-id="cc626-135">If adding the recipients fails, the asyncResult.error property will contain an error code.</span></span>'
          type:
            - 'outlook!Office.Recipients#addAsync~3:complex'
  - uid: 'outlook!Office.Recipients#getAsync:member(1)'
    summary: |-
      <span data-ttu-id="cc626-136">Ruft eine Empfängerliste für einen Termin oder eine Nachricht ab.</span><span class="sxs-lookup"><span data-stu-id="cc626-136">Gets a recipient list for an appointment or message.</span></span>

      <span data-ttu-id="cc626-137">Wenn der Aufruf abgeschlossen ist, enthält die AsyncResult. Value-Eigenschaft ein Array von [Office. EmailAddressDetails](xref:outlook!Office.EmailAddressDetails:interface) -Objekten.</span><span class="sxs-lookup"><span data-stu-id="cc626-137">When the call completes, the asyncResult.value property will contain an array of [Office.EmailAddressDetails](xref:outlook!Office.EmailAddressDetails:interface) objects.</span></span>

      <span data-ttu-id="cc626-138">\[[API-Gruppe: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cc626-138">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="cc626-139">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="cc626-139">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="cc626-140">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Verfassen</span><span class="sxs-lookup"><span data-stu-id="cc626-140">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>
    name: 'getAsync(options, callback)'
    fullName: 'getAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<EmailAddressDetails[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="cc626-141">Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält.</span><span class="sxs-lookup"><span data-stu-id="cc626-141">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="cc626-142">AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.</span><span class="sxs-lookup"><span data-stu-id="cc626-142">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="cc626-143">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzigen Parameter vom Typ Office. AsyncResult aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="cc626-143">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="cc626-144">Die `value` Eigenschaft des Ergebnisses ist ein Array von EmailAddressDetails-Objekten.</span><span class="sxs-lookup"><span data-stu-id="cc626-144">The `value` property of the result is an array of EmailAddressDetails objects.</span></span>'
          type:
            - 'outlook!Office.Recipients#getAsync~0:complex'
  - uid: 'outlook!Office.Recipients#getAsync:member(2)'
    summary: |-
      <span data-ttu-id="cc626-145">Ruft eine Empfängerliste für einen Termin oder eine Nachricht ab.</span><span class="sxs-lookup"><span data-stu-id="cc626-145">Gets a recipient list for an appointment or message.</span></span>

      <span data-ttu-id="cc626-146">Wenn der Aufruf abgeschlossen ist, enthält die AsyncResult. Value-Eigenschaft ein Array von [Office. EmailAddressDetails](xref:outlook!Office.EmailAddressDetails:interface) -Objekten.</span><span class="sxs-lookup"><span data-stu-id="cc626-146">When the call completes, the asyncResult.value property will contain an array of [Office.EmailAddressDetails](xref:outlook!Office.EmailAddressDetails:interface) objects.</span></span>

      <span data-ttu-id="cc626-147">\[[API-Gruppe: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cc626-147">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="cc626-148">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="cc626-148">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="cc626-149">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Verfassen</span><span class="sxs-lookup"><span data-stu-id="cc626-149">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>

      #### <a name="examples"></a><span data-ttu-id="cc626-150">Beispiele</span><span class="sxs-lookup"><span data-stu-id="cc626-150">Examples</span></span>

      ```javascript
      // The following example gets the optional attendees of a meeting.
      Office.context.mailbox.item.optionalAttendees.getAsync(function(result) {
          if (result.error) {
              console.log(result.error);
          } else {
              var msg = "";
              result.value.forEach(function(recip, index) {
                  msg = msg + recip.displayName + " (" + recip.emailAddress + ");";
              });
              console.log(msg);
          }
      });
      ```
    name: getAsync(callback)
    fullName: getAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getAsync(callback: (asyncResult: Office.AsyncResult<EmailAddressDetails[]>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="cc626-151">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzigen Parameter vom Typ Office. AsyncResult aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="cc626-151">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="cc626-152">Die `value` Eigenschaft des Ergebnisses ist ein Array von EmailAddressDetails-Objekten.</span><span class="sxs-lookup"><span data-stu-id="cc626-152">The `value` property of the result is an array of EmailAddressDetails objects.</span></span>'
          type:
            - 'outlook!Office.Recipients#getAsync~1:complex'
  - uid: 'outlook!Office.Recipients#setAsync:member(1)'
    summary: |-
      <span data-ttu-id="cc626-153">Legt eine Empfängerliste für einen Termin oder eine Nachricht fest.</span><span class="sxs-lookup"><span data-stu-id="cc626-153">Sets a recipient list for an appointment or message.</span></span>

      <span data-ttu-id="cc626-154">Die setasync-Methode überschreibt die aktuelle Empfängerliste.</span><span class="sxs-lookup"><span data-stu-id="cc626-154">The setAsync method overwrites the current recipient list.</span></span>

      <span data-ttu-id="cc626-155">Der Recipients-Parameter kann ein Array von einem der folgenden sein:</span><span class="sxs-lookup"><span data-stu-id="cc626-155">The recipients parameter can be an array of one of the following:</span></span>

      - <span data-ttu-id="cc626-156">Zeichenfolgen mit SMTP-E-Mail-Adressen</span><span class="sxs-lookup"><span data-stu-id="cc626-156">Strings containing SMTP email addresses</span></span>

      - <span data-ttu-id="cc626-157">[Office. EmailUser-](xref:outlook!Office.EmailUser:interface) Objekte</span><span class="sxs-lookup"><span data-stu-id="cc626-157">[Office.EmailUser](xref:outlook!Office.EmailUser:interface) objects</span></span>

      - <span data-ttu-id="cc626-158">[Office. EmailAddressDetails-](xref:outlook!Office.EmailAddressDetails:interface) Objekte</span><span class="sxs-lookup"><span data-stu-id="cc626-158">[Office.EmailAddressDetails](xref:outlook!Office.EmailAddressDetails:interface) objects</span></span>

      <span data-ttu-id="cc626-159">\[[API-Gruppe: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cc626-159">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="cc626-160">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="cc626-160">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="cc626-161">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Verfassen</span><span class="sxs-lookup"><span data-stu-id="cc626-161">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>

      <span data-ttu-id="cc626-162">**Fehler**:</span><span class="sxs-lookup"><span data-stu-id="cc626-162">**Errors**:</span></span>

      - <span data-ttu-id="cc626-163">NumberOfRecipientsExceeded: die Anzahl der Empfänger übersteigt 100 Einträge.</span><span class="sxs-lookup"><span data-stu-id="cc626-163">NumberOfRecipientsExceeded: The number of recipients exceeded 100 entries.</span></span>
    name: 'setAsync(recipients, options, callback)'
    fullName: 'setAsync(recipients, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAsync(recipients: (string | EmailUser | EmailAddressDetails)[], options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: recipients
          description: '<span data-ttu-id="cc626-164">Die Empfänger, die der Empfängerliste hinzugefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="cc626-164">The recipients to add to the recipients list.</span></span>'
          type:
            - 'outlook!Office.Recipients#setAsync~0:complex'
        - id: options
          description: '<span data-ttu-id="cc626-165">Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält.</span><span class="sxs-lookup"><span data-stu-id="cc626-165">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="cc626-166">AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.</span><span class="sxs-lookup"><span data-stu-id="cc626-166">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="cc626-167">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzigen Parameter vom Typ Office. AsyncResult aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="cc626-167">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="cc626-168">Wenn die Einstellung der Empfänger fehlschlägt, enthält die AsyncResult. Error-Eigenschaft einen Code, der alle Fehler angibt, die beim Hinzufügen der Daten aufgetreten sind.</span><span class="sxs-lookup"><span data-stu-id="cc626-168">If setting the recipients fails the asyncResult.error property will contain a code that indicates any error that occurred while adding the data.</span></span>'
          type:
            - 'outlook!Office.Recipients#setAsync~1:complex'
  - uid: 'outlook!Office.Recipients#setAsync:member(2)'
    summary: |-
      <span data-ttu-id="cc626-169">Legt eine Empfängerliste für einen Termin oder eine Nachricht fest.</span><span class="sxs-lookup"><span data-stu-id="cc626-169">Sets a recipient list for an appointment or message.</span></span>

      <span data-ttu-id="cc626-170">Die setasync-Methode überschreibt die aktuelle Empfängerliste.</span><span class="sxs-lookup"><span data-stu-id="cc626-170">The setAsync method overwrites the current recipient list.</span></span>

      <span data-ttu-id="cc626-171">Der Recipients-Parameter kann ein Array von einem der folgenden sein:</span><span class="sxs-lookup"><span data-stu-id="cc626-171">The recipients parameter can be an array of one of the following:</span></span>

      - <span data-ttu-id="cc626-172">Zeichenfolgen mit SMTP-E-Mail-Adressen</span><span class="sxs-lookup"><span data-stu-id="cc626-172">Strings containing SMTP email addresses</span></span>

      - <span data-ttu-id="cc626-173">[Office. EmailUser-](xref:outlook!Office.EmailUser:interface) Objekte</span><span class="sxs-lookup"><span data-stu-id="cc626-173">[Office.EmailUser](xref:outlook!Office.EmailUser:interface) objects</span></span>

      - <span data-ttu-id="cc626-174">[Office. EmailAddressDetails-](xref:outlook!Office.EmailAddressDetails:interface) Objekte</span><span class="sxs-lookup"><span data-stu-id="cc626-174">[Office.EmailAddressDetails](xref:outlook!Office.EmailAddressDetails:interface) objects</span></span>

      <span data-ttu-id="cc626-175">\[[API-Gruppe: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="cc626-175">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="cc626-176">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="cc626-176">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="cc626-177">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Verfassen</span><span class="sxs-lookup"><span data-stu-id="cc626-177">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Compose</span></span>

      <span data-ttu-id="cc626-178">**Fehler**:</span><span class="sxs-lookup"><span data-stu-id="cc626-178">**Errors**:</span></span>

      - <span data-ttu-id="cc626-179">NumberOfRecipientsExceeded: die Anzahl der Empfänger übersteigt 100 Einträge.</span><span class="sxs-lookup"><span data-stu-id="cc626-179">NumberOfRecipientsExceeded: The number of recipients exceeded 100 entries.</span></span>

      #### <a name="examples"></a><span data-ttu-id="cc626-180">Beispiele</span><span class="sxs-lookup"><span data-stu-id="cc626-180">Examples</span></span>

      ```javascript
      // The following example creates an array of EmailUser objects and
      // replaces the CC recipients of the message with the array.
      var newRecipients = [
          {
              "displayName": "Allie Bellew",
              "emailAddress": "allieb@contoso.com"
          },
          {
              "displayName": "Alex Darrow",
              "emailAddress": "alexd@contoso.com"
          }
      ];

      Office.context.mailbox.item.cc.setAsync(newRecipients, function(result) {
          if (result.error) {
              console.log(result.error);
          } else {
              console.log("Recipients overwritten");
          }
      });
      ```
    name: 'setAsync(recipients, callback)'
    fullName: 'setAsync(recipients, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setAsync(recipients: (string | EmailUser | EmailAddressDetails)[], callback: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: recipients
          description: '<span data-ttu-id="cc626-181">Die Empfänger, die der Empfängerliste hinzugefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="cc626-181">The recipients to add to the recipients list.</span></span>'
          type:
            - 'outlook!Office.Recipients#setAsync~2:complex'
        - id: callback
          description: '<span data-ttu-id="cc626-182">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzigen Parameter vom Typ Office. AsyncResult aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="cc626-182">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="cc626-183">Wenn die Einstellung der Empfänger fehlschlägt, enthält die AsyncResult. Error-Eigenschaft einen Code, der alle Fehler angibt, die beim Hinzufügen der Daten aufgetreten sind.</span><span class="sxs-lookup"><span data-stu-id="cc626-183">If setting the recipients fails the asyncResult.error property will contain a code that indicates any error that occurred while adding the data.</span></span>'
          type:
            - 'outlook!Office.Recipients#setAsync~3:complex'
references:
  - uid: 'outlook!Office.Recipients#addAsync~0:complex'
    name: '(string | EmailUser | EmailAddressDetails)[]'
    fullName: '(string | Office.EmailUser | Office.EmailAddressDetails)[]'
    spec.typeScript:
      - name: '(string | '
        fullName: '(string | '
      - uid: 'outlook!Office.EmailUser:interface'
        name: EmailUser
        fullName: Office.EmailUser
      - name: ' | '
        fullName: ' | '
      - uid: 'outlook!Office.EmailAddressDetails:interface'
        name: EmailAddressDetails
        fullName: Office.EmailAddressDetails
      - name: ')[]'
        fullName: ')[]'
  - uid: 'outlook!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'outlook!Office.Recipients#addAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.Recipients#addAsync~2:complex'
    name: '(string | EmailUser | EmailAddressDetails)[]'
    fullName: '(string | Office.EmailUser | Office.EmailAddressDetails)[]'
    spec.typeScript:
      - name: '(string | '
        fullName: '(string | '
      - uid: 'outlook!Office.EmailUser:interface'
        name: EmailUser
        fullName: Office.EmailUser
      - name: ' | '
        fullName: ' | '
      - uid: 'outlook!Office.EmailAddressDetails:interface'
        name: EmailAddressDetails
        fullName: Office.EmailAddressDetails
      - name: ')[]'
        fullName: ')[]'
  - uid: 'outlook!Office.Recipients#addAsync~3:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.Recipients#getAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<EmailAddressDetails[]>) => void'
    fullName: '(asyncResult: Office.AsyncResult<Office.EmailAddressDetails[]>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'outlook!Office.EmailAddressDetails:interface'
        name: EmailAddressDetails
        fullName: Office.EmailAddressDetails
      - name: '[]>) => void'
        fullName: '[]>) => void'
  - uid: 'outlook!Office.Recipients#getAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<EmailAddressDetails[]>) => void'
    fullName: '(asyncResult: Office.AsyncResult<Office.EmailAddressDetails[]>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'outlook!Office.EmailAddressDetails:interface'
        name: EmailAddressDetails
        fullName: Office.EmailAddressDetails
      - name: '[]>) => void'
        fullName: '[]>) => void'
  - uid: 'outlook!Office.Recipients#setAsync~0:complex'
    name: '(string | EmailUser | EmailAddressDetails)[]'
    fullName: '(string | Office.EmailUser | Office.EmailAddressDetails)[]'
    spec.typeScript:
      - name: '(string | '
        fullName: '(string | '
      - uid: 'outlook!Office.EmailUser:interface'
        name: EmailUser
        fullName: Office.EmailUser
      - name: ' | '
        fullName: ' | '
      - uid: 'outlook!Office.EmailAddressDetails:interface'
        name: EmailAddressDetails
        fullName: Office.EmailAddressDetails
      - name: ')[]'
        fullName: ')[]'
  - uid: 'outlook!Office.Recipients#setAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.Recipients#setAsync~2:complex'
    name: '(string | EmailUser | EmailAddressDetails)[]'
    fullName: '(string | Office.EmailUser | Office.EmailAddressDetails)[]'
    spec.typeScript:
      - name: '(string | '
        fullName: '(string | '
      - uid: 'outlook!Office.EmailUser:interface'
        name: EmailUser
        fullName: Office.EmailUser
      - name: ' | '
        fullName: ' | '
      - uid: 'outlook!Office.EmailAddressDetails:interface'
        name: EmailAddressDetails
        fullName: Office.EmailAddressDetails
      - name: ')[]'
        fullName: ')[]'
  - uid: 'outlook!Office.Recipients#setAsync~3:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void