### YamlMime:TSType
name: Office.Body
uid: outlook!Office.Body:interface
package: outlook!
fullName: Office.Body
summary: >-
  Das Body-Objekt stellt Methoden zum Hinzufügen und Aktualisieren des Inhalts der Nachricht oder des Termins bereit. Es wird in der body-Eigenschaft des ausgewählten Elements zurückgegeben.


  \[[API-Satz: Postfach 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
remarks: >-
  **Bekanntes Problem mit FARBEN DES HTML-Tabellenrahmens**


  Outlook auf Windows: Wenn Sie verschiedene Zellrahmen in einer HTML-Tabelle im Verfassenmodus auf unterschiedliche Farben festlegen, spiegeln die Rahmen einer Zelle möglicherweise nicht die erwartete Farbe wider. Das bekannte Verhalten finden Sie unter [OfficeDev/office-js Problem \# 1818](https://github.com/OfficeDev/office-js/issues/1818)<!-- -->.


  **[Minimale Berechtigungsstufe:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadItem`


  **[Zutreffender Outlook modus:](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** Verfassen oder Lesen
isPreview: false
isDeprecated: false
type: interface
methods:
- name: getTypeAsync(options, callback)
  uid: outlook!Office.Body#getTypeAsync:member(1)
  package: outlook!
  fullName: getTypeAsync(options, callback)
  summary: >-
    Ruft einen Wert ab, der angibt, ob der Inhalt HTML- oder Textformat aufweist.


    \[[API-Satz: Postfach 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Minimale Berechtigungsstufe:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadItem`


    **[Zutreffender Outlook modus:](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** Verfassen


    #### <a name="examples"></a>Beispiele


    ```javascript

    Office.context.mailbox.item.body.getTypeAsync(function (asyncResult) {
        if (asyncResult.status === "failed") {
            console.log("Action failed with error: " + asyncResult.error.message);
        } else {
            console.log("Body type: " + asyncResult.value);
        }
    });

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getTypeAsync(options: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<Office.CoercionType>) => void): void;'
    parameters:
    - id: options
      description: 'Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält. `asyncContext`<!-- -->: Entwickler können jedes Objekt bereitstellen, auf das sie in der Rückrufmethode zugreifen möchten.'
      type: <xref uid="office!Office.AsyncContextOptions:interface" />
    - id: callback
      description: Optional. Wenn die Methode abgeschlossen ist, wird die im Parameter übergebene Funktion `callback` mit einem einzigen Parameter vom Typ aufgerufen. `Office.AsyncResult`<!-- -->. Der Inhaltstyp wird als einer der `CoercionType` Werte in der Eigenschaft `asyncResult.value` zurückgegeben.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref uid="office!Office.CoercionType:enum" />&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: getTypeAsync(callback)
  uid: outlook!Office.Body#getTypeAsync:member(2)
  package: outlook!
  fullName: getTypeAsync(callback)
  summary: >-
    Ruft einen Wert ab, der angibt, ob der Inhalt HTML- oder Textformat aufweist.


    \[[API-Satz: Postfach 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Minimale Berechtigungsstufe:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadItem`


    **[Zutreffender Outlook modus:](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** Verfassen
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getTypeAsync(callback?: (asyncResult: Office.AsyncResult<Office.CoercionType>) => void): void;'
    parameters:
    - id: callback
      description: Optional. Wenn die Methode abgeschlossen ist, wird die im Parameter übergebene Funktion `callback` mit einem einzigen Parameter vom Typ aufgerufen. `Office.AsyncResult`<!-- -->. Der Inhaltstyp wird als einer der `CoercionType` Werte in der Eigenschaft `asyncResult.value` zurückgegeben.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;<xref uid="office!Office.CoercionType:enum" />&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: prependAsync(data, options, callback)
  uid: outlook!Office.Body#prependAsync:member(1)
  package: outlook!
  fullName: prependAsync(data, options, callback)
  summary: >-
    Fügt den angegebenen Inhalt am Anfang des Elementkörpers hinzu.


    Die `prependAsync`-Methode fügt die angegebene Zeichenfolge am Beginn des Elementtexts ein. Nach dem Einfügen wird der Cursor relativ zum eingefügten Inhalt an seine ursprüngliche Position zurückgegeben.


    Beim Arbeiten mit TEXTkörpern im HTML-Format ist es wichtig zu beachten, dass der Client den übergebenen Wert ändern `prependAsync` kann, damit er mit seinem Renderingmodul effizient gerendert wird. Dies bedeutet, dass der von einem nachfolgenden Aufruf der Methode zurückgegebene Wert `Body.getAsync` nicht unbedingt genau den Wert enthält, der zuvor in der Methode übergeben `prependAsync` wurde.


    Wenn Sie Links in HTML-Markup einschließen, können Sie die Onlinelinkvorschau deaktivieren, indem Sie das `id` Attribut auf den Anker (<!-- -->&lt;<!-- -->a<!-- -->&gt;<!-- -->) zu "LPNoLP" (ein Beispiel finden Sie im Abschnitt **"Beispiele").**


    \[[API-Satz: Postfach 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Minimale Berechtigungsstufe:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadWriteItem`


    **[Zutreffender Outlook modus:](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** Verfassen


    **Fehler:**


    - `DataExceedsMaximumSize`<!-- -->: Der Datenparameter ist länger als 1.000.000 Zeichen.


    #### <a name="examples"></a>Beispiele


    ```javascript

    // When including links in HTML markup, you can disable online link preview

    // by setting the id attribute on the anchor (<a>) to "LPNoLP".

    Office.context.mailbox.item.body.prependAsync(
        '<a id="LPNoLP" href="http://www.contoso.com">Click here!</a>',
        {coercionType: Office.CoercionType.Html},
        callback);
    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'prependAsync(data: string, options: Office.AsyncContextOptions & CoercionTypeOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: data
      description: Die Zeichenfolge, die am Anfang des Texts eingefügt werden soll. Die Zeichenfolge ist auf 1.000.000 Zeichen beschränkt.
      type: string
    - id: options
      description: 'Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält. `asyncContext`<!-- -->: Entwickler können jedes Objekt bereitstellen, auf das sie in der Rückrufmethode zugreifen möchten. `coercionType`<!-- -->: Das gewünschte Format für den Textkörper. Der Zeichenfolge im `data`-Parameter wird in dieses Format konvertiert.'
      type: <xref uid="office!Office.AsyncContextOptions:interface" /> & <xref uid="outlook!Office.CoercionTypeOptions:interface" />
    - id: callback
      description: Optional. Wenn die Methode abgeschlossen ist, wird die im Parameter übergebene Funktion `callback` mit einem einzigen Parameter vom Typ aufgerufen. `Office.AsyncResult`<!-- -->. Alle aufgetretenen Fehler werden in der `asyncResult.error`-Eigenschaft bereitgestellt.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: prependAsync(data, callback)
  uid: outlook!Office.Body#prependAsync:member(2)
  package: outlook!
  fullName: prependAsync(data, callback)
  summary: >-
    Fügt den angegebenen Inhalt am Anfang des Elementkörpers hinzu.


    Die `prependAsync`-Methode fügt die angegebene Zeichenfolge am Beginn des Elementtexts ein. Nach dem Einfügen wird der Cursor relativ zum eingefügten Inhalt an seine ursprüngliche Position zurückgegeben.


    Beim Arbeiten mit TEXTkörpern im HTML-Format ist es wichtig zu beachten, dass der Client den übergebenen Wert ändern `prependAsync` kann, damit er mit seinem Renderingmodul effizient gerendert wird. Dies bedeutet, dass der von einem nachfolgenden Aufruf der Methode zurückgegebene Wert `Body.getAsync` nicht unbedingt genau den Wert enthält, der zuvor in der Methode übergeben `prependAsync` wurde.


    Wenn Sie Links in HTML-Markup einschließen, können Sie die Onlinelinkvorschau deaktivieren, indem Sie das `id` Attribut auf den Anker (<!-- -->&lt;<!-- -->a<!-- -->&gt;<!-- -->) zu "LPNoLP" (ein Beispiel finden Sie im Abschnitt **"Beispiele").**


    \[[API-Satz: Postfach 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Minimale Berechtigungsstufe:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadWriteItem`


    **[Zutreffender Outlook modus:](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** Verfassen


    **Fehler:**


    - `DataExceedsMaximumSize`<!-- -->: Der Datenparameter ist länger als 1.000.000 Zeichen.
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'prependAsync(data: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: data
      description: Die Zeichenfolge, die am Anfang des Texts eingefügt werden soll. Die Zeichenfolge ist auf 1.000.000 Zeichen beschränkt.
      type: string
    - id: callback
      description: Optional. Wenn die Methode abgeschlossen ist, wird die im Parameter übergebene Funktion `callback` mit einem einzigen Parameter vom Typ aufgerufen. `Office.AsyncResult`<!-- -->. Alle aufgetretenen Fehler werden in der `asyncResult.error`-Eigenschaft bereitgestellt.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: setSelectedDataAsync(data, options, callback)
  uid: outlook!Office.Body#setSelectedDataAsync:member(1)
  package: outlook!
  fullName: setSelectedDataAsync(data, options, callback)
  summary: >-
    Ersetzt die Auswahl im Textkörper mit dem angegebenen Text.


    Die `setSelectedDataAsync` Methode fügt die angegebene Zeichenfolge an der Cursorposition im Textkörper des Elements ein, oder, wenn text im Editor ausgewählt ist, ersetzt sie den markierten Text. Wenn sich der Cursor nie im Textkörper des Elements befand oder der Textkörper des Elements den Fokus auf der Benutzeroberfläche verloren hat, wird die Zeichenfolge am oberen Rand des Textkörperinhalts eingefügt. Nach dem Einfügen wird der Cursor am Ende des eingefügten Inhalts platziert.


    Wenn Sie Links in HTML-Markup einschließen, können Sie die Onlinelinkvorschau deaktivieren, indem Sie das ID-Attribut auf dem Anker (<!-- -->&lt;<!-- -->a<!-- -->&gt;<!-- -->) zu "LPNoLP" (ein Beispiel finden Sie im Abschnitt **"Beispiele").**


    \[[API-Satz: Postfach 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Minimale Berechtigungsstufe:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadWriteItem`


    **[Zutreffender Outlook modus:](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** Verfassen


    **Fehler:**


    - `DataExceedsMaximumSize`<!-- -->: Der `data` Parameter ist länger als 1.000.000 Zeichen.


    - `InvalidFormatError`<!-- -->: Der `options.coercionType` Parameter ist `Office.CoercionType.Html` festgelegt, und der Nachrichtentext befindet sich in Nur-Text.


    #### <a name="examples"></a>Beispiele


    ```javascript

    // When including links in HTML markup, you can disable online link preview

    // by setting the id attribute on the anchor (<a>) to "LPNoLP".

    Office.context.mailbox.item.body.setSelectedDataAsync(
        '<a id="LPNoLP" href="http://www.contoso.com">Click here!</a>',
        {coercionType: Office.CoercionType.Html},
        callback);
    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setSelectedDataAsync(data: string, options: Office.AsyncContextOptions & CoercionTypeOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: data
      description: Die Zeichenfolge, die den vorhandenen Text ersetzen soll. Die Zeichenfolge ist auf 1.000.000 Zeichen beschränkt.
      type: string
    - id: options
      description: 'Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält. `asyncContext`<!-- -->: Entwickler können jedes Objekt bereitstellen, auf das sie in der Rückrufmethode zugreifen möchten. `coercionType`<!-- -->: Das gewünschte Format für den Textkörper. Der Zeichenfolge im `data`-Parameter wird in dieses Format konvertiert.'
      type: <xref uid="office!Office.AsyncContextOptions:interface" /> & <xref uid="outlook!Office.CoercionTypeOptions:interface" />
    - id: callback
      description: Optional. Wenn die Methode abgeschlossen ist, wird die im Parameter übergebene Funktion `callback` mit einem einzigen Parameter vom Typ aufgerufen. `Office.AsyncResult`<!-- -->. Alle aufgetretenen Fehler werden in der `asyncResult.error`-Eigenschaft bereitgestellt.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
- name: setSelectedDataAsync(data, callback)
  uid: outlook!Office.Body#setSelectedDataAsync:member(2)
  package: outlook!
  fullName: setSelectedDataAsync(data, callback)
  summary: >-
    Ersetzt die Auswahl im Textkörper mit dem angegebenen Text.


    Die `setSelectedDataAsync` Methode fügt die angegebene Zeichenfolge an der Cursorposition im Textkörper des Elements ein, oder, wenn text im Editor ausgewählt ist, ersetzt sie den markierten Text. Wenn sich der Cursor nie im Textkörper des Elements befand oder der Textkörper des Elements den Fokus auf der Benutzeroberfläche verloren hat, wird die Zeichenfolge am oberen Rand des Textkörperinhalts eingefügt. Nach dem Einfügen wird der Cursor am Ende des eingefügten Inhalts platziert.


    Wenn Sie Links in HTML-Markup einschließen, können Sie die Onlinelinkvorschau deaktivieren, indem Sie das ID-Attribut auf dem Anker (<!-- -->&lt;<!-- -->a<!-- -->&gt;<!-- -->) zu "LPNoLP" (ein Beispiel finden Sie im Abschnitt **"Beispiele").**


    \[[API-Satz: Postfach 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]
  remarks: >-
    **[Minimale Berechtigungsstufe:](https://docs.microsoft.com/office/dev/add-ins/outlook/understanding-outlook-add-in-permissions) <!-- -->**`ReadWriteItem`


    **[Zutreffender Outlook modus:](https://docs.microsoft.com/office/dev/add-ins/outlook/outlook-add-ins-overview#extension-points) <!-- -->** Verfassen


    **Fehler:**


    - `DataExceedsMaximumSize`<!-- -->: Der `data` Parameter ist länger als 1.000.000 Zeichen.


    - `InvalidFormatError`<!-- -->: Der `options.coercionType` Parameter ist `Office.CoercionType.Html` festgelegt, und der Nachrichtentext befindet sich in Nur-Text.
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setSelectedDataAsync(data: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
    parameters:
    - id: data
      description: Die Zeichenfolge, die den vorhandenen Text ersetzen soll. Die Zeichenfolge ist auf 1.000.000 Zeichen beschränkt.
      type: string
    - id: callback
      description: Optional. Wenn die Methode abgeschlossen ist, wird die im Parameter übergebene Funktion `callback` mit einem einzigen Parameter vom Typ aufgerufen. `Office.AsyncResult`<!-- -->. Alle aufgetretenen Fehler werden in der `asyncResult.error`-Eigenschaft bereitgestellt.
      type: '(asyncResult: <xref uid="office!Office.AsyncResult:interface" />&lt;void&gt;) =&gt; void'
    return:
      type: void
      description: ''
metadata:
  ms.openlocfilehash: a82a75995682b9cbffd2e93025614d4ef934bbe1
  ms.sourcegitcommit: 1e0143ae4add09dbe22b0080d22fb25101757fba
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 06/11/2021
  ms.locfileid: "52894839"
