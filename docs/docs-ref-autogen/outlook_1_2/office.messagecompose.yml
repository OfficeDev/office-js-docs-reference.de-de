### YamlMime:UniversalReference
items:
  - uid: Outlook_1_2.Office.MessageCompose
    summary: |-
      <span data-ttu-id="e0d1a-101">Der Nachrichten Verfassenmodus von [Office. Context. Mailbox. Item](xref:Outlook_1_2.Office.Item)</span><span class="sxs-lookup"><span data-stu-id="e0d1a-101">The message compose mode of [Office.context.mailbox.item](xref:Outlook_1_2.Office.Item)</span></span><!-- --><span data-ttu-id="e0d1a-102">.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-102"></span></span>

      <span data-ttu-id="e0d1a-103">**Wichtig**: Hierbei handelt es sich um ein internes Outlook-Objekt, das nicht direkt über vorhandene Schnittstellen verfügbar gemacht wird.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-103">**Important**: This is an internal Outlook object, not directly exposed through existing interfaces.</span></span> <span data-ttu-id="e0d1a-104">Sie sollten dies als Modus von Office. Context. Mailbox. Item behandeln.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-104">You should treat this as a mode of Office.context.mailbox.item.</span></span> <span data-ttu-id="e0d1a-105">Weitere Informationen finden Sie auf der Seite [Objektmodell](https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.2/office.context.mailbox.item) .</span><span class="sxs-lookup"><span data-stu-id="e0d1a-105">Refer to the [Object Model](https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.2/office.context.mailbox.item) page for more information.</span></span>
    name: Office.MessageCompose
    fullName: Office.MessageCompose
    langs:
      - typeScript
    type: interface
    extends:
      - Message
      - 'ItemCompose '
    package: Outlook_1_2
    children:
      - Outlook_1_2.Office.MessageCompose.addFileAttachmentAsync
      - Outlook_1_2.Office.MessageCompose.addFileAttachmentAsync_1
      - Outlook_1_2.Office.MessageCompose.addItemAttachmentAsync
      - Outlook_1_2.Office.MessageCompose.addItemAttachmentAsync_1
      - Outlook_1_2.Office.MessageCompose.getSelectedDataAsync
      - Outlook_1_2.Office.MessageCompose.getSelectedDataAsync_1
      - Outlook_1_2.Office.MessageCompose.loadCustomPropertiesAsync
      - Outlook_1_2.Office.MessageCompose.removeAttachmentAsync
      - Outlook_1_2.Office.MessageCompose.removeAttachmentAsync_1
      - Outlook_1_2.Office.MessageCompose.setSelectedDataAsync
      - Outlook_1_2.Office.MessageCompose.setSelectedDataAsync_1
      - Outlook_1_2.Office.MessageCompose.bcc
      - Outlook_1_2.Office.MessageCompose.body
      - Outlook_1_2.Office.MessageCompose.cc
      - Outlook_1_2.Office.MessageCompose.conversationId
      - Outlook_1_2.Office.MessageCompose.itemType
      - Outlook_1_2.Office.MessageCompose.subject
      - Outlook_1_2.Office.MessageCompose.to
  - uid: Outlook_1_2.Office.MessageCompose.addFileAttachmentAsync
    summary: |-
      <span data-ttu-id="e0d1a-106">Fügt eine Datei zu einer Nachricht oder einem Termin als Anlage hinzu.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-106">Adds a file to a message or appointment as an attachment.</span></span>

      <span data-ttu-id="e0d1a-107">Die addFileAttachmentAsync-Methode lädt die Datei an der angegebenen URI hoch und fügt Sie an das Element im Formular Verfassen an.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-107">The addFileAttachmentAsync method uploads the file at the specified URI and attaches it to the item in the compose form.</span></span>

      <span data-ttu-id="e0d1a-108">Sie können anschließend den Identifikator mit der removeAttachmentAsync-Methode verwenden, um den Anhang in derselben Sitzung zu löschen.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-108">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>

      <span data-ttu-id="e0d1a-109">\[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e0d1a-109">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="e0d1a-110">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="e0d1a-110">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="e0d1a-111">\*\* [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Nachrichten verfassen</span><span class="sxs-lookup"><span data-stu-id="e0d1a-111">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Message Compose</span></span>

      <span data-ttu-id="e0d1a-112">**Fehler**:</span><span class="sxs-lookup"><span data-stu-id="e0d1a-112">**Errors**:</span></span>

      - <span data-ttu-id="e0d1a-113">AttachmentSizeExceeded: die Anlage ist größer als zulässig.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-113">AttachmentSizeExceeded: The attachment is larger than allowed.</span></span>

      - <span data-ttu-id="e0d1a-114">FileTypeNotSupported: die Anlage hat eine Erweiterung, die nicht zulässig ist.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-114">FileTypeNotSupported: The attachment has an extension that is not allowed.</span></span>

      - <span data-ttu-id="e0d1a-115">NumberOfAttachmentsExceeded: die Nachricht oder der Termin hat zu viele Anlagen.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-115">NumberOfAttachmentsExceeded: The message or appointment has too many attachments.</span></span>

      #### <a name="examples"></a><span data-ttu-id="e0d1a-116">Beispiele</span><span class="sxs-lookup"><span data-stu-id="e0d1a-116">Examples</span></span>

      ```javascript
      function callback(result) {
          if (result.error) {
              console.log(result.error);
          } else {
              console.log("Attachment added");
          }
      }

      function addAttachment() {
          // The values in asyncContext can be accessed in the callback.
          var options = { 'asyncContext': { var1: 1, var2: 2 } };

          var attachmentURL = "https://contoso.com/rtm/icon.png";
          Office.context.mailbox.item.addFileAttachmentAsync(attachmentURL, attachmentURL, options, callback);
      }
      ```
      ```javascript
      // The following example adds an image file as an inline attachment and
      // references the attachment in the message body.
      Office.context.mailbox.item.addFileAttachmentAsync(
          "http://i.imgur.com/WJXklif.png",
          "cute_bird.png",
          {
              isInline: true
          },
          function (asyncResult) {
              Office.context.mailbox.item.body.setAsync(
                  "<p>Here's a cute bird!</p><img src='cid:cute_bird.png'>",
                  {
                      "coercionType": "html"
                  },
                  function (asyncResult) {
                      // Do something here.
                  });
          });
      ```
    name: 'addFileAttachmentAsync(uri, attachmentName, options, callback)'
    fullName: 'addFileAttachmentAsync(uri, attachmentName, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFileAttachmentAsync(uri: string, attachmentName: string, options?: Office.AsyncContextOptions & { isInline: boolean }, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: uri
          description: '<span data-ttu-id="e0d1a-117">Der URI, der den Speicherort der an die Nachricht oder den Termin anzuhängenden Datei angibt.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-117">The URI that provides the location of the file to attach to the message or appointment.</span></span> <span data-ttu-id="e0d1a-118">Die maximale Länge ist 2048 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-118">The maximum length is 2048 characters.</span></span>'
          type:
            - string
        - id: attachmentName
          description: '<span data-ttu-id="e0d1a-119">Der Name der Anlage, der beim Hochladen der Anlage angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-119">The name of the attachment that is shown while the attachment is uploading.</span></span> <span data-ttu-id="e0d1a-120">Die maximale Länge ist 255 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-120">The maximum length is 255 characters.</span></span>'
          type:
            - string
        - id: options
          description: '<span data-ttu-id="e0d1a-121">Optional.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-121">Optional.</span></span> <span data-ttu-id="e0d1a-122">Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-122">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="e0d1a-123">AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-123">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span> <span data-ttu-id="e0d1a-124">isInline: Wenn true, gibt an, dass die Anlage Inline im Nachrichtentext angezeigt wird und nicht in der Anlagenliste angezeigt werden soll.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-124">isInline: If true, indicates that the attachment will be shown inline in the message body, and should not be displayed in the attachment list.</span></span>'
          type:
            - 'Office.AsyncContextOptions & { isInline: boolean }'
        - id: callback
          description: '<span data-ttu-id="e0d1a-125">Optional.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-125">Optional.</span></span> <span data-ttu-id="e0d1a-126">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-126">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="e0d1a-127">Bei Erfolg wird der Anlagen Bezeichner in der asyncResult. Value-Eigenschaft bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-127">On success, the attachment identifier will be provided in the asyncResult.value property.</span></span> <span data-ttu-id="e0d1a-128">Wenn das Hochladen der Anlage fehlschlägt, enthält das asyncResult-Objekt ein Error-Objekt mit einer Fehlerbeschreibung.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-128">If uploading the attachment fails, the asyncResult object will contain an Error object that provides a description of the error.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: Outlook_1_2.Office.MessageCompose.addFileAttachmentAsync_1
    summary: |-
      <span data-ttu-id="e0d1a-129">Fügt eine Datei zu einer Nachricht oder einem Termin als Anlage hinzu.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-129">Adds a file to a message or appointment as an attachment.</span></span>

      <span data-ttu-id="e0d1a-130">Die addFileAttachmentAsync-Methode lädt die Datei an der angegebenen URI hoch und fügt Sie an das Element im Formular Verfassen an.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-130">The addFileAttachmentAsync method uploads the file at the specified URI and attaches it to the item in the compose form.</span></span>

      <span data-ttu-id="e0d1a-131">Sie können anschließend den Identifikator mit der removeAttachmentAsync-Methode verwenden, um den Anhang in derselben Sitzung zu löschen.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-131">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>

      <span data-ttu-id="e0d1a-132">\[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e0d1a-132">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="e0d1a-133">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="e0d1a-133">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="e0d1a-134">\*\* [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Nachrichten verfassen</span><span class="sxs-lookup"><span data-stu-id="e0d1a-134">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Message Compose</span></span>

      <span data-ttu-id="e0d1a-135">**Fehler**:</span><span class="sxs-lookup"><span data-stu-id="e0d1a-135">**Errors**:</span></span>

      - <span data-ttu-id="e0d1a-136">AttachmentSizeExceeded: die Anlage ist größer als zulässig.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-136">AttachmentSizeExceeded: The attachment is larger than allowed.</span></span>

      - <span data-ttu-id="e0d1a-137">FileTypeNotSupported: die Anlage hat eine Erweiterung, die nicht zulässig ist.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-137">FileTypeNotSupported: The attachment has an extension that is not allowed.</span></span>

      - <span data-ttu-id="e0d1a-138">NumberOfAttachmentsExceeded: die Nachricht oder der Termin hat zu viele Anlagen.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-138">NumberOfAttachmentsExceeded: The message or appointment has too many attachments.</span></span>
    name: 'addFileAttachmentAsync(uri, attachmentName, callback)'
    fullName: 'addFileAttachmentAsync(uri, attachmentName, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFileAttachmentAsync(uri: string, attachmentName: string, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: uri
          description: '<span data-ttu-id="e0d1a-139">Der URI, der den Speicherort der an die Nachricht oder den Termin anzuhängenden Datei angibt.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-139">The URI that provides the location of the file to attach to the message or appointment.</span></span> <span data-ttu-id="e0d1a-140">Die maximale Länge ist 2048 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-140">The maximum length is 2048 characters.</span></span>'
          type:
            - string
        - id: attachmentName
          description: '<span data-ttu-id="e0d1a-141">Der Name der Anlage, der beim Hochladen der Anlage angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-141">The name of the attachment that is shown while the attachment is uploading.</span></span> <span data-ttu-id="e0d1a-142">Die maximale Länge ist 255 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-142">The maximum length is 255 characters.</span></span>'
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="e0d1a-143">Optional.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-143">Optional.</span></span> <span data-ttu-id="e0d1a-144">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-144">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="e0d1a-145">Bei Erfolg wird der Anlagen Bezeichner in der asyncResult. Value-Eigenschaft bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-145">On success, the attachment identifier will be provided in the asyncResult.value property.</span></span> <span data-ttu-id="e0d1a-146">Wenn das Hochladen der Anlage fehlschlägt, enthält das asyncResult-Objekt ein Error-Objekt mit einer Fehlerbeschreibung.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-146">If uploading the attachment fails, the asyncResult object will contain an Error object that provides a description of the error.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: Outlook_1_2.Office.MessageCompose.addItemAttachmentAsync
    summary: |-
      <span data-ttu-id="e0d1a-147">Fügt der Nachricht oder dem Termin ein Exchange-Objekt, wie z. B. eine Nachricht, als Anhang hinzu.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-147">Adds an Exchange item, such as a message, as an attachment to the message or appointment.</span></span>

      <span data-ttu-id="e0d1a-148">Die addItemAttachmentAsync-Methode fügt das Element mit der angegebenen Exchange-ID an das Element im Formular Verfassen an.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-148">The addItemAttachmentAsync method attaches the item with the specified Exchange identifier to the item in the compose form.</span></span> <span data-ttu-id="e0d1a-149">Wenn Sie eine Rückrufmethode angeben, wird die Methode mit einem Parameter, asyncResult, aufgerufen, der entweder die Anlagen-ID oder einen Code enthält, der einen Fehler angibt, der beim Anfügen des Elements aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-149">If you specify a callback method, the method is called with one parameter, asyncResult, which contains either the attachment identifier or a code that indicates any error that occurred while attaching the item.</span></span> <span data-ttu-id="e0d1a-150">Sie können den Parameter options verwenden, um bei Bedarf Statusinformationen an die Rückrufmethode zu übergeben.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-150">You can use the options parameter to pass state information to the callback method, if needed.</span></span>

      <span data-ttu-id="e0d1a-151">Sie können anschließend den Identifikator mit der removeAttachmentAsync-Methode verwenden, um den Anhang in derselben Sitzung zu löschen.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-151">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>

      <span data-ttu-id="e0d1a-152">Wenn Ihr Office-Add-in in Outlook Web App läuft, kann die addItemAttachmentAsync-Methode Elemente an andere Elemente als das Element anfügen, das Sie bearbeiten; Dies wird jedoch nicht unterstützt und wird nicht empfohlen.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-152">If your Office add-in is running in Outlook Web App, the addItemAttachmentAsync method can attach items to items other than the item that you are editing; however, this is not supported and is not recommended.</span></span>

      <span data-ttu-id="e0d1a-153">\[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e0d1a-153">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="e0d1a-154">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="e0d1a-154">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="e0d1a-155">\*\* [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Nachrichten verfassen</span><span class="sxs-lookup"><span data-stu-id="e0d1a-155">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Message Compose</span></span>

      <span data-ttu-id="e0d1a-156">**Fehler**:</span><span class="sxs-lookup"><span data-stu-id="e0d1a-156">**Errors**:</span></span>

      - <span data-ttu-id="e0d1a-157">NumberOfAttachmentsExceeded: die Nachricht oder der Termin hat zu viele Anlagen.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-157">NumberOfAttachmentsExceeded: The message or appointment has too many attachments.</span></span>

      #### <a name="examples"></a><span data-ttu-id="e0d1a-158">Beispiele</span><span class="sxs-lookup"><span data-stu-id="e0d1a-158">Examples</span></span>

      ```javascript
      // The following example adds an existing Outlook item as an attachment
      // with the name `My Attachment`.
      function callback(result) {
          if (result.error) {
              console.log(result.error);
          } else {
              console.log("Attachment added");
          }
      }

      function addAttachment() {
          // EWS ID of item to attach (shortened for readability).
          var itemId = "AAMkADI1...AAA=";

          // The values in asyncContext can be accessed in the callback.
          var options = { 'asyncContext': { var1: 1, var2: 2 } };

          Office.context.mailbox.item.addItemAttachmentAsync(itemId, "My Attachment", options, callback);
      }
      ```
    name: 'addItemAttachmentAsync(itemId, attachmentName, options, callback)'
    fullName: 'addItemAttachmentAsync(itemId, attachmentName, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: itemId
          description: '<span data-ttu-id="e0d1a-159">Der Exchange-Bezeichner des Objekts, das angehängt werden soll.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-159">The Exchange identifier of the item to attach.</span></span> <span data-ttu-id="e0d1a-160">Die maximale Länge beträgt 100 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-160">The maximum length is 100 characters.</span></span>'
          type:
            - any
        - id: attachmentName
          description: '<span data-ttu-id="e0d1a-161">Der Name der Anlage, der beim Hochladen der Anlage angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-161">The name of the attachment that is shown while the attachment is uploading.</span></span> <span data-ttu-id="e0d1a-162">Die maximale Länge ist 255 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-162">The maximum length is 255 characters.</span></span>'
          type:
            - string
        - id: options
          description: '<span data-ttu-id="e0d1a-163">Optional.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-163">Optional.</span></span> <span data-ttu-id="e0d1a-164">Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-164">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="e0d1a-165">AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-165">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="e0d1a-166">Optional.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-166">Optional.</span></span> <span data-ttu-id="e0d1a-167">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-167">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="e0d1a-168">Bei Erfolg wird der Anlagen Bezeichner in der asyncResult. Value-Eigenschaft bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-168">On success, the attachment identifier will be provided in the asyncResult.value property.</span></span> <span data-ttu-id="e0d1a-169">Wenn beim Hinzufügen der Anlage ein Fehler auftritt, enthält das asyncResult-Objekt ein Error-Objekt, das eine Beschreibung des Fehlers bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-169">If adding the attachment fails, the asyncResult object will contain an Error object that provides a description of the error.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: Outlook_1_2.Office.MessageCompose.addItemAttachmentAsync_1
    summary: |-
      <span data-ttu-id="e0d1a-170">Fügt der Nachricht oder dem Termin ein Exchange-Objekt, wie z. B. eine Nachricht, als Anhang hinzu.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-170">Adds an Exchange item, such as a message, as an attachment to the message or appointment.</span></span>

      <span data-ttu-id="e0d1a-171">Die addItemAttachmentAsync-Methode fügt das Element mit der angegebenen Exchange-ID an das Element im Formular Verfassen an.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-171">The addItemAttachmentAsync method attaches the item with the specified Exchange identifier to the item in the compose form.</span></span> <span data-ttu-id="e0d1a-172">Wenn Sie eine Rückrufmethode angeben, wird die Methode mit einem Parameter, asyncResult, aufgerufen, der entweder die Anlagen-ID oder einen Code enthält, der einen Fehler angibt, der beim Anfügen des Elements aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-172">If you specify a callback method, the method is called with one parameter, asyncResult, which contains either the attachment identifier or a code that indicates any error that occurred while attaching the item.</span></span> <span data-ttu-id="e0d1a-173">Sie können den Parameter options verwenden, um bei Bedarf Statusinformationen an die Rückrufmethode zu übergeben.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-173">You can use the options parameter to pass state information to the callback method, if needed.</span></span>

      <span data-ttu-id="e0d1a-174">Sie können anschließend den Identifikator mit der removeAttachmentAsync-Methode verwenden, um den Anhang in derselben Sitzung zu löschen.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-174">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>

      <span data-ttu-id="e0d1a-175">Wenn Ihr Office-Add-in in Outlook Web App läuft, kann die addItemAttachmentAsync-Methode Elemente an andere Elemente als das Element anfügen, das Sie bearbeiten; Dies wird jedoch nicht unterstützt und wird nicht empfohlen.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-175">If your Office add-in is running in Outlook Web App, the addItemAttachmentAsync method can attach items to items other than the item that you are editing; however, this is not supported and is not recommended.</span></span>

      <span data-ttu-id="e0d1a-176">\[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e0d1a-176">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="e0d1a-177">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="e0d1a-177">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="e0d1a-178">\*\* [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Nachrichten verfassen</span><span class="sxs-lookup"><span data-stu-id="e0d1a-178">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Message Compose</span></span>

      <span data-ttu-id="e0d1a-179">**Fehler**:</span><span class="sxs-lookup"><span data-stu-id="e0d1a-179">**Errors**:</span></span>

      - <span data-ttu-id="e0d1a-180">NumberOfAttachmentsExceeded: die Nachricht oder der Termin hat zu viele Anlagen.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-180">NumberOfAttachmentsExceeded: The message or appointment has too many attachments.</span></span>
    name: 'addItemAttachmentAsync(itemId, attachmentName, callback)'
    fullName: 'addItemAttachmentAsync(itemId, attachmentName, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: itemId
          description: '<span data-ttu-id="e0d1a-181">Der Exchange-Bezeichner des Objekts, das angehängt werden soll.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-181">The Exchange identifier of the item to attach.</span></span> <span data-ttu-id="e0d1a-182">Die maximale Länge beträgt 100 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-182">The maximum length is 100 characters.</span></span>'
          type:
            - any
        - id: attachmentName
          description: '<span data-ttu-id="e0d1a-183">Der Name der Anlage, der beim Hochladen der Anlage angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-183">The name of the attachment that is shown while the attachment is uploading.</span></span> <span data-ttu-id="e0d1a-184">Die maximale Länge ist 255 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-184">The maximum length is 255 characters.</span></span>'
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="e0d1a-185">Optional.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-185">Optional.</span></span> <span data-ttu-id="e0d1a-186">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-186">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="e0d1a-187">Bei Erfolg wird der Anlagen Bezeichner in der asyncResult. Value-Eigenschaft bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-187">On success, the attachment identifier will be provided in the asyncResult.value property.</span></span> <span data-ttu-id="e0d1a-188">Wenn beim Hinzufügen der Anlage ein Fehler auftritt, enthält das asyncResult-Objekt ein Error-Objekt, das eine Beschreibung des Fehlers bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-188">If adding the attachment fails, the asyncResult object will contain an Error object that provides a description of the error.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<string>) => void'
  - uid: Outlook_1_2.Office.MessageCompose.getSelectedDataAsync
    summary: |-
      <span data-ttu-id="e0d1a-189">Gibt asynchron ausgewählte Daten aus dem Betreff oder Textkörper einer Nachricht zurück.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-189">Asynchronously returns selected data from the subject or body of a message.</span></span>

      <span data-ttu-id="e0d1a-190">Wenn keine Auswahl vorhanden ist, aber der Cursor sich im Nachrichtentext oder Betreff befindet, gibt die Methode für die ausgewählten Daten NULL zurück.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-190">If there is no selection but the cursor is in the body or subject, the method returns null for the selected data.</span></span> <span data-ttu-id="e0d1a-191">Wenn ein anderes Feld als der Textkörper oder Betreff ausgewählt ist, gibt die Methode den InvalidSelection-Fehler zurück.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-191">If a field other than the body or subject is selected, the method returns the InvalidSelection error.</span></span>

      <span data-ttu-id="e0d1a-192">Rufen Sie für den Zugriff auf die ausgewählten Daten aus der Rückrufmethode asyncResult. Value. Data auf.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-192">To access the selected data from the callback method, call asyncResult.value.data.</span></span> <span data-ttu-id="e0d1a-193">Für den Zugriff auf die Source-Eigenschaft, aus der die Auswahl stammt, rufen Sie die asyncResult. Value. SourceProperty auf, die entweder Textkörper oder Betreff ist.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-193">To access the source property that the selection comes from, call asyncResult.value.sourceProperty, which will be either body or subject.</span></span>

      <span data-ttu-id="e0d1a-194">\[[API-Satz: Mailbox 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e0d1a-194">\[ [API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="e0d1a-195">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="e0d1a-195">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="e0d1a-196">\*\* [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Nachrichten verfassen</span><span class="sxs-lookup"><span data-stu-id="e0d1a-196">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Message Compose</span></span>

      #### <a name="examples"></a><span data-ttu-id="e0d1a-197">Beispiele</span><span class="sxs-lookup"><span data-stu-id="e0d1a-197">Examples</span></span>

      ```javascript
      // Get selected data.
      Office.initialize = function () {
          Office.context.mailbox.item.getSelectedDataAsync(Office.CoercionType.Text, {}, getCallback);
      };

      function getCallback(asyncResult) {
          var text = asyncResult.value.data;
          var prop = asyncResult.value.sourceProperty;

          Office.context.mailbox.item.setSelectedDataAsync('Setting ' + prop + ': ' + text, {}, setCallback);
      }

      function setCallback(asyncResult) {
          // Check for errors.
      }
      ```
    name: 'getSelectedDataAsync(coercionType, options, callback)'
    fullName: 'getSelectedDataAsync(coercionType, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedDataAsync(coercionType: Office.CoercionType, options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<any>) => void): void;'
      return:
        type:
          - void
        description: <span data-ttu-id="e0d1a-198">Die ausgewählten Daten als Zeichenfolge mit dem durch coercionType bestimmten Format.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-198">The selected data as a string with format determined by coercionType.</span></span>
      parameters:
        - id: coercionType
          description: '<span data-ttu-id="e0d1a-199">Fordert ein Format für die Daten an.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-199">Requests a format for the data.</span></span> <span data-ttu-id="e0d1a-200">Wenn Text, gibt die Methode den nur-Text als Zeichenfolge zurück, wobei alle vorhandenen HTML-Tags entfernt werden.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-200">If Text, the method returns the plain text as a string, removing any HTML tags present.</span></span> <span data-ttu-id="e0d1a-201">Wenn es sich um HTML handelt, gibt die Methode den ausgewählten Text zurück, entweder als unformatierten Text oder als HTML.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-201">If HTML, the method returns the selected text, whether it is plaintext or HTML.</span></span>'
          type:
            - Office.CoercionType
        - id: options
          description: '<span data-ttu-id="e0d1a-202">Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-202">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="e0d1a-203">AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-203">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="e0d1a-204">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-204">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<any>) => void'
  - uid: Outlook_1_2.Office.MessageCompose.getSelectedDataAsync_1
    summary: |-
      <span data-ttu-id="e0d1a-205">Gibt asynchron ausgewählte Daten aus dem Betreff oder Textkörper einer Nachricht zurück.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-205">Asynchronously returns selected data from the subject or body of a message.</span></span>

      <span data-ttu-id="e0d1a-206">Wenn keine Auswahl vorhanden ist, aber der Cursor sich im Nachrichtentext oder Betreff befindet, gibt die Methode für die ausgewählten Daten NULL zurück.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-206">If there is no selection but the cursor is in the body or subject, the method returns null for the selected data.</span></span> <span data-ttu-id="e0d1a-207">Wenn ein anderes Feld als der Textkörper oder Betreff ausgewählt ist, gibt die Methode den InvalidSelection-Fehler zurück.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-207">If a field other than the body or subject is selected, the method returns the InvalidSelection error.</span></span>

      <span data-ttu-id="e0d1a-208">Rufen Sie für den Zugriff auf die ausgewählten Daten aus der Rückrufmethode asyncResult. Value. Data auf.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-208">To access the selected data from the callback method, call asyncResult.value.data.</span></span> <span data-ttu-id="e0d1a-209">Für den Zugriff auf die Source-Eigenschaft, aus der die Auswahl stammt, rufen Sie die asyncResult. Value. SourceProperty auf, die entweder Textkörper oder Betreff ist.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-209">To access the source property that the selection comes from, call asyncResult.value.sourceProperty, which will be either body or subject.</span></span>

      <span data-ttu-id="e0d1a-210">\[[API-Satz: Mailbox 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e0d1a-210">\[ [API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="e0d1a-211">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="e0d1a-211">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="e0d1a-212">\*\* [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Nachrichten verfassen</span><span class="sxs-lookup"><span data-stu-id="e0d1a-212">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Message Compose</span></span>
    name: 'getSelectedDataAsync(coercionType, callback)'
    fullName: 'getSelectedDataAsync(coercionType, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedDataAsync(coercionType: Office.CoercionType, callback: (asyncResult: Office.AsyncResult<any>) => void): void;'
      return:
        type:
          - void
        description: <span data-ttu-id="e0d1a-213">Die ausgewählten Daten als Zeichenfolge mit dem durch coercionType bestimmten Format.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-213">The selected data as a string with format determined by coercionType.</span></span>
      parameters:
        - id: coercionType
          description: '<span data-ttu-id="e0d1a-214">Fordert ein Format für die Daten an.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-214">Requests a format for the data.</span></span> <span data-ttu-id="e0d1a-215">Wenn Text, gibt die Methode den nur-Text als Zeichenfolge zurück, wobei alle vorhandenen HTML-Tags entfernt werden.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-215">If Text, the method returns the plain text as a string, removing any HTML tags present.</span></span> <span data-ttu-id="e0d1a-216">Wenn es sich um HTML handelt, gibt die Methode den ausgewählten Text zurück, entweder als unformatierten Text oder als HTML.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-216">If HTML, the method returns the selected text, whether it is plaintext or HTML.</span></span>'
          type:
            - Office.CoercionType
        - id: callback
          description: '<span data-ttu-id="e0d1a-217">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-217">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<any>) => void'
  - uid: Outlook_1_2.Office.MessageCompose.loadCustomPropertiesAsync
    summary: |-
      <span data-ttu-id="e0d1a-218">Lädt asynchron benutzerdefinierte Eigenschaften für dieses Add-In für das ausgewählte Element.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-218">Asynchronously loads custom properties for this add-in on the selected item.</span></span>

      <span data-ttu-id="e0d1a-219">Benutzerdefinierte Eigenschaften werden als Schlüssel-/Wert-Paare pro App und pro Element gespeichert.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-219">Custom properties are stored as key/value pairs on a per-app, per-item basis.</span></span> <span data-ttu-id="e0d1a-220">Diese Methode gibt ein CustomProperties-Objekt im Rückruf zurück, das Methoden für den Zugriff auf die benutzerdefinierten Eigenschaften des aktuellen Elements und des aktuellen Add-ins bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-220">This method returns a CustomProperties object in the callback, which provides methods to access the custom properties specific to the current item and the current add-in.</span></span> <span data-ttu-id="e0d1a-221">Benutzerdefinierte Eigenschaften sind für das Element nicht verschlüsselt und sollten darum nicht als sicherer Speicher verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-221">Custom properties are not encrypted on the item, so this should not be used as secure storage.</span></span>

      <span data-ttu-id="e0d1a-222">Die benutzerdefinierten Eigenschaften werden als CustomProperties-Objekt in der asyncResult. Value-Eigenschaft bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-222">The custom properties are provided as a CustomProperties object in the asyncResult.value property.</span></span> <span data-ttu-id="e0d1a-223">Dieses Objekt kann verwendet werden, um benutzerdefinierte Eigenschaften aus dem Element abzurufen, festzulegen und zu entfernen und um Änderungen am benutzerdefinierten Eigenschaftssatz wieder auf dem Server zu speichern.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-223">This object can be used to get, set, and remove custom properties from the item and save changes to the custom property set back to the server.</span></span>

      <span data-ttu-id="e0d1a-224">\[[API-Satz: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e0d1a-224">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="e0d1a-225">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="e0d1a-225">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="e0d1a-226">\*\* [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Nachrichten verfassen</span><span class="sxs-lookup"><span data-stu-id="e0d1a-226">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Message Compose</span></span>
    name: 'loadCustomPropertiesAsync(callback, userContext)'
    fullName: 'loadCustomPropertiesAsync(callback, userContext)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'loadCustomPropertiesAsync(callback: (asyncResult: Office.AsyncResult<CustomProperties>) => void, userContext?: any): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="e0d1a-227">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-227">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<CustomProperties>) => void'
        - id: userContext
          description: '<span data-ttu-id="e0d1a-228">Optional.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-228">Optional.</span></span> <span data-ttu-id="e0d1a-229">Entwickler können ein beliebiges Objekt bereitstellen, auf das sie in der Callbackfunktion zugreifen möchten.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-229">Developers can provide any object they wish to access in the callback function.</span></span> <span data-ttu-id="e0d1a-230">Auf dieses Objekt kann über die asyncResult. AsyncContext-Eigenschaft in der Rückruffunktion zugegriffen werden.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-230">This object can be accessed by the asyncResult.asyncContext property in the callback function.</span></span>'
          type:
            - any
  - uid: Outlook_1_2.Office.MessageCompose.removeAttachmentAsync
    summary: |-
      <span data-ttu-id="e0d1a-231">Entfernt eine Anlage aus einer Nachricht oder einem Termin.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-231">Removes an attachment from a message or appointment.</span></span>

      <span data-ttu-id="e0d1a-232">Die removeAttachmentAsync-Methode entfernt die Anlage mit dem angegebenen Bezeichner aus dem Element.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-232">The removeAttachmentAsync method removes the attachment with the specified identifier from the item.</span></span> <span data-ttu-id="e0d1a-233">Als bewährte Vorgehensweise sollten Sie den Anlagenbezeichner nur dann zum Entfernen einer Anlage verwenden, wenn die gleiche Mail-App die Anlage in der gleichen Sitzung hinzugefügt hat.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-233">As a best practice, you should use the attachment identifier to remove an attachment only if the same mail app has added that attachment in the same session.</span></span> <span data-ttu-id="e0d1a-234">In Outlook Web App und OWA für Geräte ist der Anlagenbezeichner nur innerhalb der gleichen Sitzung gültig.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-234">In Outlook Web App and OWA for Devices, the attachment identifier is valid only within the same session.</span></span> <span data-ttu-id="e0d1a-235">Eine Sitzung ist beendet, wenn der Benutzer die APP schließt oder wenn der Benutzer mit dem Erstellen eines Inline Formulars beginnt, und anschließend das Formular zum Fortsetzen in einem separaten Fenster öffnet.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-235">A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.</span></span>

      <span data-ttu-id="e0d1a-236">\[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e0d1a-236">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="e0d1a-237">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="e0d1a-237">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="e0d1a-238">\*\* [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Nachrichten verfassen</span><span class="sxs-lookup"><span data-stu-id="e0d1a-238">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Message Compose</span></span>

      <span data-ttu-id="e0d1a-239">**Fehler**:</span><span class="sxs-lookup"><span data-stu-id="e0d1a-239">**Errors**:</span></span>

      - <span data-ttu-id="e0d1a-240">InvalidAttachmentId: der Anlagen Bezeichner ist nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-240">InvalidAttachmentId: The attachment identifier does not exist.</span></span>

      #### <a name="examples"></a><span data-ttu-id="e0d1a-241">Beispiele</span><span class="sxs-lookup"><span data-stu-id="e0d1a-241">Examples</span></span>

      ```javascript
      // The following code removes an attachment with an identifier of '0'.
      Office.context.mailbox.item.removeAttachmentAsync(
          '0',
          { asyncContext : null },
          function (asyncResult)
          {
              console.log(asyncResult.status);
          }
      );
      ```
    name: 'removeAttachmentAsync(attachmentId, options, callback)'
    fullName: 'removeAttachmentAsync(attachmentId, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeAttachmentAsync(attachmentId: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: attachmentId
          description: <span data-ttu-id="e0d1a-242">Der Bezeichner der zu entfernenden Anlage.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-242">The identifier of the attachment to remove.</span></span>
          type:
            - string
        - id: options
          description: '<span data-ttu-id="e0d1a-243">Optional.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-243">Optional.</span></span> <span data-ttu-id="e0d1a-244">Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-244">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="e0d1a-245">AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-245">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - Office.AsyncContextOptions
        - id: callback
          description: '<span data-ttu-id="e0d1a-246">Optional.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-246">Optional.</span></span> <span data-ttu-id="e0d1a-247">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-247">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="e0d1a-248">Wenn das Entfernen der Anlage fehlschlägt, enthält die asyncResult. Error-Eigenschaft einen Fehlercode mit dem Grund für den Fehler.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-248">If removing the attachment fails, the asyncResult.error property will contain an error code with the reason for the failure.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: Outlook_1_2.Office.MessageCompose.removeAttachmentAsync_1
    summary: |-
      <span data-ttu-id="e0d1a-249">Entfernt eine Anlage aus einer Nachricht oder einem Termin.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-249">Removes an attachment from a message or appointment.</span></span>

      <span data-ttu-id="e0d1a-250">Die removeAttachmentAsync-Methode entfernt die Anlage mit dem angegebenen Bezeichner aus dem Element.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-250">The removeAttachmentAsync method removes the attachment with the specified identifier from the item.</span></span> <span data-ttu-id="e0d1a-251">Als bewährte Vorgehensweise sollten Sie den Anlagenbezeichner nur dann zum Entfernen einer Anlage verwenden, wenn die gleiche Mail-App die Anlage in der gleichen Sitzung hinzugefügt hat.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-251">As a best practice, you should use the attachment identifier to remove an attachment only if the same mail app has added that attachment in the same session.</span></span> <span data-ttu-id="e0d1a-252">In Outlook Web App und OWA für Geräte ist der Anlagenbezeichner nur innerhalb der gleichen Sitzung gültig.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-252">In Outlook Web App and OWA for Devices, the attachment identifier is valid only within the same session.</span></span> <span data-ttu-id="e0d1a-253">Eine Sitzung ist beendet, wenn der Benutzer die APP schließt oder wenn der Benutzer mit dem Erstellen eines Inline Formulars beginnt, und anschließend das Formular zum Fortsetzen in einem separaten Fenster öffnet.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-253">A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.</span></span>

      <span data-ttu-id="e0d1a-254">\[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e0d1a-254">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="e0d1a-255">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="e0d1a-255">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="e0d1a-256">\*\* [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Nachrichten verfassen</span><span class="sxs-lookup"><span data-stu-id="e0d1a-256">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Message Compose</span></span>

      <span data-ttu-id="e0d1a-257">**Fehler**:</span><span class="sxs-lookup"><span data-stu-id="e0d1a-257">**Errors**:</span></span>

      - <span data-ttu-id="e0d1a-258">InvalidAttachmentId: der Anlagen Bezeichner ist nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-258">InvalidAttachmentId: The attachment identifier does not exist.</span></span>
    name: 'removeAttachmentAsync(attachmentId, callback)'
    fullName: 'removeAttachmentAsync(attachmentId, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeAttachmentAsync(attachmentId: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: attachmentId
          description: <span data-ttu-id="e0d1a-259">Der Bezeichner der zu entfernenden Anlage.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-259">The identifier of the attachment to remove.</span></span>
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="e0d1a-260">Optional.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-260">Optional.</span></span> <span data-ttu-id="e0d1a-261">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-261">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="e0d1a-262">Wenn das Entfernen der Anlage fehlschlägt, enthält die asyncResult. Error-Eigenschaft einen Fehlercode mit dem Grund für den Fehler.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-262">If removing the attachment fails, the asyncResult.error property will contain an error code with the reason for the failure.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: Outlook_1_2.Office.MessageCompose.setSelectedDataAsync
    summary: |-
      <span data-ttu-id="e0d1a-263">Fügt asynchron Daten in den Textkörper oder Betreff einer Nachricht ein.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-263">Asynchronously inserts data into the body or subject of a message.</span></span>

      <span data-ttu-id="e0d1a-264">Die setSelectedDataAsync-Methode fügt die angegebene Zeichenfolge an der Cursorposition im Betreff oder Textkörper des Elements ein, oder wenn im Editor Text ausgewählt ist, wird der markierte Text ersetzt.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-264">The setSelectedDataAsync method inserts the specified string at the cursor location in the subject or body of the item, or, if text is selected in the editor, it replaces the selected text.</span></span> <span data-ttu-id="e0d1a-265">Wenn sich der Cursor nicht im Body-oder Subject-Feld befindet, wird ein Fehler zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-265">If the cursor is not in the body or subject field, an error is returned.</span></span> <span data-ttu-id="e0d1a-266">Nach dem Einfügen wird der Cursor am Ende des eingefügten Inhalts platziert.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-266">After insertion, the cursor is placed at the end of the inserted content.</span></span>

      <span data-ttu-id="e0d1a-267">\[[API-Satz: Mailbox 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e0d1a-267">\[ [API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="e0d1a-268">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="e0d1a-268">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="e0d1a-269">\*\* [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Nachrichten verfassen</span><span class="sxs-lookup"><span data-stu-id="e0d1a-269">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Message Compose</span></span>

      <span data-ttu-id="e0d1a-270">**Fehler**:</span><span class="sxs-lookup"><span data-stu-id="e0d1a-270">**Errors**:</span></span>

      - <span data-ttu-id="e0d1a-271">InvalidAttachmentId: der Anlagen Bezeichner ist nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-271">InvalidAttachmentId: The attachment identifier does not exist.</span></span>

      #### <a name="examples"></a><span data-ttu-id="e0d1a-272">Beispiele</span><span class="sxs-lookup"><span data-stu-id="e0d1a-272">Examples</span></span>

      ```javascript
      Office.context.mailbox.item.setSelectedDataAsync("<b>Hello World!</b>", { coercionType : "html" });
      ```
    name: 'setSelectedDataAsync(data, options, callback)'
    fullName: 'setSelectedDataAsync(data, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setSelectedDataAsync(data: string, options?: Office.AsyncContextOptions & CoercionTypeOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: "<span data-ttu-id=\"e0d1a-273\">Die einzufügenden Daten.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e0d1a-273\">The data to be inserted.</span></span> <span data-ttu-id=\"e0d1a-274\">Daten dürfen 1.000.000 Zeichen nicht überschreiten.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e0d1a-274\">Data is not to exceed 1,000,000 characters.</span></span> <span data-ttu-id=\"e0d1a-275\">Werden mehr als 1.000.000\_Zeichen übergeben, wird eine ArgumentOutOfRange-Ausnahme ausgelöst.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e0d1a-275\">If more than 1,000,000 characters are passed in, an ArgumentOutOfRange exception is thrown.</span></span>"
          type:
            - string
        - id: options
          description: '<span data-ttu-id="e0d1a-276">Optional.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-276">Optional.</span></span> <span data-ttu-id="e0d1a-277">Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-277">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="e0d1a-278">AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-278">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span> <span data-ttu-id="e0d1a-279">coercionType: Wenn Text, wird das aktuelle Format in Outlook Web App und Outlook angewendet.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-279">coercionType: If text, the current style is applied in Outlook Web App and Outlook.</span></span> <span data-ttu-id="e0d1a-280">Wenn das Feld ein HTML-Editor ist, werden nur die Textdaten eingefügt, selbst wenn es sich bei den Daten um HTML-Daten handelt.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-280">If the field is an HTML editor, only the text data is inserted, even if the data is HTML.</span></span> <span data-ttu-id="e0d1a-281">Wenn HTML und das Feld HTML unterstützen (der Betreff nicht), wird das aktuelle Format in Outlook Web App angewendet, und die Standardformatvorlage wird in Outlook angewendet.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-281">If html and the field supports HTML (the subject doesn''t), the current style is applied in Outlook Web App and the default style is applied in Outlook.</span></span> <span data-ttu-id="e0d1a-282">Wenn das Feld ein Textfeld ist, wird ein InvalidDataFormat-Fehler zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-282">If the field is a text field, an InvalidDataFormat error is returned.</span></span> <span data-ttu-id="e0d1a-283">Wenn coercionType nicht festgelegt ist, hängt das Ergebnis vom Feld ab: Ist das Feld vom Typ HTML, wird HTML verwendet; ist das Feld vom Typ Text, wird unformatierter Text verwendet.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-283">If coercionType is not set, the result depends on the field: if the field is HTML then HTML is used; if the field is text, then plain text is used.</span></span>'
          type:
            - Office.AsyncContextOptions & CoercionTypeOptions
        - id: callback
          description: '<span data-ttu-id="e0d1a-284">Optional.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-284">Optional.</span></span> <span data-ttu-id="e0d1a-285">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-285">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: Outlook_1_2.Office.MessageCompose.setSelectedDataAsync_1
    summary: |-
      <span data-ttu-id="e0d1a-286">Fügt asynchron Daten in den Textkörper oder Betreff einer Nachricht ein.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-286">Asynchronously inserts data into the body or subject of a message.</span></span>

      <span data-ttu-id="e0d1a-287">Die setSelectedDataAsync-Methode fügt die angegebene Zeichenfolge an der Cursorposition im Betreff oder Textkörper des Elements ein, oder wenn im Editor Text ausgewählt ist, wird der markierte Text ersetzt.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-287">The setSelectedDataAsync method inserts the specified string at the cursor location in the subject or body of the item, or, if text is selected in the editor, it replaces the selected text.</span></span> <span data-ttu-id="e0d1a-288">Wenn sich der Cursor nicht im Body-oder Subject-Feld befindet, wird ein Fehler zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-288">If the cursor is not in the body or subject field, an error is returned.</span></span> <span data-ttu-id="e0d1a-289">Nach dem Einfügen wird der Cursor am Ende des eingefügten Inhalts platziert.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-289">After insertion, the cursor is placed at the end of the inserted content.</span></span>

      <span data-ttu-id="e0d1a-290">\[[API-Satz: Mailbox 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e0d1a-290">\[ [API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="e0d1a-291">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="e0d1a-291">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="e0d1a-292">\*\* [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Nachrichten verfassen</span><span class="sxs-lookup"><span data-stu-id="e0d1a-292">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Message Compose</span></span>

      <span data-ttu-id="e0d1a-293">**Fehler**:</span><span class="sxs-lookup"><span data-stu-id="e0d1a-293">**Errors**:</span></span>

      - <span data-ttu-id="e0d1a-294">InvalidAttachmentId: der Anlagen Bezeichner ist nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-294">InvalidAttachmentId: The attachment identifier does not exist.</span></span>

      #### <a name="examples"></a><span data-ttu-id="e0d1a-295">Beispiele</span><span class="sxs-lookup"><span data-stu-id="e0d1a-295">Examples</span></span>

      ```javascript
      Office.context.mailbox.item.setSelectedDataAsync("Hello World!");
      ```
    name: 'setSelectedDataAsync(data, callback)'
    fullName: 'setSelectedDataAsync(data, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setSelectedDataAsync(data: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: "<span data-ttu-id=\"e0d1a-296\">Die einzufügenden Daten.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e0d1a-296\">The data to be inserted.</span></span> <span data-ttu-id=\"e0d1a-297\">Daten dürfen 1.000.000 Zeichen nicht überschreiten.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e0d1a-297\">Data is not to exceed 1,000,000 characters.</span></span> <span data-ttu-id=\"e0d1a-298\">Werden mehr als 1.000.000\_Zeichen übergeben, wird eine ArgumentOutOfRange-Ausnahme ausgelöst.</span><span class=\"sxs-lookup\"><span data-stu-id=\"e0d1a-298\">If more than 1,000,000 characters are passed in, an ArgumentOutOfRange exception is thrown.</span></span>"
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="e0d1a-299">Optional.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-299">Optional.</span></span> <span data-ttu-id="e0d1a-300">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter vom Typ Office. AsyncResult aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-300">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>'
          type:
            - '(asyncResult: Office.AsyncResult<void>) => void'
  - uid: Outlook_1_2.Office.MessageCompose.bcc
    summary: |-
      <span data-ttu-id="e0d1a-301">Ruft ein Objekt ab, das Methoden zum Abrufen oder Aktualisieren der Empfänger in der Zeile „Bcc“ einer Nachricht bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-301">Gets an object that provides methods to get or update the recipients on the Bcc (blind carbon copy) line of a message.</span></span>

      <span data-ttu-id="e0d1a-302">\[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e0d1a-302">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="e0d1a-303">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="e0d1a-303">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="e0d1a-304">\*\* [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Nachrichten verfassen</span><span class="sxs-lookup"><span data-stu-id="e0d1a-304">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Message Compose</span></span>

      #### <a name="examples"></a><span data-ttu-id="e0d1a-305">Beispiele</span><span class="sxs-lookup"><span data-stu-id="e0d1a-305">Examples</span></span>

      ```javascript
      Office.context.mailbox.item.bcc.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );
      Office.context.mailbox.item.bcc.addAsync( ['jason@contoso.com'] );
      Office.context.mailbox.item.bcc.getAsync(callback);

      function callback(asyncResult) {
          var arrayOfBccRecipients = asyncResult.value;
      }
      ```
    name: bcc
    fullName: bcc
    langs:
      - typeScript
    type: property
    syntax:
      content: 'bcc: Recipients;'
      return:
        type:
          - Recipients
  - uid: Outlook_1_2.Office.MessageCompose.body
    summary: |-
      <span data-ttu-id="e0d1a-306">Ruft ein Objekt ab, das Methoden zum Bearbeiten des Textkörpers eines Elements bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-306">Gets an object that provides methods for manipulating the body of an item.</span></span>

      <span data-ttu-id="e0d1a-307">\[[API-Satz: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e0d1a-307">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="e0d1a-308">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="e0d1a-308">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="e0d1a-309">\*\* [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Nachrichten verfassen</span><span class="sxs-lookup"><span data-stu-id="e0d1a-309">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Message Compose</span></span>

      #### <a name="examples"></a><span data-ttu-id="e0d1a-310">Beispiele</span><span class="sxs-lookup"><span data-stu-id="e0d1a-310">Examples</span></span>

      ```javascript
      // This example gets the body of the item as plain text.
      Office.context.mailbox.item.body.getAsync(
          "text",
          { asyncContext: "This is passed to the callback" },
          function callback(result) {
              // Do something with the result.
          });

      // The following is an example of the result parameter passed to the callback function.
      {
          "value": "TEXT of whole body (including threads below)",
          "status": "succeeded",
          "asyncContext": "This is passed to the callback"
      }
      ```
    name: body
    fullName: body
    langs:
      - typeScript
    type: property
    syntax:
      content: 'body: Body;'
      return:
        type:
          - Body
  - uid: Outlook_1_2.Office.MessageCompose.cc
    summary: |-
      <span data-ttu-id="e0d1a-311">Bietet Zugriff auf die Kopienempfänger (Cc) einer Nachricht.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-311">Provides access to the Cc (carbon copy) recipients of a message.</span></span> <span data-ttu-id="e0d1a-312">Der Typ des Objekts und die Zugriffsebene hängen vom Modus des aktuellen Elements ab.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-312">The type of object and level of access depends on the mode of the current item.</span></span>

      <span data-ttu-id="e0d1a-313">Die CC-Eigenschaft gibt ein [Office. Recipients](xref:Outlook_1_2.Office.Recipients) -Objekt zurück, das Methoden zum Abrufen oder Aktualisieren der Empfänger in der CC-Zeile der Nachricht bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-313">The cc property returns an [Office.Recipients](xref:Outlook_1_2.Office.Recipients) object that provides methods to get or update the recipients on the Cc line of the message.</span></span>

      <span data-ttu-id="e0d1a-314">\[[API-Satz: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e0d1a-314">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="e0d1a-315">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="e0d1a-315">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="e0d1a-316">\*\* [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Nachrichten verfassen</span><span class="sxs-lookup"><span data-stu-id="e0d1a-316">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Message Compose</span></span>

      #### <a name="examples"></a><span data-ttu-id="e0d1a-317">Beispiele</span><span class="sxs-lookup"><span data-stu-id="e0d1a-317">Examples</span></span>

      ```javascript
      Office.context.mailbox.item.cc.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );
      Office.context.mailbox.item.cc.addAsync( ['jason@contoso.com'] );
      Office.context.mailbox.item.cc.getAsync(callback);

      function callback(asyncResult) {
          var arrayOfCcRecipients = asyncResult.value;
      }
      ```
    name: cc
    fullName: cc
    langs:
      - typeScript
    type: property
    syntax:
      content: 'cc: Recipients;'
      return:
        type:
          - Recipients
  - uid: Outlook_1_2.Office.MessageCompose.conversationId
    summary: |-
      <span data-ttu-id="e0d1a-318">Ruft einen Bezeichner für die E-Mail-Unterhaltung ab, in der eine bestimmte Nachricht enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-318">Gets an identifier for the email conversation that contains a particular message.</span></span>

      <span data-ttu-id="e0d1a-p141">Sie können für diese Eigenschaft eine ganze Zahl abrufen, wenn Ihre Mail-App in Formularen zum Lesen oder Antworten in Formularen zum Verfassen aktiviert wird. Wenn der Benutzer den Betreff der Antwortnachricht ändert, ändert sich beim Versenden die Konversations-ID für die entsprechende Nachricht, und der Wert, den Sie vorher bezogen haben, trifft nicht länger zu.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-p141">You can get an integer for this property if your mail app is activated in read forms or responses in compose forms. If subsequently the user changes the subject of the reply message, upon sending the reply, the conversation ID for that message will change and that value you obtained earlier will no longer apply.</span></span>

      <span data-ttu-id="e0d1a-321">Sie erhalten in einem Formular zum Verfassen für diese Eigenschaft für ein neues Element null.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-321">You get null for this property for a new item in a compose form.</span></span> <span data-ttu-id="e0d1a-322">Wenn der Benutzer einen Betreff festlegt und das Element speichert, gibt die Conversation-Eigenschaft einen Wert zurück.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-322">If the user sets a subject and saves the item, the conversationId property will return a value.</span></span>

      <span data-ttu-id="e0d1a-323">\[[API-Satz: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e0d1a-323">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="e0d1a-324">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="e0d1a-324">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="e0d1a-325">\*\* [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Nachrichten verfassen</span><span class="sxs-lookup"><span data-stu-id="e0d1a-325">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Message Compose</span></span>

      #### <a name="examples"></a><span data-ttu-id="e0d1a-326">Beispiele</span><span class="sxs-lookup"><span data-stu-id="e0d1a-326">Examples</span></span>

      ```javascript
      var conversationId = Office.context.mailbox.item.conversationId;
      console.log("conversationId: " + conversationId);
      ```
    name: conversationId
    fullName: conversationId
    langs:
      - typeScript
    type: property
    syntax:
      content: 'conversationId: string;'
      return:
        type:
          - string
  - uid: Outlook_1_2.Office.MessageCompose.itemType
    summary: |-
      <span data-ttu-id="e0d1a-327">Ruft den Typ des Elements ab, das eine Instanz darstellt.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-327">Gets the type of item that an instance represents.</span></span>

      <span data-ttu-id="e0d1a-328">Die itemType-Eigenschaft gibt einen der ItemType-Enumerationswerte zurück, der angibt, ob es sich bei der Item-Objektinstanz um eine Nachricht oder einen Termin handelt.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-328">The itemType property returns one of the ItemType enumeration values, indicating whether the item object instance is a message or an appointment.</span></span>

      <span data-ttu-id="e0d1a-329">\[[API-Satz: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e0d1a-329">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="e0d1a-330">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="e0d1a-330">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="e0d1a-331">\*\* [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Nachrichten verfassen</span><span class="sxs-lookup"><span data-stu-id="e0d1a-331">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Message Compose</span></span>

      #### <a name="examples"></a><span data-ttu-id="e0d1a-332">Beispiele</span><span class="sxs-lookup"><span data-stu-id="e0d1a-332">Examples</span></span>

      ```javascript
      if (Office.context.mailbox.item.itemType === Office.MailboxEnums.ItemType.Message) {
          // Do something.
      } else {
          // Do something else.
      }
      ```
    name: itemType
    fullName: itemType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'itemType: MailboxEnums.ItemType;'
      return:
        type:
          - MailboxEnums.ItemType
  - uid: Outlook_1_2.Office.MessageCompose.subject
    summary: |-
      <span data-ttu-id="e0d1a-333">Ruft die Beschreibung ab, die im Betrefffeld eines Elements angezeigt wird, oder legt sie fest.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-333">Gets or sets the description that appears in the subject field of an item.</span></span>

      <span data-ttu-id="e0d1a-334">Die Subject-Eigenschaft ruft den gesamten Betreff des Elements ab oder legt ihn fest, wie er vom e-Mail-Server gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-334">The subject property gets or sets the entire subject of the item, as sent by the email server.</span></span>

      <span data-ttu-id="e0d1a-335">Die Subject-Eigenschaft gibt ein Subject-Objekt zurück, das Methoden zum Abrufen und Festlegen des Betreffs bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-335">The subject property returns a Subject object that provides methods to get and set the subject.</span></span>

      <span data-ttu-id="e0d1a-336">\[[API-Satz: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e0d1a-336">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="e0d1a-337">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="e0d1a-337">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="e0d1a-338">\*\* [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Nachrichten verfassen</span><span class="sxs-lookup"><span data-stu-id="e0d1a-338">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Message Compose</span></span>

      #### <a name="examples"></a><span data-ttu-id="e0d1a-339">Beispiele</span><span class="sxs-lookup"><span data-stu-id="e0d1a-339">Examples</span></span>

      ```javascript
      Office.context.mailbox.item.subject.getAsync(callback);

      function callback(asyncResult) {
          var subject = asyncResult.value;
      }
      ```
    name: subject
    fullName: subject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subject: Subject;'
      return:
        type:
          - Subject
  - uid: Outlook_1_2.Office.MessageCompose.to
    summary: |-
      <span data-ttu-id="e0d1a-340">Bietet Zugriff auf die Empfänger in der Zeile An einer Nachricht.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-340">Provides access to the recipients on the To line of a message.</span></span> <span data-ttu-id="e0d1a-341">Der Typ des Objekts und die Zugriffsebene hängen vom Modus des aktuellen Elements ab.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-341">The type of object and level of access depends on the mode of the current item.</span></span>

      <span data-ttu-id="e0d1a-342">Die to-Eigenschaft gibt ein Recipients-Objekt zurück, das Methoden zum Abrufen oder Aktualisieren der Empfänger in der an-Reihe der Nachricht bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="e0d1a-342">The to property returns a Recipients object that provides methods to get or update the recipients on the To line of the message.</span></span>

      <span data-ttu-id="e0d1a-343">\[[API-Satz: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="e0d1a-343">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="e0d1a-344">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="e0d1a-344">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="e0d1a-345">\*\* [Anwendbarer Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Nachrichten verfassen</span><span class="sxs-lookup"><span data-stu-id="e0d1a-345">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Message Compose</span></span>

      #### <a name="examples"></a><span data-ttu-id="e0d1a-346">Beispiele</span><span class="sxs-lookup"><span data-stu-id="e0d1a-346">Examples</span></span>

      ```javascript
      Office.context.mailbox.item.to.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );
      Office.context.mailbox.item.to.addAsync( ['jason@contoso.com'] );
      Office.context.mailbox.item.to.getAsync(callback);

      function callback(asyncResult) {
          var arrayOfToRecipients = asyncResult.value;
      }
      ```
    name: to
    fullName: to
    langs:
      - typeScript
    type: property
    syntax:
      content: 'to: Recipients;'
      return:
        type:
          - Recipients