### YamlMime:TSType
name: Excel.Workbook
uid: excel!Excel.Workbook:class
package: excel!
fullName: Excel.Workbook
summary: >-
  Workbook ist das Objekt der obersten Ebene, das zugehörige Workbook-Objekte wie Arbeitsblätter, Tabellen, Bereiche usw. enthält. Weitere Informationen zum Workbook-Objektmodell finden Sie [unter Arbeiten mit Arbeitsmappen mithilfe der Excel-JavaScript-API](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-workbooks) .<!-- -->.


  \[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: application
  uid: excel!Excel.Workbook#application:member
  package: excel!
  fullName: application
  summary: >-
    Stellt die Excel-Anwendungsinstanz dar, die diese Arbeitsmappe enthält.


    \[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly application: Excel.Application;'
    return:
      type: <xref uid="excel!Excel.Application:class" />
- name: bindings
  uid: excel!Excel.Workbook#bindings:member
  package: excel!
  fullName: bindings
  summary: >-
    Stellt eine Auflistung aller Bindungen dar, die Teil der Arbeitsmappe sind.


    \[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly bindings: Excel.BindingCollection;'
    return:
      type: <xref uid="excel!Excel.BindingCollection:class" />
- name: context
  uid: excel!Excel.Workbook#context:member
  package: excel!
  fullName: context
  summary: Der Anforderungskontext, der mit dem Objekt verknüpft ist. Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="excel!Excel.RequestContext:class" />
- name: functions
  uid: excel!Excel.Workbook#functions:member
  package: excel!
  fullName: functions
  summary: >-
    Stellt eine Auflistung von Arbeitsblattfunktionen dar, die für die Berechnung verwendet werden können.


    \[[API-Gruppe: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly functions: Excel.Functions;'
    return:
      type: <xref uid="excel!Excel.Functions:class" />
- name: names
  uid: excel!Excel.Workbook#names:member
  package: excel!
  fullName: names
  summary: >-
    Stellt eine Auflistung der benannten Elemente des Arbeitsmappenbereichs dar (benannte Bereiche und Konstanten).


    \[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly names: Excel.NamedItemCollection;'
    return:
      type: <xref uid="excel!Excel.NamedItemCollection:class" />
- name: onSelectionChanged
  uid: excel!Excel.Workbook#onSelectionChanged:member
  package: excel!
  fullName: onSelectionChanged
  summary: >-
    Tritt ein, wenn die Auswahl im Dokument geändert wird.


    \[[API-Gruppe: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.SelectionChangedEventArgs>;'
    return:
      type: <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref uid="excel!Excel.SelectionChangedEventArgs:interface" />&gt;
- name: pivotTables
  uid: excel!Excel.Workbook#pivotTables:member
  package: excel!
  fullName: pivotTables
  summary: >-
    Stellt eine Auflistung der mit der Arbeitsmappe verknüpften PivotTables dar.


    \[[API-Gruppe: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly pivotTables: Excel.PivotTableCollection;'
    return:
      type: <xref uid="excel!Excel.PivotTableCollection:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```typescript\n// Link to full sample: https://raw.githubusercontent.com/OfficeDev/office-js-snippets/master/samples/excel/38-pivottable/pivottable-get-pivottables.yaml\nawait Excel.run(async (context) => {\n  // Get the names of all the PivotTables in the workbook.\n  const pivotTables = context.workbook.pivotTables;\n  pivotTables.load(\"name\");\n  await context.sync();\n\n  // Display the names in the console.\n  console.log(\"PivotTables in the workbook:\")\n  pivotTables.items.forEach((pivotTable) => {\n    console.log(`\\t${pivotTable.name}`);\n  });\n});\n```"
- name: tables
  uid: excel!Excel.Workbook#tables:member
  package: excel!
  fullName: tables
  summary: >-
    Stellt eine Auflistung der mit der Arbeitsmappe verknüpften Tabellen dar.


    \[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly tables: Excel.TableCollection;'
    return:
      type: <xref uid="excel!Excel.TableCollection:class" />
- name: worksheets
  uid: excel!Excel.Workbook#worksheets:member
  package: excel!
  fullName: worksheets
  summary: >-
    Stellt eine Auflistung der mit der Arbeitsmappe verknüpften Arbeitsblätter dar.


    \[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly worksheets: Excel.WorksheetCollection;'
    return:
      type: <xref uid="excel!Excel.WorksheetCollection:class" />
methods:
- name: getSelectedRange()
  uid: excel!Excel.Workbook#getSelectedRange:member(1)
  package: excel!
  fullName: getSelectedRange()
  summary: >-
    Ruft den aktuell ausgewählten einzelnen Bereich aus der Arbeitsmappe ab. Wenn mehrere Bereiche ausgewählt sind, wird durch diese Methode ein Fehler ausgelöst.


    \[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getSelectedRange(): Excel.Range;'
    return:
      type: <xref uid="excel!Excel.Range:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\nExcel.run(function (ctx) { \n    var selectedRange = ctx.workbook.getSelectedRange();\n    selectedRange.load('address');\n    return ctx.sync().then(function() {\n            console.log(selectedRange.address);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(options)
  uid: excel!Excel.Workbook#load:member(1)
  package: excel!
  fullName: load(options)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(options?: Excel.Interfaces.WorkbookLoadOptions): Excel.Workbook;'
    parameters:
    - id: options
      description: Enthält Optionen für die Eigenschaften des zu ladenden Objekts.
      type: <xref uid="excel!Excel.Interfaces.WorkbookLoadOptions:interface" />
    return:
      type: <xref uid="excel!Excel.Workbook:class" />
      description: ''
- name: load(propertyNames)
  uid: excel!Excel.Workbook#load:member(2)
  package: excel!
  fullName: load(propertyNames)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Excel.Workbook;'
    parameters:
    - id: propertyNames
      description: Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.
      type: string | string[]
    return:
      type: <xref uid="excel!Excel.Workbook:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: excel!Excel.Workbook#load:member(3)
  package: excel!
  fullName: load(propertyNamesAndPaths)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: >-
      load(propertyNamesAndPaths?: {
                  select?: string;
                  expand?: string;
              }): Excel.Workbook;
    parameters:
    - id: propertyNamesAndPaths
      description: '`propertyNamesAndPaths.select` ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und `propertyNamesAndPaths.expand` ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.'
      type: >-
        {
                    select?: string;
                    expand?: string;
                }
    return:
      type: <xref uid="excel!Excel.Workbook:class" />
      description: ''
- name: set(properties, options)
  uid: excel!Excel.Workbook#set:member(1)
  package: excel!
  fullName: set(properties, options)
  summary: Legt mehrere Eigenschaften eines Objekts gleichzeitig fest. Sie können entweder ein einfaches Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs übergeben.
  remarks: >-
    Diese Methode hat die folgende zusätzliche Signatur:


    `set(properties: Excel.Workbook): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.WorkbookUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: Ein JavaScript-Objekt mit Eigenschaften, die isomorphically für die Eigenschaften des Objekts strukturiert sind, für das die Methode aufgerufen wird.
      type: <xref uid="excel!Excel.Interfaces.WorkbookUpdateData:interface" />
    - id: options
      description: Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: excel!Excel.Workbook#set:member(2)
  package: excel!
  fullName: set(properties)
  summary: Legt mehrere Eigenschaften für das Objekt gleichzeitig basierend auf einem vorhandenen geladenen Objekt fest.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Excel.Workbook): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="excel!Excel.Workbook:class" />
    return:
      type: void
      description: ''
- name: toJSON()
  uid: excel!Excel.Workbook#toJSON:member(1)
  package: excel!
  fullName: toJSON()
  summary: Überschreibt die JavaScript `toJSON()` -Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird. `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche Excel. Workbook-Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt (typisiert als `Excel.Interfaces.WorkbookData`<!-- -->), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Excel.Interfaces.WorkbookData;'
    return:
      type: <xref uid="excel!Excel.Interfaces.WorkbookData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: f7cad24af63cfb4c873911e773b31bb26de593ca
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49221148"
