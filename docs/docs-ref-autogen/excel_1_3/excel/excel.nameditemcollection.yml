### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.NamedItemCollection:class'
    summary: |-
      Eine Auflistung aller NamedItem-Objekte, die Teil der Arbeitsmappe oder des Arbeitsblatts sind, je nachdem, wie Sie erreicht wurde.

      \[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.NamedItemCollection
    fullName: Excel.NamedItemCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'office!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.NamedItemCollection#context:member'
      - 'excel!Excel.NamedItemCollection#getItem:member(1)'
      - 'excel!Excel.NamedItemCollection#items:member'
      - 'excel!Excel.NamedItemCollection#load:member(1)'
      - 'excel!Excel.NamedItemCollection#load:member(2)'
      - 'excel!Excel.NamedItemCollection#load:member(3)'
      - 'excel!Excel.NamedItemCollection#toJSON:member(1)'
  - uid: 'excel!Excel.NamedItemCollection#context:member'
    summary: 'Der Anforderungskontext, der mit dem Objekt verknüpft ist. Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.NamedItemCollection#getItem:member(1)'
    summary: |-
      Ruft ein NamedItem-Objekt mit seinem Namen ab.

      \[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.NamedItem;'
      return:
        type:
          - 'excel!Excel.NamedItem:class'
        description: |-


          #### <a name="examples"></a>Beispiele

          ```javascript
          Excel.run(function (ctx) { 
              var sheetName = 'Sheet1';
              var nameditem = ctx.workbook.names.getItem(sheetName);
              nameditem.load('type');
              return ctx.sync().then(function() {
                      console.log(nameditem.type);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: name
          description: NamedItem-Name.
          type:
            - string
  - uid: 'excel!Excel.NamedItemCollection#items:member'
    summary: Ruft die geladenen untergeordneten Elemente in dieser Sammlung ab.
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.NamedItem[];'
      return:
        type:
          - 'excel!Excel.NamedItemCollection#items~0:complex'
  - uid: 'excel!Excel.NamedItemCollection#load:member(1)'
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.NamedItemCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.NamedItemCollection;'
      return:
        type:
          - 'excel!Excel.NamedItemCollection:class'
        description: ''
      parameters:
        - id: options
          description: Enthält Optionen für die Eigenschaften des zu ladenden Objekts.
          type:
            - 'excel!Excel.NamedItemCollection#load~0:complex'
  - uid: 'excel!Excel.NamedItemCollection#load:member(2)'
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.NamedItemCollection;'
      return:
        type:
          - 'excel!Excel.NamedItemCollection:class'
        description: |-


          #### <a name="examples"></a>Beispiele

          ```javascript
          Excel.run(function (ctx) { 
              var nameditems = ctx.workbook.names;
              nameditems.load('items');
              return ctx.sync().then(function() {
                  for (var i = 0; i < nameditems.items.length; i++)
                  {
                      console.log(nameditems.items[i].name);
                      console.log(nameditems.items[i].index);
                  }
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: 'Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.NamedItemCollection#load:member(3)'
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.NamedItemCollection;'
      return:
        type:
          - 'excel!Excel.NamedItemCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften `propertyNamesAndPaths.expand` angibt, und ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.'
          type:
            - 'office!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.NamedItemCollection#toJSON:member(1)'
    summary: 'Überschreibt die `toJSON()` JavaScript-Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird.`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche `Excel.NamedItemCollection` Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`Excel.Interfaces.NamedItemCollectionData`<!-- -->), die ein "Items"-Array mit flachen Kopien aller geladenen Eigenschaften aus den Elementen der Auflistung enthält.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.NamedItemCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.NamedItemCollectionData:interface'
        description: ''
references:
  - uid: 'office!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.NamedItem:class'
    name: Excel.NamedItem
  - uid: 'excel!Excel.NamedItemCollection#items~0:complex'
    name: 'Excel.NamedItem[]'
    fullName: 'Excel.NamedItem[]'
    spec.typeScript:
      - uid: 'excel!Excel.NamedItem:class'
        name: Excel.NamedItem
        fullName: Excel.NamedItem
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.NamedItemCollection:class'
    name: Excel.NamedItemCollection
  - uid: 'excel!Excel.NamedItemCollection#load~0:complex'
    name: Excel.Interfaces.NamedItemCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.NamedItemCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.NamedItemCollectionLoadOptions:interface'
        name: Excel.Interfaces.NamedItemCollectionLoadOptions
        fullName: Excel.Interfaces.NamedItemCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'office!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.NamedItemCollectionData:interface'
    name: Excel.Interfaces.NamedItemCollectionData