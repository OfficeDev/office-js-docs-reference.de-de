### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.NamedItem:class'
    summary: |-
      <span data-ttu-id="8d41d-101">Stellt einen definierten Namen für einen Zellbereich oder einen Wert dar.</span><span class="sxs-lookup"><span data-stu-id="8d41d-101">Represents a defined name for a range of cells or value.</span></span> <span data-ttu-id="8d41d-102">Namen können primitive benannte Objekte sein (wie im Typ unten zu sehen), Range-Objekt oder einen Verweis auf einen Bereich.</span><span class="sxs-lookup"><span data-stu-id="8d41d-102">Names can be primitive named objects (as seen in the type below), range object, or a reference to a range.</span></span> <span data-ttu-id="8d41d-103">Dieses Objekt kann zum Abrufen des mit Namen verknüpften Bereichsobjekts verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="8d41d-103">This object can be used to obtain range object associated with names.</span></span>

      <span data-ttu-id="8d41d-104">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8d41d-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.NamedItem
    fullName: Excel.NamedItem
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.NamedItem#context:member'
      - 'excel!Excel.NamedItem#getRange:member(1)'
      - 'excel!Excel.NamedItem#load:member(1)'
      - 'excel!Excel.NamedItem#load:member(2)'
      - 'excel!Excel.NamedItem#load:member(3)'
      - 'excel!Excel.NamedItem#name:member'
      - 'excel!Excel.NamedItem#set:member(1)'
      - 'excel!Excel.NamedItem#set:member(2)'
      - 'excel!Excel.NamedItem#toJSON:member(1)'
      - 'excel!Excel.NamedItem#type:member'
      - 'excel!Excel.NamedItem#value:member'
      - 'excel!Excel.NamedItem#visible:member'
  - uid: 'excel!Excel.NamedItem#context:member'
    summary: '<span data-ttu-id="8d41d-105">Der Anforderungskontext, der mit dem Objekt verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="8d41d-105">The request context associated with the object.</span></span> <span data-ttu-id="8d41d-106">Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="8d41d-106">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.NamedItem#getRange:member(1)'
    summary: |-
      <span data-ttu-id="8d41d-107">Ruft das Bereichsobjekt ab, das mit dem Namen verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="8d41d-107">Returns the range object that is associated with the name.</span></span> <span data-ttu-id="8d41d-108">Gibt einen Fehler zurück, wenn der Typ des benannten Elements kein Bereich ist.</span><span class="sxs-lookup"><span data-stu-id="8d41d-108">Throws an error if the named item's type is not a range.</span></span>

      <span data-ttu-id="8d41d-109">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8d41d-109">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="8d41d-110">Beispiele</span><span class="sxs-lookup"><span data-stu-id="8d41d-110">Examples</span></span>

          ```javascript
          // Returns the Range object that is associated with the name. 
          // null if the name is not of the type Range.
          // Note: This API currently supports only the Workbook scoped items.
          Excel.run(function (ctx) { 
              var names = ctx.workbook.names;
              var range = names.getItem('MyRange').getRange();
              range.load('address');
              return ctx.sync().then(function() {
                  console.log(range.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.NamedItem#load:member(1)'
    summary: <span data-ttu-id="8d41d-111">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="8d41d-111">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8d41d-112">Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.</span><span class="sxs-lookup"><span data-stu-id="8d41d-112">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="8d41d-113">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="8d41d-113">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="8d41d-114">`load(option?: string | string[]): Excel.NamedItem`-Wobei Option eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="8d41d-114">`load(option?: string | string[]): Excel.NamedItem` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="8d41d-115">`load(option?: { select?: string; expand?: string; }): Excel.NamedItem`-Bei Option. Select handelt es sich um eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="8d41d-115">`load(option?: { select?: string; expand?: string; }): Excel.NamedItem` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="8d41d-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItem`Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="8d41d-116">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.NamedItem` - Only available on collection types.</span></span> <span data-ttu-id="8d41d-117">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="8d41d-117">It is similar to the preceding signature.</span></span> <span data-ttu-id="8d41d-118">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis einbezogen werden können.</span><span class="sxs-lookup"><span data-stu-id="8d41d-118">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="8d41d-119">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="8d41d-119">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="8d41d-120">Wenn Option. Top angegeben ist, wird das Resultset gestartet, nachdem die angegebene Anzahl von Elementen übersprungen wurde.</span><span class="sxs-lookup"><span data-stu-id="8d41d-120">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.NamedItemLoadOptions): Excel.NamedItem;'
      return:
        type:
          - 'excel!Excel.NamedItem:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.NamedItemLoadOptions:interface'
  - uid: 'excel!Excel.NamedItem#load:member(2)'
    summary: <span data-ttu-id="8d41d-121">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="8d41d-121">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8d41d-122">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="8d41d-122">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.NamedItem;'
      return:
        type:
          - 'excel!Excel.NamedItem:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="8d41d-123">Beispiele</span><span class="sxs-lookup"><span data-stu-id="8d41d-123">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var names = ctx.workbook.names;
              var namedItem = names.getItem('MyRange');
              namedItem.load('type');
              return ctx.sync().then(function() {
                      console.log(namedItem.type);
              });
          }).catch(function(error) {
                  console.log("Error: " + error);
                  if (error instanceof OfficeExtension.Error) {
                      console.log("Debug info: " + JSON.stringify(error.debugInfo));
                  }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="8d41d-124">Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="8d41d-124">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.NamedItem#load:member(3)'
    summary: <span data-ttu-id="8d41d-125">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="8d41d-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="8d41d-126">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="8d41d-126">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.NamedItem;'
      return:
        type:
          - 'excel!Excel.NamedItem:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="8d41d-127">Dabei ist propertyNamesAndPaths. Select eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="8d41d-127">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.NamedItem#name:member'
    summary: |-
      <span data-ttu-id="8d41d-128">Der Name des Objekts.</span><span class="sxs-lookup"><span data-stu-id="8d41d-128">The name of the object.</span></span> <span data-ttu-id="8d41d-129">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="8d41d-129">Read-only.</span></span>

      <span data-ttu-id="8d41d-130">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8d41d-130">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.NamedItem#set:member(1)'
    summary: '<span data-ttu-id="8d41d-131">Legt mehrere Eigenschaften eines Objekts gleichzeitig fest.</span><span class="sxs-lookup"><span data-stu-id="8d41d-131">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="8d41d-132">Sie können entweder ein einfaches Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs übergeben.</span><span class="sxs-lookup"><span data-stu-id="8d41d-132">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="8d41d-133">Diese Methode hat die folgende zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="8d41d-133">This method has the following additional signature:</span></span>

      `set(properties: Excel.NamedItem): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.NamedItemUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="8d41d-134">Ein JavaScript-Objekt mit Eigenschaften, die isomorphically für die Eigenschaften des Objekts strukturiert sind, für das die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="8d41d-134">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - 'excel!Excel.Interfaces.NamedItemUpdateData:interface'
        - id: options
          description: '<span data-ttu-id="8d41d-135">Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.</span><span class="sxs-lookup"><span data-stu-id="8d41d-135">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.NamedItem#set:member(2)'
    summary: '<span data-ttu-id="8d41d-136">Legt mehrere Eigenschaften für das Objekt gleichzeitig basierend auf einem vorhandenen geladenen Objekt fest.</span><span class="sxs-lookup"><span data-stu-id="8d41d-136">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.NamedItem): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.NamedItem:class'
  - uid: 'excel!Excel.NamedItem#toJSON:member(1)'
    summary: '<span data-ttu-id="8d41d-137">Überschreibt die `toJSON()` JavaScript-Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird.`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="8d41d-137">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="8d41d-138">.</span><span class="sxs-lookup"><span data-stu-id="8d41d-138"></span></span> <span data-ttu-id="8d41d-139">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="8d41d-139"></span></span><!-- --><span data-ttu-id="8d41d-140">wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche Excel. NamedItem-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`Excel.Interfaces.NamedItemData`</span><span class="sxs-lookup"><span data-stu-id="8d41d-140">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.NamedItem object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.NamedItemData`</span></span><!-- --><span data-ttu-id="8d41d-141">), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="8d41d-141">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.NamedItemData;'
      return:
        type:
          - 'excel!Excel.Interfaces.NamedItemData:interface'
        description: ''
  - uid: 'excel!Excel.NamedItem#type:member'
    summary: |-
      <span data-ttu-id="8d41d-142">Gibt den Typ des Werts, der von der Formel des Namens zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="8d41d-142">Indicates the type of the value returned by the name's formula.</span></span> <span data-ttu-id="8d41d-143">Weitere Informationen finden Sie unter Excel. NamedItemType.</span><span class="sxs-lookup"><span data-stu-id="8d41d-143">See Excel.NamedItemType for details.</span></span> <span data-ttu-id="8d41d-144">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="8d41d-144">Read-only.</span></span>

      <span data-ttu-id="8d41d-145">\[[API-Gruppe: ExcelApi 1,1 für String, Integer, Double, Boolean, Range, Error; 1,7 for Array](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8d41d-145">\[ [API set: ExcelApi 1.1 for String,Integer,Double,Boolean,Range,Error; 1.7 for Array](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array";'
      return:
        type:
          - 'excel!Excel.NamedItem#type~0:complex'
  - uid: 'excel!Excel.NamedItem#value:member'
    summary: |-
      <span data-ttu-id="8d41d-146">Stellt den Wert dar, der von der Formel des Namens berechnet wurde.</span><span class="sxs-lookup"><span data-stu-id="8d41d-146">Represents the value computed by the name's formula.</span></span> <span data-ttu-id="8d41d-147">Für einen benannten Bereich wird die Bereichsadresse zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="8d41d-147">For a named range, will return the range address.</span></span> <span data-ttu-id="8d41d-148">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="8d41d-148">Read-only.</span></span>

      <span data-ttu-id="8d41d-149">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8d41d-149">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly value: any;'
      return:
        type:
          - any
  - uid: 'excel!Excel.NamedItem#visible:member'
    summary: |-
      <span data-ttu-id="8d41d-150">Gibt an, ob das Objekt sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="8d41d-150">Specifies whether the object is visible or not.</span></span>

      <span data-ttu-id="8d41d-151">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="8d41d-151">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: visible
    fullName: visible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'visible: boolean;'
      return:
        type:
          - boolean
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Range:class'
    name: Excel.Range
  - uid: 'excel!Excel.NamedItem:class'
    name: Excel.NamedItem
  - uid: 'excel!Excel.Interfaces.NamedItemLoadOptions:interface'
    name: Excel.Interfaces.NamedItemLoadOptions
  - uid: 'excel!Excel.Interfaces.NamedItemUpdateData:interface'
    name: Interfaces.NamedItemUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.NamedItemData:interface'
    name: Excel.Interfaces.NamedItemData
  - uid: 'excel!Excel.NamedItem#type~0:complex'
    name: Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array"
    fullName: Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array"
    spec.typeScript:
      - uid: 'excel!Excel.NamedItemType:enum'
        name: Excel.NamedItemType
        fullName: Excel.NamedItemType
      - name: ' | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array"'
        fullName: ' | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array"'