### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.PivotTable:class'
    summary: |-
      <span data-ttu-id="4a8c6-101">Stellt eine Excel-PivotTable dar.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-101">Represents an Excel PivotTable.</span></span> <span data-ttu-id="4a8c6-102">Weitere Informationen zum PivotTable-Objektmodell finden Sie [unter Arbeiten mit PivotTables mithilfe der Excel-JavaScript-API](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-pivottables)</span><span class="sxs-lookup"><span data-stu-id="4a8c6-102">To learn more about the PivotTable object model, read [Work with PivotTables using the Excel JavaScript API](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-pivottables)</span></span><!-- --><span data-ttu-id="4a8c6-103">.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-103"></span></span>

      <span data-ttu-id="4a8c6-104">\[[API-Gruppe: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a8c6-104">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.PivotTable
    fullName: Excel.PivotTable
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.PivotTable#columnHierarchies:member'
      - 'excel!Excel.PivotTable#context:member'
      - 'excel!Excel.PivotTable#dataHierarchies:member'
      - 'excel!Excel.PivotTable#delete:member(1)'
      - 'excel!Excel.PivotTable#filterHierarchies:member'
      - 'excel!Excel.PivotTable#hierarchies:member'
      - 'excel!Excel.PivotTable#id:member'
      - 'excel!Excel.PivotTable#layout:member'
      - 'excel!Excel.PivotTable#load:member(1)'
      - 'excel!Excel.PivotTable#load:member(2)'
      - 'excel!Excel.PivotTable#load:member(3)'
      - 'excel!Excel.PivotTable#name:member'
      - 'excel!Excel.PivotTable#refresh:member(1)'
      - 'excel!Excel.PivotTable#rowHierarchies:member'
      - 'excel!Excel.PivotTable#set:member(1)'
      - 'excel!Excel.PivotTable#set:member(2)'
      - 'excel!Excel.PivotTable#toJSON:member(1)'
      - 'excel!Excel.PivotTable#worksheet:member'
  - uid: 'excel!Excel.PivotTable#columnHierarchies:member'
    summary: |-
      <span data-ttu-id="4a8c6-105">Die Pivot-Hierarchien der Spalten von PivotTable.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-105">The Column Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="4a8c6-106">\[[API-Gruppe: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a8c6-106">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: columnHierarchies
    fullName: columnHierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly columnHierarchies: Excel.RowColumnPivotHierarchyCollection;'
      return:
        type:
          - 'excel!Excel.RowColumnPivotHierarchyCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="4a8c6-107">Beispiele</span><span class="sxs-lookup"><span data-stu-id="4a8c6-107">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");       

              // check if the PivotTable already has a column
              const column = pivotTable.columnHierarchies.getItemOrNullObject("Farm");
              column.load("id");
              await context.sync();

              if (column.isNullObject) {
                  // ading the farm column to the column hierarchy automatically removes it from the row hierarchy
                  pivotTable.columnHierarchies.add(pivotTable.hierarchies.getItem("Farm"));
              } else {
                  pivotTable.columnHierarchies.remove(column);
              }

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.PivotTable#context:member'
    summary: '<span data-ttu-id="4a8c6-108">Der Anforderungskontext, der mit dem Objekt verkn√ºpft ist.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-108">The request context associated with the object.</span></span> <span data-ttu-id="4a8c6-109">Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-109">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.PivotTable#dataHierarchies:member'
    summary: |-
      <span data-ttu-id="4a8c6-110">Die Pivot-Hierarchien der Daten von PivotTable.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-110">The Data Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="4a8c6-111">\[[API-Gruppe: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a8c6-111">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: dataHierarchies
    fullName: dataHierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly dataHierarchies: Excel.DataPivotHierarchyCollection;'
      return:
        type:
          - 'excel!Excel.DataPivotHierarchyCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="4a8c6-112">Beispiele</span><span class="sxs-lookup"><span data-stu-id="4a8c6-112">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");
              pivotTable.dataHierarchies.add(pivotTable.hierarchies.getItem("Crates Sold at Farm"));
              pivotTable.dataHierarchies.add(pivotTable.hierarchies.getItem("Crates Sold Wholesale"));

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.PivotTable#delete:member(1)'
    summary: |-
      <span data-ttu-id="4a8c6-113">Aktualisiert PivotTable</span><span class="sxs-lookup"><span data-stu-id="4a8c6-113">Deletes the PivotTable.</span></span>

      <span data-ttu-id="4a8c6-114">\[[API-Gruppe: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a8c6-114">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="4a8c6-115">Beispiele</span><span class="sxs-lookup"><span data-stu-id="4a8c6-115">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              context.workbook.worksheets.getItem("Pivot").pivotTables.getItem("Farm Sales").delete();

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.PivotTable#filterHierarchies:member'
    summary: |-
      <span data-ttu-id="4a8c6-116">Die Pivot-Hierarchien der Filter von PivotTable.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-116">The Filter Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="4a8c6-117">\[[API-Gruppe: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a8c6-117">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: filterHierarchies
    fullName: filterHierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly filterHierarchies: Excel.FilterPivotHierarchyCollection;'
      return:
        type:
          - 'excel!Excel.FilterPivotHierarchyCollection:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="4a8c6-118">Beispiele</span><span class="sxs-lookup"><span data-stu-id="4a8c6-118">Examples</span></span>

          ```typescript
          async function filter(functionType: Excel.AggregationFunction) {
              await Excel.run(async (context) => {
                  const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");
                  const filters = pivotTable.filterHierarchies;
                  const filter = filters.getItemOrNullObject("Classification");
                  filter.load();
                  await context.sync();

                  // add the Classification hierarchy to the filter, if it's not already there
                  if (filter.isNullObject) {
                      filters.add(pivotTable.hierarchies.getItem("Classification"));
                      await context.sync();
                  }
              });
          }
          ```
  - uid: 'excel!Excel.PivotTable#hierarchies:member'
    summary: |-
      <span data-ttu-id="4a8c6-119">Die Pivot-Hierarchien von PivotTable.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-119">The Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="4a8c6-120">\[[API-Gruppe: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a8c6-120">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: hierarchies
    fullName: hierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly hierarchies: Excel.PivotHierarchyCollection;'
      return:
        type:
          - 'excel!Excel.PivotHierarchyCollection:class'
  - uid: 'excel!Excel.PivotTable#id:member'
    summary: |-
      <span data-ttu-id="4a8c6-121">Die ID der PivotTable.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-121">Id of the PivotTable.</span></span> <span data-ttu-id="4a8c6-122">Schreibgesch√ºtzt.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-122">Read-only.</span></span>

      <span data-ttu-id="4a8c6-123">\[[API-Gruppe: ExcelApi 1,5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a8c6-123">\[ [API set: ExcelApi 1.5](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.PivotTable#layout:member'
    summary: |-
      <span data-ttu-id="4a8c6-124">Das PivotLayout-Objekt, das das Layout und die visuelle Struktur von PivotTable beschreibt.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-124">The PivotLayout describing the layout and visual structure of the PivotTable.</span></span>

      <span data-ttu-id="4a8c6-125">\[[API-Gruppe: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a8c6-125">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: layout
    fullName: layout
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly layout: Excel.PivotLayout;'
      return:
        type:
          - 'excel!Excel.PivotLayout:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="4a8c6-126">Beispiele</span><span class="sxs-lookup"><span data-stu-id="4a8c6-126">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const pivotTable = context.workbook.worksheets.getActiveWorksheet().pivotTables.getItem("Farm Sales");
              pivotTable.layout.load("layoutType");
              await context.sync();

              // cycle between the three layout types
              if (pivotTable.layout.layoutType === "Compact") {
                  pivotTable.layout.layoutType = "Outline";
              } else if (pivotTable.layout.layoutType === "Outline") {
                  pivotTable.layout.layoutType = "Tabular";
              } else {
                  pivotTable.layout.layoutType = "Compact";
              }
              await context.sync();
              console.log("Pivot layout is now " + pivotTable.layout.layoutType);
          });
          ```
  - uid: 'excel!Excel.PivotTable#load:member(1)'
    summary: <span data-ttu-id="4a8c6-127">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-127">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4a8c6-128">Vor dem Lesen der Eigenschaften m√ºssen Sie "context.sync()" aufrufen.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-128">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="4a8c6-129">Zus√§tzlich zu dieser Signatur verf√ºgt diese Methode √ºber die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="4a8c6-129">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="4a8c6-130">`load(option?: string | string[]): Excel.PivotTable`-Wobei Option eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-130">`load(option?: string | string[]): Excel.PivotTable` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="4a8c6-131">`load(option?: { select?: string; expand?: string; }): Excel.PivotTable`-Bei Option. Select handelt es sich um eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-131">`load(option?: { select?: string; expand?: string; }): Excel.PivotTable` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="4a8c6-132">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTable`Nur verf√ºgbar f√ºr Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-132">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.PivotTable` - Only available on collection types.</span></span> <span data-ttu-id="4a8c6-133">Sie √§hnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-133">It is similar to the preceding signature.</span></span> <span data-ttu-id="4a8c6-134">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis einbezogen werden k√∂nnen.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-134">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="4a8c6-135">Option. Skip gibt die Anzahl der Elemente an, die √ºbersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-135">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="4a8c6-136">Wenn Option. Top angegeben ist, wird das Resultset gestartet, nachdem die angegebene Anzahl von Elementen √ºbersprungen wurde.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-136">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.PivotTableLoadOptions): Excel.PivotTable;'
      return:
        type:
          - 'excel!Excel.PivotTable:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.Interfaces.PivotTableLoadOptions:interface'
  - uid: 'excel!Excel.PivotTable#load:member(2)'
    summary: <span data-ttu-id="4a8c6-137">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-137">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4a8c6-138">Sie m√ºssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-138">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotTable;'
      return:
        type:
          - 'excel!Excel.PivotTable:class'
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="4a8c6-139">Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-139">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.PivotTable#load:member(3)'
    summary: <span data-ttu-id="4a8c6-140">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-140">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4a8c6-141">Sie m√ºssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-141">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.PivotTable;'
      return:
        type:
          - 'excel!Excel.PivotTable:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="4a8c6-142">Dabei ist propertyNamesAndPaths. Select eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-142">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: 'excel!Excel.PivotTable#name:member'
    summary: |-
      <span data-ttu-id="4a8c6-143">Der Name der PivotTable.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-143">Name of the PivotTable.</span></span>

      <span data-ttu-id="4a8c6-144">\[[API-Gruppe: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a8c6-144">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.PivotTable#refresh:member(1)'
    summary: |-
      <span data-ttu-id="4a8c6-145">Aktualisiert die PivotTable.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-145">Refreshes the PivotTable.</span></span>

      <span data-ttu-id="4a8c6-146">\[[API-Gruppe: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a8c6-146">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: refresh()
    fullName: refresh()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'refresh(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.PivotTable#rowHierarchies:member'
    summary: |-
      <span data-ttu-id="4a8c6-147">Die Pivot-Hierarchien der Zeilen von PivotTable.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-147">The Row Pivot Hierarchies of the PivotTable.</span></span>

      <span data-ttu-id="4a8c6-148">\[[API-Gruppe: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a8c6-148">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: rowHierarchies
    fullName: rowHierarchies
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rowHierarchies: Excel.RowColumnPivotHierarchyCollection;'
      return:
        type:
          - 'excel!Excel.RowColumnPivotHierarchyCollection:class'
  - uid: 'excel!Excel.PivotTable#set:member(1)'
    summary: '<span data-ttu-id="4a8c6-149">Legt mehrere Eigenschaften eines Objekts gleichzeitig fest.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-149">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="4a8c6-150">Sie k√∂nnen entweder ein einfaches Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs √ºbergeben.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-150">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="4a8c6-151">Diese Methode hat die folgende zus√§tzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="4a8c6-151">This method has the following additional signature:</span></span>

      `set(properties: Excel.PivotTable): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.PivotTableUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="4a8c6-152">Ein JavaScript-Objekt mit Eigenschaften, die isomorphically f√ºr die Eigenschaften des Objekts strukturiert sind, f√ºr das die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-152">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - 'excel!Excel.Interfaces.PivotTableUpdateData:interface'
        - id: options
          description: '<span data-ttu-id="4a8c6-153">Bietet eine Option zum Unterdr√ºcken von Fehlern, wenn das Properties-Objekt versucht, schreibgesch√ºtzte Eigenschaften festzulegen.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-153">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.PivotTable#set:member(2)'
    summary: '<span data-ttu-id="4a8c6-154">Legt mehrere Eigenschaften f√ºr das Objekt gleichzeitig basierend auf einem vorhandenen geladenen Objekt fest.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-154">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.PivotTable): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.PivotTable:class'
  - uid: 'excel!Excel.PivotTable#toJSON:member(1)'
    summary: '<span data-ttu-id="4a8c6-155">√úberschreibt die `toJSON()` JavaScript-Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an √ºbergeben wird.`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="4a8c6-155">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="4a8c6-156">.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-156"></span></span> <span data-ttu-id="4a8c6-157">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="4a8c6-157"></span></span><!-- --><span data-ttu-id="4a8c6-158">wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie √ºbergeben wird.) W√§hrend das urspr√ºngliche Excel. PivotTable-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`Excel.Interfaces.PivotTableData`</span><span class="sxs-lookup"><span data-stu-id="4a8c6-158">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.PivotTable object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.PivotTableData`</span></span><!-- --><span data-ttu-id="4a8c6-159">), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem urspr√ºnglichen Objekt enth√§lt.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-159">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotTableData;'
      return:
        type:
          - 'excel!Excel.Interfaces.PivotTableData:interface'
        description: ''
  - uid: 'excel!Excel.PivotTable#worksheet:member'
    summary: |-
      <span data-ttu-id="4a8c6-160">Das Arbeitsblatt, das die aktuelle PivotTable enth√§lt.</span><span class="sxs-lookup"><span data-stu-id="4a8c6-160">The worksheet containing the current PivotTable.</span></span>

      <span data-ttu-id="4a8c6-161">\[[API-Gruppe: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4a8c6-161">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RowColumnPivotHierarchyCollection:class'
    name: Excel.RowColumnPivotHierarchyCollection
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.DataPivotHierarchyCollection:class'
    name: Excel.DataPivotHierarchyCollection
  - uid: 'excel!Excel.FilterPivotHierarchyCollection:class'
    name: Excel.FilterPivotHierarchyCollection
  - uid: 'excel!Excel.PivotHierarchyCollection:class'
    name: Excel.PivotHierarchyCollection
  - uid: 'excel!Excel.PivotLayout:class'
    name: Excel.PivotLayout
  - uid: 'excel!Excel.PivotTable:class'
    name: Excel.PivotTable
  - uid: 'excel!Excel.Interfaces.PivotTableLoadOptions:interface'
    name: Excel.Interfaces.PivotTableLoadOptions
  - uid: 'excel!Excel.Interfaces.PivotTableUpdateData:interface'
    name: Interfaces.PivotTableUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.PivotTableData:interface'
    name: Excel.Interfaces.PivotTableData
  - uid: 'excel!Excel.Worksheet:class'
    name: Excel.Worksheet