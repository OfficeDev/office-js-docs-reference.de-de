### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.PivotTableCollection:class'
    summary: |-
      Stellt eine Auflistung aller PivotTables dar, die Teil der Arbeitsmappe oder des Arbeitsblatts sind.

      \[[API-Gruppe: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.PivotTableCollection
    fullName: Excel.PivotTableCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.PivotTableCollection#add:member(1)'
      - 'excel!Excel.PivotTableCollection#context:member'
      - 'excel!Excel.PivotTableCollection#getCount:member(1)'
      - 'excel!Excel.PivotTableCollection#getItem:member(1)'
      - 'excel!Excel.PivotTableCollection#getItemOrNullObject:member(1)'
      - 'excel!Excel.PivotTableCollection#items:member'
      - 'excel!Excel.PivotTableCollection#load:member(1)'
      - 'excel!Excel.PivotTableCollection#load:member(2)'
      - 'excel!Excel.PivotTableCollection#load:member(3)'
      - 'excel!Excel.PivotTableCollection#refreshAll:member(1)'
      - 'excel!Excel.PivotTableCollection#toJSON:member(1)'
  - uid: 'excel!Excel.PivotTableCollection#add:member(1)'
    summary: |-
      Fügt ein PivotTable-Objekt basierend auf den Quelldaten hinzu und fügt es in die obere linke Zelle des Zielbereichs ein.

      \[[API-Gruppe: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'add(name, source, destination)'
    fullName: 'add(name, source, destination)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name: string, source: Range | string | Table, destination: Range | string): Excel.PivotTable;'
      return:
        type:
          - 'excel!Excel.PivotTable:class'
        description: |-
          Gibt die neu eingefügte PivotTable zurück.

          #### <a name="examples"></a>Beispiele

          ```typescript
          await Excel.run(async (context) => {
              const rangeToAnalyze = context.workbook.worksheets.getItem("Data").getRange("A1:E21");
              const rangeToPlacePivot = context.workbook.worksheets.getItem("Pivot").getRange("A2");
              context.workbook.worksheets.getItem("Pivot").pivotTables.add("Farm Sales", rangeToAnalyze, rangeToPlacePivot);

              await context.sync();
          });
          ```
      parameters:
        - id: name
          description: Der Name der neuen PivotTable.
          type:
            - string
        - id: source
          description: Die Quelldaten für die neue PivotTable kann dies entweder ein Bereich (oder eine Zeichenfolgen Adresse mit dem Arbeitsblattnamen) oder eine Tabelle sein.
          type:
            - 'excel!Excel.PivotTableCollection#add~0:complex'
        - id: destination
          description: 'Die Zelle in der oberen linken Ecke des Zielbereichs des PivotTable-Berichts (der Bereich auf dem Arbeitsblatt, in dem der resultierende Bericht platziert wird).'
          type:
            - 'excel!Excel.PivotTableCollection#add~1:complex'
  - uid: 'excel!Excel.PivotTableCollection#context:member'
    summary: 'Der Anforderungskontext, der mit dem Objekt verknüpft ist. Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.PivotTableCollection#getCount:member(1)'
    summary: |-
      Ruft die Anzahl von PivotTables in der Auflistung ab.

      \[[API-Gruppe: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.PivotTableCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.PivotTableCollection#getItem:member(1)'
    summary: |-
      Ruft eine PivotTable anhand des Namens ab.

      \[[API-Gruppe: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.PivotTable;'
      return:
        type:
          - 'excel!Excel.PivotTable:class'
        description: ''
      parameters:
        - id: name
          description: Name der abzurufenden PivotTable.
          type:
            - string
  - uid: 'excel!Excel.PivotTableCollection#getItemOrNullObject:member(1)'
    summary: |-
      Ruft eine PivotTable anhand des Namens ab. Wenn die PivotTable nicht vorhanden ist, wird ein NULL-Objekt zurückgegeben.

      \[[API-Gruppe: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: getItemOrNullObject(name)
    fullName: getItemOrNullObject(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemOrNullObject(name: string): Excel.PivotTable;'
      return:
        type:
          - 'excel!Excel.PivotTable:class'
        description: ''
      parameters:
        - id: name
          description: Name der abzurufenden PivotTable.
          type:
            - string
  - uid: 'excel!Excel.PivotTableCollection#items:member'
    summary: Ruft die geladenen untergeordneten Elemente in dieser Sammlung ab.
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.PivotTable[];'
      return:
        type:
          - 'excel!Excel.PivotTableCollection#items~0:complex'
  - uid: 'excel!Excel.PivotTableCollection#load:member(1)'
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.PivotTableCollection;'
      return:
        type:
          - 'excel!Excel.PivotTableCollection:class'
        description: ''
      parameters:
        - id: options
          description: Enthält Optionen für die Eigenschaften des zu ladenden Objekts.
          type:
            - 'excel!Excel.PivotTableCollection#load~0:complex'
  - uid: 'excel!Excel.PivotTableCollection#load:member(2)'
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.PivotTableCollection;'
      return:
        type:
          - 'excel!Excel.PivotTableCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: 'Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.PivotTableCollection#load:member(3)'
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.PivotTableCollection;'
      return:
        type:
          - 'excel!Excel.PivotTableCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '`propertyNamesAndPaths.select`ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften `propertyNamesAndPaths.expand` angibt, und ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.'
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.PivotTableCollection#refreshAll:member(1)'
    summary: |-
      Aktualisiert alle PivotTables in der Sammlung.

      \[[API-Gruppe: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: refreshAll()
    fullName: refreshAll()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'refreshAll(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.PivotTableCollection#toJSON:member(1)'
    summary: 'Überschreibt die `toJSON()` JavaScript-Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird.`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche `Excel.PivotTableCollection` Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`Excel.Interfaces.PivotTableCollectionData`<!-- -->), die ein "Items"-Array mit flachen Kopien aller geladenen Eigenschaften aus den Elementen der Auflistung enthält.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.PivotTableCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.PivotTableCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.PivotTable:class'
    name: Excel.PivotTable
  - uid: 'excel!Excel.PivotTableCollection#add~0:complex'
    name: Range | string | Table
    fullName: Excel.Range | string | Excel.Table
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string | '
        fullName: ' | string | '
      - uid: 'excel!Excel.Table:class'
        name: Table
        fullName: Excel.Table
  - uid: 'excel!Excel.PivotTableCollection#add~1:complex'
    name: Range | string
    fullName: Excel.Range | string
    spec.typeScript:
      - uid: 'excel!Excel.Range:class'
        name: Range
        fullName: Excel.Range
      - name: ' | string'
        fullName: ' | string'
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.PivotTableCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.PivotTableCollection#items~0:complex'
    name: 'Excel.PivotTable[]'
    fullName: 'Excel.PivotTable[]'
    spec.typeScript:
      - uid: 'excel!Excel.PivotTable:class'
        name: Excel.PivotTable
        fullName: Excel.PivotTable
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.PivotTableCollection:class'
    name: Excel.PivotTableCollection
  - uid: 'excel!Excel.PivotTableCollection#load~0:complex'
    name: Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.PivotTableCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.PivotTableCollectionLoadOptions:interface'
        name: Excel.Interfaces.PivotTableCollectionLoadOptions
        fullName: Excel.Interfaces.PivotTableCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.PivotTableCollectionData:interface'
    name: Excel.Interfaces.PivotTableCollectionData