### YamlMime:UniversalReference
items:
  - uid: custom-functions-runtime.CustomFunctions.StreamingInvocation
    summary: |-
      <span data-ttu-id="95a74-101">Stellt Informationen zum Aufrufen einer benutzerdefinierten Streamingfunktion bereit.</span><span class="sxs-lookup"><span data-stu-id="95a74-101">Provides information about the invocation of a streaming custom function.</span></span> <span data-ttu-id="95a74-102">Eine benutzerdefinierte Streamingfunktion kann Ergebnisse liefern, die sich im Lauf der Zeit ändern können.</span><span class="sxs-lookup"><span data-stu-id="95a74-102">A streaming custom function can provide results which can change over time.</span></span>

      <span data-ttu-id="95a74-103">Rufen `setResult()` Sie eine oder mehrere Male auf, um das Ergebnis bereitzustellen, statt ein Ergebnis aus der Funktion zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="95a74-103">Call `setResult()` one or more times to provide the result instead of returning a result from the function.</span></span>
    isPreview: true
    name: CustomFunctions.StreamingInvocation
    fullName: CustomFunctions.StreamingInvocation
    langs:
      - typeScript
    type: interface
    extends:
      - custom-functions-runtime.CustomFunctions.CancelableInvocation
    package: custom-functions-runtime
    children:
      - custom-functions-runtime.CustomFunctions.StreamingInvocation.setResult
  - uid: custom-functions-runtime.CustomFunctions.StreamingInvocation.setResult
    summary: <span data-ttu-id="95a74-104">Legen Sie das Ergebnis für die benutzerdefinierte Funktion fest.</span><span class="sxs-lookup"><span data-stu-id="95a74-104">Set the result for the custom function.</span></span> <span data-ttu-id="95a74-105">Kann mehrmals aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="95a74-105">May be called more than once.</span></span>
    isPreview: true
    name: setResult
    fullName: setResult
    langs:
      - typeScript
    type: property
    syntax:
      content: 'setResult: (value: ResultType | Error) => void;'
      return:
        type:
          - '(value: ResultType | Error) => void'