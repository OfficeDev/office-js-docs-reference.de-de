### YamlMime:UniversalReference
items:
  - uid: visio.Visio.Application
    summary: |-
      <span data-ttu-id="0e7b9-101">Stellt die Anwendung dar.</span><span class="sxs-lookup"><span data-stu-id="0e7b9-101">Represents the Application.</span></span>

      <span data-ttu-id="0e7b9-102">\[[API-Satz: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="0e7b9-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: Visio.Application
    fullName: Visio.Application
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: visio
    children:
      - visio.Visio.Application.load
      - visio.Visio.Application.load_1
      - visio.Visio.Application.load_2
      - visio.Visio.Application.set
      - visio.Visio.Application.set_1
      - visio.Visio.Application.showBorders
      - visio.Visio.Application.showToolbar
      - visio.Visio.Application.showToolbar_1
      - visio.Visio.Application.showToolbars
      - visio.Visio.Application.toJSON
  - uid: visio.Visio.Application.load
    summary: <span data-ttu-id="0e7b9-103">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="0e7b9-103">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0e7b9-104">Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.</span><span class="sxs-lookup"><span data-stu-id="0e7b9-104">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="0e7b9-105">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="0e7b9-105">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="0e7b9-106">`load(option?: string | string[]): Visio.Application`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="0e7b9-106">`load(option?: string | string[]): Visio.Application` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="0e7b9-107">`load(option?: { select?: string; expand?: string; }): Visio.Application`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="0e7b9-107">`load(option?: { select?: string; expand?: string; }): Visio.Application` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="0e7b9-108">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Application`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="0e7b9-108">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Application` - Only available on collection types.</span></span> <span data-ttu-id="0e7b9-109">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="0e7b9-109">It is similar to the preceding signature.</span></span> <span data-ttu-id="0e7b9-110">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="0e7b9-110">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="0e7b9-111">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="0e7b9-111">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="0e7b9-112">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="0e7b9-112">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.ApplicationLoadOptions): Visio.Application;'
      return:
        type:
          - Visio.Application
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - Visio.Interfaces.ApplicationLoadOptions
  - uid: visio.Visio.Application.load_1
    summary: <span data-ttu-id="0e7b9-113">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="0e7b9-113">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0e7b9-114">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="0e7b9-114">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.Application;'
      return:
        type:
          - Visio.Application
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="0e7b9-115">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="0e7b9-115">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: visio.Visio.Application.load_2
    summary: <span data-ttu-id="0e7b9-116">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="0e7b9-116">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0e7b9-117">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="0e7b9-117">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Application;'
      return:
        type:
          - Visio.Application
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="0e7b9-118">Wobei propertyNamesAndPaths. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="0e7b9-118">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: visio.Visio.Application.set
    summary: '<span data-ttu-id="0e7b9-119">Legt mehrere Eigenschaften eines Objekts gleichzeitig fest.</span><span class="sxs-lookup"><span data-stu-id="0e7b9-119">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="0e7b9-120">Sie können entweder ein plain-Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs weitergeben.</span><span class="sxs-lookup"><span data-stu-id="0e7b9-120">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="0e7b9-121">Diese Methode hat die folgende zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="0e7b9-121">This method has the following additional signature:</span></span>

      `set(properties: Visio.Application): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ApplicationUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="0e7b9-122">Ein JavaScript-Objekt mit Eigenschaften, die isomorphically strukturiert sind, um die Eigenschaften des Objekts, für das die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="0e7b9-122">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.ApplicationUpdateData
        - id: options
          description: '<span data-ttu-id="0e7b9-123">Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.</span><span class="sxs-lookup"><span data-stu-id="0e7b9-123">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: visio.Visio.Application.set_1
    summary: '<span data-ttu-id="0e7b9-124">Legt mehrere Eigenschaften für das Objekt auf der Grundlage eines vorhandenen geladenen Objekts zur gleichen Zeit fest.</span><span class="sxs-lookup"><span data-stu-id="0e7b9-124">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Visio.Application): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - Visio.Application
  - uid: visio.Visio.Application.showBorders
    summary: |-
      <span data-ttu-id="0e7b9-125">Ein-oder Ausblenden der iFrame-Anwendungs Ränder.</span><span class="sxs-lookup"><span data-stu-id="0e7b9-125">Show or hide the iFrame application borders.</span></span>

      <span data-ttu-id="0e7b9-126">\[[API-Satz: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="0e7b9-126">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: showBorders
    fullName: showBorders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showBorders: boolean;'
      return:
        type:
          - boolean
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0e7b9-127">Beispiele</span><span class="sxs-lookup"><span data-stu-id="0e7b9-127">Examples</span></span>

          ```javascript
          Visio.run(session, function (ctx) {
              var application = ctx.document.application;
              application.showToolbars = false;
              application.showBorders = false;
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: visio.Visio.Application.showToolbar
    summary: |-
      <span data-ttu-id="0e7b9-128">Legt die Sichtbarkeit einer bestimmten Symbolleiste in der Anwendung fest.</span><span class="sxs-lookup"><span data-stu-id="0e7b9-128">Sets the visibility of a specific toolbar in the application.</span></span>

      <span data-ttu-id="0e7b9-129">\[[API-Satz: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="0e7b9-129">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: 'showToolbar(id, show)'
    fullName: 'showToolbar(id, show)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'showToolbar(id: Visio.ToolBarType, show: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: id
          description: <span data-ttu-id="0e7b9-130">Der Typ der Symbolleiste</span><span class="sxs-lookup"><span data-stu-id="0e7b9-130">The type of the Toolbar</span></span>
          type:
            - visio.Visio.ToolBarType
        - id: show
          description: '<span data-ttu-id="0e7b9-131">Gibt an, ob die Symbolleiste visibile ist oder nicht.</span><span class="sxs-lookup"><span data-stu-id="0e7b9-131">Whether the toolbar is visibile or not.</span></span>'
          type:
            - boolean
  - uid: visio.Visio.Application.showToolbar_1
    summary: |-
      <span data-ttu-id="0e7b9-132">Legt die Sichtbarkeit einer bestimmten Symbolleiste in der Anwendung fest.</span><span class="sxs-lookup"><span data-stu-id="0e7b9-132">Sets the visibility of a specific toolbar in the application.</span></span>

      <span data-ttu-id="0e7b9-133">\[[API-Satz: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="0e7b9-133">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: 'showToolbar(idString, show)'
    fullName: 'showToolbar(idString, show)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'showToolbar(idString: "CommandBar" | "PageNavigationBar" | "StatusBar", show: boolean): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: idString
          description: <span data-ttu-id="0e7b9-134">Der Typ der Symbolleiste</span><span class="sxs-lookup"><span data-stu-id="0e7b9-134">The type of the Toolbar</span></span>
          type:
            - '"CommandBar" | "PageNavigationBar" | "StatusBar"'
        - id: show
          description: '<span data-ttu-id="0e7b9-135">Gibt an, ob die Symbolleiste visibile ist oder nicht.</span><span class="sxs-lookup"><span data-stu-id="0e7b9-135">Whether the toolbar is visibile or not.</span></span>'
          type:
            - boolean
  - uid: visio.Visio.Application.showToolbars
    summary: |-
      <span data-ttu-id="0e7b9-136">Ein-oder Ausblenden der Standardsymbolleisten.</span><span class="sxs-lookup"><span data-stu-id="0e7b9-136">Show or hide the standard toolbars.</span></span>

      <span data-ttu-id="0e7b9-137">\[[API-Satz: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="0e7b9-137">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: showToolbars
    fullName: showToolbars
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showToolbars: boolean;'
      return:
        type:
          - boolean
  - uid: visio.Visio.Application.toJSON
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.ApplicationData;'
      return:
        type:
          - Visio.Interfaces.ApplicationData
        description: ''