### YamlMime:UniversalReference
ms.openlocfilehash: 9107680bf3f91da8384ed036f57b2c4cde3e491d
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/13/2019
ms.locfileid: "29978912"
items:
- uid: visio.Visio.Application
  summary: >-
    <span data-ttu-id="a24e4-101">Stellt die Anwendung dar.</span><span class="sxs-lookup"><span data-stu-id="a24e4-101">Represents the Application.</span></span>


    <span data-ttu-id="a24e4-102">\[[API-Satz: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="a24e4-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: Visio.Application
  fullName: Visio.Application
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: visio
  children:
  - visio.Visio.Application.load
  - visio.Visio.Application.load_1
  - visio.Visio.Application.load_2
  - visio.Visio.Application.set
  - visio.Visio.Application.set_1
  - visio.Visio.Application.showBorders
  - visio.Visio.Application.showToolbar
  - visio.Visio.Application.showToolbar_1
  - visio.Visio.Application.showToolbars
  - visio.Visio.Application.toJSON
- uid: visio.Visio.Application.load
  summary: <span data-ttu-id="a24e4-103">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="a24e4-103">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a24e4-104">Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="a24e4-104">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="a24e4-105">Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="a24e4-105">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="a24e4-106">`load(option?: string | string[]): Visio.Application`-Wo Option ist eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="a24e4-106">`load(option?: string | string[]): Visio.Application` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="a24e4-107">`load(option?: { select?: string; expand?: string; }): Visio.Application`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class="sxs-lookup"><span data-stu-id="a24e4-107">`load(option?: { select?: string; expand?: string; }): Visio.Application` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="a24e4-108">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Application`-Nur auf Auflistungstypen verfügbar.</span><span class="sxs-lookup"><span data-stu-id="a24e4-108">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Application` - Only available on collection types.</span></span> <span data-ttu-id="a24e4-109">Es ist ähnlich wie die jeweils vorhergehende Signatur.</span><span class="sxs-lookup"><span data-stu-id="a24e4-109">It is similar to the preceding signature.</span></span> <span data-ttu-id="a24e4-110">Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können.</span><span class="sxs-lookup"><span data-stu-id="a24e4-110">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="a24e4-111">Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="a24e4-111">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="a24e4-112">Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.</span><span class="sxs-lookup"><span data-stu-id="a24e4-112">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Visio.Interfaces.ApplicationLoadOptions): Visio.Application;'
    return:
      type:
      - Visio.Application
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Visio.Interfaces.ApplicationLoadOptions
- uid: visio.Visio.Application.load_1
  summary: <span data-ttu-id="a24e4-113">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="a24e4-113">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a24e4-114">Sie müssen Aufrufen `context.sync()` vor dem Lesen der Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="a24e4-114">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.Application;'
    return:
      type:
      - Visio.Application
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="a24e4-115">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="a24e4-115">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: visio.Visio.Application.load_2
  summary: <span data-ttu-id="a24e4-116">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="a24e4-116">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a24e4-117">Sie müssen Aufrufen `context.sync()` vor dem Lesen der Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="a24e4-117">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Application;'
    return:
      type:
      - Visio.Application
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: <span data-ttu-id="a24e4-118">Wobei propertyNamesAndPaths.select ist eine durch Kommas getrennte Zeichenfolge, die angibt, die Eigenschaften zum Laden und propertyNamesAndPaths.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class="sxs-lookup"><span data-stu-id="a24e4-118">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>
      type:
      - '{ select?: string; expand?: string; }'
- uid: visio.Visio.Application.set
  summary: <span data-ttu-id="a24e4-119">Legt mehrere Eigenschaften eines Objekts zur selben Zeit fest.</span><span class="sxs-lookup"><span data-stu-id="a24e4-119">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="a24e4-120">Sie können entweder eine einfache-Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt des gleichen Typs übergeben.</span><span class="sxs-lookup"><span data-stu-id="a24e4-120">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="a24e4-121">Diese Methode hat die folgenden zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="a24e4-121">This method has the following additional signature:</span></span>


    `set(properties: Visio.Application): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ApplicationUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="a24e4-122">Ein JavaScript-Objekt mit Eigenschaften, die an die Eigenschaften des Objekts isomorphically strukturiert werden, auf denen die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a24e4-122">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.ApplicationUpdateData
    - id: options
      description: <span data-ttu-id="a24e4-123">Bietet eine Option, um Fehler zu unterdrücken, wenn schreibgeschützte Eigenschaften festgelegt werden, versucht das Properties-Objekt.</span><span class="sxs-lookup"><span data-stu-id="a24e4-123">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: visio.Visio.Application.set_1
  summary: <span data-ttu-id="a24e4-124">Mehrere Eigenschaften festgelegt auf das Objekt zur selben Zeit, basierend auf einem vorhandenen geladen-Objekt.</span><span class="sxs-lookup"><span data-stu-id="a24e4-124">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Visio.Application): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - Visio.Application
- uid: visio.Visio.Application.showBorders
  summary: >-
    <span data-ttu-id="a24e4-125">Ein- oder Ausblenden von iFrame Anwendung Rahmen.</span><span class="sxs-lookup"><span data-stu-id="a24e4-125">Show or hide the iFrame application borders.</span></span>


    <span data-ttu-id="a24e4-126">\[[API-Satz: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="a24e4-126">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: showBorders
  fullName: showBorders
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showBorders: boolean;'
    return:
      type:
      - boolean
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"a24e4-127\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"a24e4-127\">Examples</span></span>\n\n```javascript\nVisio.run(session, function (ctx) {\n    var application = ctx.document.application;\n    application.showToolbars = false;\n    application.showBorders = false;\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: visio.Visio.Application.showToolbar
  summary: >-
    <span data-ttu-id="a24e4-128">Legt die Sichtbarkeit einer bestimmten Symbolleiste in der Anwendung fest.</span><span class="sxs-lookup"><span data-stu-id="a24e4-128">Sets the visibility of a specific toolbar in the application.</span></span>


    <span data-ttu-id="a24e4-129">\[[API-Satz: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="a24e4-129">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: showToolbar(id, show)
  fullName: showToolbar(id, show)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'showToolbar(id: Visio.ToolBarType, show: boolean): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: id
      description: <span data-ttu-id="a24e4-130">Der Typ der Symbolleiste</span><span class="sxs-lookup"><span data-stu-id="a24e4-130">The type of the Toolbar</span></span>
      type:
      - visio.Visio.ToolBarType
    - id: show
      description: <span data-ttu-id="a24e4-131">Gibt an, ob die Symbolleiste sichtbaren ist oder nicht.</span><span class="sxs-lookup"><span data-stu-id="a24e4-131">Whether the toolbar is visibile or not.</span></span>
      type:
      - boolean
- uid: visio.Visio.Application.showToolbar_1
  summary: >-
    <span data-ttu-id="a24e4-132">Legt die Sichtbarkeit einer bestimmten Symbolleiste in der Anwendung fest.</span><span class="sxs-lookup"><span data-stu-id="a24e4-132">Sets the visibility of a specific toolbar in the application.</span></span>


    <span data-ttu-id="a24e4-133">\[[API-Satz: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="a24e4-133">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: showToolbar(idString, show)
  fullName: showToolbar(idString, show)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'showToolbar(idString: "CommandBar" | "PageNavigationBar" | "StatusBar", show: boolean): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: idString
      description: <span data-ttu-id="a24e4-134">Der Typ der Symbolleiste</span><span class="sxs-lookup"><span data-stu-id="a24e4-134">The type of the Toolbar</span></span>
      type:
      - "\"CommandBar\" | \"PageNavigationBar\" | \"StatusBar\""
    - id: show
      description: <span data-ttu-id="a24e4-135">Gibt an, ob die Symbolleiste sichtbaren ist oder nicht.</span><span class="sxs-lookup"><span data-stu-id="a24e4-135">Whether the toolbar is visibile or not.</span></span>
      type:
      - boolean
- uid: visio.Visio.Application.showToolbars
  summary: >-
    <span data-ttu-id="a24e4-136">Ein- oder Ausblenden der standard-Symbolleisten.</span><span class="sxs-lookup"><span data-stu-id="a24e4-136">Show or hide the standard toolbars.</span></span>


    <span data-ttu-id="a24e4-137">\[[API-Satz: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="a24e4-137">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: showToolbars
  fullName: showToolbars
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showToolbars: boolean;'
    return:
      type:
      - boolean
- uid: visio.Visio.Application.toJSON
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Visio.Interfaces.ApplicationData;'
    return:
      type:
      - Visio.Interfaces.ApplicationData
      description: ''
