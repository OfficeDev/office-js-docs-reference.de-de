### YamlMime:UniversalReference
ms.openlocfilehash: 9107680bf3f91da8384ed036f57b2c4cde3e491d
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/13/2019
ms.locfileid: "29978912"
items:
- uid: visio.Visio.Application
  summary: >-
    Stellt die Anwendung dar.


    \[[API-Satz: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  name: Visio.Application
  fullName: Visio.Application
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: visio
  children:
  - visio.Visio.Application.load
  - visio.Visio.Application.load_1
  - visio.Visio.Application.load_2
  - visio.Visio.Application.set
  - visio.Visio.Application.set_1
  - visio.Visio.Application.showBorders
  - visio.Visio.Application.showToolbar
  - visio.Visio.Application.showToolbar_1
  - visio.Visio.Application.showToolbars
  - visio.Visio.Application.toJSON
- uid: visio.Visio.Application.load
  summary: Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts. Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.
  remarks: >-
    Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:


    `load(option?: string | string[]): Visio.Application`-Wo Option ist eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.


    `load(option?: { select?: string; expand?: string; }): Visio.Application`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Application`-Nur auf Auflistungstypen verfügbar. Es ist ähnlich wie die jeweils vorhergehende Signatur. Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können. Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen. Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Visio.Interfaces.ApplicationLoadOptions): Visio.Application;'
    return:
      type:
      - Visio.Application
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Visio.Interfaces.ApplicationLoadOptions
- uid: visio.Visio.Application.load_1
  summary: Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts. Sie müssen Aufrufen `context.sync()` vor dem Lesen der Eigenschaften.
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.Application;'
    return:
      type:
      - Visio.Application
      description: ''
    parameters:
    - id: propertyNames
      description: Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.
      type:
      - string | string[]
- uid: visio.Visio.Application.load_2
  summary: Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts. Sie müssen Aufrufen `context.sync()` vor dem Lesen der Eigenschaften.
  name: load(propertyNamesAndPaths)
  fullName: load(propertyNamesAndPaths)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Application;'
    return:
      type:
      - Visio.Application
      description: ''
    parameters:
    - id: propertyNamesAndPaths
      description: Wobei propertyNamesAndPaths.select ist eine durch Kommas getrennte Zeichenfolge, die angibt, die Eigenschaften zum Laden und propertyNamesAndPaths.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.
      type:
      - '{ select?: string; expand?: string; }'
- uid: visio.Visio.Application.set
  summary: Legt mehrere Eigenschaften eines Objekts zur selben Zeit fest. Sie können entweder eine einfache-Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt des gleichen Typs übergeben.
  remarks: >-
    Diese Methode hat die folgenden zusätzliche Signatur:


    `set(properties: Visio.Application): void`
  name: set(properties, options)
  fullName: set(properties, options)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.ApplicationUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: Ein JavaScript-Objekt mit Eigenschaften, die an die Eigenschaften des Objekts isomorphically strukturiert werden, auf denen die Methode aufgerufen wird.
      type:
      - Interfaces.ApplicationUpdateData
    - id: options
      description: Bietet eine Option, um Fehler zu unterdrücken, wenn schreibgeschützte Eigenschaften festgelegt werden, versucht das Properties-Objekt.
      type:
      - office.OfficeExtension.UpdateOptions
- uid: visio.Visio.Application.set_1
  summary: Mehrere Eigenschaften festgelegt auf das Objekt zur selben Zeit, basierend auf einem vorhandenen geladen-Objekt.
  name: set(properties)
  fullName: set(properties)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Visio.Application): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: ''
      type:
      - Visio.Application
- uid: visio.Visio.Application.showBorders
  summary: >-
    Ein- oder Ausblenden von iFrame Anwendung Rahmen.


    \[[API-Satz: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  name: showBorders
  fullName: showBorders
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showBorders: boolean;'
    return:
      type:
      - boolean
      description: "\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\nVisio.run(session, function (ctx) {\n    var application = ctx.document.application;\n    application.showToolbars = false;\n    application.showBorders = false;\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: visio.Visio.Application.showToolbar
  summary: >-
    Legt die Sichtbarkeit einer bestimmten Symbolleiste in der Anwendung fest.


    \[[API-Satz: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  name: showToolbar(id, show)
  fullName: showToolbar(id, show)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'showToolbar(id: Visio.ToolBarType, show: boolean): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: id
      description: Der Typ der Symbolleiste
      type:
      - visio.Visio.ToolBarType
    - id: show
      description: Gibt an, ob die Symbolleiste sichtbaren ist oder nicht.
      type:
      - boolean
- uid: visio.Visio.Application.showToolbar_1
  summary: >-
    Legt die Sichtbarkeit einer bestimmten Symbolleiste in der Anwendung fest.


    \[[API-Satz: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  name: showToolbar(idString, show)
  fullName: showToolbar(idString, show)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'showToolbar(idString: "CommandBar" | "PageNavigationBar" | "StatusBar", show: boolean): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: idString
      description: Der Typ der Symbolleiste
      type:
      - "\"CommandBar\" | \"PageNavigationBar\" | \"StatusBar\""
    - id: show
      description: Gibt an, ob die Symbolleiste sichtbaren ist oder nicht.
      type:
      - boolean
- uid: visio.Visio.Application.showToolbars
  summary: >-
    Ein- oder Ausblenden der standard-Symbolleisten.


    \[[API-Satz: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  name: showToolbars
  fullName: showToolbars
  langs:
  - typeScript
  type: property
  syntax:
    content: 'showToolbars: boolean;'
    return:
      type:
      - boolean
- uid: visio.Visio.Application.toJSON
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Visio.Interfaces.ApplicationData;'
    return:
      type:
      - Visio.Interfaces.ApplicationData
      description: ''
