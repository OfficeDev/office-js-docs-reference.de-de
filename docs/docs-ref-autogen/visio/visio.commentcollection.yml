### YamlMime:UniversalReference
ms.openlocfilehash: a79ad28437f8a1015964aad9fd8d6532e7440716
ms.sourcegitcommit: c1149d24b38f20daf9ce690cd0761ec1ceb7333d
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 10/17/2018
ms.locfileid: "25590637"
items:
- uid: visio.Visio.CommentCollection
  summary: >-
    <span data-ttu-id="2c287-101">Stellt die CommentCollection für ein bestimmtes Shape dar.</span><span class="sxs-lookup"><span data-stu-id="2c287-101">Represents the CommentCollection for a given Shape.</span></span>


    <span data-ttu-id="2c287-102">\[[API-Satz: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="2c287-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: Visio.CommentCollection
  fullName: visio.Visio.CommentCollection
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: visio
  children:
  - visio.Visio.CommentCollection.getCount
  - visio.Visio.CommentCollection.getItem
  - visio.Visio.CommentCollection.items
  - visio.Visio.CommentCollection.load
  - visio.Visio.CommentCollection.toJSON
- uid: visio.Visio.CommentCollection.getCount
  summary: >-
    <span data-ttu-id="2c287-103">Ruft die Anzahl von Kommentaren ab.</span><span class="sxs-lookup"><span data-stu-id="2c287-103">Gets the number of Comments.</span></span>


    <span data-ttu-id="2c287-104">\[[API-Satz: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="2c287-104">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: getCount()
  fullName: visio.Visio.CommentCollection.getCount
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: visio.Visio.CommentCollection.getItem
  summary: >-
    <span data-ttu-id="2c287-105">Ruft den Kommentar über seinen Namen ab.</span><span class="sxs-lookup"><span data-stu-id="2c287-105">Gets the Comment using its name.</span></span>


    <span data-ttu-id="2c287-106">\[[API-Satz: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="2c287-106">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: getItem(key)
  fullName: visio.Visio.CommentCollection.getItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: string): Visio.Comment;'
    return:
      type:
      - visio.Visio.Comment
      description: ''
    parameters:
    - id: key
      description: <span data-ttu-id="2c287-107">Der Schlüssel ist der Name des Kommentars, der abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="2c287-107">Key is the name of the Comment to be retrieved.</span></span>
      type:
      - string
- uid: visio.Visio.CommentCollection.items
  summary: <span data-ttu-id="2c287-108">Ruft die geladene untergeordnete Elemente in dieser Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="2c287-108">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: visio.Visio.CommentCollection.items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Visio.Comment[];'
    return:
      type:
      - Visio.Comment[]
- uid: visio.Visio.CommentCollection.load
  summary: <span data-ttu-id="2c287-109">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="2c287-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="2c287-110">Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="2c287-110">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="2c287-111">Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="2c287-111">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="2c287-112">`load(option?: { select?: string; expand?: string; }): Visio.CommentCollection`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class="sxs-lookup"><span data-stu-id="2c287-112">`load(option?: { select?: string; expand?: string; }): Visio.CommentCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="2c287-113">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.CommentCollection`-Nur auf Auflistungstypen verfügbar.</span><span class="sxs-lookup"><span data-stu-id="2c287-113">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.CommentCollection` - Only available on collection types.</span></span> <span data-ttu-id="2c287-114">Es ist ähnlich wie die jeweils vorhergehende Signatur.</span><span class="sxs-lookup"><span data-stu-id="2c287-114">It is similar to the preceding signature.</span></span> <span data-ttu-id="2c287-115">Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können.</span><span class="sxs-lookup"><span data-stu-id="2c287-115">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="2c287-116">Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="2c287-116">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="2c287-117">Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.</span><span class="sxs-lookup"><span data-stu-id="2c287-117">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

    #### <a name="examples"></a><span data-ttu-id="2c287-118">Beispiele</span><span class="sxs-lookup"><span data-stu-id="2c287-118">Examples</span></span>


    ```javascript

    Visio.run(session, function (ctx) {
        var activePage = ctx.document.getActivePage();
        var shapeName = "Position Belt.41";
        var shape = activePage.shapes.getItem(shapeName);
        var shapecomments= shape.comments;
        shapecomments.load();
        return ctx.sync().then(function () {
            for(var i=0; i<shapecomments.items.length;i++)
            {
                var comment= shapecomments.items[i];
                console.log("comment Author: " + comment.author);
                console.log("Comment Text: " + comment.text);
                console.log("Date " + comment.date);
            }
        });
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```
  name: load(option)
  fullName: visio.Visio.CommentCollection.load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Visio.CommentCollection;'
    return:
      type:
      - visio.Visio.CommentCollection
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="2c287-119">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="2c287-119">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: visio.Visio.CommentCollection.toJSON
  name: toJSON()
  fullName: visio.Visio.CommentCollection.toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Visio.Interfaces.CommentCollectionData;'
    return:
      type:
      - visio.Visio.Interfaces.CommentCollectionData
      description: ''
