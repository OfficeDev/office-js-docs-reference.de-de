### YamlMime:UniversalReference
items:
  - uid: visio.Visio.PageView
    summary: |-
      <span data-ttu-id="a16e2-101">Stellt die PageView-Klasse dar.</span><span class="sxs-lookup"><span data-stu-id="a16e2-101">Represents the PageView class.</span></span>

      <span data-ttu-id="a16e2-102">\[[API-Satz: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="a16e2-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: Visio.PageView
    fullName: Visio.PageView
    langs:
      - typeScript
    type: class
    extends:
      - office.OfficeExtension.ClientObject
    package: visio
    children:
      - visio.Visio.PageView.centerViewportOnShape
      - visio.Visio.PageView.fitToWindow
      - visio.Visio.PageView.getPosition
      - visio.Visio.PageView.getSelection
      - visio.Visio.PageView.isShapeInViewport
      - visio.Visio.PageView.load
      - visio.Visio.PageView.load_1
      - visio.Visio.PageView.load_2
      - visio.Visio.PageView.set
      - visio.Visio.PageView.set_1
      - visio.Visio.PageView.setPosition
      - visio.Visio.PageView.toJSON
      - visio.Visio.PageView.zoom
  - uid: visio.Visio.PageView.centerViewportOnShape
    summary: |-
      <span data-ttu-id="a16e2-103">Schwenkt die Visio-Zeichnung so, dass das angegebene Shape in der Mitte der Ansicht platziert wird.</span><span class="sxs-lookup"><span data-stu-id="a16e2-103">Pans the Visio drawing to place the specified shape in the center of the view.</span></span>

      <span data-ttu-id="a16e2-104">\[[API-Satz: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="a16e2-104">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: centerViewportOnShape(ShapeId)
    fullName: centerViewportOnShape(ShapeId)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'centerViewportOnShape(ShapeId: number): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="a16e2-105">Beispiele</span><span class="sxs-lookup"><span data-stu-id="a16e2-105">Examples</span></span>

          ```javascript
          Visio.run(session, function (ctx) {
              var activePage = ctx.document.getActivePage();
              var shape = activePage.shapes.getItem(0);
              activePage.view.centerViewportOnShape(shape.Id);
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: ShapeId
          description: '<span data-ttu-id="a16e2-106">ShapeId, die in der Mitte angezeigt werden soll.</span><span class="sxs-lookup"><span data-stu-id="a16e2-106">ShapeId to be seen in the center.</span></span>'
          type:
            - number
  - uid: visio.Visio.PageView.fitToWindow
    summary: |-
      <span data-ttu-id="a16e2-107">Seite wird an das aktuelle Fenster angepasst.</span><span class="sxs-lookup"><span data-stu-id="a16e2-107">Fit Page to current window.</span></span>

      <span data-ttu-id="a16e2-108">\[[API-Satz: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="a16e2-108">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: fitToWindow()
    fullName: fitToWindow()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'fitToWindow(): void;'
      return:
        type:
          - void
        description: ''
  - uid: visio.Visio.PageView.getPosition
    summary: |-
      <span data-ttu-id="a16e2-109">Gibt das Position-Objekt zurück, das die Position der Seite in der Ansicht angibt.</span><span class="sxs-lookup"><span data-stu-id="a16e2-109">Returns the position object that specifies the position of the page in the view.</span></span>

      <span data-ttu-id="a16e2-110">\[[API-Satz: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="a16e2-110">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: getPosition()
    fullName: getPosition()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getPosition(): OfficeExtension.ClientResult<Visio.Position>;'
      return:
        type:
          - OfficeExtension.ClientResult<Visio.Position>
        description: ''
  - uid: visio.Visio.PageView.getSelection
    summary: |-
      <span data-ttu-id="a16e2-111">Stellt die Auswahl auf der Seite dar.</span><span class="sxs-lookup"><span data-stu-id="a16e2-111">Represents the Selection in the page.</span></span>

      <span data-ttu-id="a16e2-112">\[[API-Satz: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="a16e2-112">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: getSelection()
    fullName: getSelection()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelection(): Visio.Selection;'
      return:
        type:
          - visio.Visio.Selection
        description: ''
  - uid: visio.Visio.PageView.isShapeInViewport
    summary: |-
      <span data-ttu-id="a16e2-113">Zum Überprüfen, ob sich das Shape in der Ansicht der Seite befindet oder nicht.</span><span class="sxs-lookup"><span data-stu-id="a16e2-113">To check if the shape is in view of the page or not.</span></span>

      <span data-ttu-id="a16e2-114">\[[API-Satz: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="a16e2-114">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: isShapeInViewport(Shape)
    fullName: isShapeInViewport(Shape)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'isShapeInViewport(Shape: Visio.Shape): OfficeExtension.ClientResult<boolean>;'
      return:
        type:
          - OfficeExtension.ClientResult<boolean>
        description: ''
      parameters:
        - id: Shape
          description: <span data-ttu-id="a16e2-115">Zu überprüfendes Shape.</span><span class="sxs-lookup"><span data-stu-id="a16e2-115">Shape to be checked.</span></span>
          type:
            - Visio.Shape
  - uid: visio.Visio.PageView.load
    summary: <span data-ttu-id="a16e2-116">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="a16e2-116">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a16e2-117">Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.</span><span class="sxs-lookup"><span data-stu-id="a16e2-117">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="a16e2-118">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="a16e2-118">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="a16e2-119">`load(option?: string | string[]): Visio.PageView`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="a16e2-119">`load(option?: string | string[]): Visio.PageView` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="a16e2-120">`load(option?: { select?: string; expand?: string; }): Visio.PageView`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="a16e2-120">`load(option?: { select?: string; expand?: string; }): Visio.PageView` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="a16e2-121">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.PageView`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="a16e2-121">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.PageView` - Only available on collection types.</span></span> <span data-ttu-id="a16e2-122">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="a16e2-122">It is similar to the preceding signature.</span></span> <span data-ttu-id="a16e2-123">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="a16e2-123">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="a16e2-124">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="a16e2-124">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="a16e2-125">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="a16e2-125">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.PageViewLoadOptions): Visio.PageView;'
      return:
        type:
          - visio.Visio.PageView
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - visio.Visio.Interfaces.PageViewLoadOptions
  - uid: visio.Visio.PageView.load_1
    summary: <span data-ttu-id="a16e2-126">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="a16e2-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a16e2-127">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="a16e2-127">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.PageView;'
      return:
        type:
          - visio.Visio.PageView
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="a16e2-128">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="a16e2-128">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: visio.Visio.PageView.load_2
    summary: <span data-ttu-id="a16e2-129">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="a16e2-129">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a16e2-130">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="a16e2-130">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.PageView;'
      return:
        type:
          - visio.Visio.PageView
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="a16e2-131">Wobei propertyNamesAndPaths. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="a16e2-131">Where propertyNamesAndPaths.select is a comma-delimited string that specifies the properties to load, and propertyNamesAndPaths.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: visio.Visio.PageView.set
    summary: '<span data-ttu-id="a16e2-132">Legt mehrere Eigenschaften eines Objekts gleichzeitig fest.</span><span class="sxs-lookup"><span data-stu-id="a16e2-132">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="a16e2-133">Sie können entweder ein plain-Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs weitergeben.</span><span class="sxs-lookup"><span data-stu-id="a16e2-133">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="a16e2-134">Diese Methode hat die folgende zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="a16e2-134">This method has the following additional signature:</span></span>

      `set(properties: Visio.PageView): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.PageViewUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="a16e2-135">Ein JavaScript-Objekt mit Eigenschaften, die isomorphically strukturiert sind, um die Eigenschaften des Objekts, für das die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a16e2-135">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - Interfaces.PageViewUpdateData
        - id: options
          description: '<span data-ttu-id="a16e2-136">Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.</span><span class="sxs-lookup"><span data-stu-id="a16e2-136">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - office.OfficeExtension.UpdateOptions
  - uid: visio.Visio.PageView.set_1
    summary: '<span data-ttu-id="a16e2-137">Legt mehrere Eigenschaften für das Objekt auf der Grundlage eines vorhandenen geladenen Objekts zur gleichen Zeit fest.</span><span class="sxs-lookup"><span data-stu-id="a16e2-137">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Visio.PageView): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - visio.Visio.PageView
  - uid: visio.Visio.PageView.setPosition
    summary: |-
      <span data-ttu-id="a16e2-138">Legt die Position der Seite in der Ansicht fest.</span><span class="sxs-lookup"><span data-stu-id="a16e2-138">Sets the position of the page in the view.</span></span>

      <span data-ttu-id="a16e2-139">\[[API-Satz: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="a16e2-139">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: setPosition(Position)
    fullName: setPosition(Position)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setPosition(Position: Visio.Position): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: Position
          description: '<span data-ttu-id="a16e2-140">Position-Objekt, das die neue Position der Seite in der Ansicht angibt.</span><span class="sxs-lookup"><span data-stu-id="a16e2-140">Position object that specifies the new position of the page in the view.</span></span>'
          type:
            - visio.Visio.Position
  - uid: visio.Visio.PageView.toJSON
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.PageViewData;'
      return:
        type:
          - visio.Visio.Interfaces.PageViewData
        description: ''
  - uid: visio.Visio.PageView.zoom
    summary: |-
      <span data-ttu-id="a16e2-141">Abrufen und Festlegen des Zoom Faktors der Seite.</span><span class="sxs-lookup"><span data-stu-id="a16e2-141">Get and set Page's Zoom level.</span></span> <span data-ttu-id="a16e2-142">Der Wert kann zwischen 10 und 400 und gibt den Prozentsatz des Zooms an.</span><span class="sxs-lookup"><span data-stu-id="a16e2-142">The value can be between 10 and 400 and denotes the percentage of zoom.</span></span>

      <span data-ttu-id="a16e2-143">\[[API-Satz: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="a16e2-143">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: zoom
    fullName: zoom
    langs:
      - typeScript
    type: property
    syntax:
      content: 'zoom: number;'
      return:
        type:
          - number
        description: |-


          #### <a name="examples"></a><span data-ttu-id="a16e2-144">Beispiele</span><span class="sxs-lookup"><span data-stu-id="a16e2-144">Examples</span></span>

          ```javascript
          Visio.run(session, function (ctx) {
              var activePage = ctx.document.getActivePage();
              activePage.view.zoom = 300;
              return ctx.sync();
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```