### YamlMime:UniversalReference
ms.openlocfilehash: 4a338cd307dd8ffe16ebe5a4d2cc663a182bcb6e
ms.sourcegitcommit: d356f1545c328d4b59ce814fcab8191e4231f1dc
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/13/2019
ms.locfileid: "29976383"
items:
- uid: visio.Visio.ShapeDataItemCollection
  summary: >-
    <span data-ttu-id="396b4-101">Stellt die ShapeDataItemCollection für ein bestimmtes Shape dar.</span><span class="sxs-lookup"><span data-stu-id="396b4-101">Represents the ShapeDataItemCollection for a given Shape.</span></span>


    <span data-ttu-id="396b4-102">\[[API-Satz: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="396b4-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: Visio.ShapeDataItemCollection
  fullName: Visio.ShapeDataItemCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: visio
  children:
  - visio.Visio.ShapeDataItemCollection.getCount
  - visio.Visio.ShapeDataItemCollection.getItem
  - visio.Visio.ShapeDataItemCollection.items
  - visio.Visio.ShapeDataItemCollection.load
  - visio.Visio.ShapeDataItemCollection.load_1
  - visio.Visio.ShapeDataItemCollection.load_2
  - visio.Visio.ShapeDataItemCollection.toJSON
- uid: visio.Visio.ShapeDataItemCollection.getCount
  summary: >-
    <span data-ttu-id="396b4-103">Ruft die Anzahl von Shape-Datenelementen ab.</span><span class="sxs-lookup"><span data-stu-id="396b4-103">Gets the number of Shape Data Items.</span></span>


    <span data-ttu-id="396b4-104">\[[API-Satz: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="396b4-104">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: visio.Visio.ShapeDataItemCollection.getItem
  summary: >-
    <span data-ttu-id="396b4-105">Ruft das ShapeDataItem unter Verwendung seines Namens ab.</span><span class="sxs-lookup"><span data-stu-id="396b4-105">Gets the ShapeDataItem using its name.</span></span>


    <span data-ttu-id="396b4-106">\[[API-Satz: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="396b4-106">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: getItem(key)
  fullName: getItem(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: string): Visio.ShapeDataItem;'
    return:
      type:
      - visio.Visio.ShapeDataItem
      description: ''
    parameters:
    - id: key
      description: <span data-ttu-id="396b4-107">Der Schlüssel ist der Name des ShapeDataItem, das abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="396b4-107">Key is the name of the ShapeDataItem to be retrieved.</span></span>
      type:
      - string
- uid: visio.Visio.ShapeDataItemCollection.items
  summary: <span data-ttu-id="396b4-108">Ruft die geladene untergeordnete Elemente in dieser Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="396b4-108">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Visio.ShapeDataItem[];'
    return:
      type:
      - Visio.ShapeDataItem[]
- uid: visio.Visio.ShapeDataItemCollection.load
  summary: <span data-ttu-id="396b4-109">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="396b4-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="396b4-110">Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="396b4-110">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="396b4-111">Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="396b4-111">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="396b4-112">`load(option?: string | string[]): Visio.ShapeDataItemCollection`-Wo Option ist eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="396b4-112">`load(option?: string | string[]): Visio.ShapeDataItemCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="396b4-113">`load(option?: { select?: string; expand?: string; }): Visio.ShapeDataItemCollection`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class="sxs-lookup"><span data-stu-id="396b4-113">`load(option?: { select?: string; expand?: string; }): Visio.ShapeDataItemCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="396b4-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeDataItemCollection`-Nur auf Auflistungstypen verfügbar.</span><span class="sxs-lookup"><span data-stu-id="396b4-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeDataItemCollection` - Only available on collection types.</span></span> <span data-ttu-id="396b4-115">Es ist ähnlich wie die jeweils vorhergehende Signatur.</span><span class="sxs-lookup"><span data-stu-id="396b4-115">It is similar to the preceding signature.</span></span> <span data-ttu-id="396b4-116">Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können.</span><span class="sxs-lookup"><span data-stu-id="396b4-116">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="396b4-117">Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="396b4-117">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="396b4-118">Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.</span><span class="sxs-lookup"><span data-stu-id="396b4-118">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

    #### <a name="examples"></a><span data-ttu-id="396b4-119">Beispiele</span><span class="sxs-lookup"><span data-stu-id="396b4-119">Examples</span></span>


    ```javascript

    Visio.run(session, function (ctx) {
        var activePage = ctx.document.getActivePage();
        var shape = activePage.shapes.getItem(0);
        var shapeDataItems = shape.shapeDataItems;
        shapeDataItems.load();
        return ctx.sync().then(function() {
            for (var i = 0; i < shapeDataItems.items.length; i++)
            {
                console.log(shapeDataItems.items[i].label);
                console.log(shapeDataItems.items[i].value);
            }
        });
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Visio.Interfaces.ShapeDataItemCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions): Visio.ShapeDataItemCollection;'
    return:
      type:
      - visio.Visio.ShapeDataItemCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Visio.Interfaces.ShapeDataItemCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions
- uid: visio.Visio.ShapeDataItemCollection.load_1
  summary: <span data-ttu-id="396b4-120">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="396b4-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="396b4-121">Sie müssen Aufrufen `context.sync()` vor dem Lesen der Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="396b4-121">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.ShapeDataItemCollection;'
    return:
      type:
      - visio.Visio.ShapeDataItemCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="396b4-122">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="396b4-122">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: visio.Visio.ShapeDataItemCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Visio.ShapeDataItemCollection;'
    return:
      type:
      - visio.Visio.ShapeDataItemCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: visio.Visio.ShapeDataItemCollection.toJSON
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Visio.Interfaces.ShapeDataItemCollectionData;'
    return:
      type:
      - visio.Visio.Interfaces.ShapeDataItemCollectionData
      description: ''
