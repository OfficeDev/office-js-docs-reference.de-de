### YamlMime:UniversalReference
ms.openlocfilehash: 9b570449194e4ef7866cdb2a6eb3e9b3d3d3ec98
ms.sourcegitcommit: 3f4a320fa860d05d348c8bdec2295e046a45a34f
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/07/2019
ms.locfileid: "29768892"
items:
- uid: visio.Visio.Comment
  summary: >-
    <span data-ttu-id="a6ea2-101">Stellt den Kommentar dar.</span><span class="sxs-lookup"><span data-stu-id="a6ea2-101">Represents the Comment.</span></span>


    <span data-ttu-id="a6ea2-102">\[[API-Satz: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="a6ea2-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: Visio.Comment
  fullName: Visio.Comment
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: visio
  children:
  - visio.Visio.Comment.author
  - visio.Visio.Comment.date
  - visio.Visio.Comment.load
  - visio.Visio.Comment.set
  - visio.Visio.Comment.text
  - visio.Visio.Comment.toJSON
- uid: visio.Visio.Comment.author
  summary: >-
    <span data-ttu-id="a6ea2-103">Eine Zeichenfolge, die den Namen des Autors des Kommentars angibt.</span><span class="sxs-lookup"><span data-stu-id="a6ea2-103">A string that specifies the name of the author of the comment.</span></span>


    <span data-ttu-id="a6ea2-104">\[[API-Satz: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="a6ea2-104">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: author
  fullName: author
  langs:
  - typeScript
  type: property
  syntax:
    content: 'author: string;'
    return:
      type:
      - string
- uid: visio.Visio.Comment.date
  summary: >-
    <span data-ttu-id="a6ea2-105">Eine Zeichenfolge, die das Datum der Erstellung des Kommentars angibt.</span><span class="sxs-lookup"><span data-stu-id="a6ea2-105">A string that specifies the date when the comment was created.</span></span>


    <span data-ttu-id="a6ea2-106">\[[API-Satz: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="a6ea2-106">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: date
  fullName: date
  langs:
  - typeScript
  type: property
  syntax:
    content: 'date: string;'
    return:
      type:
      - string
- uid: visio.Visio.Comment.load
  summary: <span data-ttu-id="a6ea2-107">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="a6ea2-107">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="a6ea2-108">Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="a6ea2-108">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="a6ea2-109">Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="a6ea2-109">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="a6ea2-110">`load(option?: { select?: string; expand?: string; }): Visio.Comment`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class="sxs-lookup"><span data-stu-id="a6ea2-110">`load(option?: { select?: string; expand?: string; }): Visio.Comment` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="a6ea2-111">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Comment`-Nur auf Auflistungstypen verfügbar.</span><span class="sxs-lookup"><span data-stu-id="a6ea2-111">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Comment` - Only available on collection types.</span></span> <span data-ttu-id="a6ea2-112">Es ist ähnlich wie die jeweils vorhergehende Signatur.</span><span class="sxs-lookup"><span data-stu-id="a6ea2-112">It is similar to the preceding signature.</span></span> <span data-ttu-id="a6ea2-113">Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können.</span><span class="sxs-lookup"><span data-stu-id="a6ea2-113">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="a6ea2-114">Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="a6ea2-114">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="a6ea2-115">Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.</span><span class="sxs-lookup"><span data-stu-id="a6ea2-115">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>

    #### <a name="examples"></a><span data-ttu-id="a6ea2-116">Beispiele</span><span class="sxs-lookup"><span data-stu-id="a6ea2-116">Examples</span></span>


    ```javascript

    Visio.run(session, function (ctx) {
        var activePage = ctx.document.getActivePage();
        var shapeName = "Position Belt.41";
        var shape = activePage.shapes.getItem(shapeName);
        var shapecomments= shape.comments;
        shapecomments.load();
        return ctx.sync().then(function () {
            for(var i=0; i<shapecomments.items.length;i++)
            {
                var comment= shapecomments.items[i];
                console.log("comment Author: " + comment.author);
                console.log("Comment Text: " + comment.text);
                console.log("Date " + comment.date);
            }
        });
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Visio.Comment;'
    return:
      type:
      - visio.Visio.Comment
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="a6ea2-117">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="a6ea2-117">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: visio.Visio.Comment.set
  summary: <span data-ttu-id="a6ea2-118">Legt mehrere Eigenschaften eines Objekts zur selben Zeit fest.</span><span class="sxs-lookup"><span data-stu-id="a6ea2-118">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="a6ea2-119">Sie können entweder eine einfache-Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt des gleichen Typs übergeben.</span><span class="sxs-lookup"><span data-stu-id="a6ea2-119">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>
  remarks: >-
    <span data-ttu-id="a6ea2-120">Diese Methode hat die folgenden zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="a6ea2-120">This method has the following additional signature:</span></span>


    `set(properties: Visio.Comment): void`
  name: set(properties, options)
  fullName: set
  langs:
  - typeScript
  type: method
  syntax:
    content: 'set(properties: Interfaces.CommentUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    return:
      type:
      - void
      description: ''
    parameters:
    - id: properties
      description: <span data-ttu-id="a6ea2-121">Ein JavaScript-Objekt mit Eigenschaften, die an die Eigenschaften des Objekts isomorphically strukturiert werden, auf denen die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="a6ea2-121">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>
      type:
      - Interfaces.CommentUpdateData
    - id: options
      description: <span data-ttu-id="a6ea2-122">Bietet eine Option, um Fehler zu unterdrücken, wenn schreibgeschützte Eigenschaften festgelegt werden, versucht das Properties-Objekt.</span><span class="sxs-lookup"><span data-stu-id="a6ea2-122">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>
      type:
      - office.OfficeExtension.UpdateOptions
- uid: visio.Visio.Comment.text
  summary: >-
    <span data-ttu-id="a6ea2-123">Eine Zeichenfolge, die den Text des Kommentars enthält.</span><span class="sxs-lookup"><span data-stu-id="a6ea2-123">A string that contains the comment text.</span></span>


    <span data-ttu-id="a6ea2-124">\[[API-Satz: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="a6ea2-124">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: text
  fullName: text
  langs:
  - typeScript
  type: property
  syntax:
    content: 'text: string;'
    return:
      type:
      - string
- uid: visio.Visio.Comment.toJSON
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Visio.Interfaces.CommentData;'
    return:
      type:
      - visio.Visio.Interfaces.CommentData
      description: ''
