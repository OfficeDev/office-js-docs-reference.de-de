### YamlMime:UniversalReference
ms.openlocfilehash: fd2dc7baa5e40193f796a2d35c9ab79676263744
ms.sourcegitcommit: 3771b97cffd6e0510fd4e9c6288db696cd0c0ca9
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 11/30/2018
ms.locfileid: "26996548"
items:
- uid: visio.Visio.PageCollection
  summary: >-
    <span data-ttu-id="fa4de-101">Stellt eine Auflistung von Page-Objekten dar, die Teil des Dokuments sind.</span><span class="sxs-lookup"><span data-stu-id="fa4de-101">Represents a collection of Page objects that are part of the document.</span></span>


    <span data-ttu-id="fa4de-102">\[[API-Satz: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="fa4de-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: Visio.PageCollection
  fullName: Visio.PageCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: visio
  children:
  - visio.Visio.PageCollection.getCount
  - visio.Visio.PageCollection.getItem
  - visio.Visio.PageCollection.items
  - visio.Visio.PageCollection.load
  - visio.Visio.PageCollection.toJSON
- uid: visio.Visio.PageCollection.getCount
  summary: >-
    <span data-ttu-id="fa4de-103">Ruft die Anzahl von Seiten in der Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="fa4de-103">Gets the number of pages in the collection.</span></span>


    <span data-ttu-id="fa4de-104">\[[API-Satz: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="fa4de-104">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: getCount()
  fullName: getCount
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: ''
- uid: visio.Visio.PageCollection.getItem
  summary: >-
    <span data-ttu-id="fa4de-105">Ruft einen Hyperlink mithilfe des Schlüssels ab (Name oder ID).</span><span class="sxs-lookup"><span data-stu-id="fa4de-105">Gets a page using its key (name or Id).</span></span>


    <span data-ttu-id="fa4de-106">\[[API-Satz: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="fa4de-106">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: getItem(key)
  fullName: getItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: number | string): Visio.Page;'
    return:
      type:
      - Visio.Page
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"fa4de-107\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"fa4de-107\">Examples</span></span>\n\n```javascript\nVisio.run(session, function (ctx) {\n    var pageName = 'Page-1';\n    var page = ctx.document.pages.getItem(pageName);\n    page.activate();\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
    parameters:
    - id: key
      description: <span data-ttu-id="fa4de-108">Der Schlüssel ist der Name oder die ID der abzurufenden Seite.</span><span class="sxs-lookup"><span data-stu-id="fa4de-108">Key is the name or Id of the page to be retrieved.</span></span>
      type:
      - number | string
- uid: visio.Visio.PageCollection.items
  summary: <span data-ttu-id="fa4de-109">Ruft die geladene untergeordnete Elemente in dieser Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="fa4de-109">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Visio.Page[];'
    return:
      type:
      - Visio.Page[]
- uid: visio.Visio.PageCollection.load
  summary: <span data-ttu-id="fa4de-110">Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="fa4de-110">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="fa4de-111">Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="fa4de-111">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="fa4de-112">Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="fa4de-112">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="fa4de-113">`load(option?: { select?: string; expand?: string; }): Visio.PageCollection`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.</span><span class="sxs-lookup"><span data-stu-id="fa4de-113">`load(option?: { select?: string; expand?: string; }): Visio.PageCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="fa4de-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.PageCollection`-Nur auf Auflistungstypen verfügbar.</span><span class="sxs-lookup"><span data-stu-id="fa4de-114">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.PageCollection` - Only available on collection types.</span></span> <span data-ttu-id="fa4de-115">Es ist ähnlich wie die jeweils vorhergehende Signatur.</span><span class="sxs-lookup"><span data-stu-id="fa4de-115">It is similar to the preceding signature.</span></span> <span data-ttu-id="fa4de-116">Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können.</span><span class="sxs-lookup"><span data-stu-id="fa4de-116">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="fa4de-117">Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="fa4de-117">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="fa4de-118">Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.</span><span class="sxs-lookup"><span data-stu-id="fa4de-118">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Visio.PageCollection;'
    return:
      type:
      - Visio.PageCollection
      description: ''
    parameters:
    - id: option
      description: <span data-ttu-id="fa4de-119">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="fa4de-119">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: visio.Visio.PageCollection.toJSON
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Visio.Interfaces.PageCollectionData;'
    return:
      type:
      - Visio.Interfaces.PageCollectionData
      description: ''
