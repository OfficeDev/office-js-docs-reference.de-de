### YamlMime:UniversalReference
ms.openlocfilehash: f93fcfc66523c4f9b8c9af0738719752e6642d80
ms.sourcegitcommit: 016e17422cf62dc9f1de1809666e9244e41cc1a9
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 11/09/2018
ms.locfileid: "26228528"
items:
- uid: visio.Visio.ShapeCollection
  summary: >-
    Stellt die Shape-Auflistung dar.


    \[[API-Satz: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  name: Visio.ShapeCollection
  fullName: Visio.ShapeCollection
  langs:
  - typeScript
  type: class
  extends:
  - OfficeExtension.ClientObject
  package: visio
  children:
  - visio.Visio.ShapeCollection.getCount
  - visio.Visio.ShapeCollection.getItem
  - visio.Visio.ShapeCollection.items
  - visio.Visio.ShapeCollection.load
  - visio.Visio.ShapeCollection.toJSON
- uid: visio.Visio.ShapeCollection.getCount
  summary: >-
    Ruft die Anzahl von Shapes in der Auflistung ab.


    \[[API-Satz: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  name: getCount()
  fullName: getCount
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: "\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\nVisio.run(session, function (ctx) {\n    var activePage = ctx.document.getActivePage();\n    var numShapesActivePage = activePage.shapes.getCount();\n    return ctx.sync().then(function () {\n        console.log(\"Shapes Count: \" + numShapesActivePage.value);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: visio.Visio.ShapeCollection.getItem
  summary: >-
    Ruft ein Shape mithilfe des Schlüssels ab (Name oder ID).


    \[[API-Satz: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  name: getItem(key)
  fullName: getItem
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: number | string): Visio.Shape;'
    return:
      type:
      - visio.Visio.Shape
      description: ''
    parameters:
    - id: key
      description: Der Schlüssel ist der Name oder Index des Shapes, das abgerufen werden soll.
      type:
      - number | string
- uid: visio.Visio.ShapeCollection.items
  summary: Ruft die geladene untergeordnete Elemente in dieser Auflistung ab.
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Visio.Shape[];'
    return:
      type:
      - Visio.Shape[]
- uid: visio.Visio.ShapeCollection.load
  summary: Warteschlangen ein Befehl zum Laden der angegebenen Eigenschaften des Objekts. Sie müssen "context.sync()" aufrufen, bevor Sie die Eigenschaften lesen.
  remarks: >-
    Zusätzlich zu dieser Signatur hat diese Methode die folgenden Signaturen:


    `load(option?: { select?: string; expand?: string; }): Visio.ShapeCollection`-Option.select ist eine durch Trennzeichen getrennte Zeichenfolge, die die Eigenschaften zum Laden gibt an, wobei options.expand ist eine durch Kommas getrennte Zeichenfolge, die Navigationseigenschaften zum Laden angibt.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeCollection`-Nur auf Auflistungstypen verfügbar. Es ist ähnlich wie die jeweils vorhergehende Signatur. Option.Top gibt die maximale Anzahl der Auflistungselemente, die im Ergebnis enthalten sein können. Option.Skip gibt die Anzahl der Elemente, die übersprungen und nicht in das Ergebnis eingeschlossen werden sollen. Wenn option.top angegeben wird, wird das Resultset starten, nachdem die angegebene Anzahl von Elementen übersprungen wird.
  name: load(option)
  fullName: load
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: string | string[]): Visio.ShapeCollection;'
    return:
      type:
      - visio.Visio.ShapeCollection
      description: ''
    parameters:
    - id: option
      description: Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die zum Laden die Eigenschaften angeben.
      type:
      - string | string[]
- uid: visio.Visio.ShapeCollection.toJSON
  name: toJSON()
  fullName: toJSON
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Visio.Interfaces.ShapeCollectionData;'
    return:
      type:
      - visio.Visio.Interfaces.ShapeCollectionData
      description: ''
