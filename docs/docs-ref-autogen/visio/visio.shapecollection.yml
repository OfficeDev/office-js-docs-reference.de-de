### YamlMime:UniversalReference
ms.openlocfilehash: 46f2ca6ab12fbe4cad956c40b3df252d187e7532
ms.sourcegitcommit: e9bfba6ec767e9d34fd1cf7b38c30f689617900a
ms.translationtype: MT
ms.contentlocale: de-DE
ms.lasthandoff: 02/20/2019
ms.locfileid: "30096899"
items:
- uid: visio.Visio.ShapeCollection
  summary: >-
    <span data-ttu-id="7286a-101">Stellt die Shape-Auflistung dar.</span><span class="sxs-lookup"><span data-stu-id="7286a-101">Represents the Shape Collection.</span></span>


    <span data-ttu-id="7286a-102">\[[API-Satz: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="7286a-102">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: Visio.ShapeCollection
  fullName: Visio.ShapeCollection
  langs:
  - typeScript
  type: class
  extends:
  - office.OfficeExtension.ClientObject
  package: visio
  children:
  - visio.Visio.ShapeCollection.getCount
  - visio.Visio.ShapeCollection.getItem
  - visio.Visio.ShapeCollection.items
  - visio.Visio.ShapeCollection.load
  - visio.Visio.ShapeCollection.load_1
  - visio.Visio.ShapeCollection.load_2
  - visio.Visio.ShapeCollection.toJSON
- uid: visio.Visio.ShapeCollection.getCount
  summary: >-
    <span data-ttu-id="7286a-103">Ruft die Anzahl von Shapes in der Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="7286a-103">Gets the number of Shapes in the collection.</span></span>


    <span data-ttu-id="7286a-104">\[[API-Satz: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="7286a-104">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: getCount()
  fullName: getCount()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type:
      - OfficeExtension.ClientResult<number>
      description: "\n#### <a name=\"examples\"></a><span data-ttu-id=\"7286a-105\">Beispiele</span><span class=\"sxs-lookup\"><span data-stu-id=\"7286a-105\">Examples</span></span>\n\n```javascript\nVisio.run(session, function (ctx) {\n    var activePage = ctx.document.getActivePage();\n    var numShapesActivePage = activePage.shapes.getCount();\n    return ctx.sync().then(function () {\n        console.log(\"Shapes Count: \" + numShapesActivePage.value);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- uid: visio.Visio.ShapeCollection.getItem
  summary: >-
    <span data-ttu-id="7286a-106">Ruft ein Shape mithilfe des Schlüssels ab (Name oder ID).</span><span class="sxs-lookup"><span data-stu-id="7286a-106">Gets a Shape using its key (name or Index).</span></span>


    <span data-ttu-id="7286a-107">\[[API-Satz: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="7286a-107">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
  name: getItem(key)
  fullName: getItem(key)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'getItem(key: number | string): Visio.Shape;'
    return:
      type:
      - Visio.Shape
      description: ''
    parameters:
    - id: key
      description: <span data-ttu-id="7286a-108">Der Schlüssel ist der Name oder Index des Shapes, das abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="7286a-108">Key is the Name or Index of the shape to be retrieved.</span></span>
      type:
      - number | string
- uid: visio.Visio.ShapeCollection.items
  summary: <span data-ttu-id="7286a-109">Ruft die geladenen untergeordneten Elemente in dieser Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="7286a-109">Gets the loaded child items in this collection.</span></span>
  name: items
  fullName: items
  langs:
  - typeScript
  type: property
  syntax:
    content: 'readonly items: Visio.Shape[];'
    return:
      type:
      - Visio.Shape[]
- uid: visio.Visio.ShapeCollection.load
  summary: <span data-ttu-id="7286a-110">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="7286a-110">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7286a-111">Sie müssen "context. Sync ()" aufrufen, bevor Sie die Eigenschaften lesen.</span><span class="sxs-lookup"><span data-stu-id="7286a-111">You must call "context.sync()" before reading the properties.</span></span>
  remarks: >-
    <span data-ttu-id="7286a-112">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="7286a-112">In addition to this signature, this method has the following signatures:</span></span>


    <span data-ttu-id="7286a-113">`load(option?: string | string[]): Visio.ShapeCollection`-Wobei Option eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="7286a-113">`load(option?: string | string[]): Visio.ShapeCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>


    <span data-ttu-id="7286a-114">`load(option?: { select?: string; expand?: string; }): Visio.ShapeCollection`-Wobei Option. Select eine durch Kommas getrennte Zeichenfolge ist, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch Kommas getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="7286a-114">`load(option?: { select?: string; expand?: string; }): Visio.ShapeCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>


    <span data-ttu-id="7286a-115">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeCollection`-Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="7286a-115">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeCollection` - Only available on collection types.</span></span> <span data-ttu-id="7286a-116">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="7286a-116">It is similar to the preceding signature.</span></span> <span data-ttu-id="7286a-117">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis eingeschlossen werden können.</span><span class="sxs-lookup"><span data-stu-id="7286a-117">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="7286a-118">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="7286a-118">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="7286a-119">Wenn Option. Top angegeben wird, wird das Resultset nach dem Überspringen der angegebenen Anzahl von Elementen gestartet.</span><span class="sxs-lookup"><span data-stu-id="7286a-119">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: Visio.Interfaces.ShapeCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions): Visio.ShapeCollection;'
    return:
      type:
      - Visio.ShapeCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - Visio.Interfaces.ShapeCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions
- uid: visio.Visio.ShapeCollection.load_1
  summary: <span data-ttu-id="7286a-120">Warteschlangen bis ein Befehl zum Laden der angegebenen Eigenschaften des Objekts.</span><span class="sxs-lookup"><span data-stu-id="7286a-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="7286a-121">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften anrufen.</span><span class="sxs-lookup"><span data-stu-id="7286a-121">You must call `context.sync()` before reading the properties.</span></span>
  name: load(propertyNames)
  fullName: load(propertyNames)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.ShapeCollection;'
    return:
      type:
      - Visio.ShapeCollection
      description: ''
    parameters:
    - id: propertyNames
      description: <span data-ttu-id="7286a-122">Eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="7286a-122">A comma-delimited string or an array of strings that specify the properties to load.</span></span>
      type:
      - string | string[]
- uid: visio.Visio.ShapeCollection.load_2
  name: load(option)
  fullName: load(option)
  langs:
  - typeScript
  type: method
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Visio.ShapeCollection;'
    return:
      type:
      - Visio.ShapeCollection
      description: ''
    parameters:
    - id: option
      description: ''
      type:
      - office.OfficeExtension.LoadOption
- uid: visio.Visio.ShapeCollection.toJSON
  name: toJSON()
  fullName: toJSON()
  langs:
  - typeScript
  type: method
  syntax:
    content: 'toJSON(): Visio.Interfaces.ShapeCollectionData;'
    return:
      type:
      - Visio.Interfaces.ShapeCollectionData
      description: ''
