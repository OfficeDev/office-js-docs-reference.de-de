### YamlMime:TSType
name: Visio.Document
uid: visio!Visio.Document:class
package: visio!
fullName: Visio.Document
summary: >-
  Stellt die Document-Klasse dar.


  \[[API-Menge: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: application
  uid: visio!Visio.Document#application:member
  package: visio!
  fullName: application
  summary: >-
    Stellt die Instanz einer Visio-Anwendung dar, die dieses Dokument enthält. Schreibgeschützt.


    \[[API-Menge: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly application: Visio.Application;'
    return:
      type: <xref uid="visio!Visio.Application:class" />
- name: context
  uid: visio!Visio.Document#context:member
  package: visio!
  fullName: context
  summary: Der Anforderungskontext, der mit dem Objekt verknüpft ist. Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="visio!Visio.RequestContext:class" />
- name: onDataRefreshComplete
  uid: visio!Visio.Document#onDataRefreshComplete:member
  package: visio!
  fullName: onDataRefreshComplete
  summary: >-
    Tritt auf, wenn die Daten im Diagramm aktualisiert werden.


    \[[API-Menge: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly onDataRefreshComplete: OfficeExtension.EventHandlers<Visio.DataRefreshCompleteEventArgs>;'
    return:
      type: <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref uid="visio!Visio.DataRefreshCompleteEventArgs:interface" />&gt;
- name: onDocumentLoadComplete
  uid: visio!Visio.Document#onDocumentLoadComplete:member
  package: visio!
  fullName: onDocumentLoadComplete
  summary: >-
    Tritt auf, wenn das Dokument geladen, aktualisiert oder geändert wird.


    \[[API-Menge: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly onDocumentLoadComplete: OfficeExtension.EventHandlers<Visio.DocumentLoadCompleteEventArgs>;'
    return:
      type: <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref uid="visio!Visio.DocumentLoadCompleteEventArgs:interface" />&gt;
- name: onPageLoadComplete
  uid: visio!Visio.Document#onPageLoadComplete:member
  package: visio!
  fullName: onPageLoadComplete
  summary: >-
    Tritt auf, wenn die Seite fertig geladen wird.


    \[[API-Menge: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly onPageLoadComplete: OfficeExtension.EventHandlers<Visio.PageLoadCompleteEventArgs>;'
    return:
      type: <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref uid="visio!Visio.PageLoadCompleteEventArgs:interface" />&gt;
- name: onSelectionChanged
  uid: visio!Visio.Document#onSelectionChanged:member
  package: visio!
  fullName: onSelectionChanged
  summary: >-
    Tritt auf, wenn sich die aktuelle Auswahl von Shapes ändert.


    \[[API-Menge: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Visio.SelectionChangedEventArgs>;'
    return:
      type: <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref uid="visio!Visio.SelectionChangedEventArgs:interface" />&gt;
- name: onShapeMouseEnter
  uid: visio!Visio.Document#onShapeMouseEnter:member
  package: visio!
  fullName: onShapeMouseEnter
  summary: >-
    Tritt auf, wenn der Benutzer den Mauszeiger in das umschließende Feld eines Shapes verschiebt.


    \[[API-Menge: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly onShapeMouseEnter: OfficeExtension.EventHandlers<Visio.ShapeMouseEnterEventArgs>;'
    return:
      type: <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref uid="visio!Visio.ShapeMouseEnterEventArgs:interface" />&gt;
- name: onShapeMouseLeave
  uid: visio!Visio.Document#onShapeMouseLeave:member
  package: visio!
  fullName: onShapeMouseLeave
  summary: >-
    Tritt auf, wenn der Benutzer die Maus aus dem umgebenden Feld eines Shapes verschiebt.


    \[[API-Menge: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly onShapeMouseLeave: OfficeExtension.EventHandlers<Visio.ShapeMouseLeaveEventArgs>;'
    return:
      type: <xref uid="office!OfficeExtension.EventHandlers:class" />&lt;<xref uid="visio!Visio.ShapeMouseLeaveEventArgs:interface" />&gt;
- name: pages
  uid: visio!Visio.Document#pages:member
  package: visio!
  fullName: pages
  summary: >-
    Stellt eine Auflistung der mit dem Dokument verknüpften Seiten dar. Schreibgeschützt.


    \[[API-Menge: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly pages: Visio.PageCollection;'
    return:
      type: <xref uid="visio!Visio.PageCollection:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\nVisio.run(session, function (ctx) {\n    var pages = ctx.document.pages;\n    var pageCount = pages.getCount();\n    return ctx.sync().then(function () {\n        console.log(\"Pages Count: \" +pageCount.value);\n    });\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: view
  uid: visio!Visio.Document#view:member
  package: visio!
  fullName: view
  summary: >-
    Gibt das DocumentView-Objekt zurück. Schreibgeschützt.


    \[[API-Menge: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly view: Visio.DocumentView;'
    return:
      type: <xref uid="visio!Visio.DocumentView:class" />
methods:
- name: getActivePage()
  uid: visio!Visio.Document#getActivePage:member(1)
  package: visio!
  fullName: getActivePage()
  summary: >-
    Gibt die aktive Seite des Dokuments zurück.


    \[[API-Menge: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getActivePage(): Visio.Page;'
    return:
      type: <xref uid="visio!Visio.Page:class" />
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\nVisio.run(session, function (ctx) {\n    var document = ctx.document;\n    var activePage = document.getActivePage();\n    activePage.load(\"name\");\n    return ctx.sync().then(function () {\n        console.log(\"pageName: \" +activePage.name);\n    });   \n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: load(option)
  uid: visio!Visio.Document#load:member(1)
  package: visio!
  fullName: load(option)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.
  remarks: >-
    Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:


    `load(option?: string | string[]): Visio.Document` -Wobei Option eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.


    `load(option?: { select?: string; expand?: string; }): Visio.Document` -Bei Option. Select handelt es sich um eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Document` Nur verfügbar für Sammlungstypen. Sie ähnelt der vorherigen Signatur. Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis einbezogen werden können. Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind. Wenn Option. Top angegeben ist, wird das Resultset gestartet, nachdem die angegebene Anzahl von Elementen übersprungen wurde.
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: Visio.Interfaces.DocumentLoadOptions): Visio.Document;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="visio!Visio.Interfaces.DocumentLoadOptions:interface" />
    return:
      type: <xref uid="visio!Visio.Document:class" />
      description: ''
- name: load(propertyNames)
  uid: visio!Visio.Document#load:member(2)
  package: visio!
  fullName: load(propertyNames)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.Document;'
    parameters:
    - id: propertyNames
      description: Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.
      type: string | string[]
    return:
      type: <xref uid="visio!Visio.Document:class" />
      description: ''
- name: load(propertyNamesAndPaths)
  uid: visio!Visio.Document#load:member(3)
  package: visio!
  fullName: load(propertyNamesAndPaths)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Document;'
    parameters:
    - id: propertyNamesAndPaths
      description: Dabei ist propertyNamesAndPaths. Select eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.
      type: '{ select?: string; expand?: string; }'
    return:
      type: <xref uid="visio!Visio.Document:class" />
      description: ''
- name: set(properties, options)
  uid: visio!Visio.Document#set:member(1)
  package: visio!
  fullName: set(properties, options)
  summary: Legt mehrere Eigenschaften eines Objekts gleichzeitig fest. Sie können entweder ein einfaches Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs übergeben.
  remarks: >-
    Diese Methode hat die folgende zusätzliche Signatur:


    `set(properties: Visio.Document): void`
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Interfaces.DocumentUpdateData, options?: OfficeExtension.UpdateOptions): void;'
    parameters:
    - id: properties
      description: Ein JavaScript-Objekt mit Eigenschaften, die isomorphically für die Eigenschaften des Objekts strukturiert sind, für das die Methode aufgerufen wird.
      type: <xref uid="visio!Visio.Interfaces.DocumentUpdateData:interface" />
    - id: options
      description: Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.
      type: <xref uid="office!OfficeExtension.UpdateOptions:interface" />
    return:
      type: void
      description: ''
- name: set(properties)
  uid: visio!Visio.Document#set:member(2)
  package: visio!
  fullName: set(properties)
  summary: Legt mehrere Eigenschaften für das Objekt gleichzeitig basierend auf einem vorhandenen geladenen Objekt fest.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'set(properties: Visio.Document): void;'
    parameters:
    - id: properties
      description: ''
      type: <xref uid="visio!Visio.Document:class" />
    return:
      type: void
      description: ''
- name: setActivePage(PageName)
  uid: visio!Visio.Document#setActivePage:member(1)
  package: visio!
  fullName: setActivePage(PageName)
  summary: >-
    Leg die aktive Seite des Dokuments fest.


    \[[API-Menge: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'setActivePage(PageName: string): void;'
    parameters:
    - id: PageName
      description: Name der Seite
      type: string
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\nVisio.run(session, function (ctx) {\n    var document = ctx.document;\n    var pageName = \"Page-1\";\n    document.setActivePage(pageName);\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: startDataRefresh()
  uid: visio!Visio.Document#startDataRefresh:member(1)
  package: visio!
  fullName: startDataRefresh()
  summary: >-
    Löst die Aktualisierung der Daten im Diagramm für alle Seiten aus..


    \[[API-Menge: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'startDataRefresh(): void;'
    return:
      type: void
      description: "\n\n#### <a name=\"examples\"></a>Beispiele\n\n```javascript\nVisio.run(session, function (ctx) {\n    var document = ctx.document;\n    document.startDataRefresh();\n    return ctx.sync();\n}).catch(function(error) {\n    console.log(\"Error: \" + error);\n    if (error instanceof OfficeExtension.Error) {\n        console.log(\"Debug info: \" + JSON.stringify(error.debugInfo));\n    }\n});\n```"
- name: toJSON()
  uid: visio!Visio.Document#toJSON:member(1)
  package: visio!
  fullName: toJSON()
  summary: Überschreibt die JavaScript `toJSON()` -Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird. `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche Visio.Document-Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt (typisiert als `Visio.Interfaces.DocumentData`<!-- -->), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Visio.Interfaces.DocumentData;'
    return:
      type: <xref uid="visio!Visio.Interfaces.DocumentData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: f35d90525848c83bd5c76cf0fb2a2087f2fe73f3
  ms.sourcegitcommit: 3bab97ab3b91da7cca497f6fc895408a76bd8b46
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 11/18/2020
  ms.locfileid: "49142749"
