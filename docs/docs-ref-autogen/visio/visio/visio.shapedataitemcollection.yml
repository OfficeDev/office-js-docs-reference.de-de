### YamlMime:TSType
name: Visio.ShapeDataItemCollection
uid: visio!Visio.ShapeDataItemCollection:class
package: visio!
fullName: Visio.ShapeDataItemCollection
summary: >-
  Stellt die ShapeDataItemCollection für ein bestimmtes Shape dar.


  \[[API-Satz: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
remarks: ''
isPreview: false
isDeprecated: false
type: class
properties:
- name: context
  uid: visio!Visio.ShapeDataItemCollection#context:member
  package: visio!
  fullName: context
  summary: Der Dem Objekt zugeordnete Anforderungskontext. Dadurch wird der Prozess des Add-Ins mit dem Prozess der Office-Hostanwendung verbunden.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'context: RequestContext;'
    return:
      type: <xref uid="visio!Visio.RequestContext:class" />
- name: items
  uid: visio!Visio.ShapeDataItemCollection#items:member
  package: visio!
  fullName: items
  summary: Ruft die geladenen untergeordneten Elemente in dieser Sammlung ab.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'readonly items: Visio.ShapeDataItem[];'
    return:
      type: <xref uid="visio!Visio.ShapeDataItem:class" />[]
methods:
- name: getCount()
  uid: visio!Visio.ShapeDataItemCollection#getCount:member(1)
  package: visio!
  fullName: getCount()
  summary: >-
    Ruft die Anzahl von Shape-Datenelementen ab.


    \[[API-Satz: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getCount(): OfficeExtension.ClientResult<number>;'
    return:
      type: <xref uid="office!OfficeExtension.ClientResult:class" />&lt;number&gt;
      description: ''
- name: getItem(key)
  uid: visio!Visio.ShapeDataItemCollection#getItem:member(1)
  package: visio!
  fullName: getItem(key)
  summary: >-
    Ruft das ShapeDataItem unter Verwendung seines Namens ab.


    \[[API-Satz: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'getItem(key: string): Visio.ShapeDataItem;'
    parameters:
    - id: key
      description: Der Schlüssel ist der Name des ShapeDataItem, das abgerufen werden soll.
      type: string
    return:
      type: <xref uid="visio!Visio.ShapeDataItem:class" />
      description: ''
- name: load(option)
  uid: visio!Visio.ShapeDataItemCollection#load:member(1)
  package: visio!
  fullName: load(option)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.
  remarks: >-
    Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:


    `load(option?: string | string[]): Visio.ShapeDataItemCollection` - Bei der Option handelt es sich um eine durch Kommas getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.


    `load(option?: { select?: string; expand?: string; }): Visio.ShapeDataItemCollection` - Dabei ist option.select eine durch Trennzeichen getrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und options.expand ist eine durch Trennzeichen getrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.


    `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.ShapeDataItemCollection` - Nur für Auflistungstypen verfügbar. Sie ähnelt der vorherigen Signatur. Option.top gibt die maximale Anzahl von Auflistungselementen an, die in das Ergebnis eingeschlossen werden können. Option.skip gibt die Anzahl der Elemente an, die übersprungen und nicht in das Ergebnis einbezogen werden sollen. Wenn option.top angegeben wird, wird das Ergebnisset gestartet, nachdem die angegebene Anzahl von Elementen übersprungen wurde.


    #### <a name="examples"></a>Beispiele


    ```javascript

    Visio.run(session, function (ctx) {
        var activePage = ctx.document.getActivePage();
        var shape = activePage.shapes.getItem(0);
        var shapeDataItems = shape.shapeDataItems;
        shapeDataItems.load(["label", "value"]);
        return ctx.sync().then(function() {
            for (var i = 0; i < shapeDataItems.items.length; i++) {
                console.log(shapeDataItems.items[i].label);
                console.log(shapeDataItems.items[i].value);
            }
        });
    }).catch(function(error) {
        console.log("Error: " + error);
        if (error instanceof OfficeExtension.Error) {
            console.log("Debug info: " + JSON.stringify(error.debugInfo));
        }
    });

    ```
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: Visio.Interfaces.ShapeDataItemCollectionLoadOptions & Visio.Interfaces.CollectionLoadOptions): Visio.ShapeDataItemCollection;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="visio!Visio.Interfaces.ShapeDataItemCollectionLoadOptions:interface" /> & <xref uid="visio!Visio.Interfaces.CollectionLoadOptions:interface" />
    return:
      type: <xref uid="visio!Visio.ShapeDataItemCollection:class" />
      description: ''
- name: load(propertyNames)
  uid: visio!Visio.ShapeDataItemCollection#load:member(2)
  package: visio!
  fullName: load(propertyNames)
  summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "`context.sync()`" aufrufen.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(propertyNames?: string | string[]): Visio.ShapeDataItemCollection;'
    parameters:
    - id: propertyNames
      description: Eine durch Trennzeichen getrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.
      type: string | string[]
    return:
      type: <xref uid="visio!Visio.ShapeDataItemCollection:class" />
      description: ''
- name: load(option)
  uid: visio!Visio.ShapeDataItemCollection#load:member(3)
  package: visio!
  fullName: load(option)
  summary: ''
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'load(option?: OfficeExtension.LoadOption): Visio.ShapeDataItemCollection;'
    parameters:
    - id: option
      description: ''
      type: <xref uid="office!OfficeExtension.LoadOption:interface" />
    return:
      type: <xref uid="visio!Visio.ShapeDataItemCollection:class" />
      description: ''
- name: toJSON()
  uid: visio!Visio.ShapeDataItemCollection#toJSON:member(1)
  package: visio!
  fullName: toJSON()
  summary: Überschreibt die JavaScript-Methode, um eine nützlichere Ausgabe zu `toJSON()` bieten, wenn ein API-Objekt an übergeben wird `JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->ruft wiederum die Methode `toJSON` des Objekts auf, das an das Objekt übergeben wird.) Während das ursprüngliche Objekt ein API-Objekt ist, gibt die Methode `Visio.ShapeDataItemCollection` `toJSON` ein einfaches JavaScript-Objekt zurück (typisiert als `Visio.Interfaces.ShapeDataItemCollectionData`<!-- -->), das ein "Items"-Array mit flachen Kopien aller geladenen Eigenschaften aus den Elementen der Auflistung enthält.
  remarks: ''
  isPreview: false
  isDeprecated: false
  syntax:
    content: 'toJSON(): Visio.Interfaces.ShapeDataItemCollectionData;'
    return:
      type: <xref uid="visio!Visio.Interfaces.ShapeDataItemCollectionData:interface" />
      description: ''
extends: <xref uid="office!OfficeExtension.ClientObject:class" />
metadata:
  ms.openlocfilehash: a33c367b42efdcdc8a3eff7bda73e61bc32cacb9
  ms.sourcegitcommit: a8a86cfcaff5ad7dacc653d63502c76b1fedbebe
  ms.translationtype: MT
  ms.contentlocale: de-DE
  ms.lasthandoff: 03/26/2021
  ms.locfileid: "51357955"
