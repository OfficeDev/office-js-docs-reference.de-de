### YamlMime:UniversalReference
items:
  - uid: visio.Visio.Hyperlink
    summary: |-
      Stellt den Hyperlink dar.

      \[[API-Menge: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: Visio.Hyperlink
    fullName: Visio.Hyperlink
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: visio
    children:
      - visio.Visio.Hyperlink.address
      - visio.Visio.Hyperlink.context
      - visio.Visio.Hyperlink.description
      - visio.Visio.Hyperlink.extraInfo
      - visio.Visio.Hyperlink.load
      - visio.Visio.Hyperlink.load_1
      - visio.Visio.Hyperlink.load_2
      - visio.Visio.Hyperlink.subAddress
      - visio.Visio.Hyperlink.toJSON
  - uid: visio.Visio.Hyperlink.address
    summary: |-
      Ruft die Adresse des Hyperlink-Objekts ab. Schreibgeschützt.

      \[[API-Menge: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: address
    fullName: address
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly address: string;'
      return:
        type:
          - string
  - uid: visio.Visio.Hyperlink.context
    summary: 'Der Anforderungskontext, der mit dem Objekt verknüpft ist. Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - visio.Visio.RequestContext
  - uid: visio.Visio.Hyperlink.description
    summary: |-
      Ruft die Beschreibung eines Hyperlinks ab. Schreibgeschützt.

      \[[API-Menge: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: description
    fullName: description
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly description: string;'
      return:
        type:
          - string
  - uid: visio.Visio.Hyperlink.extraInfo
    summary: |-
      Ruft die zusätzlichen URL-Anforderungsinformationen ab, die zum Auflösen der URL des Hyperlinks verwendet werden. Schreibgeschützt.

      \[[API-Menge: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: extraInfo
    fullName: extraInfo
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly extraInfo: string;'
      return:
        type:
          - string
  - uid: visio.Visio.Hyperlink.load
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.
    remarks: |-
      Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:

      `load(option?: string | string[]): Visio.Hyperlink`-Wobei Option eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.

      `load(option?: { select?: string; expand?: string; }): Visio.Hyperlink`-Bei Option. Select handelt es sich um eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Visio.Hyperlink`Nur verfügbar für Sammlungstypen. Sie ähnelt der vorherigen Signatur. Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis einbezogen werden können. Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind. Wenn Option. Top angegeben ist, wird das Resultset gestartet, nachdem die angegebene Anzahl von Elementen übersprungen wurde.

      #### <a name="examples"></a>Beispiele

      ```javascript
      Visio.run(session, function (ctx) {
          var activePage = ctx.document.getActivePage();
          var shape = activePage.shapes.getItem(0);
          var hyperlink = shape.hyperlinks.getItem(0);
          hyperlink.load();
          return ctx.sync().then(function() {
              console.log(hyperlink.description);
              console.log(hyperlink.address);
              console.log(hyperlink.subAddress);
              console.log(hyperlink.extraInfo);
           });
      }).catch(function(error) {
          console.log("Error: " + error);
          if (error instanceof OfficeExtension.Error) {
              console.log("Debug info: " + JSON.stringify(error.debugInfo));
          }
      });
      ```
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Visio.Interfaces.HyperlinkLoadOptions): Visio.Hyperlink;'
      return:
        type:
          - visio.Visio.Hyperlink
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - visio.Visio.Interfaces.HyperlinkLoadOptions
  - uid: visio.Visio.Hyperlink.load_1
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Visio.Hyperlink;'
      return:
        type:
          - visio.Visio.Hyperlink
        description: ''
      parameters:
        - id: propertyNames
          description: 'Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.'
          type:
            - 'string | string[]'
  - uid: visio.Visio.Hyperlink.load_2
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Visio.Hyperlink;'
      return:
        type:
          - visio.Visio.Hyperlink
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: 'Dabei ist propertyNamesAndPaths. Select eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: visio.Visio.Hyperlink.subAddress
    summary: |-
      Ruft die Unteradresse des Hyperlink-Objekts ab. Schreibgeschützt.

      \[[API-Menge: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]
    name: subAddress
    fullName: subAddress
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly subAddress: string;'
      return:
        type:
          - string
  - uid: visio.Visio.Hyperlink.toJSON
    summary: 'Überschreibt die `toJSON()` JavaScript-Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird.`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche Visio. Hyperlink-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`Visio.Interfaces.HyperlinkData`<!-- -->), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Visio.Interfaces.HyperlinkData;'
      return:
        type:
          - visio.Visio.Interfaces.HyperlinkData
        description: ''