### YamlMime:UniversalReference
items:
  - uid: 'visio!Visio.Interfaces.SelectionData:interface'
    summary: '<span data-ttu-id="13765-101">Eine Schnittstelle, die die Daten beschreibt, die durch den Aufruf von "Selection. tojson ()" zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="13765-101">An interface describing the data returned by calling "selection.toJSON()".</span></span>'
    name: Visio.Interfaces.SelectionData
    fullName: Visio.Interfaces.SelectionData
    langs:
      - typeScript
    type: interface
    package: visio!
    children:
      - 'visio!Visio.Interfaces.SelectionData#shapes:member'
  - uid: 'visio!Visio.Interfaces.SelectionData#shapes:member'
    summary: |-
      <span data-ttu-id="13765-102">Ruft die Formen der Auswahl ab.</span><span class="sxs-lookup"><span data-stu-id="13765-102">Gets the Shapes of the Selection.</span></span> <span data-ttu-id="13765-103">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="13765-103">Read-only.</span></span>

      <span data-ttu-id="13765-104">\[[API-Menge: 1,1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview)\]</span><span class="sxs-lookup"><span data-stu-id="13765-104">\[ [API set: 1.1](/office/dev/add-ins/reference/overview/visio-javascript-reference-overview) \]</span></span>
    name: shapes
    fullName: shapes
    langs:
      - typeScript
    type: property
    syntax:
      content: 'shapes?: Visio.Interfaces.ShapeData[];'
      return:
        type:
          - 'visio!Visio.Interfaces.SelectionData#shapes~0:complex'
references:
  - uid: 'visio!Visio.Interfaces.SelectionData#shapes~0:complex'
    name: 'Visio.Interfaces.ShapeData[]'
    fullName: 'Visio.Interfaces.ShapeData[]'
    spec.typeScript:
      - uid: 'visio!Visio.Interfaces.ShapeData:interface'
        name: Visio.Interfaces.ShapeData
        fullName: Visio.Interfaces.ShapeData
      - name: '[]'
        fullName: '[]'