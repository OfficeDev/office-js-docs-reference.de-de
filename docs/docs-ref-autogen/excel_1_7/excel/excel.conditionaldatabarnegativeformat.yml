### YamlMime:UniversalReference
items:
  - uid: excel.Excel.ConditionalDataBarNegativeFormat
    summary: |-
      Stellt ein Daten leisten Format für bedingtes Format für die negative Seite des Datenbalkens dar.

      \[[API-Gruppe: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.ConditionalDataBarNegativeFormat
    fullName: Excel.ConditionalDataBarNegativeFormat
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.ConditionalDataBarNegativeFormat.borderColor
      - excel.Excel.ConditionalDataBarNegativeFormat.context
      - excel.Excel.ConditionalDataBarNegativeFormat.fillColor
      - excel.Excel.ConditionalDataBarNegativeFormat.load
      - excel.Excel.ConditionalDataBarNegativeFormat.load_1
      - excel.Excel.ConditionalDataBarNegativeFormat.load_2
      - excel.Excel.ConditionalDataBarNegativeFormat.matchPositiveBorderColor
      - excel.Excel.ConditionalDataBarNegativeFormat.matchPositiveFillColor
      - excel.Excel.ConditionalDataBarNegativeFormat.set
      - excel.Excel.ConditionalDataBarNegativeFormat.set_1
      - excel.Excel.ConditionalDataBarNegativeFormat.toJSON
  - uid: excel.Excel.ConditionalDataBarNegativeFormat.borderColor
    summary: |-
      HTML-Farbcode, der die Farbe der Rahmenlinie des Formulars \#RRGGBB (z.b. "FFA500") oder als benannte HTML-Farbe (beispielsweise "Orange") darstellt. "Leere Zeichenfolge", wenn kein Rahmen vorhanden oder festgelegt ist.

      \[[API-Gruppe: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: borderColor
    fullName: borderColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'borderColor: string;'
      return:
        type:
          - string
  - uid: excel.Excel.ConditionalDataBarNegativeFormat.context
    summary: 'Der Anforderungskontext, der mit dem Objekt verknüpft ist. Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.ConditionalDataBarNegativeFormat.fillColor
    summary: |-
      HTML-Farbcode, der die Füllfarbe des Formulars \#RRGGBB (z.b. "FFA500") oder als benannte HTML-Farbe (beispielsweise "Orange") darstellt.

      \[[API-Gruppe: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: fillColor
    fullName: fillColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'fillColor: string;'
      return:
        type:
          - string
  - uid: excel.Excel.ConditionalDataBarNegativeFormat.load
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.
    remarks: |-
      Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:

      `load(option?: string | string[]): Excel.ConditionalDataBarNegativeFormat`-Wobei Option eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.

      `load(option?: { select?: string; expand?: string; }): Excel.ConditionalDataBarNegativeFormat`-Bei Option. Select handelt es sich um eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.ConditionalDataBarNegativeFormat`Nur verfügbar für Sammlungstypen. Sie ähnelt der vorherigen Signatur. Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis einbezogen werden können. Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind. Wenn Option. Top angegeben ist, wird das Resultset gestartet, nachdem die angegebene Anzahl von Elementen übersprungen wurde.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.ConditionalDataBarNegativeFormatLoadOptions): Excel.ConditionalDataBarNegativeFormat;'
      return:
        type:
          - excel.Excel.ConditionalDataBarNegativeFormat
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.ConditionalDataBarNegativeFormatLoadOptions
  - uid: excel.Excel.ConditionalDataBarNegativeFormat.load_1
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ConditionalDataBarNegativeFormat;'
      return:
        type:
          - excel.Excel.ConditionalDataBarNegativeFormat
        description: ''
      parameters:
        - id: propertyNames
          description: 'Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.'
          type:
            - 'string | string[]'
  - uid: excel.Excel.ConditionalDataBarNegativeFormat.load_2
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.ConditionalDataBarNegativeFormat;'
      return:
        type:
          - excel.Excel.ConditionalDataBarNegativeFormat
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: 'Dabei ist propertyNamesAndPaths. Select eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.ConditionalDataBarNegativeFormat.matchPositiveBorderColor
    summary: |-
      Boolesche Darstellung zur Angabe, ob der negative Datenbalken dieselbe Rahmenfarbe wie der Datenbalken hat.

      \[[API-Gruppe: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: matchPositiveBorderColor
    fullName: matchPositiveBorderColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'matchPositiveBorderColor: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.ConditionalDataBarNegativeFormat.matchPositiveFillColor
    summary: |-
      Boolesche Darstellung zur Angabe, ob der negative Datenbalken dieselbe Füllfarbe wie der Datenbalken hat.

      \[[API-Gruppe: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: matchPositiveFillColor
    fullName: matchPositiveFillColor
    langs:
      - typeScript
    type: property
    syntax:
      content: 'matchPositiveFillColor: boolean;'
      return:
        type:
          - boolean
  - uid: excel.Excel.ConditionalDataBarNegativeFormat.set
    summary: Legt mehrere Eigenschaften eines Objekts gleichzeitig fest. Sie können entweder ein einfaches Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs übergeben.
    remarks: |-
      Diese Methode hat die folgende zusätzliche Signatur:

      `set(properties: Excel.ConditionalDataBarNegativeFormat): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ConditionalDataBarNegativeFormatUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: 'Ein JavaScript-Objekt mit Eigenschaften, die isomorphically für die Eigenschaften des Objekts strukturiert sind, für das die Methode aufgerufen wird.'
          type:
            - Interfaces.ConditionalDataBarNegativeFormatUpdateData
        - id: options
          description: 'Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.'
          type:
            - OfficeExtension.UpdateOptions
  - uid: excel.Excel.ConditionalDataBarNegativeFormat.set_1
    summary: Legt mehrere Eigenschaften für das Objekt gleichzeitig basierend auf einem vorhandenen geladenen Objekt fest.
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ConditionalDataBarNegativeFormat): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - excel.Excel.ConditionalDataBarNegativeFormat
  - uid: excel.Excel.ConditionalDataBarNegativeFormat.toJSON
    summary: 'Überschreibt die `toJSON()` JavaScript-Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird.`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche Excel. ConditionalDataBarNegativeFormat-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`Excel.Interfaces.ConditionalDataBarNegativeFormatData`<!-- -->), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ConditionalDataBarNegativeFormatData;'
      return:
        type:
          - excel.Excel.Interfaces.ConditionalDataBarNegativeFormatData
        description: ''