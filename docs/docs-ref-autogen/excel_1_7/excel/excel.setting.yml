### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Setting:class'
    summary: |-
      <span data-ttu-id="45aad-101">Setting stellt ein Schlüssel-Wert-Paar einer Einstellung dar, die im Dokument gespeichert ist (pro Datei pro Add-in).</span><span class="sxs-lookup"><span data-stu-id="45aad-101">Setting represents a key-value pair of a setting persisted to the document (per file per add-in).</span></span> <span data-ttu-id="45aad-102">Diese benutzerdefinierten Schlüssel/Wert-Paare können zum Speichern von Status-oder Lebenszyklusinformationen verwendet werden, die vom Inhalts-oder Aufgabenbereich-Add-in benötigt werden.</span><span class="sxs-lookup"><span data-stu-id="45aad-102">These custom key-value pair can be used to store state or lifecycle information needed by the content or task-pane add-in.</span></span> <span data-ttu-id="45aad-103">Beachten Sie, dass Einstellungen im Dokument gespeichert werden und daher keine vertraulichen oder geschützten Informationen wie Benutzerinformationen und Kennwort gespeichert werden können.</span><span class="sxs-lookup"><span data-stu-id="45aad-103">Note that settings are persisted in the document and hence it is not a place to store any sensitive or protected information such as user information and password.</span></span>

      <span data-ttu-id="45aad-104">\[[API-Gruppe: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45aad-104">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Setting
    fullName: Excel.Setting
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.Setting#context:member'
      - 'excel!Excel.Setting#delete:member(1)'
      - 'excel!Excel.Setting#key:member'
      - 'excel!Excel.Setting#load:member(1)'
      - 'excel!Excel.Setting#load:member(2)'
      - 'excel!Excel.Setting#load:member(3)'
      - 'excel!Excel.Setting#set:member(1)'
      - 'excel!Excel.Setting#set:member(2)'
      - 'excel!Excel.Setting#toJSON:member(1)'
      - 'excel!Excel.Setting#value:member'
  - uid: 'excel!Excel.Setting#context:member'
    summary: '<span data-ttu-id="45aad-105">Der Anforderungskontext, der mit dem Objekt verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="45aad-105">The request context associated with the object.</span></span> <span data-ttu-id="45aad-106">Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="45aad-106">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Setting#delete:member(1)'
    summary: |-
      <span data-ttu-id="45aad-107">Löscht die Einstellung.</span><span class="sxs-lookup"><span data-stu-id="45aad-107">Deletes the setting.</span></span>

      <span data-ttu-id="45aad-108">\[[API-Gruppe: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45aad-108">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="45aad-109">Beispiele</span><span class="sxs-lookup"><span data-stu-id="45aad-109">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const settings = context.workbook.settings;
              let needsReview = settings.getItem("NeedsReview");
              needsReview.delete();
              needsReview = settings.getItemOrNullObject("NeedsReview");

              await context.sync();

              if (needsReview.isNullObject) {
                  console.log("The setting has been deleted");
              } else {
                  console.log("The setting was not deleted");
              }

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.Setting#key:member'
    summary: |-
      <span data-ttu-id="45aad-110">Gibt den Schlüssel zurück, der die ID der Einstellung darstellt.</span><span class="sxs-lookup"><span data-stu-id="45aad-110">Returns the key that represents the id of the Setting.</span></span> <span data-ttu-id="45aad-111">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="45aad-111">Read-only.</span></span>

      <span data-ttu-id="45aad-112">\[[API-Gruppe: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45aad-112">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: key
    fullName: key
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly key: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Setting#load:member(1)'
    summary: <span data-ttu-id="45aad-113">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="45aad-113">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="45aad-114">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="45aad-114">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.SettingLoadOptions): Excel.Setting;'
      return:
        type:
          - 'excel!Excel.Setting:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="45aad-115">Enthält Optionen für die Eigenschaften des zu ladenden Objekts.</span><span class="sxs-lookup"><span data-stu-id="45aad-115">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.SettingLoadOptions:interface'
  - uid: 'excel!Excel.Setting#load:member(2)'
    summary: <span data-ttu-id="45aad-116">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="45aad-116">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="45aad-117">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="45aad-117">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Setting;'
      return:
        type:
          - 'excel!Excel.Setting:class'
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="45aad-118">Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="45aad-118">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Setting#load:member(3)'
    summary: <span data-ttu-id="45aad-119">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="45aad-119">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="45aad-120">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="45aad-120">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.Setting;
      return:
        type:
          - 'excel!Excel.Setting:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="45aad-121">`propertyNamesAndPaths.select`ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften `propertyNamesAndPaths.expand` angibt, und ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="45aad-121">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.Setting#set:member(1)'
    summary: '<span data-ttu-id="45aad-122">Legt mehrere Eigenschaften eines Objekts gleichzeitig fest.</span><span class="sxs-lookup"><span data-stu-id="45aad-122">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="45aad-123">Sie können entweder ein einfaches Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs übergeben.</span><span class="sxs-lookup"><span data-stu-id="45aad-123">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="45aad-124">Diese Methode hat die folgende zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="45aad-124">This method has the following additional signature:</span></span>

      `set(properties: Excel.Setting): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.SettingUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="45aad-125">Ein JavaScript-Objekt mit Eigenschaften, die isomorphically für die Eigenschaften des Objekts strukturiert sind, für das die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="45aad-125">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - 'excel!Excel.Interfaces.SettingUpdateData:interface'
        - id: options
          description: '<span data-ttu-id="45aad-126">Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.</span><span class="sxs-lookup"><span data-stu-id="45aad-126">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.Setting#set:member(2)'
    summary: '<span data-ttu-id="45aad-127">Legt mehrere Eigenschaften für das Objekt gleichzeitig basierend auf einem vorhandenen geladenen Objekt fest.</span><span class="sxs-lookup"><span data-stu-id="45aad-127">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Setting): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.Setting:class'
  - uid: 'excel!Excel.Setting#toJSON:member(1)'
    summary: '<span data-ttu-id="45aad-128">Überschreibt die `toJSON()` JavaScript-Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird.`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="45aad-128">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="45aad-129">.</span><span class="sxs-lookup"><span data-stu-id="45aad-129"></span></span> <span data-ttu-id="45aad-130">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="45aad-130"></span></span><!-- --><span data-ttu-id="45aad-131">wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche Excel. Setting-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`Excel.Interfaces.SettingData`</span><span class="sxs-lookup"><span data-stu-id="45aad-131">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Setting object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.SettingData`</span></span><!-- --><span data-ttu-id="45aad-132">), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="45aad-132">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.SettingData;'
      return:
        type:
          - 'excel!Excel.Interfaces.SettingData:interface'
        description: ''
  - uid: 'excel!Excel.Setting#value:member'
    summary: |-
      <span data-ttu-id="45aad-133">Stellt den Wert dar, der für diese Einstellung gespeichert ist.</span><span class="sxs-lookup"><span data-stu-id="45aad-133">Represents the value stored for this setting.</span></span>

      <span data-ttu-id="45aad-134">\[[API-Gruppe: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="45aad-134">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'value: any;'
      return:
        type:
          - any
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Setting:class'
    name: Excel.Setting
  - uid: 'excel!Excel.Interfaces.SettingLoadOptions:interface'
    name: Excel.Interfaces.SettingLoadOptions
  - uid: 'excel!Excel.Interfaces.SettingUpdateData:interface'
    name: Interfaces.SettingUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.SettingData:interface'
    name: Excel.Interfaces.SettingData