### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Interfaces.NamedItemArrayValuesLoadOptions:interface'
    summary: |-
      Stellt ein Objekt dar, das Werte und Typen eines benannten Elements enthält.

      \[[API-Gruppe: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.Interfaces.NamedItemArrayValuesLoadOptions
    fullName: Excel.Interfaces.NamedItemArrayValuesLoadOptions
    langs:
      - typeScript
    type: interface
    package: excel!
    children:
      - 'excel!Excel.Interfaces.NamedItemArrayValuesLoadOptions#$all:member'
      - 'excel!Excel.Interfaces.NamedItemArrayValuesLoadOptions#types:member'
      - 'excel!Excel.Interfaces.NamedItemArrayValuesLoadOptions#values:member'
  - uid: 'excel!Excel.Interfaces.NamedItemArrayValuesLoadOptions#$all:member'
    summary: 'Durch `$all` die Angabe für LoadOptions werden alle skalaren Eigenschaften geladen (beispielsweise:`Range.address`<!-- -->), jedoch nicht die Navigationseigenschaften (beispielsweise:`Range.format.fill.color`<!-- -->).'
    name: $all
    fullName: $all
    langs:
      - typeScript
    type: property
    syntax:
      content: '$all?: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Interfaces.NamedItemArrayValuesLoadOptions#types:member'
    summary: |-
      Stellt die Typen für jedes Element im benannten Elementarray dar.

      \[[API-Gruppe: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: types
    fullName: types
    langs:
      - typeScript
    type: property
    syntax:
      content: 'types?: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Interfaces.NamedItemArrayValuesLoadOptions#values:member'
    summary: |-
      Stellt die Werte der einzelnen Elemente im benannten Elementarray dar.

      \[[API-Gruppe: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: values
    fullName: values
    langs:
      - typeScript
    type: property
    syntax:
      content: 'values?: boolean;'
      return:
        type:
          - boolean