### YamlMime:UniversalReference
items:
  - uid: 'outlook!Office.AppointmentCompose:interface'
    summary: |-
      <span data-ttu-id="67623-101">Der Termin Organisator Modus von [Office. Context. Mailbox. Item](xref:outlook!Office.Item:interface)</span><span class="sxs-lookup"><span data-stu-id="67623-101">The appointment organizer mode of [Office.context.mailbox.item](xref:outlook!Office.Item:interface)</span></span><!-- --><span data-ttu-id="67623-102">.</span><span class="sxs-lookup"><span data-stu-id="67623-102"></span></span>

      <span data-ttu-id="67623-103">**Wichtig**: Dies ist ein internes Outlook-Objekt, das nicht direkt über vorhandene Schnittstellen verfügbar gemacht wird.</span><span class="sxs-lookup"><span data-stu-id="67623-103">**Important**: This is an internal Outlook object, not directly exposed through existing interfaces.</span></span> <span data-ttu-id="67623-104">Sie sollten dies als Modus von Office. Context. Mailbox. Item behandeln.</span><span class="sxs-lookup"><span data-stu-id="67623-104">You should treat this as a mode of Office.context.mailbox.item.</span></span> <span data-ttu-id="67623-105">Weitere Informationen erhalten Sie auf der Seite [Objektmodell](https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.7/office.context.mailbox.item) .</span><span class="sxs-lookup"><span data-stu-id="67623-105">Refer to the [Object Model](https://docs.microsoft.com/office/dev/add-ins/reference/objectmodel/requirement-set-1.7/office.context.mailbox.item) page for more information.</span></span>
    name: Office.AppointmentCompose
    fullName: Office.AppointmentCompose
    langs:
      - typeScript
    type: interface
    extends:
      - 'outlook!Office.Appointment:interface'
      - 'outlook!Office.ItemCompose:interface'
    package: outlook!
    children:
      - 'outlook!Office.AppointmentCompose#addFileAttachmentAsync:member(1)'
      - 'outlook!Office.AppointmentCompose#addFileAttachmentAsync:member(2)'
      - 'outlook!Office.AppointmentCompose#addHandlerAsync:member(1)'
      - 'outlook!Office.AppointmentCompose#addHandlerAsync:member(2)'
      - 'outlook!Office.AppointmentCompose#addItemAttachmentAsync:member(1)'
      - 'outlook!Office.AppointmentCompose#addItemAttachmentAsync:member(2)'
      - 'outlook!Office.AppointmentCompose#body:member'
      - 'outlook!Office.AppointmentCompose#close:member(1)'
      - 'outlook!Office.AppointmentCompose#end:member'
      - 'outlook!Office.AppointmentCompose#getSelectedDataAsync:member(1)'
      - 'outlook!Office.AppointmentCompose#getSelectedDataAsync:member(2)'
      - 'outlook!Office.AppointmentCompose#itemType:member'
      - 'outlook!Office.AppointmentCompose#loadCustomPropertiesAsync:member(1)'
      - 'outlook!Office.AppointmentCompose#location:member'
      - 'outlook!Office.AppointmentCompose#notificationMessages:member'
      - 'outlook!Office.AppointmentCompose#optionalAttendees:member'
      - 'outlook!Office.AppointmentCompose#organizer:member'
      - 'outlook!Office.AppointmentCompose#recurrence:member'
      - 'outlook!Office.AppointmentCompose#removeAttachmentAsync:member(1)'
      - 'outlook!Office.AppointmentCompose#removeAttachmentAsync:member(2)'
      - 'outlook!Office.AppointmentCompose#removeHandlerAsync:member(1)'
      - 'outlook!Office.AppointmentCompose#removeHandlerAsync:member(2)'
      - 'outlook!Office.AppointmentCompose#requiredAttendees:member'
      - 'outlook!Office.AppointmentCompose#saveAsync:member(1)'
      - 'outlook!Office.AppointmentCompose#saveAsync:member(2)'
      - 'outlook!Office.AppointmentCompose#seriesId:member'
      - 'outlook!Office.AppointmentCompose#setSelectedDataAsync:member(1)'
      - 'outlook!Office.AppointmentCompose#setSelectedDataAsync:member(2)'
      - 'outlook!Office.AppointmentCompose#start:member'
      - 'outlook!Office.AppointmentCompose#subject:member'
  - uid: 'outlook!Office.AppointmentCompose#addFileAttachmentAsync:member(1)'
    summary: |-
      <span data-ttu-id="67623-106">Fügt eine Datei zu einer Nachricht oder einem Termin als Anlage hinzu.</span><span class="sxs-lookup"><span data-stu-id="67623-106">Adds a file to a message or appointment as an attachment.</span></span>

      <span data-ttu-id="67623-107">Die addFileAttachmentAsync-Methode lädt die Datei mit dem angegebenen URI hoch und fügt Sie an das Element im Formular Verfassen an.</span><span class="sxs-lookup"><span data-stu-id="67623-107">The addFileAttachmentAsync method uploads the file at the specified URI and attaches it to the item in the compose form.</span></span>

      <span data-ttu-id="67623-108">Sie können anschließend den Identifikator mit der removeAttachmentAsync-Methode verwenden, um den Anhang in derselben Sitzung zu löschen.</span><span class="sxs-lookup"><span data-stu-id="67623-108">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>

      <span data-ttu-id="67623-109">\[[API-Gruppe: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="67623-109">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="67623-110">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="67623-110">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="67623-111">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Terminplaner</span><span class="sxs-lookup"><span data-stu-id="67623-111">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment Organizer</span></span>

      <span data-ttu-id="67623-112">**Fehler**:</span><span class="sxs-lookup"><span data-stu-id="67623-112">**Errors**:</span></span>

      - <span data-ttu-id="67623-113">AttachmentSizeExceeded: die Anlage ist größer als zulässig.</span><span class="sxs-lookup"><span data-stu-id="67623-113">AttachmentSizeExceeded: The attachment is larger than allowed.</span></span>

      - <span data-ttu-id="67623-114">FileTypeNotSupported: die Anlage weist eine Erweiterung auf, die nicht zulässig ist.</span><span class="sxs-lookup"><span data-stu-id="67623-114">FileTypeNotSupported: The attachment has an extension that is not allowed.</span></span>

      - <span data-ttu-id="67623-115">NumberOfAttachmentsExceeded: die Nachricht oder der Termin enthält zu viele Anlagen.</span><span class="sxs-lookup"><span data-stu-id="67623-115">NumberOfAttachmentsExceeded: The message or appointment has too many attachments.</span></span>

      #### <a name="examples"></a><span data-ttu-id="67623-116">Beispiele</span><span class="sxs-lookup"><span data-stu-id="67623-116">Examples</span></span>

      ```javascript
      function callback(result) {
          if (result.error) {
              console.log(result.error);
          } else {
              console.log("Attachment added");
          }
      }

      function addAttachment() {
          // The values in asyncContext can be accessed in the callback.
          var options = { 'asyncContext': { var1: 1, var2: 2 } };

          var attachmentURL = "https://contoso.com/rtm/icon.png";
          Office.context.mailbox.item.addFileAttachmentAsync(attachmentURL, attachmentURL, options, callback);
      }
      ```
    name: 'addFileAttachmentAsync(uri, attachmentName, options, callback)'
    fullName: 'addFileAttachmentAsync(uri, attachmentName, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFileAttachmentAsync(uri: string, attachmentName: string, options?: Office.AsyncContextOptions & { isInline: boolean }, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: uri
          description: '<span data-ttu-id="67623-117">Der URI, der den Speicherort der an die Nachricht oder den Termin anzuhängenden Datei angibt.</span><span class="sxs-lookup"><span data-stu-id="67623-117">The URI that provides the location of the file to attach to the message or appointment.</span></span> <span data-ttu-id="67623-118">Die maximale Länge ist 2048 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="67623-118">The maximum length is 2048 characters.</span></span>'
          type:
            - string
        - id: attachmentName
          description: '<span data-ttu-id="67623-119">Der Name der Anlage, der beim Hochladen der Anlage angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="67623-119">The name of the attachment that is shown while the attachment is uploading.</span></span> <span data-ttu-id="67623-120">Die maximale Länge ist 255 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="67623-120">The maximum length is 255 characters.</span></span>'
          type:
            - string
        - id: options
          description: '<span data-ttu-id="67623-121">Optional.</span><span class="sxs-lookup"><span data-stu-id="67623-121">Optional.</span></span> <span data-ttu-id="67623-122">Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält.</span><span class="sxs-lookup"><span data-stu-id="67623-122">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="67623-123">AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.</span><span class="sxs-lookup"><span data-stu-id="67623-123">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span> <span data-ttu-id="67623-124">IsInline: Wenn true, gibt an, dass die Anlage Inline im Nachrichtentext angezeigt wird und nicht in der Anlagenliste angezeigt werden soll.</span><span class="sxs-lookup"><span data-stu-id="67623-124">isInline: If true, indicates that the attachment will be shown inline in the message body, and should not be displayed in the attachment list.</span></span>'
          type:
            - 'outlook!Office.AppointmentCompose#addFileAttachmentAsync~0:complex'
        - id: callback
          description: '<span data-ttu-id="67623-125">Optional.</span><span class="sxs-lookup"><span data-stu-id="67623-125">Optional.</span></span> <span data-ttu-id="67623-126">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzigen Parameter vom Typ Office. AsyncResult aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="67623-126">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="67623-127">Bei Erfolg wird der Anlagen Bezeichner in der AsyncResult. Value-Eigenschaft bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="67623-127">On success, the attachment identifier will be provided in the asyncResult.value property.</span></span> <span data-ttu-id="67623-128">Wenn das Hochladen der Anlage fehlschlägt, enthält das asyncResult-Objekt ein Error-Objekt mit einer Fehlerbeschreibung.</span><span class="sxs-lookup"><span data-stu-id="67623-128">If uploading the attachment fails, the asyncResult object will contain an Error object that provides a description of the error.</span></span>'
          type:
            - 'outlook!Office.AppointmentCompose#addFileAttachmentAsync~1:complex'
  - uid: 'outlook!Office.AppointmentCompose#addFileAttachmentAsync:member(2)'
    summary: |-
      <span data-ttu-id="67623-129">Fügt eine Datei zu einer Nachricht oder einem Termin als Anlage hinzu.</span><span class="sxs-lookup"><span data-stu-id="67623-129">Adds a file to a message or appointment as an attachment.</span></span>

      <span data-ttu-id="67623-130">Die addFileAttachmentAsync-Methode lädt die Datei mit dem angegebenen URI hoch und fügt Sie an das Element im Formular Verfassen an.</span><span class="sxs-lookup"><span data-stu-id="67623-130">The addFileAttachmentAsync method uploads the file at the specified URI and attaches it to the item in the compose form.</span></span>

      <span data-ttu-id="67623-131">Sie können anschließend den Identifikator mit der removeAttachmentAsync-Methode verwenden, um den Anhang in derselben Sitzung zu löschen.</span><span class="sxs-lookup"><span data-stu-id="67623-131">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>

      <span data-ttu-id="67623-132">\[[API-Gruppe: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="67623-132">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="67623-133">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="67623-133">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="67623-134">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Terminplaner</span><span class="sxs-lookup"><span data-stu-id="67623-134">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment Organizer</span></span>

      <span data-ttu-id="67623-135">**Fehler**:</span><span class="sxs-lookup"><span data-stu-id="67623-135">**Errors**:</span></span>

      - <span data-ttu-id="67623-136">AttachmentSizeExceeded: die Anlage ist größer als zulässig.</span><span class="sxs-lookup"><span data-stu-id="67623-136">AttachmentSizeExceeded: The attachment is larger than allowed.</span></span>

      - <span data-ttu-id="67623-137">FileTypeNotSupported: die Anlage weist eine Erweiterung auf, die nicht zulässig ist.</span><span class="sxs-lookup"><span data-stu-id="67623-137">FileTypeNotSupported: The attachment has an extension that is not allowed.</span></span>

      - <span data-ttu-id="67623-138">NumberOfAttachmentsExceeded: die Nachricht oder der Termin enthält zu viele Anlagen.</span><span class="sxs-lookup"><span data-stu-id="67623-138">NumberOfAttachmentsExceeded: The message or appointment has too many attachments.</span></span>
    name: 'addFileAttachmentAsync(uri, attachmentName, callback)'
    fullName: 'addFileAttachmentAsync(uri, attachmentName, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addFileAttachmentAsync(uri: string, attachmentName: string, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: uri
          description: '<span data-ttu-id="67623-139">Der URI, der den Speicherort der an die Nachricht oder den Termin anzuhängenden Datei angibt.</span><span class="sxs-lookup"><span data-stu-id="67623-139">The URI that provides the location of the file to attach to the message or appointment.</span></span> <span data-ttu-id="67623-140">Die maximale Länge ist 2048 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="67623-140">The maximum length is 2048 characters.</span></span>'
          type:
            - string
        - id: attachmentName
          description: '<span data-ttu-id="67623-141">Der Name der Anlage, der beim Hochladen der Anlage angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="67623-141">The name of the attachment that is shown while the attachment is uploading.</span></span> <span data-ttu-id="67623-142">Die maximale Länge ist 255 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="67623-142">The maximum length is 255 characters.</span></span>'
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="67623-143">Optional.</span><span class="sxs-lookup"><span data-stu-id="67623-143">Optional.</span></span> <span data-ttu-id="67623-144">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzigen Parameter vom Typ Office. AsyncResult aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="67623-144">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="67623-145">Bei Erfolg wird der Anlagen Bezeichner in der AsyncResult. Value-Eigenschaft bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="67623-145">On success, the attachment identifier will be provided in the asyncResult.value property.</span></span> <span data-ttu-id="67623-146">Wenn das Hochladen der Anlage fehlschlägt, enthält das asyncResult-Objekt ein Error-Objekt mit einer Fehlerbeschreibung.</span><span class="sxs-lookup"><span data-stu-id="67623-146">If uploading the attachment fails, the asyncResult object will contain an Error object that provides a description of the error.</span></span>'
          type:
            - 'outlook!Office.AppointmentCompose#addFileAttachmentAsync~2:complex'
  - uid: 'outlook!Office.AppointmentCompose#addHandlerAsync:member(1)'
    summary: |-
      <span data-ttu-id="67623-147">Fügt einen Ereignishandler für ein unterstütztes Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="67623-147">Adds an event handler for a supported event.</span></span> <span data-ttu-id="67623-148">**Hinweis**: Ereignisse sind nur mit dem Aufgabenbereich verfügbar.</span><span class="sxs-lookup"><span data-stu-id="67623-148">**Note**: Events are available only with task pane.</span></span>

      <span data-ttu-id="67623-149">Derzeit werden die unterstützten Ereignistypen`Office.EventType.AppointmentTimeChanged`</span><span class="sxs-lookup"><span data-stu-id="67623-149">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`</span></span><!-- --><span data-ttu-id="67623-150">, `Office.EventType.RecipientsChanged`</span><span class="sxs-lookup"><span data-stu-id="67623-150"></span></span><!-- --><span data-ttu-id="67623-151">, und`Office.EventType.RecurrenceChanged`</span><span class="sxs-lookup"><span data-stu-id="67623-151">, and `Office.EventType.RecurrenceChanged`</span></span><!-- --><span data-ttu-id="67623-152">.</span><span class="sxs-lookup"><span data-stu-id="67623-152"></span></span>

      <span data-ttu-id="67623-153">\[[API-Gruppe: Mailbox 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="67623-153">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="67623-154">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="67623-154">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="67623-155">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Terminplaner</span><span class="sxs-lookup"><span data-stu-id="67623-155">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment Organizer</span></span>
    name: 'addHandlerAsync(eventType, handler, options, callback)'
    fullName: 'addHandlerAsync(eventType, handler, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType | string, handler: any, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="67623-156">Das Ereignis, das den Handler aufrufen soll</span><span class="sxs-lookup"><span data-stu-id="67623-156">The event that should invoke the handler.</span></span>'
          type:
            - 'outlook!Office.AppointmentCompose#addHandlerAsync~0:complex'
        - id: handler
          description: '<span data-ttu-id="67623-157">Die Funktion, die das Ereignis behandeln soll.</span><span class="sxs-lookup"><span data-stu-id="67623-157">The function to handle the event.</span></span> <span data-ttu-id="67623-158">Die Funktion muss einen einzigen Parameter akzeptieren (ein Objektliteral).</span><span class="sxs-lookup"><span data-stu-id="67623-158">The function must accept a single parameter, which is an object literal.</span></span> <span data-ttu-id="67623-159">Die Type-Eigenschaft des Parameters stimmt mit dem eventType-Parameter überein, der an addHandlerAsync übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="67623-159">The type property on the parameter will match the eventType parameter passed to addHandlerAsync.</span></span>'
          type:
            - any
        - id: options
          description: '<span data-ttu-id="67623-160">Optional.</span><span class="sxs-lookup"><span data-stu-id="67623-160">Optional.</span></span> <span data-ttu-id="67623-161">Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält.</span><span class="sxs-lookup"><span data-stu-id="67623-161">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="67623-162">AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.</span><span class="sxs-lookup"><span data-stu-id="67623-162">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="67623-163">Optional.</span><span class="sxs-lookup"><span data-stu-id="67623-163">Optional.</span></span> <span data-ttu-id="67623-164">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter (asyncResult) aufgerufen, bei dem es sich um ein Office. AsyncResult-Objekt handelt.</span><span class="sxs-lookup"><span data-stu-id="67623-164">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>'
          type:
            - 'outlook!Office.AppointmentCompose#addHandlerAsync~1:complex'
  - uid: 'outlook!Office.AppointmentCompose#addHandlerAsync:member(2)'
    summary: |-
      <span data-ttu-id="67623-165">Fügt einen Ereignishandler für ein unterstütztes Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="67623-165">Adds an event handler for a supported event.</span></span> <span data-ttu-id="67623-166">**Hinweis**: Ereignisse sind nur mit dem Aufgabenbereich verfügbar.</span><span class="sxs-lookup"><span data-stu-id="67623-166">**Note**: Events are available only with task pane.</span></span>

      <span data-ttu-id="67623-167">Derzeit werden die unterstützten Ereignistypen`Office.EventType.AppointmentTimeChanged`</span><span class="sxs-lookup"><span data-stu-id="67623-167">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`</span></span><!-- --><span data-ttu-id="67623-168">, `Office.EventType.RecipientsChanged`</span><span class="sxs-lookup"><span data-stu-id="67623-168"></span></span><!-- --><span data-ttu-id="67623-169">, und`Office.EventType.RecurrenceChanged`</span><span class="sxs-lookup"><span data-stu-id="67623-169">, and `Office.EventType.RecurrenceChanged`</span></span><!-- --><span data-ttu-id="67623-170">.</span><span class="sxs-lookup"><span data-stu-id="67623-170"></span></span>

      <span data-ttu-id="67623-171">\[[API-Gruppe: Mailbox 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="67623-171">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="67623-172">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="67623-172">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="67623-173">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Terminplaner</span><span class="sxs-lookup"><span data-stu-id="67623-173">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment Organizer</span></span>
    name: 'addHandlerAsync(eventType, handler, callback)'
    fullName: 'addHandlerAsync(eventType, handler, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addHandlerAsync(eventType: Office.EventType | string, handler: any, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="67623-174">Das Ereignis, das den Handler aufrufen soll</span><span class="sxs-lookup"><span data-stu-id="67623-174">The event that should invoke the handler.</span></span>'
          type:
            - 'outlook!Office.AppointmentCompose#addHandlerAsync~2:complex'
        - id: handler
          description: '<span data-ttu-id="67623-175">Die Funktion, die das Ereignis behandeln soll.</span><span class="sxs-lookup"><span data-stu-id="67623-175">The function to handle the event.</span></span> <span data-ttu-id="67623-176">Die Funktion muss einen einzigen Parameter akzeptieren (ein Objektliteral).</span><span class="sxs-lookup"><span data-stu-id="67623-176">The function must accept a single parameter, which is an object literal.</span></span> <span data-ttu-id="67623-177">Die Type-Eigenschaft des Parameters stimmt mit dem eventType-Parameter überein, der an addHandlerAsync übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="67623-177">The type property on the parameter will match the eventType parameter passed to addHandlerAsync.</span></span>'
          type:
            - any
        - id: callback
          description: '<span data-ttu-id="67623-178">Optional.</span><span class="sxs-lookup"><span data-stu-id="67623-178">Optional.</span></span> <span data-ttu-id="67623-179">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter (asyncResult) aufgerufen, bei dem es sich um ein Office. AsyncResult-Objekt handelt.</span><span class="sxs-lookup"><span data-stu-id="67623-179">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>'
          type:
            - 'outlook!Office.AppointmentCompose#addHandlerAsync~3:complex'
  - uid: 'outlook!Office.AppointmentCompose#addItemAttachmentAsync:member(1)'
    summary: |-
      <span data-ttu-id="67623-180">Fügt der Nachricht oder dem Termin ein Exchange-Objekt, wie z. B. eine Nachricht, als Anhang hinzu.</span><span class="sxs-lookup"><span data-stu-id="67623-180">Adds an Exchange item, such as a message, as an attachment to the message or appointment.</span></span>

      <span data-ttu-id="67623-181">Die addItemAttachmentAsync-Methode fügt das Element mit dem angegebenen Exchange-Bezeichner an das Element im Formular Verfassen an.</span><span class="sxs-lookup"><span data-stu-id="67623-181">The addItemAttachmentAsync method attaches the item with the specified Exchange identifier to the item in the compose form.</span></span> <span data-ttu-id="67623-182">Wenn Sie eine Rückrufmethode angeben, wird die Methode mit einem Parameter, AsyncResult, aufgerufen, der entweder die Anlagen-ID oder einen Code enthält, der jeden Fehler angibt, der beim Anfügen des Elements aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="67623-182">If you specify a callback method, the method is called with one parameter, asyncResult, which contains either the attachment identifier or a code that indicates any error that occurred while attaching the item.</span></span> <span data-ttu-id="67623-183">Sie können den Parameter options verwenden, um Zustandsinformationen bei Bedarf an die Rückrufmethode zu übergeben.</span><span class="sxs-lookup"><span data-stu-id="67623-183">You can use the options parameter to pass state information to the callback method, if needed.</span></span>

      <span data-ttu-id="67623-184">Sie können anschließend den Identifikator mit der removeAttachmentAsync-Methode verwenden, um den Anhang in derselben Sitzung zu löschen.</span><span class="sxs-lookup"><span data-stu-id="67623-184">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>

      <span data-ttu-id="67623-185">Wenn Ihr Office-Add-in in Outlook im Internet läuft, kann die addItemAttachmentAsync-Methode Elemente an andere Elemente als das Element anfügen, das Sie bearbeiten. Dies wird jedoch nicht unterstützt und wird nicht empfohlen.</span><span class="sxs-lookup"><span data-stu-id="67623-185">If your Office add-in is running in Outlook on the web, the addItemAttachmentAsync method can attach items to items other than the item that you are editing; however, this is not supported and is not recommended.</span></span>

      <span data-ttu-id="67623-186">\[[API-Gruppe: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="67623-186">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="67623-187">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="67623-187">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="67623-188">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Terminplaner</span><span class="sxs-lookup"><span data-stu-id="67623-188">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment Organizer</span></span>

      <span data-ttu-id="67623-189">**Fehler**:</span><span class="sxs-lookup"><span data-stu-id="67623-189">**Errors**:</span></span>

      - <span data-ttu-id="67623-190">NumberOfAttachmentsExceeded: die Nachricht oder der Termin enthält zu viele Anlagen.</span><span class="sxs-lookup"><span data-stu-id="67623-190">NumberOfAttachmentsExceeded: The message or appointment has too many attachments.</span></span>

      #### <a name="examples"></a><span data-ttu-id="67623-191">Beispiele</span><span class="sxs-lookup"><span data-stu-id="67623-191">Examples</span></span>

      ```javascript
      // The following example adds an existing Outlook item as an attachment
      // with the name `My Attachment`.
      function callback(result) {
          if (result.error) {
              console.log(result.error);
          } else {
              console.log("Attachment added");
          }
      }

      function addAttachment() {
          // EWS ID of item to attach (shortened for readability).
          var itemId = "AAMkADI1...AAA=";

          // The values in asyncContext can be accessed in the callback.
          var options = { 'asyncContext': { var1: 1, var2: 2 } };

          Office.context.mailbox.item.addItemAttachmentAsync(itemId, "My Attachment", options, callback);
      }
      ```
    name: 'addItemAttachmentAsync(itemId, attachmentName, options, callback)'
    fullName: 'addItemAttachmentAsync(itemId, attachmentName, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: itemId
          description: '<span data-ttu-id="67623-192">Der Exchange-Bezeichner des Objekts, das angehängt werden soll.</span><span class="sxs-lookup"><span data-stu-id="67623-192">The Exchange identifier of the item to attach.</span></span> <span data-ttu-id="67623-193">Die maximale Länge beträgt 100 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="67623-193">The maximum length is 100 characters.</span></span>'
          type:
            - any
        - id: attachmentName
          description: '<span data-ttu-id="67623-194">Der Name der Anlage, der beim Hochladen der Anlage angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="67623-194">The name of the attachment that is shown while the attachment is uploading.</span></span> <span data-ttu-id="67623-195">Die maximale Länge ist 255 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="67623-195">The maximum length is 255 characters.</span></span>'
          type:
            - string
        - id: options
          description: '<span data-ttu-id="67623-196">Optional.</span><span class="sxs-lookup"><span data-stu-id="67623-196">Optional.</span></span> <span data-ttu-id="67623-197">Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält.</span><span class="sxs-lookup"><span data-stu-id="67623-197">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="67623-198">AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.</span><span class="sxs-lookup"><span data-stu-id="67623-198">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="67623-199">Optional.</span><span class="sxs-lookup"><span data-stu-id="67623-199">Optional.</span></span> <span data-ttu-id="67623-200">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzigen Parameter vom Typ Office. AsyncResult aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="67623-200">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="67623-201">Bei Erfolg wird der Anlagen Bezeichner in der AsyncResult. Value-Eigenschaft bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="67623-201">On success, the attachment identifier will be provided in the asyncResult.value property.</span></span> <span data-ttu-id="67623-202">Wenn das Hinzufügen der Anlage fehlschlägt, enthält das AsyncResult-Objekt ein Error-Objekt, das eine Beschreibung des Fehlers bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="67623-202">If adding the attachment fails, the asyncResult object will contain an Error object that provides a description of the error.</span></span>'
          type:
            - 'outlook!Office.AppointmentCompose#addItemAttachmentAsync~0:complex'
  - uid: 'outlook!Office.AppointmentCompose#addItemAttachmentAsync:member(2)'
    summary: |-
      <span data-ttu-id="67623-203">Fügt der Nachricht oder dem Termin ein Exchange-Objekt, wie z. B. eine Nachricht, als Anhang hinzu.</span><span class="sxs-lookup"><span data-stu-id="67623-203">Adds an Exchange item, such as a message, as an attachment to the message or appointment.</span></span>

      <span data-ttu-id="67623-204">Die addItemAttachmentAsync-Methode fügt das Element mit dem angegebenen Exchange-Bezeichner an das Element im Formular Verfassen an.</span><span class="sxs-lookup"><span data-stu-id="67623-204">The addItemAttachmentAsync method attaches the item with the specified Exchange identifier to the item in the compose form.</span></span> <span data-ttu-id="67623-205">Wenn Sie eine Rückrufmethode angeben, wird die Methode mit einem Parameter, AsyncResult, aufgerufen, der entweder die Anlagen-ID oder einen Code enthält, der jeden Fehler angibt, der beim Anfügen des Elements aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="67623-205">If you specify a callback method, the method is called with one parameter, asyncResult, which contains either the attachment identifier or a code that indicates any error that occurred while attaching the item.</span></span> <span data-ttu-id="67623-206">Sie können den Parameter options verwenden, um Zustandsinformationen bei Bedarf an die Rückrufmethode zu übergeben.</span><span class="sxs-lookup"><span data-stu-id="67623-206">You can use the options parameter to pass state information to the callback method, if needed.</span></span>

      <span data-ttu-id="67623-207">Sie können anschließend den Identifikator mit der removeAttachmentAsync-Methode verwenden, um den Anhang in derselben Sitzung zu löschen.</span><span class="sxs-lookup"><span data-stu-id="67623-207">You can subsequently use the identifier with the removeAttachmentAsync method to remove the attachment in the same session.</span></span>

      <span data-ttu-id="67623-208">Wenn Ihr Office-Add-in in Outlook im Internet läuft, kann die addItemAttachmentAsync-Methode Elemente an andere Elemente als das Element anfügen, das Sie bearbeiten. Dies wird jedoch nicht unterstützt und wird nicht empfohlen.</span><span class="sxs-lookup"><span data-stu-id="67623-208">If your Office add-in is running in Outlook on the web, the addItemAttachmentAsync method can attach items to items other than the item that you are editing; however, this is not supported and is not recommended.</span></span>

      <span data-ttu-id="67623-209">\[[API-Gruppe: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="67623-209">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="67623-210">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="67623-210">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="67623-211">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Terminplaner</span><span class="sxs-lookup"><span data-stu-id="67623-211">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment Organizer</span></span>

      <span data-ttu-id="67623-212">**Fehler**:</span><span class="sxs-lookup"><span data-stu-id="67623-212">**Errors**:</span></span>

      - <span data-ttu-id="67623-213">NumberOfAttachmentsExceeded: die Nachricht oder der Termin enthält zu viele Anlagen.</span><span class="sxs-lookup"><span data-stu-id="67623-213">NumberOfAttachmentsExceeded: The message or appointment has too many attachments.</span></span>
    name: 'addItemAttachmentAsync(itemId, attachmentName, callback)'
    fullName: 'addItemAttachmentAsync(itemId, attachmentName, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'addItemAttachmentAsync(itemId: any, attachmentName: string, callback?: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: itemId
          description: '<span data-ttu-id="67623-214">Der Exchange-Bezeichner des Objekts, das angehängt werden soll.</span><span class="sxs-lookup"><span data-stu-id="67623-214">The Exchange identifier of the item to attach.</span></span> <span data-ttu-id="67623-215">Die maximale Länge beträgt 100 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="67623-215">The maximum length is 100 characters.</span></span>'
          type:
            - any
        - id: attachmentName
          description: '<span data-ttu-id="67623-216">Der Name der Anlage, der beim Hochladen der Anlage angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="67623-216">The name of the attachment that is shown while the attachment is uploading.</span></span> <span data-ttu-id="67623-217">Die maximale Länge ist 255 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="67623-217">The maximum length is 255 characters.</span></span>'
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="67623-218">Optional.</span><span class="sxs-lookup"><span data-stu-id="67623-218">Optional.</span></span> <span data-ttu-id="67623-219">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzigen Parameter vom Typ Office. AsyncResult aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="67623-219">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="67623-220">Bei Erfolg wird der Anlagen Bezeichner in der AsyncResult. Value-Eigenschaft bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="67623-220">On success, the attachment identifier will be provided in the asyncResult.value property.</span></span> <span data-ttu-id="67623-221">Wenn das Hinzufügen der Anlage fehlschlägt, enthält das AsyncResult-Objekt ein Error-Objekt, das eine Beschreibung des Fehlers bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="67623-221">If adding the attachment fails, the asyncResult object will contain an Error object that provides a description of the error.</span></span>'
          type:
            - 'outlook!Office.AppointmentCompose#addItemAttachmentAsync~1:complex'
  - uid: 'outlook!Office.AppointmentCompose#body:member'
    summary: |-
      <span data-ttu-id="67623-222">Ruft ein Objekt ab, das Methoden zum Bearbeiten des Textkörpers eines Elements bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="67623-222">Gets an object that provides methods for manipulating the body of an item.</span></span>

      <span data-ttu-id="67623-223">\[[API-Gruppe: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="67623-223">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="67623-224">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="67623-224">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="67623-225">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Terminplaner</span><span class="sxs-lookup"><span data-stu-id="67623-225">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment Organizer</span></span>

      #### <a name="examples"></a><span data-ttu-id="67623-226">Beispiele</span><span class="sxs-lookup"><span data-stu-id="67623-226">Examples</span></span>

      ```javascript
      // This example gets the body of the item as plain text.
      Office.context.mailbox.item.body.getAsync(
          "text",
          { asyncContext: "This is passed to the callback" },
          function callback(result) {
              // Do something with the result.
          });

      // The following is an example of an object that is passed as the result parameter to the callback function.
      {
          "value": "TEXT of whole body (including threads below)",
          "status": "succeeded",
          "asyncContext": "This is passed to the callback"
      }
      ```
    name: body
    fullName: body
    langs:
      - typeScript
    type: property
    syntax:
      content: 'body: Body;'
      return:
        type:
          - 'outlook!Office.Body:interface'
  - uid: 'outlook!Office.AppointmentCompose#close:member(1)'
    summary: |-
      <span data-ttu-id="67623-227">Schließt das aktuelle Element, das zusammengesetzt wird.</span><span class="sxs-lookup"><span data-stu-id="67623-227">Closes the current item that is being composed</span></span>

      <span data-ttu-id="67623-228">Das Verhalten der Close-Methode hängt vom aktuellen Status des zusammenzusetzenden Elements ab.</span><span class="sxs-lookup"><span data-stu-id="67623-228">The behaviors of the close method depends on the current state of the item being composed.</span></span> <span data-ttu-id="67623-229">Wenn das Element über ungespeicherte Änderungen verfügt, fordert der Client den Benutzer auf, die Aktion zu speichern, zu verwerfen oder zu schließen.</span><span class="sxs-lookup"><span data-stu-id="67623-229">If the item has unsaved changes, the client prompts the user to save, discard, or close the action.</span></span>

      <span data-ttu-id="67623-230">Wenn die Nachricht im Outlook-Desktop Client eine Inline Antwort ist, hat die Close-Methode keine Auswirkung.</span><span class="sxs-lookup"><span data-stu-id="67623-230">In the Outlook desktop client, if the message is an inline reply, the close method has no effect.</span></span>

      <span data-ttu-id="67623-231">**Hinweis**: Wenn das Element in Outlook im Internet ein Termin ist und es zuvor mit saveAsync gespeichert wurde, wird der Benutzer aufgefordert, zu speichern, zu verwerfen oder zu kündigen, auch wenn seit dem letzten Speichern des Elements keine Änderungen stattgefunden haben.</span><span class="sxs-lookup"><span data-stu-id="67623-231">**Note**: In Outlook on the web, if the item is an appointment and it has previously been saved using saveAsync, the user is prompted to save, discard, or cancel even if no changes have occurred since the item was last saved.</span></span>

      <span data-ttu-id="67623-232">\[[API-Gruppe: Mailbox 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="67623-232">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="67623-233">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: eingeschränkt</span><span class="sxs-lookup"><span data-stu-id="67623-233">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: Restricted</span></span>

      <span data-ttu-id="67623-234">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Terminplaner</span><span class="sxs-lookup"><span data-stu-id="67623-234">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment Organizer</span></span>
    name: close()
    fullName: close()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'close(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'outlook!Office.AppointmentCompose#end:member'
    summary: |-
      <span data-ttu-id="67623-235">Ruft Datum und Zeit für das Ende des Termins ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="67623-235">Gets or sets the date and time that the appointment is to end.</span></span>

      <span data-ttu-id="67623-236">Die End-Eigenschaft ist ein [Office. Time](xref:outlook!Office.Time:interface) -Objekt, das als Coordinated Universal Time (UTC)-Datum und-Zeitwert ausgedrückt wird.</span><span class="sxs-lookup"><span data-stu-id="67623-236">The end property is an [Office.Time](xref:outlook!Office.Time:interface) object expressed as a Coordinated Universal Time (UTC) date and time value.</span></span> <span data-ttu-id="67623-237">Sie können die convertToLocalClientTime-Methode verwenden, um den Wert der End-Eigenschaft in das lokale Datum und die Uhrzeit des Clients zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="67623-237">You can use the convertToLocalClientTime method to convert the end property value to the client's local date and time.</span></span>

      <span data-ttu-id="67623-238">Wenn Sie die Time. setasync-Methode verwenden, um die Endzeit festzulegen, sollten Sie die convertToUtcClientTime-Methode verwenden, um die Ortszeit auf dem Client für den Server in UTC zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="67623-238">When you use the Time.setAsync method to set the end time, you should use the convertToUtcClientTime method to convert the local time on the client to UTC for the server.</span></span>

      <span data-ttu-id="67623-239">\[[API-Gruppe: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="67623-239">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="67623-240">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="67623-240">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="67623-241">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Terminplaner</span><span class="sxs-lookup"><span data-stu-id="67623-241">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment Organizer</span></span>

      #### <a name="examples"></a><span data-ttu-id="67623-242">Beispiele</span><span class="sxs-lookup"><span data-stu-id="67623-242">Examples</span></span>

      ```javascript
      // The following example sets the end time of an appointment in compose mode by
      // using the `setAsync` method of the `Time` object.
      var endTime = new Date("3/14/2015");
      var options = {
          // Pass information that can be used in the callback.
          asyncContext: {verb: "Set"}
      };
      Office.context.mailbox.item.end.setAsync(endTime, options, function(result) {
          if (result.error) {
              console.debug(result.error);
          } else {
              // Access the asyncContext that was passed to the setAsync function.
              console.debug("End Time " + result.asyncContext.verb);
          }
      });
      ```
    name: end
    fullName: end
    langs:
      - typeScript
    type: property
    syntax:
      content: 'end: Time;'
      return:
        type:
          - 'outlook!Office.Time:interface'
  - uid: 'outlook!Office.AppointmentCompose#getSelectedDataAsync:member(1)'
    summary: |-
      <span data-ttu-id="67623-243">Gibt asynchron ausgewählte Daten aus dem Betreff oder Textkörper einer Nachricht zurück.</span><span class="sxs-lookup"><span data-stu-id="67623-243">Asynchronously returns selected data from the subject or body of a message.</span></span>

      <span data-ttu-id="67623-244">Wenn keine Auswahl vorhanden ist, aber der Cursor sich im Nachrichtentext oder Betreff befindet, gibt die Methode für die ausgewählten Daten NULL zurück.</span><span class="sxs-lookup"><span data-stu-id="67623-244">If there is no selection but the cursor is in the body or subject, the method returns null for the selected data.</span></span> <span data-ttu-id="67623-245">Wenn ein anderes Feld als der Textkörper oder Betreff ausgewählt ist, gibt die Methode den InvalidSelection-Fehler zurück.</span><span class="sxs-lookup"><span data-stu-id="67623-245">If a field other than the body or subject is selected, the method returns the InvalidSelection error.</span></span>

      <span data-ttu-id="67623-246">Um auf die ausgewählten Daten aus der Rückrufmethode zuzugreifen, rufen Sie AsyncResult. Value. Data auf.</span><span class="sxs-lookup"><span data-stu-id="67623-246">To access the selected data from the callback method, call asyncResult.value.data.</span></span> <span data-ttu-id="67623-247">Um auf die Source-Eigenschaft zuzugreifen, von der die Auswahl stammt, rufen Sie AsyncResult. Value. SourceProperty auf, die entweder Body oder Subject ist.</span><span class="sxs-lookup"><span data-stu-id="67623-247">To access the source property that the selection comes from, call asyncResult.value.sourceProperty, which will be either body or subject.</span></span>

      <span data-ttu-id="67623-248">\[[API-Gruppe: Mailbox 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="67623-248">\[ [API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="67623-249">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="67623-249">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="67623-250">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Terminplaner</span><span class="sxs-lookup"><span data-stu-id="67623-250">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment Organizer</span></span>

      #### <a name="examples"></a><span data-ttu-id="67623-251">Beispiele</span><span class="sxs-lookup"><span data-stu-id="67623-251">Examples</span></span>

      ```javascript
      // Get selected data.
      Office.initialize = function () {
          Office.context.mailbox.item.getSelectedDataAsync(Office.CoercionType.Text, {}, getCallback);
      };

      function getCallback(asyncResult) {
          var text = asyncResult.value.data;
          var prop = asyncResult.value.sourceProperty;

          Office.context.mailbox.item.setSelectedDataAsync('Setting ' + prop + ': ' + text, {}, setCallback);
      }

      function setCallback(asyncResult) {
          // Check for errors.
      }
      ```
    name: 'getSelectedDataAsync(coercionType, options, callback)'
    fullName: 'getSelectedDataAsync(coercionType, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedDataAsync(coercionType: Office.CoercionType | string, options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<any>) => void): void;'
      return:
        type:
          - void
        description: <span data-ttu-id="67623-252">Die ausgewählten Daten als Zeichenfolge mit dem durch coercionType bestimmten Format.</span><span class="sxs-lookup"><span data-stu-id="67623-252">The selected data as a string with format determined by coercionType.</span></span>
      parameters:
        - id: coercionType
          description: '<span data-ttu-id="67623-p129">Fordert ein Format für die Daten an. Wenn es sich um Texthandelt, gibt die Methode den unformatierten Text als Zeichenfolge zurück und entfernt eventuell vorhandene HTML-Tags. Wenn es sich um HTML handelt, gibt die Methode den ausgewählten Text zurück, entweder als unformatierten Text oder als HTML.</span><span class="sxs-lookup"><span data-stu-id="67623-p129">Requests a format for the data. If Text, the method returns the plain text as a string , removing any HTML tags present. If HTML, the method returns the selected text, whether it is plaintext or HTML.</span></span>'
          type:
            - 'outlook!Office.AppointmentCompose#getSelectedDataAsync~0:complex'
        - id: options
          description: '<span data-ttu-id="67623-256">Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält.</span><span class="sxs-lookup"><span data-stu-id="67623-256">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="67623-257">AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.</span><span class="sxs-lookup"><span data-stu-id="67623-257">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="67623-258">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzigen Parameter vom Typ Office. AsyncResult aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="67623-258">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>'
          type:
            - 'outlook!Office.AppointmentCompose#getSelectedDataAsync~1:complex'
  - uid: 'outlook!Office.AppointmentCompose#getSelectedDataAsync:member(2)'
    summary: |-
      <span data-ttu-id="67623-259">Gibt asynchron ausgewählte Daten aus dem Betreff oder Textkörper einer Nachricht zurück.</span><span class="sxs-lookup"><span data-stu-id="67623-259">Asynchronously returns selected data from the subject or body of a message.</span></span>

      <span data-ttu-id="67623-260">Wenn keine Auswahl vorhanden ist, aber der Cursor sich im Nachrichtentext oder Betreff befindet, gibt die Methode für die ausgewählten Daten NULL zurück.</span><span class="sxs-lookup"><span data-stu-id="67623-260">If there is no selection but the cursor is in the body or subject, the method returns null for the selected data.</span></span> <span data-ttu-id="67623-261">Wenn ein anderes Feld als der Textkörper oder Betreff ausgewählt ist, gibt die Methode den InvalidSelection-Fehler zurück.</span><span class="sxs-lookup"><span data-stu-id="67623-261">If a field other than the body or subject is selected, the method returns the InvalidSelection error.</span></span>

      <span data-ttu-id="67623-262">Um auf die ausgewählten Daten aus der Rückrufmethode zuzugreifen, rufen Sie AsyncResult. Value. Data auf.</span><span class="sxs-lookup"><span data-stu-id="67623-262">To access the selected data from the callback method, call asyncResult.value.data.</span></span> <span data-ttu-id="67623-263">Um auf die Source-Eigenschaft zuzugreifen, von der die Auswahl stammt, rufen Sie AsyncResult. Value. SourceProperty auf, die entweder Body oder Subject ist.</span><span class="sxs-lookup"><span data-stu-id="67623-263">To access the source property that the selection comes from, call asyncResult.value.sourceProperty, which will be either body or subject.</span></span>

      <span data-ttu-id="67623-264">\[[API-Gruppe: Mailbox 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="67623-264">\[ [API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="67623-265">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="67623-265">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="67623-266">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Terminplaner</span><span class="sxs-lookup"><span data-stu-id="67623-266">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment Organizer</span></span>
    name: 'getSelectedDataAsync(coercionType, callback)'
    fullName: 'getSelectedDataAsync(coercionType, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getSelectedDataAsync(coercionType: Office.CoercionType | string, callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: <span data-ttu-id="67623-267">Die ausgewählten Daten als Zeichenfolge mit dem durch coercionType bestimmten Format.</span><span class="sxs-lookup"><span data-stu-id="67623-267">The selected data as a string with format determined by coercionType.</span></span>
      parameters:
        - id: coercionType
          description: '<span data-ttu-id="67623-p133">Fordert ein Format für die Daten an. Wenn es sich um Texthandelt, gibt die Methode den unformatierten Text als Zeichenfolge zurück und entfernt eventuell vorhandene HTML-Tags. Wenn es sich um HTML handelt, gibt die Methode den ausgewählten Text zurück, entweder als unformatierten Text oder als HTML.</span><span class="sxs-lookup"><span data-stu-id="67623-p133">Requests a format for the data. If Text, the method returns the plain text as a string , removing any HTML tags present. If HTML, the method returns the selected text, whether it is plaintext or HTML.</span></span>'
          type:
            - 'outlook!Office.AppointmentCompose#getSelectedDataAsync~2:complex'
        - id: callback
          description: '<span data-ttu-id="67623-271">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzigen Parameter vom Typ Office. AsyncResult aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="67623-271">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>'
          type:
            - 'outlook!Office.AppointmentCompose#getSelectedDataAsync~3:complex'
  - uid: 'outlook!Office.AppointmentCompose#itemType:member'
    summary: |-
      <span data-ttu-id="67623-272">Ruft den Typ des Elements ab, das eine Instanz darstellt.</span><span class="sxs-lookup"><span data-stu-id="67623-272">Gets the type of item that an instance represents.</span></span>

      <span data-ttu-id="67623-273">Die ItemType-Eigenschaft gibt einen der Werte der ItemType-Enumeration zurück, der angibt, ob es sich bei der Item-Objektinstanz um eine Nachricht oder einen Termin handelt.</span><span class="sxs-lookup"><span data-stu-id="67623-273">The itemType property returns one of the ItemType enumeration values, indicating whether the item object instance is a message or an appointment.</span></span>

      <span data-ttu-id="67623-274">\[[API-Gruppe: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="67623-274">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="67623-275">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="67623-275">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="67623-276">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Terminplaner</span><span class="sxs-lookup"><span data-stu-id="67623-276">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment Organizer</span></span>

      #### <a name="examples"></a><span data-ttu-id="67623-277">Beispiele</span><span class="sxs-lookup"><span data-stu-id="67623-277">Examples</span></span>

      ```javascript
      if (Office.context.mailbox.item.itemType === Office.MailboxEnums.ItemType.Appointment) {
          // Do something.
      } else {
          // Do something else.
      }
      ```
    name: itemType
    fullName: itemType
    langs:
      - typeScript
    type: property
    syntax:
      content: 'itemType: MailboxEnums.ItemType | string;'
      return:
        type:
          - 'outlook!Office.AppointmentCompose#itemType~0:complex'
  - uid: 'outlook!Office.AppointmentCompose#loadCustomPropertiesAsync:member(1)'
    summary: |-
      <span data-ttu-id="67623-278">Lädt asynchron benutzerdefinierte Eigenschaften für dieses Add-In für das ausgewählte Element.</span><span class="sxs-lookup"><span data-stu-id="67623-278">Asynchronously loads custom properties for this add-in on the selected item.</span></span>

      <span data-ttu-id="67623-279">Benutzerdefinierte Eigenschaften werden als Schlüssel-/Wert-Paare pro App und pro Element gespeichert.</span><span class="sxs-lookup"><span data-stu-id="67623-279">Custom properties are stored as key/value pairs on a per-app, per-item basis.</span></span> <span data-ttu-id="67623-280">Diese Methode gibt ein CustomProperties-Objekt im Rückruf zurück, das Methoden bereitstellt, um auf die benutzerdefinierten Eigenschaften zuzugreifen, die für das aktuelle Element und das aktuelle Add-in spezifisch sind.</span><span class="sxs-lookup"><span data-stu-id="67623-280">This method returns a CustomProperties object in the callback, which provides methods to access the custom properties specific to the current item and the current add-in.</span></span> <span data-ttu-id="67623-281">Benutzerdefinierte Eigenschaften sind für das Element nicht verschlüsselt und sollten darum nicht als sicherer Speicher verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="67623-281">Custom properties are not encrypted on the item, so this should not be used as secure storage.</span></span>

      <span data-ttu-id="67623-282">Die benutzerdefinierten Eigenschaften werden als CustomProperties-Objekt in der AsyncResult. Value-Eigenschaft bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="67623-282">The custom properties are provided as a CustomProperties object in the asyncResult.value property.</span></span> <span data-ttu-id="67623-283">Dieses Objekt kann verwendet werden, um benutzerdefinierte Eigenschaften aus dem Element abzurufen, festzulegen und zu entfernen und um Änderungen am benutzerdefinierten Eigenschaftssatz wieder auf dem Server zu speichern.</span><span class="sxs-lookup"><span data-stu-id="67623-283">This object can be used to get, set, and remove custom properties from the item and save changes to the custom property set back to the server.</span></span>

      <span data-ttu-id="67623-284">\[[API-Gruppe: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="67623-284">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="67623-285">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="67623-285">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="67623-286">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Terminplaner</span><span class="sxs-lookup"><span data-stu-id="67623-286">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment Organizer</span></span>
    name: 'loadCustomPropertiesAsync(callback, userContext)'
    fullName: 'loadCustomPropertiesAsync(callback, userContext)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'loadCustomPropertiesAsync(callback: (asyncResult: Office.AsyncResult<CustomProperties>) => void, userContext?: any): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="67623-287">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzigen Parameter vom Typ Office. AsyncResult aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="67623-287">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>'
          type:
            - 'outlook!Office.AppointmentCompose#loadCustomPropertiesAsync~0:complex'
        - id: userContext
          description: '<span data-ttu-id="67623-288">Optional.</span><span class="sxs-lookup"><span data-stu-id="67623-288">Optional.</span></span> <span data-ttu-id="67623-289">Entwickler können ein beliebiges Objekt bereitstellen, auf das sie in der Callbackfunktion zugreifen möchten.</span><span class="sxs-lookup"><span data-stu-id="67623-289">Developers can provide any object they wish to access in the callback function.</span></span> <span data-ttu-id="67623-290">Auf dieses Objekt kann über die AsyncResult. AsyncContext-Eigenschaft in der Rückruffunktion zugegriffen werden.</span><span class="sxs-lookup"><span data-stu-id="67623-290">This object can be accessed by the asyncResult.asyncContext property in the callback function.</span></span>'
          type:
            - any
  - uid: 'outlook!Office.AppointmentCompose#location:member'
    summary: |-
      <span data-ttu-id="67623-291">Dient zum Abrufen oder Festlegen der [Office. Location](xref:outlook!Office.Location:interface) eines Termins.</span><span class="sxs-lookup"><span data-stu-id="67623-291">Gets or sets the [Office.Location](xref:outlook!Office.Location:interface) of an appointment.</span></span> <span data-ttu-id="67623-292">Die Location-Eigenschaft gibt ein Location-Objekt zurück, das Methoden bereitstellt, die zum Abrufen und Festlegen des Orts des Termins verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="67623-292">The location property returns a Location object that provides methods that are used to get and set the location of the appointment.</span></span>

      <span data-ttu-id="67623-293">\[[API-Gruppe: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="67623-293">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="67623-294">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="67623-294">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="67623-295">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Terminplaner</span><span class="sxs-lookup"><span data-stu-id="67623-295">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment Organizer</span></span>

      #### <a name="examples"></a><span data-ttu-id="67623-296">Beispiele</span><span class="sxs-lookup"><span data-stu-id="67623-296">Examples</span></span>

      ```javascript
      var userContext = { value : 1 };
      Office.context.mailbox.item.location.getAsync( { context: userContext}, callback);

      function callback(asyncResult) {
          var context = asyncResult.context;
          var location = asyncResult.value;
      }
      ```
    name: location
    fullName: location
    langs:
      - typeScript
    type: property
    syntax:
      content: 'location: Location;'
      return:
        type:
          - 'outlook!Office.Location:interface'
  - uid: 'outlook!Office.AppointmentCompose#notificationMessages:member'
    summary: |-
      <span data-ttu-id="67623-297">Ruft die Benachrichtigungen für ein Element ab.</span><span class="sxs-lookup"><span data-stu-id="67623-297">Gets the notification messages for an item.</span></span>

      <span data-ttu-id="67623-298">\[[API-Gruppe: Mailbox 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="67623-298">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="67623-299">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="67623-299">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="67623-300">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Terminplaner</span><span class="sxs-lookup"><span data-stu-id="67623-300">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment Organizer</span></span>

      #### <a name="examples"></a><span data-ttu-id="67623-301">Beispiele</span><span class="sxs-lookup"><span data-stu-id="67623-301">Examples</span></span>

      ```javascript
      // Get all notifications.
      Office.context.mailbox.item.notificationMessages.getAllAsync(
          function (asyncResult) {
              console.log(JSON.stringify(asyncResult));
          }
      );
      ```
    name: notificationMessages
    fullName: notificationMessages
    langs:
      - typeScript
    type: property
    syntax:
      content: 'notificationMessages: NotificationMessages;'
      return:
        type:
          - 'outlook!Office.NotificationMessages:interface'
  - uid: 'outlook!Office.AppointmentCompose#optionalAttendees:member'
    summary: |-
      <span data-ttu-id="67623-302">Bietet Zugriff auf die optionalen Teilnehmer eines Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="67623-302">Provides access to the optional attendees of an event.</span></span> <span data-ttu-id="67623-303">Der Typ des Objekts und die Zugriffsebene hängen vom Modus des aktuellen Elements ab.</span><span class="sxs-lookup"><span data-stu-id="67623-303">The type of object and level of access depends on the mode of the current item.</span></span> <span data-ttu-id="67623-304">Die optionalAttendees-Eigenschaft gibt ein [Office. Recipients](xref:outlook!Office.Recipients:interface) -Objekt zurück, das Methoden zum Abrufen oder Aktualisieren der optionalen Teilnehmer für eine Besprechung bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="67623-304">The optionalAttendees property returns an [Office.Recipients](xref:outlook!Office.Recipients:interface) object that provides methods to get or update the optional attendees for a meeting.</span></span>

      <span data-ttu-id="67623-305">\[[API-Gruppe: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="67623-305">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="67623-306">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="67623-306">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="67623-307">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Terminplaner</span><span class="sxs-lookup"><span data-stu-id="67623-307">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment Organizer</span></span>

      #### <a name="examples"></a><span data-ttu-id="67623-308">Beispiele</span><span class="sxs-lookup"><span data-stu-id="67623-308">Examples</span></span>

      ```javascript
      Office.context.mailbox.item.optionalAttendees.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );
      Office.context.mailbox.item.optionalAttendees.addAsync( ['jason@contoso.com'] );
      Office.context.mailbox.item.optionalAttendees.getAsync(callback);

      function callback(asyncResult) {
          var arrayOfOptionalAttendeesRecipients = asyncResult.value;
      }
      ```
    name: optionalAttendees
    fullName: optionalAttendees
    langs:
      - typeScript
    type: property
    syntax:
      content: 'optionalAttendees: Recipients;'
      return:
        type:
          - 'outlook!Office.Recipients:interface'
  - uid: 'outlook!Office.AppointmentCompose#organizer:member'
    summary: |-
      <span data-ttu-id="67623-309">Ruft den Organisator für die angegebene Besprechung ab.</span><span class="sxs-lookup"><span data-stu-id="67623-309">Gets the organizer for the specified meeting.</span></span>

      <span data-ttu-id="67623-310">Die Organizer-Eigenschaft gibt ein [Organizer](xref:outlook!Office.Organizer:interface) -Objekt zurück, das eine Methode zum Abrufen des Organizer-Werts bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="67623-310">The organizer property returns an [Organizer](xref:outlook!Office.Organizer:interface) object that provides a method to get the organizer value.</span></span>

      <span data-ttu-id="67623-311">\[[API-Gruppe: Mailbox 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="67623-311">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="67623-312">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="67623-312">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="67623-313">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Terminplaner</span><span class="sxs-lookup"><span data-stu-id="67623-313">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment Organizer</span></span>

      #### <a name="examples"></a><span data-ttu-id="67623-314">Beispiele</span><span class="sxs-lookup"><span data-stu-id="67623-314">Examples</span></span>

      ```javascript
      Office.context.mailbox.item.organizer.getAsync(
          function(asyncResult) {
              console.log(JSON.stringify(asyncResult));
          }
      );
      ```
    name: organizer
    fullName: organizer
    langs:
      - typeScript
    type: property
    syntax:
      content: 'organizer: Organizer;'
      return:
        type:
          - 'outlook!Office.Organizer:interface'
  - uid: 'outlook!Office.AppointmentCompose#recurrence:member'
    summary: |-
      <span data-ttu-id="67623-315">Ruft das Serienmuster eines Termins ab, oder legt dieses fest.</span><span class="sxs-lookup"><span data-stu-id="67623-315">Gets or sets the recurrence pattern of an appointment.</span></span>

      <span data-ttu-id="67623-316">Die Serie-Eigenschaft gibt ein Serien Objekt für wiederkehrende Termine oder Besprechungsanfragen zurück, wenn es sich bei einem Element um eine Datenreihe oder eine Instanz in einer Datenreihe handelt.</span><span class="sxs-lookup"><span data-stu-id="67623-316">The recurrence property returns a recurrence object for recurring appointments or meetings requests if an item is a series or an instance in a series.</span></span> <span data-ttu-id="67623-317">`null`wird für einzelne Termine und Besprechungsanfragen einzelner Termine zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="67623-317">`null` is returned for single appointments and meeting requests of single appointments.</span></span>

      <span data-ttu-id="67623-318">**Hinweis**: Besprechungsanfragen weisen einen itemClass-Wert von IPM auf. Schedule. Meeting. Request.</span><span class="sxs-lookup"><span data-stu-id="67623-318">**Note**: Meeting requests have an itemClass value of IPM.Schedule.Meeting.Request.</span></span>

      <span data-ttu-id="67623-319">**Hinweis**: Wenn das Serien Objekt NULL ist, deutet dies darauf hin, dass es sich bei dem Objekt um einen einzelnen Termin oder um eine Besprechungsanfrage eines einzelnen Termins und nicht um einen Teil einer Datenreihe handelt.</span><span class="sxs-lookup"><span data-stu-id="67623-319">**Note**: If the recurrence object is null, this indicates that the object is a single appointment or a meeting request of a single appointment and NOT a part of a series.</span></span>

      <span data-ttu-id="67623-320">\[[API-Gruppe: Mailbox 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="67623-320">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="67623-321">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="67623-321">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="67623-322">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Terminplaner</span><span class="sxs-lookup"><span data-stu-id="67623-322">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment Organizer</span></span>

      #### <a name="examples"></a><span data-ttu-id="67623-323">Beispiele</span><span class="sxs-lookup"><span data-stu-id="67623-323">Examples</span></span>

      ```javascript
      // This example gets the Recurrence object of an appointment item.
      Office.context.mailbox.item.recurrence.getAsync(callback);

      function callback(asyncResult) {
          var context = asyncResult.context;
          var recurrence = asyncResult.value;
          if (!recurrence) {
              console.log("One-time appointment or meeting");
          } else {
              console.log(JSON.stringify(recurrence));
          }
      }

      // The following example shows the results of the getAsync call that retrieves the recurrence for a series.
      // NOTE: In this example, seriesTimeObject is a placeholder for the JSON representing the
      // recurrence.seriesTime property. You should use the SeriesTime object's methods to get the
      // recurrence date and time properties.
      Recurrence = {
          "recurrenceType": "weekly",
          "recurrenceProperties": {"interval": 2, "days": ["mon","thu","fri"], "firstDayOfWeek": "sun"},
          "seriesTime": {seriesTimeObject},
          "recurrenceTimeZone": {"name": "Pacific Standard Time", "offset": -480}
      }
      ```
    name: recurrence
    fullName: recurrence
    langs:
      - typeScript
    type: property
    syntax:
      content: 'recurrence: Recurrence;'
      return:
        type:
          - 'outlook!Office.Recurrence:interface'
  - uid: 'outlook!Office.AppointmentCompose#removeAttachmentAsync:member(1)'
    summary: |-
      <span data-ttu-id="67623-324">Entfernt eine Anlage aus einer Nachricht oder einem Termin.</span><span class="sxs-lookup"><span data-stu-id="67623-324">Removes an attachment from a message or appointment.</span></span>

      <span data-ttu-id="67623-325">Die removeAttachmentAsync-Methode entfernt die Anlage mit dem angegebenen Bezeichner aus dem Element.</span><span class="sxs-lookup"><span data-stu-id="67623-325">The removeAttachmentAsync method removes the attachment with the specified identifier from the item.</span></span> <span data-ttu-id="67623-326">Als bewährte Vorgehensweise sollten Sie den Anlagenbezeichner nur dann zum Entfernen einer Anlage verwenden, wenn die gleiche Mail-App die Anlage in der gleichen Sitzung hinzugefügt hat.</span><span class="sxs-lookup"><span data-stu-id="67623-326">As a best practice, you should use the attachment identifier to remove an attachment only if the same mail app has added that attachment in the same session.</span></span> <span data-ttu-id="67623-327">In Outlook im Internet und auf mobilen Geräten ist die Anlagen-ID nur innerhalb derselben Sitzung gültig.</span><span class="sxs-lookup"><span data-stu-id="67623-327">In Outlook on the web and mobile devices, the attachment identifier is valid only within the same session.</span></span> <span data-ttu-id="67623-328">Eine Sitzung ist beendet, wenn der Benutzer die APP schließt oder wenn der Benutzer mit dem Erstellen eines Inline Formulars beginnt und anschließend das Formular öffnet, um in einem separaten Fenster fortzufahren.</span><span class="sxs-lookup"><span data-stu-id="67623-328">A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.</span></span>

      <span data-ttu-id="67623-329">\[[API-Gruppe: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="67623-329">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="67623-330">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="67623-330">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="67623-331">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Terminplaner</span><span class="sxs-lookup"><span data-stu-id="67623-331">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment Organizer</span></span>

      <span data-ttu-id="67623-332">**Fehler**:</span><span class="sxs-lookup"><span data-stu-id="67623-332">**Errors**:</span></span>

      - <span data-ttu-id="67623-333">InvalidAttachmentId: die Anlagen-ID ist nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="67623-333">InvalidAttachmentId: The attachment identifier does not exist.</span></span>

      #### <a name="examples"></a><span data-ttu-id="67623-334">Beispiele</span><span class="sxs-lookup"><span data-stu-id="67623-334">Examples</span></span>

      ```javascript
      // The following code removes an attachment with an identifier of '0'.
      Office.context.mailbox.item.removeAttachmentAsync(
          '0',
          { asyncContext : null },
          function (asyncResult)
          {
              console.log(asyncResult.status);
          }
      );
      ```
    name: 'removeAttachmentAsync(attachmentId, options, callback)'
    fullName: 'removeAttachmentAsync(attachmentId, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeAttachmentAsync(attachmentId: string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: attachmentId
          description: <span data-ttu-id="67623-335">Der Bezeichner der zu entfernenden Anlage.</span><span class="sxs-lookup"><span data-stu-id="67623-335">The identifier of the attachment to remove.</span></span>
          type:
            - string
        - id: options
          description: '<span data-ttu-id="67623-336">Optional.</span><span class="sxs-lookup"><span data-stu-id="67623-336">Optional.</span></span> <span data-ttu-id="67623-337">Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält.</span><span class="sxs-lookup"><span data-stu-id="67623-337">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="67623-338">AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.</span><span class="sxs-lookup"><span data-stu-id="67623-338">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="67623-339">Optional.</span><span class="sxs-lookup"><span data-stu-id="67623-339">Optional.</span></span> <span data-ttu-id="67623-340">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzigen Parameter vom Typ Office. AsyncResult aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="67623-340">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="67623-341">Wenn das Entfernen der Anlage fehlschlägt, enthält die AsyncResult. Error-Eigenschaft einen Fehlercode mit dem Grund für den Fehler.</span><span class="sxs-lookup"><span data-stu-id="67623-341">If removing the attachment fails, the asyncResult.error property will contain an error code with the reason for the failure.</span></span>'
          type:
            - 'outlook!Office.AppointmentCompose#removeAttachmentAsync~0:complex'
  - uid: 'outlook!Office.AppointmentCompose#removeAttachmentAsync:member(2)'
    summary: |-
      <span data-ttu-id="67623-342">Entfernt eine Anlage aus einer Nachricht oder einem Termin.</span><span class="sxs-lookup"><span data-stu-id="67623-342">Removes an attachment from a message or appointment.</span></span>

      <span data-ttu-id="67623-343">Die removeAttachmentAsync-Methode entfernt die Anlage mit dem angegebenen Bezeichner aus dem Element.</span><span class="sxs-lookup"><span data-stu-id="67623-343">The removeAttachmentAsync method removes the attachment with the specified identifier from the item.</span></span> <span data-ttu-id="67623-344">Als bewährte Vorgehensweise sollten Sie den Anlagenbezeichner nur dann zum Entfernen einer Anlage verwenden, wenn die gleiche Mail-App die Anlage in der gleichen Sitzung hinzugefügt hat.</span><span class="sxs-lookup"><span data-stu-id="67623-344">As a best practice, you should use the attachment identifier to remove an attachment only if the same mail app has added that attachment in the same session.</span></span> <span data-ttu-id="67623-345">In Outlook im Internet und auf mobilen Geräten ist die Anlagen-ID nur innerhalb derselben Sitzung gültig.</span><span class="sxs-lookup"><span data-stu-id="67623-345">In Outlook on the web and mobile devices, the attachment identifier is valid only within the same session.</span></span> <span data-ttu-id="67623-346">Eine Sitzung ist beendet, wenn der Benutzer die APP schließt oder wenn der Benutzer mit dem Erstellen eines Inline Formulars beginnt und anschließend das Formular öffnet, um in einem separaten Fenster fortzufahren.</span><span class="sxs-lookup"><span data-stu-id="67623-346">A session is over when the user closes the app, or if the user starts composing an inline form then subsequently pops out the form to continue in a separate window.</span></span>

      <span data-ttu-id="67623-347">\[[API-Gruppe: Mailbox 1,1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="67623-347">\[ [API set: Mailbox 1.1](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="67623-348">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="67623-348">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="67623-349">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Terminplaner</span><span class="sxs-lookup"><span data-stu-id="67623-349">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment Organizer</span></span>

      <span data-ttu-id="67623-350">**Fehler**:</span><span class="sxs-lookup"><span data-stu-id="67623-350">**Errors**:</span></span>

      - <span data-ttu-id="67623-351">InvalidAttachmentId: die Anlagen-ID ist nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="67623-351">InvalidAttachmentId: The attachment identifier does not exist.</span></span>
    name: 'removeAttachmentAsync(attachmentId, callback)'
    fullName: 'removeAttachmentAsync(attachmentId, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeAttachmentAsync(attachmentId: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: attachmentId
          description: <span data-ttu-id="67623-352">Der Bezeichner der zu entfernenden Anlage.</span><span class="sxs-lookup"><span data-stu-id="67623-352">The identifier of the attachment to remove.</span></span>
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="67623-353">Optional.</span><span class="sxs-lookup"><span data-stu-id="67623-353">Optional.</span></span> <span data-ttu-id="67623-354">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzigen Parameter vom Typ Office. AsyncResult aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="67623-354">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span> <span data-ttu-id="67623-355">Wenn das Entfernen der Anlage fehlschlägt, enthält die AsyncResult. Error-Eigenschaft einen Fehlercode mit dem Grund für den Fehler.</span><span class="sxs-lookup"><span data-stu-id="67623-355">If removing the attachment fails, the asyncResult.error property will contain an error code with the reason for the failure.</span></span>'
          type:
            - 'outlook!Office.AppointmentCompose#removeAttachmentAsync~1:complex'
  - uid: 'outlook!Office.AppointmentCompose#removeHandlerAsync:member(1)'
    summary: |-
      <span data-ttu-id="67623-356">Entfernt die Ereignishandler für einen unterstützten Ereignistyp.</span><span class="sxs-lookup"><span data-stu-id="67623-356">Removes the event handlers for a supported event type.</span></span> <span data-ttu-id="67623-357">**Hinweis**: Ereignisse sind nur mit dem Aufgabenbereich verfügbar.</span><span class="sxs-lookup"><span data-stu-id="67623-357">**Note**: Events are available only with task pane.</span></span>

      <span data-ttu-id="67623-358">Derzeit werden die unterstützten Ereignistypen`Office.EventType.AppointmentTimeChanged`</span><span class="sxs-lookup"><span data-stu-id="67623-358">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`</span></span><!-- --><span data-ttu-id="67623-359">, `Office.EventType.RecipientsChanged`</span><span class="sxs-lookup"><span data-stu-id="67623-359"></span></span><!-- --><span data-ttu-id="67623-360">, und`Office.EventType.RecurrenceChanged`</span><span class="sxs-lookup"><span data-stu-id="67623-360">, and `Office.EventType.RecurrenceChanged`</span></span><!-- --><span data-ttu-id="67623-361">.</span><span class="sxs-lookup"><span data-stu-id="67623-361"></span></span>

      <span data-ttu-id="67623-362">\[[API-Gruppe: Mailbox 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="67623-362">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="67623-363">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="67623-363">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="67623-364">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Terminplaner</span><span class="sxs-lookup"><span data-stu-id="67623-364">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment Organizer</span></span>
    name: 'removeHandlerAsync(eventType, options, callback)'
    fullName: 'removeHandlerAsync(eventType, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType | string, options?: Office.AsyncContextOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="67623-365">Das Ereignis, das den Handler widerrufen soll.</span><span class="sxs-lookup"><span data-stu-id="67623-365">The event that should revoke the handler.</span></span>'
          type:
            - 'outlook!Office.AppointmentCompose#removeHandlerAsync~0:complex'
        - id: options
          description: '<span data-ttu-id="67623-366">Optional.</span><span class="sxs-lookup"><span data-stu-id="67623-366">Optional.</span></span> <span data-ttu-id="67623-367">Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält.</span><span class="sxs-lookup"><span data-stu-id="67623-367">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="67623-368">AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.</span><span class="sxs-lookup"><span data-stu-id="67623-368">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="67623-369">Optional.</span><span class="sxs-lookup"><span data-stu-id="67623-369">Optional.</span></span> <span data-ttu-id="67623-370">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter (asyncResult) aufgerufen, bei dem es sich um ein Office. AsyncResult-Objekt handelt.</span><span class="sxs-lookup"><span data-stu-id="67623-370">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>'
          type:
            - 'outlook!Office.AppointmentCompose#removeHandlerAsync~1:complex'
  - uid: 'outlook!Office.AppointmentCompose#removeHandlerAsync:member(2)'
    summary: |-
      <span data-ttu-id="67623-371">Entfernt die Ereignishandler für einen unterstützten Ereignistyp.</span><span class="sxs-lookup"><span data-stu-id="67623-371">Removes the event handlers for a supported event type.</span></span> <span data-ttu-id="67623-372">**Hinweis**: Ereignisse sind nur mit dem Aufgabenbereich verfügbar.</span><span class="sxs-lookup"><span data-stu-id="67623-372">**Note**: Events are available only with task pane.</span></span>

      <span data-ttu-id="67623-373">Derzeit werden die unterstützten Ereignistypen`Office.EventType.AppointmentTimeChanged`</span><span class="sxs-lookup"><span data-stu-id="67623-373">Currently the supported event types are `Office.EventType.AppointmentTimeChanged`</span></span><!-- --><span data-ttu-id="67623-374">, `Office.EventType.RecipientsChanged`</span><span class="sxs-lookup"><span data-stu-id="67623-374"></span></span><!-- --><span data-ttu-id="67623-375">, und`Office.EventType.RecurrenceChanged`</span><span class="sxs-lookup"><span data-stu-id="67623-375">, and `Office.EventType.RecurrenceChanged`</span></span><!-- --><span data-ttu-id="67623-376">.</span><span class="sxs-lookup"><span data-stu-id="67623-376"></span></span>

      <span data-ttu-id="67623-377">\[[API-Gruppe: Mailbox 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="67623-377">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="67623-378">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="67623-378">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="67623-379">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Terminplaner</span><span class="sxs-lookup"><span data-stu-id="67623-379">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment Organizer</span></span>
    name: 'removeHandlerAsync(eventType, callback)'
    fullName: 'removeHandlerAsync(eventType, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeHandlerAsync(eventType: Office.EventType | string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventType
          description: '<span data-ttu-id="67623-380">Das Ereignis, das den Handler widerrufen soll.</span><span class="sxs-lookup"><span data-stu-id="67623-380">The event that should revoke the handler.</span></span>'
          type:
            - 'outlook!Office.AppointmentCompose#removeHandlerAsync~2:complex'
        - id: callback
          description: '<span data-ttu-id="67623-381">Optional.</span><span class="sxs-lookup"><span data-stu-id="67623-381">Optional.</span></span> <span data-ttu-id="67623-382">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzelnen Parameter (asyncResult) aufgerufen, bei dem es sich um ein Office. AsyncResult-Objekt handelt.</span><span class="sxs-lookup"><span data-stu-id="67623-382">When the method completes, the function passed in the callback parameter is called with a single parameter, asyncResult, which is an Office.AsyncResult object.</span></span>'
          type:
            - 'outlook!Office.AppointmentCompose#removeHandlerAsync~3:complex'
  - uid: 'outlook!Office.AppointmentCompose#requiredAttendees:member'
    summary: |-
      <span data-ttu-id="67623-383">Bietet Zugriff auf die erforderlichen Teilnehmer eines Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="67623-383">Provides access to the required attendees of an event.</span></span> <span data-ttu-id="67623-384">Der Typ des Objekts und die Zugriffsebene hängen vom Modus des aktuellen Elements ab.</span><span class="sxs-lookup"><span data-stu-id="67623-384">The type of object and level of access depends on the mode of the current item.</span></span> <span data-ttu-id="67623-385">Die requiredAttendees-Eigenschaft gibt ein [Office. Recipients](xref:outlook!Office.Recipients:interface) -Objekt zurück, das Methoden zum Abrufen oder Aktualisieren der erforderlichen Teilnehmer für eine Besprechung bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="67623-385">The requiredAttendees property returns an [Office.Recipients](xref:outlook!Office.Recipients:interface) object that provides methods to get or update the required attendees for a meeting.</span></span>

      <span data-ttu-id="67623-386">\[[API-Gruppe: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="67623-386">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="67623-387">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="67623-387">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="67623-388">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Terminplaner</span><span class="sxs-lookup"><span data-stu-id="67623-388">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment Organizer</span></span>

      #### <a name="examples"></a><span data-ttu-id="67623-389">Beispiele</span><span class="sxs-lookup"><span data-stu-id="67623-389">Examples</span></span>

      ```javascript
      Office.context.mailbox.item.requiredAttendees.setAsync( ['alice@contoso.com', 'bob@contoso.com'] );
      Office.context.mailbox.item.requiredAttendees.addAsync( ['jason@contoso.com'] );
      Office.context.mailbox.item.requiredAttendees.getAsync(callback);

      function callback(asyncResult) {
          var arrayOfRequiredAttendeesRecipients = asyncResult.value;
          console.log(JSON.stringify(arrayOfRequiredAttendeesRecipients));
      }
      ```
    name: requiredAttendees
    fullName: requiredAttendees
    langs:
      - typeScript
    type: property
    syntax:
      content: 'requiredAttendees: Recipients;'
      return:
        type:
          - 'outlook!Office.Recipients:interface'
  - uid: 'outlook!Office.AppointmentCompose#saveAsync:member(1)'
    summary: |-
      <span data-ttu-id="67623-390">Speicher asynchron ein Element. .</span><span class="sxs-lookup"><span data-stu-id="67623-390">Asynchronously saves an item.</span></span>

      <span data-ttu-id="67623-391">Beim Aufrufen speichert diese Methode die aktuelle Nachricht als Entwurf und  gibt die Element-ID über die Callbackmethode zurück.</span><span class="sxs-lookup"><span data-stu-id="67623-391">When invoked, this method saves the current message as a draft and returns the item id via the callback method.</span></span> <span data-ttu-id="67623-392">In Outlook im Internet oder Outlook im Onlinemodus wird das Element auf dem Server gespeichert.</span><span class="sxs-lookup"><span data-stu-id="67623-392">In Outlook on the web or Outlook in online mode, the item is saved to the server.</span></span> <span data-ttu-id="67623-393">In Outlook im Cache-Modus wird das Element im lokalen Cache gespeichert.</span><span class="sxs-lookup"><span data-stu-id="67623-393">In Outlook in cached mode, the item is saved to the local cache.</span></span>

      <span data-ttu-id="67623-394">Da Termine keinen Entwurfsstatus haben, wenn saveAsync für einen Termin im Verfassenmodus aufgerufen wird, wird das Element als normaler Termin im Kalender des Benutzers gespeichert.</span><span class="sxs-lookup"><span data-stu-id="67623-394">Since appointments have no draft state, if saveAsync is called on an appointment in compose mode, the item will be saved as a normal appointment on the user's calendar.</span></span> <span data-ttu-id="67623-395">Bei neuen Terminen, die noch nicht gespeichert wurden, wird keine Einladung gesendet.</span><span class="sxs-lookup"><span data-stu-id="67623-395">For new appointments that have not been saved before, no invitation will be sent.</span></span> <span data-ttu-id="67623-396">Beim Speichern eines vorhandenen Termins wird eine Aktualisierung an hinzugefügte oder entfernte Teilnehmer gesendet.</span><span class="sxs-lookup"><span data-stu-id="67623-396">Saving an existing appointment will send an update to added or removed attendees.</span></span>

      <span data-ttu-id="67623-397">**Hinweis**: Wenn das Add-in saveAsync für ein Element im Verfassenmodus aufruft, um ein Itemid für die Verwendung mit EWS oder der Rest-API zu erhalten, beachten Sie, dass es einige Zeit dauern kann, bis das Element tatsächlich mit dem Server synchronisiert wurde, wenn sich Outlook im Cache-Modus befindet.</span><span class="sxs-lookup"><span data-stu-id="67623-397">**Note**: If your add-in calls saveAsync on an item in compose mode in order to get an itemId to use with EWS or the REST API, be aware that when Outlook is in cached mode, it may take some time before the item is actually synced to the server.</span></span> <span data-ttu-id="67623-398">Bis zum Synchronisieren des Elements wird mithilfe des Itemid ein Fehler zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="67623-398">Until the item is synced, using the itemId will return an error.</span></span>

      <span data-ttu-id="67623-399">**Hinweis**: die folgenden Clients haben unterschiedliches Verhalten für saveAsync bei Terminen im Verfassenmodus:</span><span class="sxs-lookup"><span data-stu-id="67623-399">**Note**: The following clients have different behavior for saveAsync on appointments in compose mode:</span></span>

      - <span data-ttu-id="67623-400">Das Speichern einer Besprechung wird von Outlook auf dem Mac nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="67623-400">Outlook on Mac does not support saving a meeting.</span></span> <span data-ttu-id="67623-401">Die saveAsync-Methode schlägt fehl, wenn Sie von einer Besprechung im erstellmodus aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="67623-401">The saveAsync method fails when called from a meeting in compose mode.</span></span> <span data-ttu-id="67623-402">Eine Problemumgehung finden Sie unter [nicht Speichern einer Besprechung als Entwurf in Outlook für Mac mithilfe der Office js-API](https://support.microsoft.com/help/4505745) .</span><span class="sxs-lookup"><span data-stu-id="67623-402">See [Cannot save a meeting as a draft in Outlook for Mac by using Office JS API](https://support.microsoft.com/help/4505745) for a workaround.</span></span>

      - <span data-ttu-id="67623-403">Outlook im Internet sendet immer eine Einladung oder Aktualisierung, wenn saveAsync für einen Termin im Verfassenmodus aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="67623-403">Outlook on the web always sends an invitation or update when saveAsync is called on an appointment in compose mode.</span></span>

      <span data-ttu-id="67623-404">\[[API-Gruppe: Mailbox 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="67623-404">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="67623-405">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="67623-405">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="67623-406">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Terminplaner</span><span class="sxs-lookup"><span data-stu-id="67623-406">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment Organizer</span></span>

      <span data-ttu-id="67623-407">**Fehler**:</span><span class="sxs-lookup"><span data-stu-id="67623-407">**Errors**:</span></span>

      - <span data-ttu-id="67623-408">InvalidAttachmentId: die Anlagen-ID ist nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="67623-408">InvalidAttachmentId: The attachment identifier does not exist.</span></span>
    name: 'saveAsync(options, callback)'
    fullName: 'saveAsync(options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'saveAsync(options: Office.AsyncContextOptions, callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: options
          description: '<span data-ttu-id="67623-409">Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält.</span><span class="sxs-lookup"><span data-stu-id="67623-409">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="67623-410">AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.</span><span class="sxs-lookup"><span data-stu-id="67623-410">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span>'
          type:
            - 'outlook!Office.AsyncContextOptions:interface'
        - id: callback
          description: '<span data-ttu-id="67623-411">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzigen Parameter vom Typ Office. AsyncResult aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="67623-411">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>'
          type:
            - 'outlook!Office.AppointmentCompose#saveAsync~0:complex'
  - uid: 'outlook!Office.AppointmentCompose#saveAsync:member(2)'
    summary: |-
      <span data-ttu-id="67623-412">Speicher asynchron ein Element. .</span><span class="sxs-lookup"><span data-stu-id="67623-412">Asynchronously saves an item.</span></span>

      <span data-ttu-id="67623-413">Beim Aufrufen speichert diese Methode die aktuelle Nachricht als Entwurf und  gibt die Element-ID über die Callbackmethode zurück.</span><span class="sxs-lookup"><span data-stu-id="67623-413">When invoked, this method saves the current message as a draft and returns the item id via the callback method.</span></span> <span data-ttu-id="67623-414">In Outlook im Internet oder Outlook im Onlinemodus wird das Element auf dem Server gespeichert.</span><span class="sxs-lookup"><span data-stu-id="67623-414">In Outlook on the web or Outlook in online mode, the item is saved to the server.</span></span> <span data-ttu-id="67623-415">In Outlook im Cache-Modus wird das Element im lokalen Cache gespeichert.</span><span class="sxs-lookup"><span data-stu-id="67623-415">In Outlook in cached mode, the item is saved to the local cache.</span></span>

      <span data-ttu-id="67623-416">Da Termine keinen Entwurfsstatus haben, wenn saveAsync für einen Termin im Verfassenmodus aufgerufen wird, wird das Element als normaler Termin im Kalender des Benutzers gespeichert.</span><span class="sxs-lookup"><span data-stu-id="67623-416">Since appointments have no draft state, if saveAsync is called on an appointment in compose mode, the item will be saved as a normal appointment on the user's calendar.</span></span> <span data-ttu-id="67623-417">Bei neuen Terminen, die noch nicht gespeichert wurden, wird keine Einladung gesendet.</span><span class="sxs-lookup"><span data-stu-id="67623-417">For new appointments that have not been saved before, no invitation will be sent.</span></span> <span data-ttu-id="67623-418">Beim Speichern eines vorhandenen Termins wird eine Aktualisierung an hinzugefügte oder entfernte Teilnehmer gesendet.</span><span class="sxs-lookup"><span data-stu-id="67623-418">Saving an existing appointment will send an update to added or removed attendees.</span></span>

      <span data-ttu-id="67623-419">**Hinweis**: Wenn das Add-in saveAsync für ein Element im Verfassenmodus aufruft, um ein Itemid für die Verwendung mit EWS oder der Rest-API zu erhalten, beachten Sie, dass es einige Zeit dauern kann, bis das Element tatsächlich mit dem Server synchronisiert wurde, wenn sich Outlook im Cache-Modus befindet.</span><span class="sxs-lookup"><span data-stu-id="67623-419">**Note**: If your add-in calls saveAsync on an item in compose mode in order to get an itemId to use with EWS or the REST API, be aware that when Outlook is in cached mode, it may take some time before the item is actually synced to the server.</span></span> <span data-ttu-id="67623-420">Bis zum Synchronisieren des Elements wird mithilfe des Itemid ein Fehler zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="67623-420">Until the item is synced, using the itemId will return an error.</span></span>

      <span data-ttu-id="67623-421">**Hinweis**: die folgenden Clients haben unterschiedliches Verhalten für saveAsync bei Terminen im Verfassenmodus:</span><span class="sxs-lookup"><span data-stu-id="67623-421">**Note**: The following clients have different behavior for saveAsync on appointments in compose mode:</span></span>

      - <span data-ttu-id="67623-422">Das Speichern einer Besprechung wird von Outlook auf dem Mac nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="67623-422">Outlook on Mac does not support saving a meeting.</span></span> <span data-ttu-id="67623-423">Die saveAsync-Methode schlägt fehl, wenn Sie von einer Besprechung im erstellmodus aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="67623-423">The saveAsync method fails when called from a meeting in compose mode.</span></span> <span data-ttu-id="67623-424">Eine Problemumgehung finden Sie unter [nicht Speichern einer Besprechung als Entwurf in Outlook für Mac mithilfe der Office js-API](https://support.microsoft.com/help/4505745) .</span><span class="sxs-lookup"><span data-stu-id="67623-424">See [Cannot save a meeting as a draft in Outlook for Mac by using Office JS API](https://support.microsoft.com/help/4505745) for a workaround.</span></span>

      - <span data-ttu-id="67623-425">Outlook im Internet sendet immer eine Einladung oder Aktualisierung, wenn saveAsync für einen Termin im Verfassenmodus aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="67623-425">Outlook on the web always sends an invitation or update when saveAsync is called on an appointment in compose mode.</span></span>

      <span data-ttu-id="67623-426">\[[API-Gruppe: Mailbox 1,3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="67623-426">\[ [API set: Mailbox 1.3](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="67623-427">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="67623-427">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="67623-428">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Terminplaner</span><span class="sxs-lookup"><span data-stu-id="67623-428">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment Organizer</span></span>

      <span data-ttu-id="67623-429">**Fehler**:</span><span class="sxs-lookup"><span data-stu-id="67623-429">**Errors**:</span></span>

      - <span data-ttu-id="67623-430">InvalidAttachmentId: die Anlagen-ID ist nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="67623-430">InvalidAttachmentId: The attachment identifier does not exist.</span></span>

      #### <a name="examples"></a><span data-ttu-id="67623-431">Beispiele</span><span class="sxs-lookup"><span data-stu-id="67623-431">Examples</span></span>

      ```javascript
      Office.context.mailbox.item.saveAsync(
          function callback(result) {
              // Process the result.
          });

      // The following is an example of the
      // `result` parameter passed to the
      // callback function. The `value`
      // property contains the item ID of
      // the item.
      {
          "value": "AAMkADI5...AAA=",
          "status": "succeeded"
      }
      ```
    name: saveAsync(callback)
    fullName: saveAsync(callback)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'saveAsync(callback: (asyncResult: Office.AsyncResult<string>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: callback
          description: '<span data-ttu-id="67623-432">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzigen Parameter vom Typ Office. AsyncResult aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="67623-432">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>'
          type:
            - 'outlook!Office.AppointmentCompose#saveAsync~1:complex'
  - uid: 'outlook!Office.AppointmentCompose#seriesId:member'
    summary: |-
      <span data-ttu-id="67623-433">Ruft die ID der Datenreihe ab, zu der eine Instanz gehört.</span><span class="sxs-lookup"><span data-stu-id="67623-433">Gets the id of the series that an instance belongs to.</span></span>

      <span data-ttu-id="67623-434">In Outlook im Internet und Desktop Clients gibt die Series-ID die Exchange-Webdienste-ID des übergeordneten Elements (Series) zurück, zu dem dieses Element gehört.</span><span class="sxs-lookup"><span data-stu-id="67623-434">In Outlook on the web and desktop clients, the seriesId returns the Exchange Web Services (EWS) ID of the parent (series) item that this item belongs to.</span></span> <span data-ttu-id="67623-435">Auf IOS und Android gibt die Series-ID jedoch die Rest-ID des übergeordneten Elements zurück.</span><span class="sxs-lookup"><span data-stu-id="67623-435">However, on iOS and Android, the seriesId returns the REST ID of the parent item.</span></span>

      <span data-ttu-id="67623-436">**Hinweis**: der von der Series-ID-Eigenschaft zurückgegebene Bezeichner ist identisch mit der ID des Exchange Webdienste-Elements.</span><span class="sxs-lookup"><span data-stu-id="67623-436">**Note**: The identifier returned by the seriesId property is the same as the Exchange Web Services item identifier.</span></span> <span data-ttu-id="67623-437">Die Series-ID-Eigenschaft ist nicht identisch mit den Outlook-IDs, die von der Outlook-Rest-API verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="67623-437">The seriesId property is not identical to the Outlook IDs used by the Outlook REST API.</span></span> <span data-ttu-id="67623-438">Bevor Sie REST-API-Aufrufe mit diesem Wert ausführen, sollte dieser mithilfe von Office.context.mailbox.convertToRestId konvertiert werden.</span><span class="sxs-lookup"><span data-stu-id="67623-438">Before making REST API calls using this value, it should be converted using Office.context.mailbox.convertToRestId.</span></span> <span data-ttu-id="67623-439">Weitere Informationen finden Sie unter [Verwenden der Outlook-Rest-APIs aus einem Outlook-Add-in](https://docs.microsoft.com/outlook/add-ins/use-rest-api)</span><span class="sxs-lookup"><span data-stu-id="67623-439">For more details, see [Use the Outlook REST APIs from an Outlook add-in](https://docs.microsoft.com/outlook/add-ins/use-rest-api)</span></span><!-- --><span data-ttu-id="67623-440">.</span><span class="sxs-lookup"><span data-stu-id="67623-440"></span></span>

      <span data-ttu-id="67623-441">Die Series-Eigenschaft gibt NULL für Elemente zurück, die übergeordnete Elemente wie einzelne Termine, Datenreihenelemente oder Besprechungsanfragen haben, und gibt undefined für andere Elemente zurück, bei denen es sich nicht um Besprechungsanfragen handelt.</span><span class="sxs-lookup"><span data-stu-id="67623-441">The seriesId property returns null for items that do not have parent items such as single appointments, series items, or meeting requests and returns undefined for any other items that are not meeting requests.</span></span>

      <span data-ttu-id="67623-442">\[[API-Gruppe: Mailbox 1,7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="67623-442">\[ [API set: Mailbox 1.7](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="67623-443">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="67623-443">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="67623-444">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Terminplaner</span><span class="sxs-lookup"><span data-stu-id="67623-444">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment Organizer</span></span>

      #### <a name="examples"></a><span data-ttu-id="67623-445">Beispiele</span><span class="sxs-lookup"><span data-stu-id="67623-445">Examples</span></span>

      ```javascript
      var seriesId = Office.context.mailbox.item.seriesId;

      // The seriesId property returns null for items that do
      // not have parent items (such as single appointments,
      // series items, or meeting requests) and returns
      // undefined for messages that are not meeting requests.
      var isSeriesInstance = (seriesId != null);
      console.log("SeriesId is " + seriesId 
          + " and isSeriesInstance is " + isSeriesInstance);
      ```
    name: seriesId
    fullName: seriesId
    langs:
      - typeScript
    type: property
    syntax:
      content: 'seriesId: string;'
      return:
        type:
          - string
  - uid: 'outlook!Office.AppointmentCompose#setSelectedDataAsync:member(1)'
    summary: |-
      <span data-ttu-id="67623-446">Fügt asynchron Daten in den Textkörper oder Betreff einer Nachricht ein.</span><span class="sxs-lookup"><span data-stu-id="67623-446">Asynchronously inserts data into the body or subject of a message.</span></span>

      <span data-ttu-id="67623-447">Die setSelectedDataAsync-Methode fügt die angegebene Zeichenfolge an der Cursorposition im Betreff oder Textkörper des Elements ein, oder wenn im Editor Text ausgewählt ist, wird der markierte Text ersetzt.</span><span class="sxs-lookup"><span data-stu-id="67623-447">The setSelectedDataAsync method inserts the specified string at the cursor location in the subject or body of the item, or, if text is selected in the editor, it replaces the selected text.</span></span> <span data-ttu-id="67623-448">Wenn sich der Cursor nicht im Feld Text oder Betreff befindet, wird ein Fehler zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="67623-448">If the cursor is not in the body or subject field, an error is returned.</span></span> <span data-ttu-id="67623-449">Nach dem Einfügen wird der Cursor am Ende des eingefügten Inhalts platziert.</span><span class="sxs-lookup"><span data-stu-id="67623-449">After insertion, the cursor is placed at the end of the inserted content.</span></span>

      <span data-ttu-id="67623-450">\[[API-Gruppe: Mailbox 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="67623-450">\[ [API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="67623-451">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="67623-451">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="67623-452">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Terminplaner</span><span class="sxs-lookup"><span data-stu-id="67623-452">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment Organizer</span></span>

      <span data-ttu-id="67623-453">**Fehler**:</span><span class="sxs-lookup"><span data-stu-id="67623-453">**Errors**:</span></span>

      - <span data-ttu-id="67623-454">InvalidAttachmentId: die Anlagen-ID ist nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="67623-454">InvalidAttachmentId: The attachment identifier does not exist.</span></span>

      #### <a name="examples"></a><span data-ttu-id="67623-455">Beispiele</span><span class="sxs-lookup"><span data-stu-id="67623-455">Examples</span></span>

      ```javascript
      Office.context.mailbox.item.setSelectedDataAsync("<b>Hello World!</b>", { coercionType : "html" });
      ```
    name: 'setSelectedDataAsync(data, options, callback)'
    fullName: 'setSelectedDataAsync(data, options, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setSelectedDataAsync(data: string, options?: Office.AsyncContextOptions & CoercionTypeOptions, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: "<span data-ttu-id=\"67623-456\">Die einzufügenden Daten.</span><span class=\"sxs-lookup\"><span data-stu-id=\"67623-456\">The data to be inserted.</span></span> <span data-ttu-id=\"67623-457\">Daten dürfen 1.000.000 Zeichen nicht überschreiten.</span><span class=\"sxs-lookup\"><span data-stu-id=\"67623-457\">Data is not to exceed 1,000,000 characters.</span></span> <span data-ttu-id=\"67623-458\">Werden mehr als 1.000.000\_Zeichen übergeben, wird eine ArgumentOutOfRange-Ausnahme ausgelöst.</span><span class=\"sxs-lookup\"><span data-stu-id=\"67623-458\">If more than 1,000,000 characters are passed in, an ArgumentOutOfRange exception is thrown.</span></span>"
          type:
            - string
        - id: options
          description: '<span data-ttu-id="67623-459">Optional.</span><span class="sxs-lookup"><span data-stu-id="67623-459">Optional.</span></span> <span data-ttu-id="67623-460">Ein Objektliteral, das mindestens eine der folgenden Eigenschaften enthält.</span><span class="sxs-lookup"><span data-stu-id="67623-460">An object literal that contains one or more of the following properties.</span></span> <span data-ttu-id="67623-461">AsyncContext: Entwickler können ein beliebiges Objekt bereitstellen, auf das Sie in der Rückrufmethode zugreifen möchten.</span><span class="sxs-lookup"><span data-stu-id="67623-461">asyncContext: Developers can provide any object they wish to access in the callback method.</span></span> <span data-ttu-id="67623-462">coercionType: Wenn Text, wird das aktuelle Format in Outlook im Internet und in Windows angewendet.</span><span class="sxs-lookup"><span data-stu-id="67623-462">coercionType: If text, the current style is applied in Outlook on the web and Windows.</span></span> <span data-ttu-id="67623-463">Wenn das Feld ein HTML-Editor ist, werden nur die Textdaten eingefügt, selbst wenn es sich bei den Daten um HTML-Daten handelt.</span><span class="sxs-lookup"><span data-stu-id="67623-463">If the field is an HTML editor, only the text data is inserted, even if the data is HTML.</span></span> <span data-ttu-id="67623-464">Wenn HTML und das Feld HTML unterstützen (der Betreff nicht), wird das aktuelle Format in Outlook im Internet angewendet, und die Standardformatvorlage wird in Outlook auf Desktop Clients angewendet.</span><span class="sxs-lookup"><span data-stu-id="67623-464">If html and the field supports HTML (the subject doesn''t), the current style is applied in Outlook on the web and the default style is applied in Outlook on desktop clients.</span></span> <span data-ttu-id="67623-465">Wenn das Feld ein Textfeld ist, wird ein InvalidDataFormat-Fehler zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="67623-465">If the field is a text field, an InvalidDataFormat error is returned.</span></span> <span data-ttu-id="67623-466">Wenn coercionType nicht festgelegt ist, hängt das Ergebnis vom Feld ab: Ist das Feld vom Typ HTML, wird HTML verwendet; ist das Feld vom Typ Text, wird unformatierter Text verwendet.</span><span class="sxs-lookup"><span data-stu-id="67623-466">If coercionType is not set, the result depends on the field: if the field is HTML then HTML is used; if the field is text, then plain text is used.</span></span>'
          type:
            - 'outlook!Office.AppointmentCompose#setSelectedDataAsync~0:complex'
        - id: callback
          description: '<span data-ttu-id="67623-467">Optional.</span><span class="sxs-lookup"><span data-stu-id="67623-467">Optional.</span></span> <span data-ttu-id="67623-468">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzigen Parameter vom Typ Office. AsyncResult aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="67623-468">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>'
          type:
            - 'outlook!Office.AppointmentCompose#setSelectedDataAsync~1:complex'
  - uid: 'outlook!Office.AppointmentCompose#setSelectedDataAsync:member(2)'
    summary: |-
      <span data-ttu-id="67623-469">Fügt asynchron Daten in den Textkörper oder Betreff einer Nachricht ein.</span><span class="sxs-lookup"><span data-stu-id="67623-469">Asynchronously inserts data into the body or subject of a message.</span></span>

      <span data-ttu-id="67623-470">Die setSelectedDataAsync-Methode fügt die angegebene Zeichenfolge an der Cursorposition im Betreff oder Textkörper des Elements ein, oder wenn im Editor Text ausgewählt ist, wird der markierte Text ersetzt.</span><span class="sxs-lookup"><span data-stu-id="67623-470">The setSelectedDataAsync method inserts the specified string at the cursor location in the subject or body of the item, or, if text is selected in the editor, it replaces the selected text.</span></span> <span data-ttu-id="67623-471">Wenn sich der Cursor nicht im Feld Text oder Betreff befindet, wird ein Fehler zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="67623-471">If the cursor is not in the body or subject field, an error is returned.</span></span> <span data-ttu-id="67623-472">Nach dem Einfügen wird der Cursor am Ende des eingefügten Inhalts platziert.</span><span class="sxs-lookup"><span data-stu-id="67623-472">After insertion, the cursor is placed at the end of the inserted content.</span></span>

      <span data-ttu-id="67623-473">\[[API-Gruppe: Mailbox 1,2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="67623-473">\[ [API set: Mailbox 1.2](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="67623-474">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadWriteItem</span><span class="sxs-lookup"><span data-stu-id="67623-474">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadWriteItem</span></span>

      <span data-ttu-id="67623-475">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Terminplaner</span><span class="sxs-lookup"><span data-stu-id="67623-475">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment Organizer</span></span>

      <span data-ttu-id="67623-476">**Fehler**:</span><span class="sxs-lookup"><span data-stu-id="67623-476">**Errors**:</span></span>

      - <span data-ttu-id="67623-477">InvalidAttachmentId: die Anlagen-ID ist nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="67623-477">InvalidAttachmentId: The attachment identifier does not exist.</span></span>

      #### <a name="examples"></a><span data-ttu-id="67623-478">Beispiele</span><span class="sxs-lookup"><span data-stu-id="67623-478">Examples</span></span>

      ```javascript
      Office.context.mailbox.item.setSelectedDataAsync("Hello World!");
      ```
    name: 'setSelectedDataAsync(data, callback)'
    fullName: 'setSelectedDataAsync(data, callback)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'setSelectedDataAsync(data: string, callback?: (asyncResult: Office.AsyncResult<void>) => void): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: data
          description: "<span data-ttu-id=\"67623-479\">Die einzufügenden Daten.</span><span class=\"sxs-lookup\"><span data-stu-id=\"67623-479\">The data to be inserted.</span></span> <span data-ttu-id=\"67623-480\">Daten dürfen 1.000.000 Zeichen nicht überschreiten.</span><span class=\"sxs-lookup\"><span data-stu-id=\"67623-480\">Data is not to exceed 1,000,000 characters.</span></span> <span data-ttu-id=\"67623-481\">Werden mehr als 1.000.000\_Zeichen übergeben, wird eine ArgumentOutOfRange-Ausnahme ausgelöst.</span><span class=\"sxs-lookup\"><span data-stu-id=\"67623-481\">If more than 1,000,000 characters are passed in, an ArgumentOutOfRange exception is thrown.</span></span>"
          type:
            - string
        - id: callback
          description: '<span data-ttu-id="67623-482">Optional.</span><span class="sxs-lookup"><span data-stu-id="67623-482">Optional.</span></span> <span data-ttu-id="67623-483">Wenn die Methode abgeschlossen ist, wird die Funktion, die im callback-Parameter übergeben wird, mit einem einzigen Parameter vom Typ Office. AsyncResult aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="67623-483">When the method completes, the function passed in the callback parameter is called with a single parameter of type Office.AsyncResult.</span></span>'
          type:
            - 'outlook!Office.AppointmentCompose#setSelectedDataAsync~2:complex'
  - uid: 'outlook!Office.AppointmentCompose#start:member'
    summary: |-
      <span data-ttu-id="67623-484">Ruft Datum und Zeit für den Beginn des Termins ab oder legt Datum und Uhrzeit fest.</span><span class="sxs-lookup"><span data-stu-id="67623-484">Gets or sets the date and time that the appointment is to begin.</span></span>

      <span data-ttu-id="67623-485">Die Start-Eigenschaft ist ein [Office. Time](xref:outlook!Office.Time:interface) -Objekt, das als Coordinated Universal Time (UTC)-Datum und-Zeitwert ausgedrückt wird.</span><span class="sxs-lookup"><span data-stu-id="67623-485">The start property is an [Office.Time](xref:outlook!Office.Time:interface) object expressed as a Coordinated Universal Time (UTC) date and time value.</span></span> <span data-ttu-id="67623-486">Sie können die convertToLocalClientTime-Methode verwenden, um den Wert in das lokale Datum und die Uhrzeit des Clients zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="67623-486">You can use the convertToLocalClientTime method to convert the value to the client's local date and time.</span></span>

      <span data-ttu-id="67623-487">Wenn Sie die Time. setasync-Methode verwenden, um die Startzeit festzulegen, sollten Sie die convertToUtcClientTime-Methode verwenden, um die Ortszeit auf dem Client für den Server in UTC zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="67623-487">When you use the Time.setAsync method to set the start time, you should use the convertToUtcClientTime method to convert the local time on the client to UTC for the server.</span></span>

      <span data-ttu-id="67623-488">\[[API-Gruppe: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="67623-488">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="67623-489">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="67623-489">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="67623-490">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Terminplaner</span><span class="sxs-lookup"><span data-stu-id="67623-490">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment Organizer</span></span>

      #### <a name="examples"></a><span data-ttu-id="67623-491">Beispiele</span><span class="sxs-lookup"><span data-stu-id="67623-491">Examples</span></span>

      ```javascript
      // The following example sets the start time of an appointment in compose mode by
      // using the `setAsync` method of the `Time` object.
      var startTime = new Date("3/14/2015");
      var options = {
          // Pass information that can be used in the callback.
          asyncContext: {verb: "Set"}
      };
      Office.context.mailbox.item.start.setAsync(startTime, options, function(result) {
          if (result.error) {
              console.debug(result.error);
          } else {
              // Access the asyncContext that was passed to the setAsync function.
              console.debug("Start Time " + result.asyncContext.verb);
          }
      });
      ```
    name: start
    fullName: start
    langs:
      - typeScript
    type: property
    syntax:
      content: 'start: Time;'
      return:
        type:
          - 'outlook!Office.Time:interface'
  - uid: 'outlook!Office.AppointmentCompose#subject:member'
    summary: |-
      <span data-ttu-id="67623-492">Ruft die Beschreibung ab, die im Betrefffeld eines Elements angezeigt wird, oder legt sie fest.</span><span class="sxs-lookup"><span data-stu-id="67623-492">Gets or sets the description that appears in the subject field of an item.</span></span>

      <span data-ttu-id="67623-493">Die Subject-Eigenschaft ruft den gesamten Betreff des Elements ab oder legt ihn fest, wie er vom e-Mail-Server gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="67623-493">The subject property gets or sets the entire subject of the item, as sent by the email server.</span></span>

      <span data-ttu-id="67623-494">Die Subject-Eigenschaft gibt ein Subject-Objekt zurück, das Methoden zum Abrufen und Festlegen des Betreffs bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="67623-494">The subject property returns a Subject object that provides methods to get and set the subject.</span></span>

      <span data-ttu-id="67623-495">\[[API-Gruppe: Mailbox 1,0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="67623-495">\[ [API set: Mailbox 1.0](/office/dev/add-ins/reference/requirement-sets/outlook-api-requirement-sets) \]</span></span>
    remarks: |-
      <span data-ttu-id="67623-496">\*\* [Minimale Berechtigungsstufe](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->\*\*: ReadItem</span><span class="sxs-lookup"><span data-stu-id="67623-496">**[Minimum permission level](https://docs.microsoft.com/outlook/add-ins/understanding-outlook-add-in-permissions)<!-- -->**: ReadItem</span></span>

      <span data-ttu-id="67623-497">\*\* [Zutreffender Outlook-Modus](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->\*\*: Terminplaner</span><span class="sxs-lookup"><span data-stu-id="67623-497">**[Applicable Outlook mode](https://docs.microsoft.com/outlook/add-ins/#extension-points)<!-- -->**: Appointment Organizer</span></span>

      #### <a name="examples"></a><span data-ttu-id="67623-498">Beispiele</span><span class="sxs-lookup"><span data-stu-id="67623-498">Examples</span></span>

      ```javascript
      Office.context.mailbox.item.subject.getAsync(callback);

      function callback(asyncResult) {
          var subject = asyncResult.value;
      }
      ```
    name: subject
    fullName: subject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'subject: Subject;'
      return:
        type:
          - 'outlook!Office.Subject:interface'
references:
  - uid: 'outlook!Office.Appointment:interface'
    name: Appointment
  - uid: 'outlook!Office.ItemCompose:interface'
    name: ItemCompose
  - uid: 'outlook!Office.AppointmentCompose#addFileAttachmentAsync~0:complex'
    name: 'Office.AsyncContextOptions & { isInline: boolean }'
    fullName: 'Office.AsyncContextOptions & { isInline: boolean }'
    spec.typeScript:
      - uid: 'outlook!Office.AsyncContextOptions:interface'
        name: Office.AsyncContextOptions
        fullName: Office.AsyncContextOptions
      - name: ' & { isInline: boolean }'
        fullName: ' & { isInline: boolean }'
  - uid: 'outlook!Office.AppointmentCompose#addFileAttachmentAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.AppointmentCompose#addFileAttachmentAsync~2:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.AppointmentCompose#addHandlerAsync~0:complex'
    name: Office.EventType | string
    fullName: Office.EventType | string
    spec.typeScript:
      - uid: 'outlook!Office.EventType:enum'
        name: Office.EventType
        fullName: Office.EventType
      - name: ' | string'
        fullName: ' | string'
  - uid: 'outlook!Office.AsyncContextOptions:interface'
    name: Office.AsyncContextOptions
  - uid: 'outlook!Office.AppointmentCompose#addHandlerAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.AppointmentCompose#addHandlerAsync~2:complex'
    name: Office.EventType | string
    fullName: Office.EventType | string
    spec.typeScript:
      - uid: 'outlook!Office.EventType:enum'
        name: Office.EventType
        fullName: Office.EventType
      - name: ' | string'
        fullName: ' | string'
  - uid: 'outlook!Office.AppointmentCompose#addHandlerAsync~3:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.AppointmentCompose#addItemAttachmentAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.AppointmentCompose#addItemAttachmentAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.Body:interface'
    name: Body
  - uid: 'outlook!Office.Time:interface'
    name: Time
  - uid: 'outlook!Office.AppointmentCompose#getSelectedDataAsync~0:complex'
    name: Office.CoercionType | string
    fullName: Office.CoercionType | string
    spec.typeScript:
      - uid: 'outlook!Office.CoercionType:enum'
        name: Office.CoercionType
        fullName: Office.CoercionType
      - name: ' | string'
        fullName: ' | string'
  - uid: 'outlook!Office.AppointmentCompose#getSelectedDataAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<any>) => void'
    fullName: '(asyncResult: Office.AsyncResult<any>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <any>) => void
        fullName: <any>) => void
  - uid: 'outlook!Office.AppointmentCompose#getSelectedDataAsync~2:complex'
    name: Office.CoercionType | string
    fullName: Office.CoercionType | string
    spec.typeScript:
      - uid: 'outlook!Office.CoercionType:enum'
        name: Office.CoercionType
        fullName: Office.CoercionType
      - name: ' | string'
        fullName: ' | string'
  - uid: 'outlook!Office.AppointmentCompose#getSelectedDataAsync~3:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.AppointmentCompose#itemType~0:complex'
    name: MailboxEnums.ItemType | string
    fullName: Office.MailboxEnums.ItemType | string
    spec.typeScript:
      - uid: 'outlook!Office.MailboxEnums.ItemType:enum'
        name: MailboxEnums.ItemType
        fullName: Office.MailboxEnums.ItemType
      - name: ' | string'
        fullName: ' | string'
  - uid: 'outlook!Office.AppointmentCompose#loadCustomPropertiesAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<CustomProperties>) => void'
    fullName: '(asyncResult: Office.AsyncResult<Office.CustomProperties>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <
        fullName: <
      - uid: 'outlook!Office.CustomProperties:interface'
        name: CustomProperties
        fullName: Office.CustomProperties
      - name: '>) => void'
        fullName: '>) => void'
  - uid: 'outlook!Office.Location:interface'
    name: Location
  - uid: 'outlook!Office.NotificationMessages:interface'
    name: NotificationMessages
  - uid: 'outlook!Office.Recipients:interface'
    name: Recipients
  - uid: 'outlook!Office.Organizer:interface'
    name: Organizer
  - uid: 'outlook!Office.Recurrence:interface'
    name: Recurrence
  - uid: 'outlook!Office.AppointmentCompose#removeAttachmentAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.AppointmentCompose#removeAttachmentAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.AppointmentCompose#removeHandlerAsync~0:complex'
    name: Office.EventType | string
    fullName: Office.EventType | string
    spec.typeScript:
      - uid: 'outlook!Office.EventType:enum'
        name: Office.EventType
        fullName: Office.EventType
      - name: ' | string'
        fullName: ' | string'
  - uid: 'outlook!Office.AppointmentCompose#removeHandlerAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.AppointmentCompose#removeHandlerAsync~2:complex'
    name: Office.EventType | string
    fullName: Office.EventType | string
    spec.typeScript:
      - uid: 'outlook!Office.EventType:enum'
        name: Office.EventType
        fullName: Office.EventType
      - name: ' | string'
        fullName: ' | string'
  - uid: 'outlook!Office.AppointmentCompose#removeHandlerAsync~3:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.AppointmentCompose#saveAsync~0:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.AppointmentCompose#saveAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<string>) => void'
    fullName: '(asyncResult: Office.AsyncResult<string>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <string>) => void
        fullName: <string>) => void
  - uid: 'outlook!Office.AppointmentCompose#setSelectedDataAsync~0:complex'
    name: Office.AsyncContextOptions & CoercionTypeOptions
    fullName: Office.AsyncContextOptions & Office.CoercionTypeOptions
    spec.typeScript:
      - uid: 'outlook!Office.AsyncContextOptions:interface'
        name: Office.AsyncContextOptions
        fullName: Office.AsyncContextOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'outlook!Office.CoercionTypeOptions:interface'
        name: CoercionTypeOptions
        fullName: Office.CoercionTypeOptions
  - uid: 'outlook!Office.AppointmentCompose#setSelectedDataAsync~1:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.AppointmentCompose#setSelectedDataAsync~2:complex'
    name: '(asyncResult: Office.AsyncResult<void>) => void'
    fullName: '(asyncResult: Office.AsyncResult<void>) => void'
    spec.typeScript:
      - name: '(asyncResult: '
        fullName: '(asyncResult: '
      - uid: 'outlook!Office.AsyncResult:interface'
        name: Office.AsyncResult
        fullName: Office.AsyncResult
      - name: <void>) => void
        fullName: <void>) => void
  - uid: 'outlook!Office.Subject:interface'
    name: Subject