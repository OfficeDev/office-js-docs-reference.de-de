### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.StyleCollection:class'
    summary: |-
      <span data-ttu-id="0b01b-101">Stellt eine Auflistung aller Formatvorlagen dar.</span><span class="sxs-lookup"><span data-stu-id="0b01b-101">Represents a collection of all the styles.</span></span>

      <span data-ttu-id="0b01b-102">\[[API-Gruppe: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0b01b-102">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.StyleCollection
    fullName: Excel.StyleCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.StyleCollection#add:member(1)'
      - 'excel!Excel.StyleCollection#context:member'
      - 'excel!Excel.StyleCollection#getCount:member(1)'
      - 'excel!Excel.StyleCollection#getItem:member(1)'
      - 'excel!Excel.StyleCollection#getItemAt:member(1)'
      - 'excel!Excel.StyleCollection#items:member'
      - 'excel!Excel.StyleCollection#load:member(1)'
      - 'excel!Excel.StyleCollection#load:member(2)'
      - 'excel!Excel.StyleCollection#load:member(3)'
      - 'excel!Excel.StyleCollection#toJSON:member(1)'
  - uid: 'excel!Excel.StyleCollection#add:member(1)'
    summary: |-
      <span data-ttu-id="0b01b-103">Fügt der Sammlung eine neue Formatvorlage hinzu.</span><span class="sxs-lookup"><span data-stu-id="0b01b-103">Adds a new style to the collection.</span></span>

      <span data-ttu-id="0b01b-104">\[[API-Gruppe: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0b01b-104">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: add(name)
    fullName: add(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'add(name: string): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0b01b-105">Beispiele</span><span class="sxs-lookup"><span data-stu-id="0b01b-105">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let styles = context.workbook.styles;

              // Add a new style to the style collection.
              // Styles is in the Home tab ribbon.
              styles.add("Diagonal Orientation Style");
                    
              let newStyle = styles.getItem("Diagonal Orientation Style");
              
              // The "Diagonal Orientation Style" properties.
              newStyle.textOrientation = 38;
              newStyle.autoIndent = true;
              newStyle.includeProtection = true;
              newStyle.shrinkToFit = true;
              newStyle.locked = false;
              
              await context.sync();

              console.log("Successfully added a new style with diagonal orientation to the Home tab ribbon.");
          });
          ```
      parameters:
        - id: name
          description: <span data-ttu-id="0b01b-106">Der Name der hinzuzufügenden Formatvorlage.</span><span class="sxs-lookup"><span data-stu-id="0b01b-106">Name of the style to be added.</span></span>
          type:
            - string
  - uid: 'excel!Excel.StyleCollection#context:member'
    summary: '<span data-ttu-id="0b01b-107">Der Anforderungskontext, der mit dem Objekt verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="0b01b-107">The request context associated with the object.</span></span> <span data-ttu-id="0b01b-108">Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="0b01b-108">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.StyleCollection#getCount:member(1)'
    summary: |-
      <span data-ttu-id="0b01b-109">Ruft die Anzahl von Formatvorlagen in der Sammlung ab.</span><span class="sxs-lookup"><span data-stu-id="0b01b-109">Gets the number of styles in the collection.</span></span>

      <span data-ttu-id="0b01b-110">\[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0b01b-110">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.StyleCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.StyleCollection#getItem:member(1)'
    summary: |-
      <span data-ttu-id="0b01b-111">Ruft eine Formatvorlage anhand des Namens ab.</span><span class="sxs-lookup"><span data-stu-id="0b01b-111">Gets a style by name.</span></span>

      <span data-ttu-id="0b01b-112">\[[API-Gruppe: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0b01b-112">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(name)
    fullName: getItem(name)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(name: string): Excel.Style;'
      return:
        type:
          - 'excel!Excel.Style:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="0b01b-113">Beispiele</span><span class="sxs-lookup"><span data-stu-id="0b01b-113">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let styles = context.workbook.styles;

              // Add a new style to the style collection.
              // Styles is in the Home tab ribbon.
              styles.add("Diagonal Orientation Style");
                    
              let newStyle = styles.getItem("Diagonal Orientation Style");
              
              // The "Diagonal Orientation Style" properties.
              newStyle.textOrientation = 38;
              newStyle.autoIndent = true;
              newStyle.includeProtection = true;
              newStyle.shrinkToFit = true;
              newStyle.locked = false;
              
              await context.sync();

              console.log("Successfully added a new style with diagonal orientation to the Home tab ribbon.");
          });
          ```
      parameters:
        - id: name
          description: '<span data-ttu-id="0b01b-114">Name des Formats, das abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="0b01b-114">Name of the style to be retrieved.</span></span>'
          type:
            - string
  - uid: 'excel!Excel.StyleCollection#getItemAt:member(1)'
    summary: |-
      <span data-ttu-id="0b01b-115">Ruft eine Formatvorlage anhand ihrer Position in der Sammlung ab.</span><span class="sxs-lookup"><span data-stu-id="0b01b-115">Gets a style based on its position in the collection.</span></span>

      <span data-ttu-id="0b01b-116">\[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="0b01b-116">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItemAt(index)
    fullName: getItemAt(index)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItemAt(index: number): Excel.Style;'
      return:
        type:
          - 'excel!Excel.Style:class'
        description: ''
      parameters:
        - id: index
          description: '<span data-ttu-id="0b01b-117">Indexwert des Style-Objekts, das abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="0b01b-117">Index value of the style object to be retrieved.</span></span> <span data-ttu-id="0b01b-118">Nullindiziert.</span><span class="sxs-lookup"><span data-stu-id="0b01b-118">Zero-indexed.</span></span>'
          type:
            - number
  - uid: 'excel!Excel.StyleCollection#items:member'
    summary: <span data-ttu-id="0b01b-119">Ruft die geladenen untergeordneten Elemente in dieser Sammlung ab.</span><span class="sxs-lookup"><span data-stu-id="0b01b-119">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Style[];'
      return:
        type:
          - 'excel!Excel.StyleCollection#items~0:complex'
  - uid: 'excel!Excel.StyleCollection#load:member(1)'
    summary: <span data-ttu-id="0b01b-120">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="0b01b-120">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0b01b-121">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="0b01b-121">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.StyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.StyleCollection;'
      return:
        type:
          - 'excel!Excel.StyleCollection:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="0b01b-122">Enthält Optionen für die Eigenschaften des zu ladenden Objekts.</span><span class="sxs-lookup"><span data-stu-id="0b01b-122">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.StyleCollection#load~0:complex'
  - uid: 'excel!Excel.StyleCollection#load:member(2)'
    summary: <span data-ttu-id="0b01b-123">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="0b01b-123">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0b01b-124">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="0b01b-124">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.StyleCollection;'
      return:
        type:
          - 'excel!Excel.StyleCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="0b01b-125">Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="0b01b-125">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.StyleCollection#load:member(3)'
    summary: <span data-ttu-id="0b01b-126">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="0b01b-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="0b01b-127">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="0b01b-127">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: OfficeExtension.LoadOption): Excel.StyleCollection;'
      return:
        type:
          - 'excel!Excel.StyleCollection:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="0b01b-128">`propertyNamesAndPaths.select`ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften `propertyNamesAndPaths.expand` angibt, und ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="0b01b-128">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.StyleCollection#toJSON:member(1)'
    summary: '<span data-ttu-id="0b01b-129">Überschreibt die `toJSON()` JavaScript-Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird.`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="0b01b-129">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="0b01b-130">.</span><span class="sxs-lookup"><span data-stu-id="0b01b-130"></span></span> <span data-ttu-id="0b01b-131">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="0b01b-131"></span></span><!-- --><span data-ttu-id="0b01b-132">wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche `Excel.StyleCollection` Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`Excel.Interfaces.StyleCollectionData`</span><span class="sxs-lookup"><span data-stu-id="0b01b-132">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.StyleCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.StyleCollectionData`</span></span><!-- --><span data-ttu-id="0b01b-133">), die ein "Items"-Array mit flachen Kopien aller geladenen Eigenschaften aus den Elementen der Auflistung enthält.</span><span class="sxs-lookup"><span data-stu-id="0b01b-133">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.StyleCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.StyleCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.StyleCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.Style:class'
    name: Excel.Style
  - uid: 'excel!Excel.StyleCollection#items~0:complex'
    name: 'Excel.Style[]'
    fullName: 'Excel.Style[]'
    spec.typeScript:
      - uid: 'excel!Excel.Style:class'
        name: Excel.Style
        fullName: Excel.Style
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.StyleCollection:class'
    name: Excel.StyleCollection
  - uid: 'excel!Excel.StyleCollection#load~0:complex'
    name: Excel.Interfaces.StyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.StyleCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.StyleCollectionLoadOptions:interface'
        name: Excel.Interfaces.StyleCollectionLoadOptions
        fullName: Excel.Interfaces.StyleCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.StyleCollectionData:interface'
    name: Excel.Interfaces.StyleCollectionData