### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.NamedItem:class'
    summary: |-
      <span data-ttu-id="fd2fe-101">Stellt einen definierten Namen für einen Zellbereich oder einen Wert dar.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-101">Represents a defined name for a range of cells or value.</span></span> <span data-ttu-id="fd2fe-102">Namen können primitive benannte Objekte sein (wie im Typ unten zu sehen), Range-Objekt oder einen Verweis auf einen Bereich.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-102">Names can be primitive named objects (as seen in the type below), range object, or a reference to a range.</span></span> <span data-ttu-id="fd2fe-103">Dieses Objekt kann zum Abrufen des mit Namen verknüpften Bereichsobjekts verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-103">This object can be used to obtain range object associated with names.</span></span>

      <span data-ttu-id="fd2fe-104">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fd2fe-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.NamedItem
    fullName: Excel.NamedItem
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.NamedItem#arrayValues:member'
      - 'excel!Excel.NamedItem#comment:member'
      - 'excel!Excel.NamedItem#context:member'
      - 'excel!Excel.NamedItem#delete:member(1)'
      - 'excel!Excel.NamedItem#formula:member'
      - 'excel!Excel.NamedItem#getRange:member(1)'
      - 'excel!Excel.NamedItem#getRangeOrNullObject:member(1)'
      - 'excel!Excel.NamedItem#load:member(1)'
      - 'excel!Excel.NamedItem#load:member(2)'
      - 'excel!Excel.NamedItem#load:member(3)'
      - 'excel!Excel.NamedItem#name:member'
      - 'excel!Excel.NamedItem#scope:member'
      - 'excel!Excel.NamedItem#set:member(1)'
      - 'excel!Excel.NamedItem#set:member(2)'
      - 'excel!Excel.NamedItem#toJSON:member(1)'
      - 'excel!Excel.NamedItem#type:member'
      - 'excel!Excel.NamedItem#value:member'
      - 'excel!Excel.NamedItem#visible:member'
      - 'excel!Excel.NamedItem#worksheet:member'
      - 'excel!Excel.NamedItem#worksheetOrNullObject:member'
  - uid: 'excel!Excel.NamedItem#arrayValues:member'
    summary: |-
      <span data-ttu-id="fd2fe-105">Gibt ein Objekt mit Werten und Typen des benannten Elements zurück.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-105">Returns an object containing values and types of the named item.</span></span> <span data-ttu-id="fd2fe-106">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-106">Read-only.</span></span>

      <span data-ttu-id="fd2fe-107">\[[API-Gruppe: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fd2fe-107">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: arrayValues
    fullName: arrayValues
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly arrayValues: Excel.NamedItemArrayValues;'
      return:
        type:
          - 'excel!Excel.NamedItemArrayValues:class'
  - uid: 'excel!Excel.NamedItem#comment:member'
    summary: |-
      <span data-ttu-id="fd2fe-108">Stellt den Kommentar dar, der mit diesem Namen verknüpft ist</span><span class="sxs-lookup"><span data-stu-id="fd2fe-108">Represents the comment associated with this name.</span></span>

      <span data-ttu-id="fd2fe-109">\[[API-Gruppe: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fd2fe-109">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: comment
    fullName: comment
    langs:
      - typeScript
    type: property
    syntax:
      content: 'comment: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.NamedItem#context:member'
    summary: '<span data-ttu-id="fd2fe-110">Der Anforderungskontext, der mit dem Objekt verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-110">The request context associated with the object.</span></span> <span data-ttu-id="fd2fe-111">Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-111">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.NamedItem#delete:member(1)'
    summary: |-
      <span data-ttu-id="fd2fe-112">Löscht den angegebenen Namen.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-112">Deletes the given name.</span></span>

      <span data-ttu-id="fd2fe-113">\[[API-Gruppe: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fd2fe-113">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fd2fe-114">Beispiele</span><span class="sxs-lookup"><span data-stu-id="fd2fe-114">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");
              const totalName = sheet.names.getItemOrNullObject("TotalAmount");
              totalName.load();
              await context.sync();

              if (totalName.value) {
                  totalName.delete();

                  // Replace the named item (TotalAmount) with the actual formula for TotalAmount to avoid displaying #NAME in the cell.
                  sheet.getRange("D11").values = [["=SUM(ExpensesTable[AMOUNT])"]];
              } else {
                  console.log("No named item created for the formula.");
              }

              await context.sync();
          });
          ```
  - uid: 'excel!Excel.NamedItem#formula:member'
    summary: |-
      <span data-ttu-id="fd2fe-115">Ruft die Formel des benannten Elements ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-115">Gets or sets the formula of the named item.</span></span> <span data-ttu-id="fd2fe-116">Formel beginnt immer mit einem "=".</span><span class="sxs-lookup"><span data-stu-id="fd2fe-116">Formula always starts with a '=' sign.</span></span>

      <span data-ttu-id="fd2fe-117">\[[API-Gruppe: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fd2fe-117">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: formula
    fullName: formula
    langs:
      - typeScript
    type: property
    syntax:
      content: 'formula: any;'
      return:
        type:
          - any
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fd2fe-118">Beispiele</span><span class="sxs-lookup"><span data-stu-id="fd2fe-118">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              const sheet = context.workbook.worksheets.getItem("Sample");

              // Get the named item
              const myNamedItem = sheet.names.getItemOrNullObject("MyRange");
              myNamedItem.load("name, formula");
              await context.sync();

              if (myNamedItem.isNullObject) {
                  console.log(`There is no named item. Create it with "Add named item for a range" first.`);
              } else {                    
                  // Update named item to point to the second range
                  myNamedItem.formula = "=Sample!$B$10:$D$14";
                  sheet.getRange("B10:D14").select();
                  await context.sync();

                  console.log(`Just updated the named item "${myNamedItem.name}" -- it's now located here: ${myNamedItem.formula}`);
              }
          });
          ```
  - uid: 'excel!Excel.NamedItem#getRange:member(1)'
    summary: |-
      <span data-ttu-id="fd2fe-119">Ruft das Bereichsobjekt ab, das mit dem Namen verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-119">Returns the range object that is associated with the name.</span></span> <span data-ttu-id="fd2fe-120">Gibt einen Fehler zurück, wenn der Typ des benannten Elements kein Bereich ist.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-120">Throws an error if the named item's type is not a range.</span></span>

      <span data-ttu-id="fd2fe-121">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fd2fe-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fd2fe-122">Beispiele</span><span class="sxs-lookup"><span data-stu-id="fd2fe-122">Examples</span></span>

          ```javascript
          // Returns the Range object that is associated with the name. 
          // null if the name is not of the type Range.
          // Note: This API currently supports only the Workbook scoped items.
          Excel.run(function (ctx) { 
              var names = ctx.workbook.names;
              var range = names.getItem('MyRange').getRange();
              range.load('address');
              return ctx.sync().then(function() {
                  console.log(range.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.NamedItem#getRangeOrNullObject:member(1)'
    summary: |-
      <span data-ttu-id="fd2fe-123">Ruft das Bereichsobjekt ab, das mit dem Namen verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-123">Returns the range object that is associated with the name.</span></span> <span data-ttu-id="fd2fe-124">Gibt ein NULL-Objekt zurück, wenn der Typ des benannten Elements kein Bereich ist.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-124">Returns a null object if the named item's type is not a range.</span></span>

      <span data-ttu-id="fd2fe-125">\[[API-Gruppe: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fd2fe-125">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRangeOrNullObject()
    fullName: getRangeOrNullObject()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRangeOrNullObject(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: ''
  - uid: 'excel!Excel.NamedItem#load:member(1)'
    summary: <span data-ttu-id="fd2fe-126">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-126">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="fd2fe-127">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-127">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.NamedItemLoadOptions): Excel.NamedItem;'
      return:
        type:
          - 'excel!Excel.NamedItem:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="fd2fe-128">Enthält Optionen für die Eigenschaften des zu ladenden Objekts.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-128">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.NamedItemLoadOptions:interface'
  - uid: 'excel!Excel.NamedItem#load:member(2)'
    summary: <span data-ttu-id="fd2fe-129">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-129">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="fd2fe-130">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-130">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.NamedItem;'
      return:
        type:
          - 'excel!Excel.NamedItem:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="fd2fe-131">Beispiele</span><span class="sxs-lookup"><span data-stu-id="fd2fe-131">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var names = ctx.workbook.names;
              var namedItem = names.getItem('MyRange');
              namedItem.load('type');
              return ctx.sync().then(function() {
                      console.log(namedItem.type);
              });
          }).catch(function(error) {
                  console.log("Error: " + error);
                  if (error instanceof OfficeExtension.Error) {
                      console.log("Debug info: " + JSON.stringify(error.debugInfo));
                  }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="fd2fe-132">Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-132">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.NamedItem#load:member(3)'
    summary: <span data-ttu-id="fd2fe-133">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-133">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="fd2fe-134">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-134">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.NamedItem;
      return:
        type:
          - 'excel!Excel.NamedItem:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="fd2fe-135">`propertyNamesAndPaths.select`ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften `propertyNamesAndPaths.expand` angibt, und ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-135">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.NamedItem#name:member'
    summary: |-
      <span data-ttu-id="fd2fe-136">Der Name des Objekts.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-136">The name of the object.</span></span> <span data-ttu-id="fd2fe-137">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-137">Read-only.</span></span>

      <span data-ttu-id="fd2fe-138">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fd2fe-138">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.NamedItem#scope:member'
    summary: |-
      <span data-ttu-id="fd2fe-139">Gibt an, ob der Name im Bereich der Arbeitsmappe oder im Bereich eines bestimmten Arbeitsblatts liegt.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-139">Indicates whether the name is scoped to the workbook or to a specific worksheet.</span></span> <span data-ttu-id="fd2fe-140">Mögliche Werte sind: Arbeitsblatt, Arbeitsmappe.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-140">Possible values are: Worksheet, Workbook.</span></span> <span data-ttu-id="fd2fe-141">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-141">Read-only.</span></span>

      <span data-ttu-id="fd2fe-142">\[[API-Gruppe: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fd2fe-142">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: scope
    fullName: scope
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly scope: Excel.NamedItemScope | "Worksheet" | "Workbook";'
      return:
        type:
          - 'excel!Excel.NamedItem#scope~0:complex'
  - uid: 'excel!Excel.NamedItem#set:member(1)'
    summary: '<span data-ttu-id="fd2fe-143">Legt mehrere Eigenschaften eines Objekts gleichzeitig fest.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-143">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="fd2fe-144">Sie können entweder ein einfaches Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs übergeben.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-144">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="fd2fe-145">Diese Methode hat die folgende zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="fd2fe-145">This method has the following additional signature:</span></span>

      `set(properties: Excel.NamedItem): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.NamedItemUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="fd2fe-146">Ein JavaScript-Objekt mit Eigenschaften, die isomorphically für die Eigenschaften des Objekts strukturiert sind, für das die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-146">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - 'excel!Excel.Interfaces.NamedItemUpdateData:interface'
        - id: options
          description: '<span data-ttu-id="fd2fe-147">Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-147">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.NamedItem#set:member(2)'
    summary: '<span data-ttu-id="fd2fe-148">Legt mehrere Eigenschaften für das Objekt gleichzeitig basierend auf einem vorhandenen geladenen Objekt fest.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-148">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.NamedItem): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.NamedItem:class'
  - uid: 'excel!Excel.NamedItem#toJSON:member(1)'
    summary: '<span data-ttu-id="fd2fe-149">Überschreibt die `toJSON()` JavaScript-Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird.`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="fd2fe-149">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="fd2fe-150">.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-150"></span></span> <span data-ttu-id="fd2fe-151">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="fd2fe-151"></span></span><!-- --><span data-ttu-id="fd2fe-152">wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche Excel. NamedItem-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`Excel.Interfaces.NamedItemData`</span><span class="sxs-lookup"><span data-stu-id="fd2fe-152">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.NamedItem object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.NamedItemData`</span></span><!-- --><span data-ttu-id="fd2fe-153">), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-153">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.NamedItemData;'
      return:
        type:
          - 'excel!Excel.Interfaces.NamedItemData:interface'
        description: ''
  - uid: 'excel!Excel.NamedItem#type:member'
    summary: |-
      <span data-ttu-id="fd2fe-154">Gibt den Typ des Werts, der von der Formel des Namens zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-154">Indicates the type of the value returned by the name's formula.</span></span> <span data-ttu-id="fd2fe-155">Weitere Informationen finden Sie unter Excel. NamedItemType.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-155">See Excel.NamedItemType for details.</span></span> <span data-ttu-id="fd2fe-156">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-156">Read-only.</span></span>

      <span data-ttu-id="fd2fe-157">\[[API-Gruppe: ExcelApi 1,1 für String, Integer, Double, Boolean, Range, Error; 1,7 for Array](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fd2fe-157">\[ [API set: ExcelApi 1.1 for String,Integer,Double,Boolean,Range,Error; 1.7 for Array](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: type
    fullName: type
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly type: Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array";'
      return:
        type:
          - 'excel!Excel.NamedItem#type~0:complex'
  - uid: 'excel!Excel.NamedItem#value:member'
    summary: |-
      <span data-ttu-id="fd2fe-158">Stellt den Wert dar, der von der Formel des Namens berechnet wurde.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-158">Represents the value computed by the name's formula.</span></span> <span data-ttu-id="fd2fe-159">Für einen benannten Bereich wird die Bereichsadresse zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-159">For a named range, will return the range address.</span></span> <span data-ttu-id="fd2fe-160">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-160">Read-only.</span></span>

      <span data-ttu-id="fd2fe-161">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fd2fe-161">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: value
    fullName: value
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly value: any;'
      return:
        type:
          - any
  - uid: 'excel!Excel.NamedItem#visible:member'
    summary: |-
      <span data-ttu-id="fd2fe-162">Gibt an, ob das Objekt sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-162">Specifies whether the object is visible or not.</span></span>

      <span data-ttu-id="fd2fe-163">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fd2fe-163">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: visible
    fullName: visible
    langs:
      - typeScript
    type: property
    syntax:
      content: 'visible: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.NamedItem#worksheet:member'
    summary: |-
      <span data-ttu-id="fd2fe-164">Gibt das Arbeitsblatt zurück, auf dessen Bereich das benannte Element beschränkt ist.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-164">Returns the worksheet on which the named item is scoped to.</span></span> <span data-ttu-id="fd2fe-165">Löst einen Fehler aus, wenn das Element stattdessen auf die Arbeitsmappe beschränkt ist.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-165">Throws an error if the item is scoped to the workbook instead.</span></span>

      <span data-ttu-id="fd2fe-166">\[[API-Gruppe: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fd2fe-166">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
  - uid: 'excel!Excel.NamedItem#worksheetOrNullObject:member'
    summary: |-
      <span data-ttu-id="fd2fe-167">Gibt das Arbeitsblatt zurück, auf dessen Bereich das benannte Element beschränkt ist.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-167">Returns the worksheet on which the named item is scoped to.</span></span> <span data-ttu-id="fd2fe-168">Gibt ein NULL-Objekt zurück, wenn das Element stattdessen auf den Bereich der Arbeitsmappe beschränkt ist.</span><span class="sxs-lookup"><span data-stu-id="fd2fe-168">Returns a null object if the item is scoped to the workbook instead.</span></span>

      <span data-ttu-id="fd2fe-169">\[[API-Gruppe: ExcelApi 1,4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="fd2fe-169">\[ [API set: ExcelApi 1.4](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: worksheetOrNullObject
    fullName: worksheetOrNullObject
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheetOrNullObject: Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.NamedItemArrayValues:class'
    name: Excel.NamedItemArrayValues
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Range:class'
    name: Excel.Range
  - uid: 'excel!Excel.NamedItem:class'
    name: Excel.NamedItem
  - uid: 'excel!Excel.Interfaces.NamedItemLoadOptions:interface'
    name: Excel.Interfaces.NamedItemLoadOptions
  - uid: 'excel!Excel.NamedItem#scope~0:complex'
    name: Excel.NamedItemScope | "Worksheet" | "Workbook"
    fullName: Excel.NamedItemScope | "Worksheet" | "Workbook"
    spec.typeScript:
      - uid: 'excel!Excel.NamedItemScope:enum'
        name: Excel.NamedItemScope
        fullName: Excel.NamedItemScope
      - name: ' | "Worksheet" | "Workbook"'
        fullName: ' | "Worksheet" | "Workbook"'
  - uid: 'excel!Excel.Interfaces.NamedItemUpdateData:interface'
    name: Interfaces.NamedItemUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.NamedItemData:interface'
    name: Excel.Interfaces.NamedItemData
  - uid: 'excel!Excel.NamedItem#type~0:complex'
    name: Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array"
    fullName: Excel.NamedItemType | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array"
    spec.typeScript:
      - uid: 'excel!Excel.NamedItemType:enum'
        name: Excel.NamedItemType
        fullName: Excel.NamedItemType
      - name: ' | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array"'
        fullName: ' | "String" | "Integer" | "Double" | "Boolean" | "Range" | "Error" | "Array"'
  - uid: 'excel!Excel.Worksheet:class'
    name: Excel.Worksheet