### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.ConditionalRangeFill:class'
    summary: |-
      <span data-ttu-id="4b9b1-101">Stellt den Hintergrund eines bedingten Bereichsobjekts dar.</span><span class="sxs-lookup"><span data-stu-id="4b9b1-101">Represents the background of a conditional range object.</span></span>

      <span data-ttu-id="4b9b1-102">\[[API-Gruppe: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4b9b1-102">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.ConditionalRangeFill
    fullName: Excel.ConditionalRangeFill
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.ConditionalRangeFill#clear:member(1)'
      - 'excel!Excel.ConditionalRangeFill#color:member'
      - 'excel!Excel.ConditionalRangeFill#context:member'
      - 'excel!Excel.ConditionalRangeFill#load:member(1)'
      - 'excel!Excel.ConditionalRangeFill#load:member(2)'
      - 'excel!Excel.ConditionalRangeFill#load:member(3)'
      - 'excel!Excel.ConditionalRangeFill#set:member(1)'
      - 'excel!Excel.ConditionalRangeFill#set:member(2)'
      - 'excel!Excel.ConditionalRangeFill#toJSON:member(1)'
  - uid: 'excel!Excel.ConditionalRangeFill#clear:member(1)'
    summary: |-
      <span data-ttu-id="4b9b1-103">Setzt die Füllung zurück.</span><span class="sxs-lookup"><span data-stu-id="4b9b1-103">Resets the fill.</span></span>

      <span data-ttu-id="4b9b1-104">\[[API-Gruppe: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4b9b1-104">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.ConditionalRangeFill#color:member'
    summary: |-
      <span data-ttu-id="4b9b1-105">HTML-Farbcode, der die Farbe der Füllung, des Formulars \#RRGGBB (beispielsweise "FFA500") oder als benannte HTML-Farbe (beispielsweise "Orange") darstellt.</span><span class="sxs-lookup"><span data-stu-id="4b9b1-105">HTML color code representing the color of the fill, of the form \#RRGGBB (e.g. "FFA500") or as a named HTML color (e.g. "orange").</span></span>

      <span data-ttu-id="4b9b1-106">\[[API-Gruppe: ExcelApi 1,6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="4b9b1-106">\[ [API set: ExcelApi 1.6](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: color
    fullName: color
    langs:
      - typeScript
    type: property
    syntax:
      content: 'color: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.ConditionalRangeFill#context:member'
    summary: '<span data-ttu-id="4b9b1-107">Der Anforderungskontext, der mit dem Objekt verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="4b9b1-107">The request context associated with the object.</span></span> <span data-ttu-id="4b9b1-108">Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="4b9b1-108">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.ConditionalRangeFill#load:member(1)'
    summary: <span data-ttu-id="4b9b1-109">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="4b9b1-109">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4b9b1-110">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="4b9b1-110">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.ConditionalRangeFillLoadOptions): Excel.ConditionalRangeFill;'
      return:
        type:
          - 'excel!Excel.ConditionalRangeFill:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="4b9b1-111">Enthält Optionen für die Eigenschaften des zu ladenden Objekts.</span><span class="sxs-lookup"><span data-stu-id="4b9b1-111">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.ConditionalRangeFillLoadOptions:interface'
  - uid: 'excel!Excel.ConditionalRangeFill#load:member(2)'
    summary: <span data-ttu-id="4b9b1-112">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="4b9b1-112">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4b9b1-113">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="4b9b1-113">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.ConditionalRangeFill;'
      return:
        type:
          - 'excel!Excel.ConditionalRangeFill:class'
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="4b9b1-114">Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="4b9b1-114">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.ConditionalRangeFill#load:member(3)'
    summary: <span data-ttu-id="4b9b1-115">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="4b9b1-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="4b9b1-116">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="4b9b1-116">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.ConditionalRangeFill;
      return:
        type:
          - 'excel!Excel.ConditionalRangeFill:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="4b9b1-117">`propertyNamesAndPaths.select`ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften `propertyNamesAndPaths.expand` angibt, und ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="4b9b1-117">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.ConditionalRangeFill#set:member(1)'
    summary: '<span data-ttu-id="4b9b1-118">Legt mehrere Eigenschaften eines Objekts gleichzeitig fest.</span><span class="sxs-lookup"><span data-stu-id="4b9b1-118">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="4b9b1-119">Sie können entweder ein einfaches Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs übergeben.</span><span class="sxs-lookup"><span data-stu-id="4b9b1-119">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="4b9b1-120">Diese Methode hat die folgende zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="4b9b1-120">This method has the following additional signature:</span></span>

      `set(properties: Excel.ConditionalRangeFill): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.ConditionalRangeFillUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="4b9b1-121">Ein JavaScript-Objekt mit Eigenschaften, die isomorphically für die Eigenschaften des Objekts strukturiert sind, für das die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="4b9b1-121">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - 'excel!Excel.Interfaces.ConditionalRangeFillUpdateData:interface'
        - id: options
          description: '<span data-ttu-id="4b9b1-122">Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.</span><span class="sxs-lookup"><span data-stu-id="4b9b1-122">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.ConditionalRangeFill#set:member(2)'
    summary: '<span data-ttu-id="4b9b1-123">Legt mehrere Eigenschaften für das Objekt gleichzeitig basierend auf einem vorhandenen geladenen Objekt fest.</span><span class="sxs-lookup"><span data-stu-id="4b9b1-123">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.ConditionalRangeFill): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.ConditionalRangeFill:class'
  - uid: 'excel!Excel.ConditionalRangeFill#toJSON:member(1)'
    summary: '<span data-ttu-id="4b9b1-124">Überschreibt die `toJSON()` JavaScript-Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird.`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="4b9b1-124">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="4b9b1-125">.</span><span class="sxs-lookup"><span data-stu-id="4b9b1-125"></span></span> <span data-ttu-id="4b9b1-126">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="4b9b1-126"></span></span><!-- --><span data-ttu-id="4b9b1-127">wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche Excel. ConditionalRangeFill-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`Excel.Interfaces.ConditionalRangeFillData`</span><span class="sxs-lookup"><span data-stu-id="4b9b1-127">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.ConditionalRangeFill object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.ConditionalRangeFillData`</span></span><!-- --><span data-ttu-id="4b9b1-128">), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="4b9b1-128">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.ConditionalRangeFillData;'
      return:
        type:
          - 'excel!Excel.Interfaces.ConditionalRangeFillData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.ConditionalRangeFill:class'
    name: Excel.ConditionalRangeFill
  - uid: 'excel!Excel.Interfaces.ConditionalRangeFillLoadOptions:interface'
    name: Excel.Interfaces.ConditionalRangeFillLoadOptions
  - uid: 'excel!Excel.Interfaces.ConditionalRangeFillUpdateData:interface'
    name: Interfaces.ConditionalRangeFillUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.ConditionalRangeFillData:interface'
    name: Excel.Interfaces.ConditionalRangeFillData