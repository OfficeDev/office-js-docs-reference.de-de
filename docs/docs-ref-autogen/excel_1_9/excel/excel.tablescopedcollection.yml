### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.TableScopedCollection:class'
    summary: |-
      <span data-ttu-id="c6c42-101">Stellt eine bereichsbezogene Auflistung von Tabellen dar.</span><span class="sxs-lookup"><span data-stu-id="c6c42-101">Represents a scoped collection of tables.</span></span> <span data-ttu-id="c6c42-102">Für jede Tabelle wird ihre obere linke Ecke als Ankerposition betrachtet, und die Tabellen werden von oben nach unten und dann von links nach rechts sortiert.</span><span class="sxs-lookup"><span data-stu-id="c6c42-102">For each table its top-left corner is considered its anchor location and the tables are sorted top to bottom and then left to right.</span></span>

      <span data-ttu-id="c6c42-103">\[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c6c42-103">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.TableScopedCollection
    fullName: Excel.TableScopedCollection
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.TableScopedCollection#context:member'
      - 'excel!Excel.TableScopedCollection#getCount:member(1)'
      - 'excel!Excel.TableScopedCollection#getFirst:member(1)'
      - 'excel!Excel.TableScopedCollection#getItem:member(1)'
      - 'excel!Excel.TableScopedCollection#items:member'
      - 'excel!Excel.TableScopedCollection#load:member(1)'
      - 'excel!Excel.TableScopedCollection#load:member(2)'
      - 'excel!Excel.TableScopedCollection#load:member(3)'
      - 'excel!Excel.TableScopedCollection#toJSON:member(1)'
  - uid: 'excel!Excel.TableScopedCollection#context:member'
    summary: '<span data-ttu-id="c6c42-104">Der Anforderungskontext, der mit dem Objekt verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="c6c42-104">The request context associated with the object.</span></span> <span data-ttu-id="c6c42-105">Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="c6c42-105">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.TableScopedCollection#getCount:member(1)'
    summary: |-
      <span data-ttu-id="c6c42-106">Ruft die Anzahl von Tabellen in der Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="c6c42-106">Gets the number of tables in the collection.</span></span>

      <span data-ttu-id="c6c42-107">\[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c6c42-107">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getCount()
    fullName: getCount()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getCount(): OfficeExtension.ClientResult<number>;'
      return:
        type:
          - 'excel!Excel.TableScopedCollection#getCount~0:complex'
        description: ''
  - uid: 'excel!Excel.TableScopedCollection#getFirst:member(1)'
    summary: |-
      <span data-ttu-id="c6c42-108">Ruft die erste Tabelle in der Sammlung ab.</span><span class="sxs-lookup"><span data-stu-id="c6c42-108">Gets the first table in the collection.</span></span> <span data-ttu-id="c6c42-109">Die Tabellen in der Sammlung sind von oben nach unten und von links nach rechts sortiert, so dass die oberste linke Tabelle die erste Tabelle der Sammlung bildet.</span><span class="sxs-lookup"><span data-stu-id="c6c42-109">The tables in the collection are sorted top to bottom and left to right, such that top left table is the first table in the collection.</span></span>

      <span data-ttu-id="c6c42-110">\[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c6c42-110">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getFirst()
    fullName: getFirst()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getFirst(): Excel.Table;'
      return:
        type:
          - 'excel!Excel.Table:class'
        description: ''
  - uid: 'excel!Excel.TableScopedCollection#getItem:member(1)'
    summary: |-
      <span data-ttu-id="c6c42-111">Ruft eine Tabelle anhand des Namens oder der ID ab.</span><span class="sxs-lookup"><span data-stu-id="c6c42-111">Gets a table by Name or ID.</span></span>

      <span data-ttu-id="c6c42-112">\[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="c6c42-112">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getItem(key)
    fullName: getItem(key)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getItem(key: string): Excel.Table;'
      return:
        type:
          - 'excel!Excel.Table:class'
        description: ''
      parameters:
        - id: key
          description: <span data-ttu-id="c6c42-113">Name oder ID der abzurufenden Tabelle.</span><span class="sxs-lookup"><span data-stu-id="c6c42-113">Name or ID of the table to be retrieved.</span></span>
          type:
            - string
  - uid: 'excel!Excel.TableScopedCollection#items:member'
    summary: <span data-ttu-id="c6c42-114">Ruft die geladenen untergeordneten Elemente in dieser Sammlung ab.</span><span class="sxs-lookup"><span data-stu-id="c6c42-114">Gets the loaded child items in this collection.</span></span>
    name: items
    fullName: items
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly items: Excel.Table[];'
      return:
        type:
          - 'excel!Excel.TableScopedCollection#items~0:complex'
  - uid: 'excel!Excel.TableScopedCollection#load:member(1)'
    summary: <span data-ttu-id="c6c42-115">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="c6c42-115">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c6c42-116">Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.</span><span class="sxs-lookup"><span data-stu-id="c6c42-116">You must call "context.sync()" before reading the properties.</span></span>
    remarks: |-
      <span data-ttu-id="c6c42-117">Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:</span><span class="sxs-lookup"><span data-stu-id="c6c42-117">In addition to this signature, this method has the following signatures:</span></span>

      <span data-ttu-id="c6c42-118">`load(option?: string | string[]): Excel.TableScopedCollection`-Wobei Option eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="c6c42-118">`load(option?: string | string[]): Excel.TableScopedCollection` - Where option is a comma-delimited string or an array of strings that specify the properties to load.</span></span>

      <span data-ttu-id="c6c42-119">`load(option?: { select?: string; expand?: string; }): Excel.TableScopedCollection`-Bei Option. Select handelt es sich um eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="c6c42-119">`load(option?: { select?: string; expand?: string; }): Excel.TableScopedCollection` - Where option.select is a comma-delimited string that specifies the properties to load, and options.expand is a comma-delimited string that specifies the navigation properties to load.</span></span>

      <span data-ttu-id="c6c42-120">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableScopedCollection`Nur verfügbar für Sammlungstypen.</span><span class="sxs-lookup"><span data-stu-id="c6c42-120">`load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.TableScopedCollection` - Only available on collection types.</span></span> <span data-ttu-id="c6c42-121">Sie ähnelt der vorherigen Signatur.</span><span class="sxs-lookup"><span data-stu-id="c6c42-121">It is similar to the preceding signature.</span></span> <span data-ttu-id="c6c42-122">Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis einbezogen werden können.</span><span class="sxs-lookup"><span data-stu-id="c6c42-122">Option.top specifies the maximum number of collection items that can be included in the result.</span></span> <span data-ttu-id="c6c42-123">Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="c6c42-123">Option.skip specifies the number of items that are to be skipped and not included in the result.</span></span> <span data-ttu-id="c6c42-124">Wenn Option. Top angegeben ist, wird das Resultset gestartet, nachdem die angegebene Anzahl von Elementen übersprungen wurde.</span><span class="sxs-lookup"><span data-stu-id="c6c42-124">If option.top is specified, the result set will start after skipping the specified number of items.</span></span>
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.TableScopedCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions): Excel.TableScopedCollection;'
      return:
        type:
          - 'excel!Excel.TableScopedCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!Excel.TableScopedCollection#load~0:complex'
  - uid: 'excel!Excel.TableScopedCollection#load:member(2)'
    summary: <span data-ttu-id="c6c42-125">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="c6c42-125">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="c6c42-126">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="c6c42-126">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableScopedCollection;'
      return:
        type:
          - 'excel!Excel.TableScopedCollection:class'
        description: ''
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="c6c42-127">Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="c6c42-127">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.TableScopedCollection#load:member(3)'
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: OfficeExtension.LoadOption): Excel.TableScopedCollection;'
      return:
        type:
          - 'excel!Excel.TableScopedCollection:class'
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - 'excel!OfficeExtension.LoadOption:interface'
  - uid: 'excel!Excel.TableScopedCollection#toJSON:member(1)'
    summary: '<span data-ttu-id="c6c42-128">Überschreibt die `toJSON()` JavaScript-Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird.`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="c6c42-128">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="c6c42-129">.</span><span class="sxs-lookup"><span data-stu-id="c6c42-129"></span></span> <span data-ttu-id="c6c42-130">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="c6c42-130"></span></span><!-- --><span data-ttu-id="c6c42-131">wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche `Excel.TableScopedCollection` Objekt ein API-Objekt ist, `toJSON` gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`Excel.Interfaces.TableScopedCollectionData`</span><span class="sxs-lookup"><span data-stu-id="c6c42-131">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original `Excel.TableScopedCollection` object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableScopedCollectionData`</span></span><!-- --><span data-ttu-id="c6c42-132">), die ein "Items"-Array mit flachen Kopien aller geladenen Eigenschaften aus den Elementen der Auflistung enthält.</span><span class="sxs-lookup"><span data-stu-id="c6c42-132">) that contains an "items" array with shallow copies of any loaded properties from the collection''s items.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableScopedCollectionData;'
      return:
        type:
          - 'excel!Excel.Interfaces.TableScopedCollectionData:interface'
        description: ''
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.TableScopedCollection#getCount~0:complex'
    name: OfficeExtension.ClientResult<number>
    fullName: OfficeExtension.ClientResult<number>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.ClientResult:class'
        name: OfficeExtension.ClientResult
        fullName: OfficeExtension.ClientResult
      - name: <number>
        fullName: <number>
  - uid: 'excel!Excel.Table:class'
    name: Excel.Table
  - uid: 'excel!Excel.TableScopedCollection#items~0:complex'
    name: 'Excel.Table[]'
    fullName: 'Excel.Table[]'
    spec.typeScript:
      - uid: 'excel!Excel.Table:class'
        name: Excel.Table
        fullName: Excel.Table
      - name: '[]'
        fullName: '[]'
  - uid: 'excel!Excel.TableScopedCollection:class'
    name: Excel.TableScopedCollection
  - uid: 'excel!Excel.TableScopedCollection#load~0:complex'
    name: Excel.Interfaces.TableScopedCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    fullName: Excel.Interfaces.TableScopedCollectionLoadOptions & Excel.Interfaces.CollectionLoadOptions
    spec.typeScript:
      - uid: 'excel!Excel.Interfaces.TableScopedCollectionLoadOptions:interface'
        name: Excel.Interfaces.TableScopedCollectionLoadOptions
        fullName: Excel.Interfaces.TableScopedCollectionLoadOptions
      - name: ' & '
        fullName: ' & '
      - uid: 'excel!Excel.Interfaces.CollectionLoadOptions:interface'
        name: Excel.Interfaces.CollectionLoadOptions
        fullName: Excel.Interfaces.CollectionLoadOptions
  - uid: 'excel!OfficeExtension.LoadOption:interface'
    name: OfficeExtension.LoadOption
  - uid: 'excel!Excel.Interfaces.TableScopedCollectionData:interface'
    name: Excel.Interfaces.TableScopedCollectionData