### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.Table:class'
    summary: |-
      <span data-ttu-id="11d11-101">Stellt eine Excel-Tabelle dar.</span><span class="sxs-lookup"><span data-stu-id="11d11-101">Represents an Excel table.</span></span> <span data-ttu-id="11d11-102">Weitere Informationen zum Tabellenobjekt Modell finden Sie [unter Arbeiten mit Tabellen mithilfe der Excel-JavaScript-API](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables) .</span><span class="sxs-lookup"><span data-stu-id="11d11-102">To learn more about the table object model, read [Work with tables using the Excel JavaScript API](https://docs.microsoft.com/office/dev/add-ins/excel/excel-add-ins-tables)</span></span><!-- --><span data-ttu-id="11d11-103">.</span><span class="sxs-lookup"><span data-stu-id="11d11-103"></span></span>

      <span data-ttu-id="11d11-104">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11d11-104">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.Table
    fullName: Excel.Table
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.Table#autoFilter:member'
      - 'excel!Excel.Table#clearFilters:member(1)'
      - 'excel!Excel.Table#columns:member'
      - 'excel!Excel.Table#context:member'
      - 'excel!Excel.Table#convertToRange:member(1)'
      - 'excel!Excel.Table#delete:member(1)'
      - 'excel!Excel.Table#getDataBodyRange:member(1)'
      - 'excel!Excel.Table#getHeaderRowRange:member(1)'
      - 'excel!Excel.Table#getRange:member(1)'
      - 'excel!Excel.Table#getTotalRowRange:member(1)'
      - 'excel!Excel.Table#highlightFirstColumn:member'
      - 'excel!Excel.Table#highlightLastColumn:member'
      - 'excel!Excel.Table#id:member'
      - 'excel!Excel.Table#legacyId:member'
      - 'excel!Excel.Table#load:member(1)'
      - 'excel!Excel.Table#load:member(2)'
      - 'excel!Excel.Table#load:member(3)'
      - 'excel!Excel.Table#name:member'
      - 'excel!Excel.Table#onChanged:member'
      - 'excel!Excel.Table#onSelectionChanged:member'
      - 'excel!Excel.Table#reapplyFilters:member(1)'
      - 'excel!Excel.Table#rows:member'
      - 'excel!Excel.Table#set:member(1)'
      - 'excel!Excel.Table#set:member(2)'
      - 'excel!Excel.Table#showBandedColumns:member'
      - 'excel!Excel.Table#showBandedRows:member'
      - 'excel!Excel.Table#showFilterButton:member'
      - 'excel!Excel.Table#showHeaders:member'
      - 'excel!Excel.Table#showTotals:member'
      - 'excel!Excel.Table#sort:member'
      - 'excel!Excel.Table#style:member'
      - 'excel!Excel.Table#toJSON:member(1)'
      - 'excel!Excel.Table#worksheet:member'
  - uid: 'excel!Excel.Table#autoFilter:member'
    summary: |-
      <span data-ttu-id="11d11-105">Stellt das AutoFilter-Objekt der Tabelle dar.</span><span class="sxs-lookup"><span data-stu-id="11d11-105">Represents the AutoFilter object of the table.</span></span> <span data-ttu-id="11d11-106">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="11d11-106">Read-Only.</span></span>

      <span data-ttu-id="11d11-107">\[[API-Gruppe: ExcelApi 1,9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11d11-107">\[ [API set: ExcelApi 1.9](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: autoFilter
    fullName: autoFilter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly autoFilter: Excel.AutoFilter;'
      return:
        type:
          - 'excel!Excel.AutoFilter:class'
  - uid: 'excel!Excel.Table#clearFilters:member(1)'
    summary: |-
      <span data-ttu-id="11d11-108">Löscht alle Filter, die derzeit in der Tabelle verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="11d11-108">Clears all the filters currently applied on the table.</span></span>

      <span data-ttu-id="11d11-109">\[[API-Gruppe: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11d11-109">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: clearFilters()
    fullName: clearFilters()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clearFilters(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.Table#columns:member'
    summary: |-
      <span data-ttu-id="11d11-110">Stellt eine Auflistung aller Spalten in der Tabelle dar.</span><span class="sxs-lookup"><span data-stu-id="11d11-110">Represents a collection of all the columns in the table.</span></span> <span data-ttu-id="11d11-111">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="11d11-111">Read-only.</span></span>

      <span data-ttu-id="11d11-112">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11d11-112">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: columns
    fullName: columns
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly columns: Excel.TableColumnCollection;'
      return:
        type:
          - 'excel!Excel.TableColumnCollection:class'
  - uid: 'excel!Excel.Table#context:member'
    summary: '<span data-ttu-id="11d11-113">Der Anforderungskontext, der mit dem Objekt verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="11d11-113">The request context associated with the object.</span></span> <span data-ttu-id="11d11-114">Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="11d11-114">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.Table#convertToRange:member(1)'
    summary: |-
      <span data-ttu-id="11d11-115">Wandelt die Tabelle in einen normalen Bereich von Zellen um.</span><span class="sxs-lookup"><span data-stu-id="11d11-115">Converts the table into a normal range of cells.</span></span> <span data-ttu-id="11d11-116">Alle Daten werden beibehalten.</span><span class="sxs-lookup"><span data-stu-id="11d11-116">All data is preserved.</span></span>

      <span data-ttu-id="11d11-117">\[[API-Gruppe: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11d11-117">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: convertToRange()
    fullName: convertToRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'convertToRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="11d11-118">Beispiele</span><span class="sxs-lookup"><span data-stu-id="11d11-118">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.convertToRange();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Table#delete:member(1)'
    summary: |-
      <span data-ttu-id="11d11-119">Löscht die Tabelle.</span><span class="sxs-lookup"><span data-stu-id="11d11-119">Deletes the table.</span></span>

      <span data-ttu-id="11d11-120">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11d11-120">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="11d11-121">Beispiele</span><span class="sxs-lookup"><span data-stu-id="11d11-121">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.delete();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Table#getDataBodyRange:member(1)'
    summary: |-
      <span data-ttu-id="11d11-122">Ruft das Bereichsobjekt ab, das mit dem Datenteil der Tabelle verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="11d11-122">Gets the range object associated with the data body of the table.</span></span>

      <span data-ttu-id="11d11-123">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11d11-123">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getDataBodyRange()
    fullName: getDataBodyRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataBodyRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="11d11-124">Beispiele</span><span class="sxs-lookup"><span data-stu-id="11d11-124">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              var tableDataRange = table.getDataBodyRange();
              tableDataRange.load('address')
              return ctx.sync().then(function() {
                      console.log(tableDataRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Table#getHeaderRowRange:member(1)'
    summary: |-
      <span data-ttu-id="11d11-125">Ruft das Bereichsobjekt ab, das mit der Kopfzeile der Tabelle verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="11d11-125">Gets the range object associated with header row of the table.</span></span>

      <span data-ttu-id="11d11-126">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11d11-126">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getHeaderRowRange()
    fullName: getHeaderRowRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHeaderRowRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="11d11-127">Beispiele</span><span class="sxs-lookup"><span data-stu-id="11d11-127">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              var tableHeaderRange = table.getHeaderRowRange();
              tableHeaderRange.load('address');
              return ctx.sync().then(function() {
                  console.log(tableHeaderRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Table#getRange:member(1)'
    summary: |-
      <span data-ttu-id="11d11-128">Ruft das Bereichsobjekt ab, das mit der gesamten Tabelle verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="11d11-128">Gets the range object associated with the entire table.</span></span>

      <span data-ttu-id="11d11-129">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11d11-129">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="11d11-130">Beispiele</span><span class="sxs-lookup"><span data-stu-id="11d11-130">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              var tableRange = table.getRange();
              tableRange.load('address');    
              return ctx.sync().then(function() {
                      console.log(tableRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Table#getTotalRowRange:member(1)'
    summary: |-
      <span data-ttu-id="11d11-131">Ruft das Bereichsobjekt ab, das mit der Ergebniszeile der Tabelle verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="11d11-131">Gets the range object associated with totals row of the table.</span></span>

      <span data-ttu-id="11d11-132">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11d11-132">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getTotalRowRange()
    fullName: getTotalRowRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTotalRowRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="11d11-133">Beispiele</span><span class="sxs-lookup"><span data-stu-id="11d11-133">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              var tableTotalsRange = table.getTotalRowRange();
              tableTotalsRange.load('address');    
              return ctx.sync().then(function() {
                      console.log(tableTotalsRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.Table#highlightFirstColumn:member'
    summary: |-
      <span data-ttu-id="11d11-134">Gibt an, ob die erste Spalte spezielle Formatierung enthält.</span><span class="sxs-lookup"><span data-stu-id="11d11-134">Indicates whether the first column contains special formatting.</span></span>

      <span data-ttu-id="11d11-135">\[[API-Gruppe: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11d11-135">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: highlightFirstColumn
    fullName: highlightFirstColumn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'highlightFirstColumn: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Table#highlightLastColumn:member'
    summary: |-
      <span data-ttu-id="11d11-136">Gibt an, ob die letzte Spalte spezielle Formatierung enthält.</span><span class="sxs-lookup"><span data-stu-id="11d11-136">Indicates whether the last column contains special formatting.</span></span>

      <span data-ttu-id="11d11-137">\[[API-Gruppe: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11d11-137">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: highlightLastColumn
    fullName: highlightLastColumn
    langs:
      - typeScript
    type: property
    syntax:
      content: 'highlightLastColumn: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Table#id:member'
    summary: |-
      <span data-ttu-id="11d11-p106">Gibt einen Wert zurück, der das Arbeitsblatt in einer bestimmten Arbeitsmappe eindeutig identifiziert. Der Wert des Bezeichners bleibt unverändert, auch wenn die Tabelle umbenannt wird. Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="11d11-p106">Returns a value that uniquely identifies the table in a given workbook. The value of the identifier remains the same even when the table is renamed. Read-only.</span></span>

      <span data-ttu-id="11d11-141">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11d11-141">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Table#legacyId:member'
    summary: |-
      <span data-ttu-id="11d11-142">Gibt eine numerische ID zurück.</span><span class="sxs-lookup"><span data-stu-id="11d11-142">Returns a numeric id.</span></span>

      <span data-ttu-id="11d11-143">\[[API-Gruppe: ExcelApi 1,8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11d11-143">\[ [API set: ExcelApi 1.8](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: legacyId
    fullName: legacyId
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly legacyId: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Table#load:member(1)'
    summary: <span data-ttu-id="11d11-144">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="11d11-144">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="11d11-145">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="11d11-145">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.TableLoadOptions): Excel.Table;'
      return:
        type:
          - 'excel!Excel.Table:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="11d11-146">Enthält Optionen für die Eigenschaften des zu ladenden Objekts.</span><span class="sxs-lookup"><span data-stu-id="11d11-146">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.TableLoadOptions:interface'
  - uid: 'excel!Excel.Table#load:member(2)'
    summary: <span data-ttu-id="11d11-147">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="11d11-147">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="11d11-148">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="11d11-148">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Table;'
      return:
        type:
          - 'excel!Excel.Table:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="11d11-149">Beispiele</span><span class="sxs-lookup"><span data-stu-id="11d11-149">Examples</span></span>

          ```javascript
          // Get a table by name. 
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.load('index')
              return ctx.sync().then(function() {
                      console.log(table.index);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Get a table by index.
          Excel.run(function (ctx) { 
              var index = 0;
              var table = ctx.workbook.tables.getItemAt(0);
              table.load('id')
              return ctx.sync().then(function() {
                      console.log(table.id);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          // Set table style. 
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var table = ctx.workbook.tables.getItem(tableName);
              table.name = 'Table1-Renamed';
              table.showTotals = false;
              table.style = 'TableStyleMedium2';
              table.load('tableStyle');
              return ctx.sync().then(function() {
                      console.log(table.style);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="11d11-150">Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="11d11-150">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.Table#load:member(3)'
    summary: <span data-ttu-id="11d11-151">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="11d11-151">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="11d11-152">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="11d11-152">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.Table;
      return:
        type:
          - 'excel!Excel.Table:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="11d11-153">`propertyNamesAndPaths.select`ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften `propertyNamesAndPaths.expand` angibt, und ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="11d11-153">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.Table#name:member'
    summary: |-
      <span data-ttu-id="11d11-154">Der Name der Tabelle.</span><span class="sxs-lookup"><span data-stu-id="11d11-154">Name of the table.</span></span>

      <span data-ttu-id="11d11-155">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11d11-155">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Table#onChanged:member'
    summary: |-
      <span data-ttu-id="11d11-156">Tritt auf, wenn sich Daten in Zellen in einer bestimmten Tabelle ändern.</span><span class="sxs-lookup"><span data-stu-id="11d11-156">Occurs when data in cells changes on a specific table.</span></span>

      <span data-ttu-id="11d11-157">\[[API-Gruppe: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11d11-157">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onChanged
    fullName: onChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onChanged: OfficeExtension.EventHandlers<Excel.TableChangedEventArgs>;'
      return:
        type:
          - 'excel!Excel.Table#onChanged~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="11d11-158">Beispiele</span><span class="sxs-lookup"><span data-stu-id="11d11-158">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let table = context.workbook.tables.getItemAt(0);
              table.onChanged.add(onChange);

              await context.sync();
              console.log("A handler has been registered for the onChanged event");
          });
          ```
  - uid: 'excel!Excel.Table#onSelectionChanged:member'
    summary: |-
      <span data-ttu-id="11d11-159">Tritt auf, wenn sich die Auswahl für eine bestimmte Tabelle ändert.</span><span class="sxs-lookup"><span data-stu-id="11d11-159">Occurs when the selection changes on a specific table.</span></span>

      <span data-ttu-id="11d11-160">\[[API-Gruppe: ExcelApi 1,7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11d11-160">\[ [API set: ExcelApi 1.7](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: onSelectionChanged
    fullName: onSelectionChanged
    langs:
      - typeScript
    type: event
    syntax:
      content: 'readonly onSelectionChanged: OfficeExtension.EventHandlers<Excel.TableSelectionChangedEventArgs>;'
      return:
        type:
          - 'excel!Excel.Table#onSelectionChanged~0:complex'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="11d11-161">Beispiele</span><span class="sxs-lookup"><span data-stu-id="11d11-161">Examples</span></span>

          ```typescript
          await Excel.run(async (context) => {
              let table = context.workbook.tables.getItemAt(0);
              table.onSelectionChanged.add(onSelectionChange);

              await context.sync();
              console.log("A handler has been registered for table onSelectionChanged event");
          });
          ```
  - uid: 'excel!Excel.Table#reapplyFilters:member(1)'
    summary: |-
      <span data-ttu-id="11d11-162">Wendet alle Filter erneut an, die derzeit in der Tabelle vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="11d11-162">Reapplies all the filters currently on the table.</span></span>

      <span data-ttu-id="11d11-163">\[[API-Gruppe: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11d11-163">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: reapplyFilters()
    fullName: reapplyFilters()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'reapplyFilters(): void;'
      return:
        type:
          - void
        description: ''
  - uid: 'excel!Excel.Table#rows:member'
    summary: |-
      <span data-ttu-id="11d11-164">Stellt eine Auflistung aller Zeilen in der Tabelle dar.</span><span class="sxs-lookup"><span data-stu-id="11d11-164">Represents a collection of all the rows in the table.</span></span> <span data-ttu-id="11d11-165">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="11d11-165">Read-only.</span></span>

      <span data-ttu-id="11d11-166">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11d11-166">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: rows
    fullName: rows
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly rows: Excel.TableRowCollection;'
      return:
        type:
          - 'excel!Excel.TableRowCollection:class'
  - uid: 'excel!Excel.Table#set:member(1)'
    summary: '<span data-ttu-id="11d11-167">Legt mehrere Eigenschaften eines Objekts gleichzeitig fest.</span><span class="sxs-lookup"><span data-stu-id="11d11-167">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="11d11-168">Sie können entweder ein einfaches Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs übergeben.</span><span class="sxs-lookup"><span data-stu-id="11d11-168">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="11d11-169">Diese Methode hat die folgende zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="11d11-169">This method has the following additional signature:</span></span>

      `set(properties: Excel.Table): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.TableUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="11d11-170">Ein JavaScript-Objekt mit Eigenschaften, die isomorphically für die Eigenschaften des Objekts strukturiert sind, für das die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="11d11-170">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - 'excel!Excel.Interfaces.TableUpdateData:interface'
        - id: options
          description: '<span data-ttu-id="11d11-171">Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.</span><span class="sxs-lookup"><span data-stu-id="11d11-171">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.Table#set:member(2)'
    summary: '<span data-ttu-id="11d11-172">Legt mehrere Eigenschaften für das Objekt gleichzeitig basierend auf einem vorhandenen geladenen Objekt fest.</span><span class="sxs-lookup"><span data-stu-id="11d11-172">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.Table): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.Table:class'
  - uid: 'excel!Excel.Table#showBandedColumns:member'
    summary: |-
      <span data-ttu-id="11d11-173">Gibt an, ob die Spalten gebänderte Formatierung aufweisen, wobei ungerade Spalten anders hervorgehoben werden als gerade, um die Tabelle leichter lesbar zu machen.</span><span class="sxs-lookup"><span data-stu-id="11d11-173">Indicates whether the columns show banded formatting in which odd columns are highlighted differently from even ones to make reading the table easier.</span></span>

      <span data-ttu-id="11d11-174">\[[API-Gruppe: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11d11-174">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showBandedColumns
    fullName: showBandedColumns
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showBandedColumns: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Table#showBandedRows:member'
    summary: |-
      <span data-ttu-id="11d11-175">Gibt an, ob die Zeilen gebänderte Formatierung aufweisen, wobei ungerade Zeilen anders hervorgehoben werden als gerade, um die Tabelle leichter lesbar zu machen.</span><span class="sxs-lookup"><span data-stu-id="11d11-175">Indicates whether the rows show banded formatting in which odd rows are highlighted differently from even ones to make reading the table easier.</span></span>

      <span data-ttu-id="11d11-176">\[[API-Gruppe: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11d11-176">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showBandedRows
    fullName: showBandedRows
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showBandedRows: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Table#showFilterButton:member'
    summary: |-
      <span data-ttu-id="11d11-p112">Gibt an, ob die Filterschaltflächen am oberen Rand jedes Spaltenheaders sichtbar sind. Diese Einstellung ist nur zulässig, wenn die Tabelle eine Kopfzeile enthält.</span><span class="sxs-lookup"><span data-stu-id="11d11-p112">Indicates whether the filter buttons are visible at the top of each column header. Setting this is only allowed if the table contains a header row.</span></span>

      <span data-ttu-id="11d11-179">\[[API-Gruppe: ExcelApi 1,3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11d11-179">\[ [API set: ExcelApi 1.3](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showFilterButton
    fullName: showFilterButton
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showFilterButton: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Table#showHeaders:member'
    summary: |-
      <span data-ttu-id="11d11-180">Gibt an, ob die Kopfzeile sichtbar oder nicht sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="11d11-180">Indicates whether the header row is visible or not.</span></span> <span data-ttu-id="11d11-181">Dieser Wert kann festgelegt werden, um die Kopfzeile anzuzeigen, oder sie zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="11d11-181">This value can be set to show or remove the header row.</span></span>

      <span data-ttu-id="11d11-182">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11d11-182">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showHeaders
    fullName: showHeaders
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showHeaders: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Table#showTotals:member'
    summary: |-
      <span data-ttu-id="11d11-183">Gibt an, ob die Ergebniszeile sichtbar ist oder nicht.</span><span class="sxs-lookup"><span data-stu-id="11d11-183">Indicates whether the total row is visible or not.</span></span> <span data-ttu-id="11d11-184">Dieser Wert kann so festgelegt werden, dass die Ergebniszeile angezeigt oder ausgeblendet wird.</span><span class="sxs-lookup"><span data-stu-id="11d11-184">This value can be set to show or remove the total row.</span></span>

      <span data-ttu-id="11d11-185">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11d11-185">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: showTotals
    fullName: showTotals
    langs:
      - typeScript
    type: property
    syntax:
      content: 'showTotals: boolean;'
      return:
        type:
          - boolean
  - uid: 'excel!Excel.Table#sort:member'
    summary: |-
      <span data-ttu-id="11d11-186">Stellt die Sortierung für die Tabelle dar.</span><span class="sxs-lookup"><span data-stu-id="11d11-186">Represents the sorting for the table.</span></span> <span data-ttu-id="11d11-187">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="11d11-187">Read-only.</span></span>

      <span data-ttu-id="11d11-188">\[[API-Gruppe: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11d11-188">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: sort
    fullName: sort
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly sort: Excel.TableSort;'
      return:
        type:
          - 'excel!Excel.TableSort:class'
  - uid: 'excel!Excel.Table#style:member'
    summary: |-
      <span data-ttu-id="11d11-189">Konstanter Wert, der das Tabellenformat darstellt.</span><span class="sxs-lookup"><span data-stu-id="11d11-189">Constant value that represents the Table style.</span></span> <span data-ttu-id="11d11-190">Mögliche Werte sind: "TableStyleLight1" bis "TableStyleLight21", "TableStyleMedium1" bis "TableStyleMedium28", "TableStyleStyleDark1" bis "TableStyleStyleDark11".</span><span class="sxs-lookup"><span data-stu-id="11d11-190">Possible values are: "TableStyleLight1" through "TableStyleLight21", "TableStyleMedium1" through "TableStyleMedium28", "TableStyleStyleDark1" through "TableStyleStyleDark11".</span></span> <span data-ttu-id="11d11-191">Es kann ebenfalls eine in der Arbeitsmappe vorhandene benutzerdefinierte Formatierung angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="11d11-191">A custom user-defined style present in the workbook can also be specified.</span></span>

      <span data-ttu-id="11d11-192">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11d11-192">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: style
    fullName: style
    langs:
      - typeScript
    type: property
    syntax:
      content: 'style: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.Table#toJSON:member(1)'
    summary: '<span data-ttu-id="11d11-193">Überschreibt die `toJSON()` JavaScript-Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird.`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="11d11-193">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="11d11-194">.</span><span class="sxs-lookup"><span data-stu-id="11d11-194"></span></span> <span data-ttu-id="11d11-195">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="11d11-195"></span></span><!-- --><span data-ttu-id="11d11-196">wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche Excel. Table-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`Excel.Interfaces.TableData`</span><span class="sxs-lookup"><span data-stu-id="11d11-196">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.Table object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableData`</span></span><!-- --><span data-ttu-id="11d11-197">), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="11d11-197">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableData;'
      return:
        type:
          - 'excel!Excel.Interfaces.TableData:interface'
        description: ''
  - uid: 'excel!Excel.Table#worksheet:member'
    summary: |-
      <span data-ttu-id="11d11-198">Das Arbeitsblatt, das die aktuelle Tabelle enthält.</span><span class="sxs-lookup"><span data-stu-id="11d11-198">The worksheet containing the current table.</span></span> <span data-ttu-id="11d11-199">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="11d11-199">Read-only.</span></span>

      <span data-ttu-id="11d11-200">\[[API-Gruppe: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="11d11-200">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: worksheet
    fullName: worksheet
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly worksheet: Excel.Worksheet;'
      return:
        type:
          - 'excel!Excel.Worksheet:class'
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.AutoFilter:class'
    name: Excel.AutoFilter
  - uid: 'excel!Excel.TableColumnCollection:class'
    name: Excel.TableColumnCollection
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Range:class'
    name: Excel.Range
  - uid: 'excel!Excel.Table:class'
    name: Excel.Table
  - uid: 'excel!Excel.Interfaces.TableLoadOptions:interface'
    name: Excel.Interfaces.TableLoadOptions
  - uid: 'excel!Excel.Table#onChanged~0:complex'
    name: OfficeExtension.EventHandlers<Excel.TableChangedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.TableChangedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.TableChangedEventArgs:interface'
        name: Excel.TableChangedEventArgs
        fullName: Excel.TableChangedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.Table#onSelectionChanged~0:complex'
    name: OfficeExtension.EventHandlers<Excel.TableSelectionChangedEventArgs>
    fullName: OfficeExtension.EventHandlers<Excel.TableSelectionChangedEventArgs>
    spec.typeScript:
      - uid: 'excel!OfficeExtension.EventHandlers:class'
        name: OfficeExtension.EventHandlers
        fullName: OfficeExtension.EventHandlers
      - name: <
        fullName: <
      - uid: 'excel!Excel.TableSelectionChangedEventArgs:interface'
        name: Excel.TableSelectionChangedEventArgs
        fullName: Excel.TableSelectionChangedEventArgs
      - name: '>'
        fullName: '>'
  - uid: 'excel!Excel.TableRowCollection:class'
    name: Excel.TableRowCollection
  - uid: 'excel!Excel.Interfaces.TableUpdateData:interface'
    name: Interfaces.TableUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.TableSort:class'
    name: Excel.TableSort
  - uid: 'excel!Excel.Interfaces.TableData:interface'
    name: Excel.Interfaces.TableData
  - uid: 'excel!Excel.Worksheet:class'
    name: Excel.Worksheet