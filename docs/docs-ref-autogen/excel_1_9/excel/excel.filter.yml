### YamlMime:UniversalReference
items:
  - uid: excel.Excel.Filter
    summary: |-
      Verwaltet das Filtern der Spalte einer Tabelle.

      \[[API-Gruppe: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: Excel.Filter
    fullName: Excel.Filter
    langs:
      - typeScript
    type: class
    extends:
      - 'OfficeExtension.ClientObject '
    package: excel
    children:
      - excel.Excel.Filter.apply
      - excel.Excel.Filter.applyBottomItemsFilter
      - excel.Excel.Filter.applyBottomPercentFilter
      - excel.Excel.Filter.applyCellColorFilter
      - excel.Excel.Filter.applyCustomFilter
      - excel.Excel.Filter.applyCustomFilter_1
      - excel.Excel.Filter.applyDynamicFilter
      - excel.Excel.Filter.applyDynamicFilter_1
      - excel.Excel.Filter.applyFontColorFilter
      - excel.Excel.Filter.applyIconFilter
      - excel.Excel.Filter.applyTopItemsFilter
      - excel.Excel.Filter.applyTopPercentFilter
      - excel.Excel.Filter.applyValuesFilter
      - excel.Excel.Filter.clear
      - excel.Excel.Filter.context
      - excel.Excel.Filter.criteria
      - excel.Excel.Filter.load
      - excel.Excel.Filter.load_1
      - excel.Excel.Filter.load_2
      - excel.Excel.Filter.toJSON
  - uid: excel.Excel.Filter.apply
    summary: |-
      Wendet die angegebenen Filterkriterien in der angegebenen Spalte an.

      \[[API-Gruppe: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: apply(criteria)
    fullName: apply(criteria)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'apply(criteria: Excel.FilterCriteria): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: criteria
          description: 'Die Kriterien, die angewendet werden sollen.'
          type:
            - excel.Excel.FilterCriteria
  - uid: excel.Excel.Filter.applyBottomItemsFilter
    summary: |-
      Wendet den Filter "Bottom Item" auf die Spalte für die angegebene Anzahl von Elementen an.

      \[[API-Gruppe: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: applyBottomItemsFilter(count)
    fullName: applyBottomItemsFilter(count)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyBottomItemsFilter(count: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: count
          description: 'Die Anzahl der Elemente vom unteren Rand, die angezeigt werden sollen.'
          type:
            - number
  - uid: excel.Excel.Filter.applyBottomPercentFilter
    summary: |-
      Wendet den Filter "Bottom Percent" auf die Spalte für den angegebenen Prozentsatz von Elementen an.

      \[[API-Gruppe: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: applyBottomPercentFilter(percent)
    fullName: applyBottomPercentFilter(percent)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyBottomPercentFilter(percent: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: percent
          description: 'Der Prozentsatz von Elementen vom unteren Rand, die angezeigt werden sollen.'
          type:
            - number
  - uid: excel.Excel.Filter.applyCellColorFilter
    summary: |-
      Wendet den Filter "Cell Color" auf die Spalte für die angegebene Farbe an.

      \[[API-Gruppe: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: applyCellColorFilter(color)
    fullName: applyCellColorFilter(color)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyCellColorFilter(color: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: color
          description: 'Die Hintergrundfarbe der Zellen, die angezeigt werden sollen.'
          type:
            - string
  - uid: excel.Excel.Filter.applyCustomFilter
    summary: |-
      Wendet den Filter "Icon" auf die Spalte für die angegebenen Kriterien-Zeichenfolgen an.

      \[[API-Gruppe: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'applyCustomFilter(criteria1, criteria2, oper)'
    fullName: 'applyCustomFilter(criteria1, criteria2, oper)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyCustomFilter(criteria1: string, criteria2?: string, oper?: Excel.FilterOperator): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: criteria1
          description: Die erste Kriterienzeichenfolge.
          type:
            - string
        - id: criteria2
          description: Optional. Die zweite Kriterienzeichenfolge.
          type:
            - string
        - id: oper
          description: 'Optional. Der Operator, der beschreibt, wie die beiden Kriterien miteinander verknüpft sind.'
          type:
            - excel.Excel.FilterOperator
  - uid: excel.Excel.Filter.applyCustomFilter_1
    summary: |-
      Wendet den Filter "Icon" auf die Spalte für die angegebenen Kriterien-Zeichenfolgen an.

      \[[API-Gruppe: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: 'applyCustomFilter(criteria1, criteria2, operString)'
    fullName: 'applyCustomFilter(criteria1, criteria2, operString)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyCustomFilter(criteria1: string, criteria2?: string, operString?: "And" | "Or"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: criteria1
          description: Die erste Kriterienzeichenfolge.
          type:
            - string
        - id: criteria2
          description: Optional. Die zweite Kriterienzeichenfolge.
          type:
            - string
        - id: operString
          description: 'Optional. Der Operator, der beschreibt, wie die beiden Kriterien miteinander verknüpft sind.'
          type:
            - '"And" | "Or"'
  - uid: excel.Excel.Filter.applyDynamicFilter
    summary: |-
      Wendet den Filter "Dynamic" auf die Spalte an.

      \[[API-Gruppe: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: applyDynamicFilter(criteria)
    fullName: applyDynamicFilter(criteria)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyDynamicFilter(criteria: Excel.DynamicFilterCriteria): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: criteria
          description: 'Die dynamischen Kriterien, die angewendet werden sollen.'
          type:
            - excel.Excel.DynamicFilterCriteria
  - uid: excel.Excel.Filter.applyDynamicFilter_1
    summary: |-
      Wendet den Filter "Dynamic" auf die Spalte an.

      \[[API-Gruppe: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: applyDynamicFilter(criteriaString)
    fullName: applyDynamicFilter(criteriaString)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyDynamicFilter(criteriaString: "Unknown" | "AboveAverage" | "AllDatesInPeriodApril" | "AllDatesInPeriodAugust" | "AllDatesInPeriodDecember" | "AllDatesInPeriodFebruray" | "AllDatesInPeriodJanuary" | "AllDatesInPeriodJuly" | "AllDatesInPeriodJune" | "AllDatesInPeriodMarch" | "AllDatesInPeriodMay" | "AllDatesInPeriodNovember" | "AllDatesInPeriodOctober" | "AllDatesInPeriodQuarter1" | "AllDatesInPeriodQuarter2" | "AllDatesInPeriodQuarter3" | "AllDatesInPeriodQuarter4" | "AllDatesInPeriodSeptember" | "BelowAverage" | "LastMonth" | "LastQuarter" | "LastWeek" | "LastYear" | "NextMonth" | "NextQuarter" | "NextWeek" | "NextYear" | "ThisMonth" | "ThisQuarter" | "ThisWeek" | "ThisYear" | "Today" | "Tomorrow" | "YearToDate" | "Yesterday"): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: criteriaString
          description: 'Die dynamischen Kriterien, die angewendet werden sollen.'
          type:
            - '"Unknown" | "AboveAverage" | "AllDatesInPeriodApril" | "AllDatesInPeriodAugust" | "AllDatesInPeriodDecember" | "AllDatesInPeriodFebruray" | "AllDatesInPeriodJanuary" | "AllDatesInPeriodJuly" | "AllDatesInPeriodJune" | "AllDatesInPeriodMarch" | "AllDatesInPeriodMay" | "AllDatesInPeriodNovember" | "AllDatesInPeriodOctober" | "AllDatesInPeriodQuarter1" | "AllDatesInPeriodQuarter2" | "AllDatesInPeriodQuarter3" | "AllDatesInPeriodQuarter4" | "AllDatesInPeriodSeptember" | "BelowAverage" | "LastMonth" | "LastQuarter" | "LastWeek" | "LastYear" | "NextMonth" | "NextQuarter" | "NextWeek" | "NextYear" | "ThisMonth" | "ThisQuarter" | "ThisWeek" | "ThisYear" | "Today" | "Tomorrow" | "YearToDate" | "Yesterday"'
  - uid: excel.Excel.Filter.applyFontColorFilter
    summary: |-
      Wendet den Filter "Font Color" auf die Spalte für die angegebene Farbe an.

      \[[API-Gruppe: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: applyFontColorFilter(color)
    fullName: applyFontColorFilter(color)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyFontColorFilter(color: string): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: color
          description: 'Die Schriftfarbe der Zellen, die angezeigt werden sollen.'
          type:
            - string
  - uid: excel.Excel.Filter.applyIconFilter
    summary: |-
      Wendet den Filter "Icon" auf die Spalte für das angegebene Symbol an.

      \[[API-Gruppe: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: applyIconFilter(icon)
    fullName: applyIconFilter(icon)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyIconFilter(icon: Excel.Icon): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: icon
          description: 'Die Symbole der Zellen, die angezeigt werden sollen.'
          type:
            - excel.Excel.Icon
  - uid: excel.Excel.Filter.applyTopItemsFilter
    summary: |-
      Wendet den Filter „Top Item“ auf die Spalte für die angegebene Anzahl von Elementen an.

      \[[API-Gruppe: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: applyTopItemsFilter(count)
    fullName: applyTopItemsFilter(count)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyTopItemsFilter(count: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: count
          description: 'Die Anzahl der Elemente vom oberen Rand, die angezeigt werden sollen.'
          type:
            - number
  - uid: excel.Excel.Filter.applyTopPercentFilter
    summary: |-
      Wendet den Filter "Top Percent" auf die Spalte für den angegebenen Prozentsatz von Elementen an.

      \[[API-Gruppe: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: applyTopPercentFilter(percent)
    fullName: applyTopPercentFilter(percent)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyTopPercentFilter(percent: number): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: percent
          description: 'Der Prozentsatz von Elementen vom oberen Rand, die angezeigt werden sollen.'
          type:
            - number
  - uid: excel.Excel.Filter.applyValuesFilter
    summary: |-
      Wendet den Filter "Values" auf die Spalte für die angegebenen Werte an.

      \[[API-Gruppe: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: applyValuesFilter(values)
    fullName: applyValuesFilter(values)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'applyValuesFilter(values: Array<string | FilterDatetime>): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: values
          description: Die Liste der anzuzeigenden Werte. Hierbei muss es sich um ein Array von Zeichenfolgen oder ein Array von Excel. FilterDateTime-Objekten handeln.
          type:
            - Array<string | FilterDatetime>
  - uid: excel.Excel.Filter.clear
    summary: |-
      Deaktiviert den Filter für die angegebene Spalte.

      \[[API-Gruppe: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: clear()
    fullName: clear()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'clear(): void;'
      return:
        type:
          - void
        description: ''
  - uid: excel.Excel.Filter.context
    summary: 'Der Anforderungskontext, der mit dem Objekt verknüpft ist. Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - excel.Excel.RequestContext
  - uid: excel.Excel.Filter.criteria
    summary: |-
      Der aktuell angewendete Filter in der angegebenen Spalte. Schreibgeschützt.

      \[[API-Gruppe: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]
    name: criteria
    fullName: criteria
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly criteria: Excel.FilterCriteria;'
      return:
        type:
          - excel.Excel.FilterCriteria
  - uid: excel.Excel.Filter.load
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Vor dem Lesen der Eigenschaften müssen Sie "context.sync()" aufrufen.
    remarks: |-
      Zusätzlich zu dieser Signatur verfügt diese Methode über die folgenden Signaturen:

      `load(option?: string | string[]): Excel.Filter`-Wobei Option eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen ist, die die zu ladenden Eigenschaften angeben.

      `load(option?: { select?: string; expand?: string; }): Excel.Filter`-Bei Option. Select handelt es sich um eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und Options. Expand ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.

      `load(option?: { select?: string; expand?: string; top?: number; skip?: number }): Excel.Filter`Nur verfügbar für Sammlungstypen. Sie ähnelt der vorherigen Signatur. Option. Top gibt die maximale Anzahl von Sammlungselementen an, die in das Ergebnis einbezogen werden können. Option. Skip gibt die Anzahl der Elemente an, die übersprungen werden sollen und nicht im Ergebnis enthalten sind. Wenn Option. Top angegeben ist, wird das Resultset gestartet, nachdem die angegebene Anzahl von Elementen übersprungen wurde.
    name: load(option)
    fullName: load(option)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(option?: Excel.Interfaces.FilterLoadOptions): Excel.Filter;'
      return:
        type:
          - excel.Excel.Filter
        description: ''
      parameters:
        - id: option
          description: ''
          type:
            - excel.Excel.Interfaces.FilterLoadOptions
  - uid: excel.Excel.Filter.load_1
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.Filter;'
      return:
        type:
          - excel.Excel.Filter
        description: ''
      parameters:
        - id: propertyNames
          description: 'Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.'
          type:
            - 'string | string[]'
  - uid: excel.Excel.Filter.load_2
    summary: Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein. Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNamesAndPaths?: { select?: string; expand?: string; }): Excel.Filter;'
      return:
        type:
          - excel.Excel.Filter
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: 'Dabei ist propertyNamesAndPaths. Select eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften angibt, und propertyNamesAndPaths. Expand ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.'
          type:
            - '{ select?: string; expand?: string; }'
  - uid: excel.Excel.Filter.toJSON
    summary: 'Überschreibt die `toJSON()` JavaScript-Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird.`JSON.stringify()`<!-- -->. (`JSON.stringify`<!-- -->wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche Excel. Filter-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`Excel.Interfaces.FilterData`<!-- -->), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.FilterData;'
      return:
        type:
          - excel.Excel.Interfaces.FilterData
        description: ''