### YamlMime:UniversalReference
items:
  - uid: 'excel!Excel.TableColumn:class'
    summary: |-
      <span data-ttu-id="6a3a8-101">Stellt eine Spalte in einer Tabelle dar.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-101">Represents a column in a table.</span></span>

      <span data-ttu-id="6a3a8-102">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6a3a8-102">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: Excel.TableColumn
    fullName: Excel.TableColumn
    langs:
      - typeScript
    type: class
    extends:
      - 'excel!OfficeExtension.ClientObject:class'
    package: excel!
    children:
      - 'excel!Excel.TableColumn#context:member'
      - 'excel!Excel.TableColumn#delete:member(1)'
      - 'excel!Excel.TableColumn#filter:member'
      - 'excel!Excel.TableColumn#getDataBodyRange:member(1)'
      - 'excel!Excel.TableColumn#getHeaderRowRange:member(1)'
      - 'excel!Excel.TableColumn#getRange:member(1)'
      - 'excel!Excel.TableColumn#getTotalRowRange:member(1)'
      - 'excel!Excel.TableColumn#id:member'
      - 'excel!Excel.TableColumn#index:member'
      - 'excel!Excel.TableColumn#load:member(1)'
      - 'excel!Excel.TableColumn#load:member(2)'
      - 'excel!Excel.TableColumn#load:member(3)'
      - 'excel!Excel.TableColumn#name:member'
      - 'excel!Excel.TableColumn#set:member(1)'
      - 'excel!Excel.TableColumn#set:member(2)'
      - 'excel!Excel.TableColumn#toJSON:member(1)'
      - 'excel!Excel.TableColumn#values:member'
  - uid: 'excel!Excel.TableColumn#context:member'
    summary: '<span data-ttu-id="6a3a8-103">Der Anforderungskontext, der mit dem Objekt verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-103">The request context associated with the object.</span></span> <span data-ttu-id="6a3a8-104">Dadurch wird das Add-in-Verfahren mit dem Prozess der Office-Hostanwendung verbunden.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-104">This connects the add-in''s process to the Office host application''s process.</span></span>'
    name: context
    fullName: context
    langs:
      - typeScript
    type: property
    syntax:
      content: 'context: RequestContext;'
      return:
        type:
          - 'excel!Excel.RequestContext:class'
  - uid: 'excel!Excel.TableColumn#delete:member(1)'
    summary: |-
      <span data-ttu-id="6a3a8-105">Löscht die Spalte aus der Tabelle.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-105">Deletes the column from the table.</span></span>

      <span data-ttu-id="6a3a8-106">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6a3a8-106">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: delete()
    fullName: delete()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'delete(): void;'
      return:
        type:
          - void
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6a3a8-107">Beispiele</span><span class="sxs-lookup"><span data-stu-id="6a3a8-107">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(2);
              column.delete();
              return ctx.sync(); 
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.TableColumn#filter:member'
    summary: |-
      <span data-ttu-id="6a3a8-108">Ruft den auf die Salte angewendeten Filter ab.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-108">Retrieve the filter applied to the column.</span></span> <span data-ttu-id="6a3a8-109">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-109">Read-only.</span></span>

      <span data-ttu-id="6a3a8-110">\[[API-Gruppe: ExcelApi 1,2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6a3a8-110">\[ [API set: ExcelApi 1.2](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: filter
    fullName: filter
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly filter: Excel.Filter;'
      return:
        type:
          - 'excel!Excel.Filter:class'
  - uid: 'excel!Excel.TableColumn#getDataBodyRange:member(1)'
    summary: |-
      <span data-ttu-id="6a3a8-111">Ruft das Bereichsobjekt ab, das mit dem Datenteil der Spalte verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-111">Gets the range object associated with the data body of the column.</span></span>

      <span data-ttu-id="6a3a8-112">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6a3a8-112">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getDataBodyRange()
    fullName: getDataBodyRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getDataBodyRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6a3a8-113">Beispiele</span><span class="sxs-lookup"><span data-stu-id="6a3a8-113">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);
              var dataBodyRange = column.getDataBodyRange();
              dataBodyRange.load('address');
              return ctx.sync().then(function() {
                  console.log(dataBodyRange.address);
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.TableColumn#getHeaderRowRange:member(1)'
    summary: |-
      <span data-ttu-id="6a3a8-114">Ruft das Bereichsobjekt ab, das mit der Überschriftenzeile der Spalte verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-114">Gets the range object associated with the header row of the column.</span></span>

      <span data-ttu-id="6a3a8-115">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6a3a8-115">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getHeaderRowRange()
    fullName: getHeaderRowRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getHeaderRowRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6a3a8-116">Beispiele</span><span class="sxs-lookup"><span data-stu-id="6a3a8-116">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);
              var headerRowRange = columns.getHeaderRowRange();
              headerRowRange.load('address');
              return ctx.sync().then(function() {
                  console.log(headerRowRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.TableColumn#getRange:member(1)'
    summary: |-
      <span data-ttu-id="6a3a8-117">Ruft das Bereichsobjekt ab, das mit der gesamten Spalte verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-117">Gets the range object associated with the entire column.</span></span>

      <span data-ttu-id="6a3a8-118">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6a3a8-118">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getRange()
    fullName: getRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6a3a8-119">Beispiele</span><span class="sxs-lookup"><span data-stu-id="6a3a8-119">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);
              var columnRange = columns.getRange();
              columnRange.load('address');
              return ctx.sync().then(function() {
                  console.log(columnRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.TableColumn#getTotalRowRange:member(1)'
    summary: |-
      <span data-ttu-id="6a3a8-120">Ruft das Bereichsobjekt ab, das mit der Ergebniszeile der Spalte verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-120">Gets the range object associated with the totals row of the column.</span></span>

      <span data-ttu-id="6a3a8-121">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6a3a8-121">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: getTotalRowRange()
    fullName: getTotalRowRange()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'getTotalRowRange(): Excel.Range;'
      return:
        type:
          - 'excel!Excel.Range:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6a3a8-122">Beispiele</span><span class="sxs-lookup"><span data-stu-id="6a3a8-122">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var columns = ctx.workbook.tables.getItem(tableName).columns.getItemAt(0);
              var totalRowRange = columns.getTotalRowRange();
              totalRowRange.load('address');
              return ctx.sync().then(function() {
                  console.log(totalRowRange.address);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
  - uid: 'excel!Excel.TableColumn#id:member'
    summary: |-
      <span data-ttu-id="6a3a8-123">Gibt einen eindeutigen Schlüssel an, der die Spalte in der Tabelle angibt.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-123">Returns a unique key that identifies the column within the table.</span></span> <span data-ttu-id="6a3a8-124">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-124">Read-only.</span></span>

      <span data-ttu-id="6a3a8-125">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6a3a8-125">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: id
    fullName: id
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly id: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.TableColumn#index:member'
    summary: |-
      <span data-ttu-id="6a3a8-126">Gibt die Indexnummer der Spalte in der Spaltenauflistung der Tabelle zurück.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-126">Returns the index number of the column within the columns collection of the table.</span></span> <span data-ttu-id="6a3a8-127">Nullindiziert.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-127">Zero-indexed.</span></span> <span data-ttu-id="6a3a8-128">Schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-128">Read-only.</span></span>

      <span data-ttu-id="6a3a8-129">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6a3a8-129">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: index
    fullName: index
    langs:
      - typeScript
    type: property
    syntax:
      content: 'readonly index: number;'
      return:
        type:
          - number
  - uid: 'excel!Excel.TableColumn#load:member(1)'
    summary: <span data-ttu-id="6a3a8-130">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-130">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6a3a8-131">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-131">You must call `context.sync()` before reading the properties.</span></span>
    name: load(options)
    fullName: load(options)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(options?: Excel.Interfaces.TableColumnLoadOptions): Excel.TableColumn;'
      return:
        type:
          - 'excel!Excel.TableColumn:class'
        description: ''
      parameters:
        - id: options
          description: <span data-ttu-id="6a3a8-132">Enthält Optionen für die Eigenschaften des zu ladenden Objekts.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-132">Provides options for which properties of the object to load.</span></span>
          type:
            - 'excel!Excel.Interfaces.TableColumnLoadOptions:interface'
  - uid: 'excel!Excel.TableColumn#load:member(2)'
    summary: <span data-ttu-id="6a3a8-133">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-133">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6a3a8-134">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-134">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNames)
    fullName: load(propertyNames)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'load(propertyNames?: string | string[]): Excel.TableColumn;'
      return:
        type:
          - 'excel!Excel.TableColumn:class'
        description: |-


          #### <a name="examples"></a><span data-ttu-id="6a3a8-135">Beispiele</span><span class="sxs-lookup"><span data-stu-id="6a3a8-135">Examples</span></span>

          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var column = ctx.workbook.tables.getItem(tableName).columns.getItem(0);
              column.load('index');
              return ctx.sync().then(function() {
                  console.log(column.index);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
          ```javascript
          Excel.run(function (ctx) { 
              var tableName = 'Table1';
              var tables = ctx.workbook.tables;
              var newValues = [["New"], ["Values"], ["For"], ["New"], ["Column"]];
              var column = ctx.workbook.tables.getItem(tableName).columns.getItemAt(2);
              column.values = newValues;
              column.load('values');
              return ctx.sync().then(function() {
                  console.log(column.values);
              });
          }).catch(function(error) {
              console.log("Error: " + error);
              if (error instanceof OfficeExtension.Error) {
                  console.log("Debug info: " + JSON.stringify(error.debugInfo));
              }
          });
          ```
      parameters:
        - id: propertyNames
          description: '<span data-ttu-id="6a3a8-136">Eine durch trennzeichengetrennte Zeichenfolge oder ein Array von Zeichenfolgen, die die zu ladenden Eigenschaften angeben.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-136">A comma-delimited string or an array of strings that specify the properties to load.</span></span>'
          type:
            - 'string | string[]'
  - uid: 'excel!Excel.TableColumn#load:member(3)'
    summary: <span data-ttu-id="6a3a8-137">Stellt einen Befehl zum Laden der angegebenen Eigenschaften des Objekts in die Warteschlange ein.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-137">Queues up a command to load the specified properties of the object.</span></span> <span data-ttu-id="6a3a8-138">Sie müssen vor `context.sync()` dem Lesen der Eigenschaften aufrufen.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-138">You must call `context.sync()` before reading the properties.</span></span>
    name: load(propertyNamesAndPaths)
    fullName: load(propertyNamesAndPaths)
    langs:
      - typeScript
    type: method
    syntax:
      content: |-
        load(propertyNamesAndPaths?: {
                    select?: string;
                    expand?: string;
                }): Excel.TableColumn;
      return:
        type:
          - 'excel!Excel.TableColumn:class'
        description: ''
      parameters:
        - id: propertyNamesAndPaths
          description: '<span data-ttu-id="6a3a8-139">`propertyNamesAndPaths.select`ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Eigenschaften `propertyNamesAndPaths.expand` angibt, und ist eine durch trennzeichengetrennte Zeichenfolge, die die zu ladenden Navigationseigenschaften angibt.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-139">`propertyNamesAndPaths.select` is a comma-delimited string that specifies the properties to load, and `propertyNamesAndPaths.expand` is a comma-delimited string that specifies the navigation properties to load.</span></span>'
          type:
            - |-
              {
                          select?: string;
                          expand?: string;
                      }
  - uid: 'excel!Excel.TableColumn#name:member'
    summary: |-
      <span data-ttu-id="6a3a8-140">Gibt den Namen der Tabellenspalte zurück.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-140">Represents the name of the table column.</span></span>

      <span data-ttu-id="6a3a8-141">\[[API-Gruppe: ExcelApi 1,1 zum Aufrufen des Namens; 1,4 zum Festlegen des Namens.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span><span class="sxs-lookup"><span data-stu-id="6a3a8-141">\[ [API set: ExcelApi 1.1 for getting the name; 1.4 for setting it.](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)</span></span> <span data-ttu-id="6a3a8-142">\]</span><span class="sxs-lookup"><span data-stu-id="6a3a8-142"></span></span>
    name: name
    fullName: name
    langs:
      - typeScript
    type: property
    syntax:
      content: 'name: string;'
      return:
        type:
          - string
  - uid: 'excel!Excel.TableColumn#set:member(1)'
    summary: '<span data-ttu-id="6a3a8-143">Legt mehrere Eigenschaften eines Objekts gleichzeitig fest.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-143">Sets multiple properties of an object at the same time.</span></span> <span data-ttu-id="6a3a8-144">Sie können entweder ein einfaches Objekt mit den entsprechenden Eigenschaften oder ein anderes API-Objekt desselben Typs übergeben.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-144">You can pass either a plain object with the appropriate properties, or another API object of the same type.</span></span>'
    remarks: |-
      <span data-ttu-id="6a3a8-145">Diese Methode hat die folgende zusätzliche Signatur:</span><span class="sxs-lookup"><span data-stu-id="6a3a8-145">This method has the following additional signature:</span></span>

      `set(properties: Excel.TableColumn): void`
    name: 'set(properties, options)'
    fullName: 'set(properties, options)'
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Interfaces.TableColumnUpdateData, options?: OfficeExtension.UpdateOptions): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: '<span data-ttu-id="6a3a8-146">Ein JavaScript-Objekt mit Eigenschaften, die isomorphically für die Eigenschaften des Objekts strukturiert sind, für das die Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-146">A JavaScript object with properties that are structured isomorphically to the properties of the object on which the method is called.</span></span>'
          type:
            - 'excel!Excel.Interfaces.TableColumnUpdateData:interface'
        - id: options
          description: '<span data-ttu-id="6a3a8-147">Bietet eine Option zum Unterdrücken von Fehlern, wenn das Properties-Objekt versucht, schreibgeschützte Eigenschaften festzulegen.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-147">Provides an option to suppress errors if the properties object tries to set any read-only properties.</span></span>'
          type:
            - 'excel!OfficeExtension.UpdateOptions:interface'
  - uid: 'excel!Excel.TableColumn#set:member(2)'
    summary: '<span data-ttu-id="6a3a8-148">Legt mehrere Eigenschaften für das Objekt gleichzeitig basierend auf einem vorhandenen geladenen Objekt fest.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-148">Sets multiple properties on the object at the same time, based on an existing loaded object.</span></span>'
    name: set(properties)
    fullName: set(properties)
    langs:
      - typeScript
    type: method
    syntax:
      content: 'set(properties: Excel.TableColumn): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: properties
          description: ''
          type:
            - 'excel!Excel.TableColumn:class'
  - uid: 'excel!Excel.TableColumn#toJSON:member(1)'
    summary: '<span data-ttu-id="6a3a8-149">Überschreibt die `toJSON()` JavaScript-Methode, um hilfreichere Ausgaben bereitzustellen, wenn ein API-Objekt an übergeben wird.`JSON.stringify()`</span><span class="sxs-lookup"><span data-stu-id="6a3a8-149">Overrides the JavaScript `toJSON()` method in order to provide more useful output when an API object is passed to `JSON.stringify()`</span></span><!-- --><span data-ttu-id="6a3a8-150">.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-150"></span></span> <span data-ttu-id="6a3a8-151">(`JSON.stringify`</span><span class="sxs-lookup"><span data-stu-id="6a3a8-151"></span></span><!-- --><span data-ttu-id="6a3a8-152">wiederum ruft die `toJSON` Methode des Objekts auf, das an Sie übergeben wird.) Während das ursprüngliche Excel. tabellencolumn-Objekt ein API-Objekt ist `toJSON` , gibt die Methode ein einfaches JavaScript-Objekt (typisiert als`Excel.Interfaces.TableColumnData`</span><span class="sxs-lookup"><span data-stu-id="6a3a8-152">, in turn, calls the `toJSON` method of the object that is passed to it.) Whereas the original Excel.TableColumn object is an API object, the `toJSON` method returns a plain JavaScript object (typed as `Excel.Interfaces.TableColumnData`</span></span><!-- --><span data-ttu-id="6a3a8-153">), die flache Kopien aller geladenen untergeordneten Eigenschaften aus dem ursprünglichen Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-153">) that contains shallow copies of any loaded child properties from the original object.</span></span>'
    name: toJSON()
    fullName: toJSON()
    langs:
      - typeScript
    type: method
    syntax:
      content: 'toJSON(): Excel.Interfaces.TableColumnData;'
      return:
        type:
          - 'excel!Excel.Interfaces.TableColumnData:interface'
        description: ''
  - uid: 'excel!Excel.TableColumn#values:member'
    summary: |-
      <span data-ttu-id="6a3a8-154">Stellt die Rohwerte des angegebenen Bereichs dar.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-154">Represents the raw values of the specified range.</span></span> <span data-ttu-id="6a3a8-155">Die zurückgegebenen Daten können vom Typ Zeichenfolge, Zahl oder ein boolescher Wert sein.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-155">The data returned could be of type string, number, or a boolean.</span></span> <span data-ttu-id="6a3a8-156">Zellen, die einen Fehler enthalten, geben die Fehlerzeichenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="6a3a8-156">Cells that contain an error will return the error string.</span></span>

      <span data-ttu-id="6a3a8-157">\[[API-Gruppe: ExcelApi 1,1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets)\]</span><span class="sxs-lookup"><span data-stu-id="6a3a8-157">\[ [API set: ExcelApi 1.1](/office/dev/add-ins/reference/requirement-sets/excel-api-requirement-sets) \]</span></span>
    name: values
    fullName: values
    langs:
      - typeScript
    type: property
    syntax:
      content: 'values: any[][];'
      return:
        type:
          - 'any[][]'
references:
  - uid: 'excel!OfficeExtension.ClientObject:class'
    name: OfficeExtension.ClientObject
  - uid: 'excel!Excel.RequestContext:class'
    name: RequestContext
  - uid: 'excel!Excel.Filter:class'
    name: Excel.Filter
  - uid: 'excel!Excel.Range:class'
    name: Excel.Range
  - uid: 'excel!Excel.TableColumn:class'
    name: Excel.TableColumn
  - uid: 'excel!Excel.Interfaces.TableColumnLoadOptions:interface'
    name: Excel.Interfaces.TableColumnLoadOptions
  - uid: 'excel!Excel.Interfaces.TableColumnUpdateData:interface'
    name: Interfaces.TableColumnUpdateData
  - uid: 'excel!OfficeExtension.UpdateOptions:interface'
    name: OfficeExtension.UpdateOptions
  - uid: 'excel!Excel.Interfaces.TableColumnData:interface'
    name: Excel.Interfaces.TableColumnData